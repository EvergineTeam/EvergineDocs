### YamlMime:ManagedReference
items:
- uid: WaveEngine.Box2D.Decomposition.BayazitDecomposer
  commentId: T:WaveEngine.Box2D.Decomposition.BayazitDecomposer
  id: BayazitDecomposer
  parent: WaveEngine.Box2D.Decomposition
  children:
  - WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition(WaveEngine.Box2D.Utils.Vertices)
  langs:
  - csharp
  - vb
  name: BayazitDecomposer
  nameWithType: BayazitDecomposer
  fullName: WaveEngine.Box2D.Decomposition.BayazitDecomposer
  type: Class
  source:
    id: BayazitDecomposer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\Decomposition\BayazitDecomposer.cs
    startLine: 17
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Decomposition
  summary: "\nConvex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)\nFor more information about this algorithm, see http://mnbayazit.com/406/bayazit\n"
  example: []
  syntax:
    content: public static class BayazitDecomposer
    content.vb: Public Module BayazitDecomposer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition(WaveEngine.Box2D.Utils.Vertices)
  commentId: M:WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition(WaveEngine.Box2D.Utils.Vertices)
  id: ConvexPartition(WaveEngine.Box2D.Utils.Vertices)
  parent: WaveEngine.Box2D.Decomposition.BayazitDecomposer
  langs:
  - csharp
  - vb
  name: ConvexPartition(Vertices)
  nameWithType: BayazitDecomposer.ConvexPartition(Vertices)
  fullName: WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition(WaveEngine.Box2D.Utils.Vertices)
  type: Method
  source:
    id: ConvexPartition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\Decomposition\BayazitDecomposer.cs
    startLine: 53
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Decomposition
  summary: "\nDecompose the polygon into several smaller non-concave polygon.\nIf the polygon is already convex, it will return the original polygon, unless it is over Settings.MaxPolygonVertices.\nPrecondition: Counter Clockwise polygon\n"
  example: []
  syntax:
    content: public static List<Vertices> ConvexPartition(Vertices vertices)
    parameters:
    - id: vertices
      type: WaveEngine.Box2D.Utils.Vertices
      description: vertices
    return:
      type: System.Collections.Generic.List{WaveEngine.Box2D.Utils.Vertices}
      description: The result.
    content.vb: Public Shared Function ConvexPartition(vertices As Vertices) As List(Of Vertices)
  overload: WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Box2D.Decomposition
  commentId: N:WaveEngine.Box2D.Decomposition
  name: WaveEngine.Box2D.Decomposition
  nameWithType: WaveEngine.Box2D.Decomposition
  fullName: WaveEngine.Box2D.Decomposition
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition*
  commentId: Overload:WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition
  name: ConvexPartition
  nameWithType: BayazitDecomposer.ConvexPartition
  fullName: WaveEngine.Box2D.Decomposition.BayazitDecomposer.ConvexPartition
- uid: WaveEngine.Box2D.Utils.Vertices
  commentId: T:WaveEngine.Box2D.Utils.Vertices
  parent: WaveEngine.Box2D.Utils
  name: Vertices
  nameWithType: Vertices
  fullName: WaveEngine.Box2D.Utils.Vertices
- uid: System.Collections.Generic.List{WaveEngine.Box2D.Utils.Vertices}
  commentId: T:System.Collections.Generic.List{WaveEngine.Box2D.Utils.Vertices}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vertices>
  nameWithType: List<Vertices>
  fullName: System.Collections.Generic.List<WaveEngine.Box2D.Utils.Vertices>
  nameWithType.vb: List(Of Vertices)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Box2D.Utils.Vertices)
  name.vb: List(Of Vertices)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Box2D.Utils.Vertices
    name: Vertices
    nameWithType: Vertices
    fullName: WaveEngine.Box2D.Utils.Vertices
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Box2D.Utils.Vertices
    name: Vertices
    nameWithType: Vertices
    fullName: WaveEngine.Box2D.Utils.Vertices
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils
  commentId: N:WaveEngine.Box2D.Utils
  name: WaveEngine.Box2D.Utils
  nameWithType: WaveEngine.Box2D.Utils
  fullName: WaveEngine.Box2D.Utils
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
