### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.Timer
  commentId: T:WaveEngine.Framework.Services.Timer
  id: Timer
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.Timer.Action
  - WaveEngine.Framework.Services.Timer.InitialInterval
  - WaveEngine.Framework.Services.Timer.Interval
  - WaveEngine.Framework.Services.Timer.IsPaused
  - WaveEngine.Framework.Services.Timer.Looped
  - WaveEngine.Framework.Services.Timer.MarkedToDelete
  - WaveEngine.Framework.Services.Timer.Name
  - WaveEngine.Framework.Services.Timer.Pause
  - WaveEngine.Framework.Services.Timer.Resume
  langs:
  - csharp
  - vb
  name: Timer
  nameWithType: Timer
  fullName: WaveEngine.Framework.Services.Timer
  type: Class
  source:
    id: Timer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 11
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRepresents a timer that executes an action every certain time.\n"
  example: []
  syntax:
    content: public class Timer
    content.vb: Public Class Timer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Services.Timer.Name
  commentId: F:WaveEngine.Framework.Services.Timer.Name
  id: Name
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Timer.Name
  fullName: WaveEngine.Framework.Services.Timer.Name
  type: Field
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 16
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nName of this instance.\n"
  example: []
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.InitialInterval
  commentId: F:WaveEngine.Framework.Services.Timer.InitialInterval
  id: InitialInterval
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: InitialInterval
  nameWithType: Timer.InitialInterval
  fullName: WaveEngine.Framework.Services.Timer.InitialInterval
  type: Field
  source:
    id: InitialInterval
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 21
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nInitial firing interval of this instance.\n"
  example: []
  syntax:
    content: public TimeSpan InitialInterval
    return:
      type: System.TimeSpan
    content.vb: Public InitialInterval As TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.Interval
  commentId: F:WaveEngine.Framework.Services.Timer.Interval
  id: Interval
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: Timer.Interval
  fullName: WaveEngine.Framework.Services.Timer.Interval
  type: Field
  source:
    id: Interval
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 28
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nThe time that has passed in this current interval. It is reset to\n<xref href=\"WaveEngine.Framework.Services.Timer.InitialInterval\" data-throw-if-not-resolved=\"false\"></xref> when it reaches zero unless\n<xref href=\"WaveEngine.Framework.Services.Timer.Looped\" data-throw-if-not-resolved=\"false\"></xref> is set to <code>true</code>.\n"
  example: []
  syntax:
    content: public TimeSpan Interval
    return:
      type: System.TimeSpan
    content.vb: Public Interval As TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.Looped
  commentId: F:WaveEngine.Framework.Services.Timer.Looped
  id: Looped
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: Looped
  nameWithType: Timer.Looped
  fullName: WaveEngine.Framework.Services.Timer.Looped
  type: Field
  source:
    id: Looped
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 33
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nWhether this instance will fire its action once, or more times.\n"
  example: []
  syntax:
    content: public bool Looped
    return:
      type: System.Boolean
    content.vb: Public Looped As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.Action
  commentId: F:WaveEngine.Framework.Services.Timer.Action
  id: Action
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: Timer.Action
  fullName: WaveEngine.Framework.Services.Timer.Action
  type: Field
  source:
    id: Action
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 38
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nThe action to execute when the interval time passes.\n"
  example: []
  syntax:
    content: public Action Action
    return:
      type: System.Action
    content.vb: Public Action As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.MarkedToDelete
  commentId: F:WaveEngine.Framework.Services.Timer.MarkedToDelete
  id: MarkedToDelete
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: MarkedToDelete
  nameWithType: Timer.MarkedToDelete
  fullName: WaveEngine.Framework.Services.Timer.MarkedToDelete
  type: Field
  source:
    id: MarkedToDelete
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 43
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nThe marked to delete.\n"
  example: []
  syntax:
    content: public bool MarkedToDelete
    return:
      type: System.Boolean
    content.vb: Public MarkedToDelete As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.IsPaused
  commentId: P:WaveEngine.Framework.Services.Timer.IsPaused
  id: IsPaused
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: Timer.IsPaused
  fullName: WaveEngine.Framework.Services.Timer.IsPaused
  type: Property
  source:
    id: IsPaused
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 63
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets a value indicating whether the timer is paused\n"
  example: []
  syntax:
    content: public bool IsPaused { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPaused As Boolean
  overload: WaveEngine.Framework.Services.Timer.IsPaused*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Services.Timer.Pause
  commentId: M:WaveEngine.Framework.Services.Timer.Pause
  id: Pause
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: Timer.Pause()
  fullName: WaveEngine.Framework.Services.Timer.Pause()
  type: Method
  source:
    id: Pause
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 74
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nPause the timer\n"
  example: []
  syntax:
    content: public void Pause()
    content.vb: Public Sub Pause
  overload: WaveEngine.Framework.Services.Timer.Pause*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Timer.Resume
  commentId: M:WaveEngine.Framework.Services.Timer.Resume
  id: Resume
  parent: WaveEngine.Framework.Services.Timer
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: Timer.Resume()
  fullName: WaveEngine.Framework.Services.Timer.Resume()
  type: Method
  source:
    id: Resume
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Timer.cs
    startLine: 88
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nResume the timer\n"
  example: []
  syntax:
    content: public void Resume()
    content.vb: Public Sub Resume
  overload: WaveEngine.Framework.Services.Timer.Resume*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Framework.Services.Timer.InitialInterval
  commentId: F:WaveEngine.Framework.Services.Timer.InitialInterval
  isExternal: true
- uid: WaveEngine.Framework.Services.Timer.Looped
  commentId: F:WaveEngine.Framework.Services.Timer.Looped
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: WaveEngine.Framework.Services.Timer.IsPaused*
  commentId: Overload:WaveEngine.Framework.Services.Timer.IsPaused
  name: IsPaused
  nameWithType: Timer.IsPaused
  fullName: WaveEngine.Framework.Services.Timer.IsPaused
- uid: WaveEngine.Framework.Services.Timer.Pause*
  commentId: Overload:WaveEngine.Framework.Services.Timer.Pause
  name: Pause
  nameWithType: Timer.Pause
  fullName: WaveEngine.Framework.Services.Timer.Pause
- uid: WaveEngine.Framework.Services.Timer.Resume*
  commentId: Overload:WaveEngine.Framework.Services.Timer.Resume
  name: Resume
  nameWithType: Timer.Resume
  fullName: WaveEngine.Framework.Services.Timer.Resume
