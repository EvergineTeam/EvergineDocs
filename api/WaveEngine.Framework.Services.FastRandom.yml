### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.FastRandom
  commentId: T:WaveEngine.Framework.Services.FastRandom
  id: FastRandom
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.FastRandom.#ctor
  - WaveEngine.Framework.Services.FastRandom.#ctor(System.Int32)
  - WaveEngine.Framework.Services.FastRandom.Initialize
  - WaveEngine.Framework.Services.FastRandom.InsideUnitCircle
  - WaveEngine.Framework.Services.FastRandom.InUnitSphere
  - WaveEngine.Framework.Services.FastRandom.Next
  - WaveEngine.Framework.Services.FastRandom.Next(System.Int32)
  - WaveEngine.Framework.Services.FastRandom.Next(System.Int32,System.Int32)
  - WaveEngine.Framework.Services.FastRandom.NextBool
  - WaveEngine.Framework.Services.FastRandom.NextBool(System.Single)
  - WaveEngine.Framework.Services.FastRandom.NextBytes(System.Byte[])
  - WaveEngine.Framework.Services.FastRandom.NextDouble
  - WaveEngine.Framework.Services.FastRandom.NextInt
  - WaveEngine.Framework.Services.FastRandom.NextRotation
  - WaveEngine.Framework.Services.FastRandom.NextUInt
  - WaveEngine.Framework.Services.FastRandom.OnUnitSphere
  - WaveEngine.Framework.Services.FastRandom.Seed
  - WaveEngine.Framework.Services.FastRandom.Terminate
  langs:
  - csharp
  - vb
  name: FastRandom
  nameWithType: FastRandom
  fullName: WaveEngine.Framework.Services.FastRandom
  type: Class
  source:
    id: FastRandom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 17
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRandom number generator service (based on XOR shift technique).\n"
  remarks: "\nBased on FastRandom.cs from colgreen:\nhttp://www.codeproject.com/Articles/9187/A-fast-equivalent-for-System-Random\n"
  example: []
  syntax:
    content: 'public sealed class FastRandom : Service'
    content.vb: >-
      Public NotInheritable Class FastRandom

          Inherits Service
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Common.Service
  inheritedMembers:
  - WaveEngine.Common.Service.IsInitialized
  - WaveEngine.Common.Service.IsTerminated
  - WaveEngine.Common.Service.BaseInitialize
  - WaveEngine.Common.Service.BaseTerminate
  - WaveEngine.Common.Service.OnActivated
  - WaveEngine.Common.Service.OnDeactivated
  - WaveEngine.Common.IO.SerializableObject.DefaultValues
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Framework.Services.FastRandom.Seed
  commentId: P:WaveEngine.Framework.Services.FastRandom.Seed
  id: Seed
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: Seed
  nameWithType: FastRandom.Seed
  fullName: WaveEngine.Framework.Services.FastRandom.Seed
  type: Property
  source:
    id: Seed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 85
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets or sets a value indicating whether the Seed\n"
  example: []
  syntax:
    content: public int Seed { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Seed As Integer
  overload: WaveEngine.Framework.Services.FastRandom.Seed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.#ctor
  commentId: M:WaveEngine.Framework.Services.FastRandom.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: FastRandom()
  nameWithType: FastRandom.FastRandom()
  fullName: WaveEngine.Framework.Services.FastRandom.FastRandom()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 108
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Services.FastRandom\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nThe initial seed depends on the time.\n"
  example: []
  syntax:
    content: public FastRandom()
    content.vb: Public Sub New
  overload: WaveEngine.Framework.Services.FastRandom.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.#ctor(System.Int32)
  commentId: M:WaveEngine.Framework.Services.FastRandom.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: FastRandom(Int32)
  nameWithType: FastRandom.FastRandom(Int32)
  fullName: WaveEngine.Framework.Services.FastRandom.FastRandom(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 122
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Services.FastRandom\" data-throw-if-not-resolved=\"false\"></xref> class with a given seed.\n"
  example: []
  syntax:
    content: public FastRandom(int seed)
    parameters:
    - id: seed
      type: System.Int32
      description: The initial seed.
    content.vb: Public Sub New(seed As Integer)
  overload: WaveEngine.Framework.Services.FastRandom.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.Initialize
  commentId: M:WaveEngine.Framework.Services.FastRandom.Initialize
  id: Initialize
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: FastRandom.Initialize()
  fullName: WaveEngine.Framework.Services.FastRandom.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 131
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllow to execute custom logic during the initialization of this instance.\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Common.Service.Initialize
  overload: WaveEngine.Framework.Services.FastRandom.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.FastRandom.Terminate
  commentId: M:WaveEngine.Framework.Services.FastRandom.Terminate
  id: Terminate
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: FastRandom.Terminate()
  fullName: WaveEngine.Framework.Services.FastRandom.Terminate()
  type: Method
  source:
    id: Terminate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 138
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllow to execute custom logic during the finalization of this instance.\n"
  example: []
  syntax:
    content: protected override void Terminate()
    content.vb: Protected Overrides Sub Terminate
  overridden: WaveEngine.Common.Service.Terminate
  overload: WaveEngine.Framework.Services.FastRandom.Terminate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.FastRandom.Next
  commentId: M:WaveEngine.Framework.Services.FastRandom.Next
  id: Next
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: FastRandom.Next()
  fullName: WaveEngine.Framework.Services.FastRandom.Next()
  type: Method
  source:
    id: Next
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 175
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a random int over the range 0 to int.MaxValue-1.\n"
  remarks: "\nMaxValue is not generated in order to remain functionally equivalent to System.Random.Next().\nThis does slightly eat into some of the performance gain over System.Random, but not much.\nFor better performance see:\nCall NextInt() for an int over the range 0 to int.MaxValue.\nCall NextUInt() and cast the result to an int to generate an int over the full Int32 value range\nincluding negative values.\n"
  example: []
  syntax:
    content: public int Next()
    return:
      type: System.Int32
      description: A 32-bit signed integer greater than or equal to zero and less than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Next As Integer
  overload: WaveEngine.Framework.Services.FastRandom.Next*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.Next(System.Int32)
  commentId: M:WaveEngine.Framework.Services.FastRandom.Next(System.Int32)
  id: Next(System.Int32)
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: Next(Int32)
  nameWithType: FastRandom.Next(Int32)
  fullName: WaveEngine.Framework.Services.FastRandom.Next(System.Int32)
  type: Method
  source:
    id: Next
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 199
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a random int over the range 0 to upperBound-1, and not including upperBound.\n"
  example: []
  syntax:
    content: public int Next(int upperBound)
    parameters:
    - id: upperBound
      type: System.Int32
      description: Non inclusive upper bound.
    return:
      type: System.Int32
      description: A 32-bit signed integer greater than or equal to zero and less than <code>upperBound</code>.
    content.vb: Public Function Next(upperBound As Integer) As Integer
  overload: WaveEngine.Framework.Services.FastRandom.Next*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.Next(System.Int32,System.Int32)
  commentId: M:WaveEngine.Framework.Services.FastRandom.Next(System.Int32,System.Int32)
  id: Next(System.Int32,System.Int32)
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: Next(Int32, Int32)
  nameWithType: FastRandom.Next(Int32, Int32)
  fullName: WaveEngine.Framework.Services.FastRandom.Next(System.Int32, System.Int32)
  type: Method
  source:
    id: Next
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 223
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a random int over the range lowerBound to upperBound-1, and not including upperBound.\nupperBound must be >= lowerBound. lowerBound may be negative.\n"
  example: []
  syntax:
    content: public int Next(int lowerBound, int upperBound)
    parameters:
    - id: lowerBound
      type: System.Int32
      description: The inclusive lower bound.
    - id: upperBound
      type: System.Int32
      description: The non inclusive upper bound.
    return:
      type: System.Int32
      description: A 32-bit signed integer greater than or equal to <code>lowerBound</code> and less than <code>upperBound</code>.
    content.vb: Public Function Next(lowerBound As Integer, upperBound As Integer) As Integer
  overload: WaveEngine.Framework.Services.FastRandom.Next*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.NextDouble
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextDouble
  id: NextDouble
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextDouble()
  nameWithType: FastRandom.NextDouble()
  fullName: WaveEngine.Framework.Services.FastRandom.NextDouble()
  type: Method
  source:
    id: NextDouble
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 254
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a random double between 0.0 and 1.0, not including 1.0.\n"
  example: []
  syntax:
    content: public double NextDouble()
    return:
      type: System.Double
      description: A double-precision floating point number greater than or equal to 0.0, and less than 1.0.
    content.vb: Public Function NextDouble As Double
  overload: WaveEngine.Framework.Services.FastRandom.NextDouble*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.NextBytes(System.Byte[])
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextBytes(System.Byte[])
  id: NextBytes(System.Byte[])
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextBytes(Byte[])
  nameWithType: FastRandom.NextBytes(Byte[])
  fullName: WaveEngine.Framework.Services.FastRandom.NextBytes(System.Byte[])
  type: Method
  source:
    id: NextBytes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 280
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nFills the provided byte array with random bytes.\n"
  remarks: "\nThis method is functionally equivalent to System.Random.NextBytes().\n"
  example: []
  syntax:
    content: public void NextBytes(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of bytes to contain random numbers. '
    content.vb: Public Sub NextBytes(buffer As Byte())
  overload: WaveEngine.Framework.Services.FastRandom.NextBytes*
  nameWithType.vb: FastRandom.NextBytes(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.FastRandom.NextBytes(System.Byte())
  name.vb: NextBytes(Byte())
- uid: WaveEngine.Framework.Services.FastRandom.NextUInt
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextUInt
  id: NextUInt
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextUInt()
  nameWithType: FastRandom.NextUInt()
  fullName: WaveEngine.Framework.Services.FastRandom.NextUInt()
  type: Method
  source:
    id: NextUInt
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 345
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a uint. Values returned are over the full range of a uint,\nuint.MinValue to uint.MaxValue, inclusive.\n"
  remarks: "\nThis is the fastest method for generating a single random number because the underlying\nrandom number generator algorithm generates 32 random bits that can be cast directly to\na uint.\n"
  example: []
  syntax:
    content: public uint NextUInt()
    return:
      type: System.UInt32
      description: A 32-bit signed integer greater than or equal to zero and less or equal than <xref href="System.UInt32.MaxValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function NextUInt As UInteger
  overload: WaveEngine.Framework.Services.FastRandom.NextUInt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.NextInt
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextInt
  id: NextInt
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextInt()
  nameWithType: FastRandom.NextInt()
  fullName: WaveEngine.Framework.Services.FastRandom.NextInt()
  type: Method
  source:
    id: NextInt
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 364
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a random int over the range 0 to int.MaxValue, both inclusive.\n"
  remarks: "\nThis method differs from Next() only in that the range is 0 to int.MaxValue\nand not 0 to int.MaxValue-1.\nThe slight difference in range means this method is slightly faster than Next()\nbut is not functionally equivalent to System.Random.Next().\n"
  example: []
  syntax:
    content: public int NextInt()
    return:
      type: System.Int32
      description: A 32-bit signed integer greater than or equal to zero and less or equal than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function NextInt As Integer
  overload: WaveEngine.Framework.Services.FastRandom.NextInt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.NextBool
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextBool
  id: NextBool
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextBool()
  nameWithType: FastRandom.NextBool()
  fullName: WaveEngine.Framework.Services.FastRandom.NextBool()
  type: Method
  source:
    id: NextBool
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 381
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a single random bit.\n"
  remarks: "\nThis method&apos;s performance is improved by generating 32 bits in one operation and storing them\nready for future calls.\n"
  example: []
  syntax:
    content: public bool NextBool()
    return:
      type: System.Boolean
      description: A boolean.
    content.vb: Public Function NextBool As Boolean
  overload: WaveEngine.Framework.Services.FastRandom.NextBool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.NextBool(System.Single)
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextBool(System.Single)
  id: NextBool(System.Single)
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextBool(Single)
  nameWithType: FastRandom.NextBool(Single)
  fullName: WaveEngine.Framework.Services.FastRandom.NextBool(System.Single)
  type: Method
  source:
    id: NextBool
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 405
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a single random bit with True value weight.\n"
  example: []
  syntax:
    content: public bool NextBool(float trueWeight)
    parameters:
    - id: trueWeight
      type: System.Single
      description: The weight of the TRUE value
    return:
      type: System.Boolean
      description: A boolean.
    content.vb: Public Function NextBool(trueWeight As Single) As Boolean
  overload: WaveEngine.Framework.Services.FastRandom.NextBool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.NextRotation
  commentId: M:WaveEngine.Framework.Services.FastRandom.NextRotation
  id: NextRotation
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: NextRotation()
  nameWithType: FastRandom.NextRotation()
  fullName: WaveEngine.Framework.Services.FastRandom.NextRotation()
  type: Method
  source:
    id: NextRotation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 415
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a single angle in randians [0-2*Pi).\n"
  example: []
  syntax:
    content: public float NextRotation()
    return:
      type: System.Single
      description: An angle.
    content.vb: Public Function NextRotation As Single
  overload: WaveEngine.Framework.Services.FastRandom.NextRotation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.InsideUnitCircle
  commentId: M:WaveEngine.Framework.Services.FastRandom.InsideUnitCircle
  id: InsideUnitCircle
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: InsideUnitCircle()
  nameWithType: FastRandom.InsideUnitCircle()
  fullName: WaveEngine.Framework.Services.FastRandom.InsideUnitCircle()
  type: Method
  source:
    id: InsideUnitCircle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 425
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a 2D vector inside an unit circle with uniform distribution.\n"
  example: []
  syntax:
    content: public Vector2 InsideUnitCircle()
    return:
      type: WaveEngine.Common.Math.Vector2
      description: A Vector2D.
    content.vb: Public Function InsideUnitCircle As Vector2
  overload: WaveEngine.Framework.Services.FastRandom.InsideUnitCircle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.OnUnitSphere
  commentId: M:WaveEngine.Framework.Services.FastRandom.OnUnitSphere
  id: OnUnitSphere
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: OnUnitSphere()
  nameWithType: FastRandom.OnUnitSphere()
  fullName: WaveEngine.Framework.Services.FastRandom.OnUnitSphere()
  type: Method
  source:
    id: OnUnitSphere
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 443
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a 3D vector in a radius 1 sphere surface with uniform distribution.\n"
  example: []
  syntax:
    content: public Vector3 OnUnitSphere()
    return:
      type: WaveEngine.Common.Math.Vector3
      description: A Vector3D.
    content.vb: Public Function OnUnitSphere As Vector3
  overload: WaveEngine.Framework.Services.FastRandom.OnUnitSphere*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.FastRandom.InUnitSphere
  commentId: M:WaveEngine.Framework.Services.FastRandom.InUnitSphere
  id: InUnitSphere
  parent: WaveEngine.Framework.Services.FastRandom
  langs:
  - csharp
  - vb
  name: InUnitSphere()
  nameWithType: FastRandom.InUnitSphere()
  fullName: WaveEngine.Framework.Services.FastRandom.InUnitSphere()
  type: Method
  source:
    id: InUnitSphere
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\FastRandom.cs
    startLine: 464
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGenerates a 3D vector inside a radius 1 sphere with uniform distribution.\n"
  example: []
  syntax:
    content: public Vector3 InUnitSphere()
    return:
      type: WaveEngine.Common.Math.Vector3
      description: A Vector3D.
    content.vb: Public Function InUnitSphere As Vector3
  overload: WaveEngine.Framework.Services.FastRandom.InUnitSphere*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: WaveEngine.Common.Service.IsInitialized
  commentId: P:WaveEngine.Common.Service.IsInitialized
  parent: WaveEngine.Common.Service
  name: IsInitialized
  nameWithType: Service.IsInitialized
  fullName: WaveEngine.Common.Service.IsInitialized
- uid: WaveEngine.Common.Service.IsTerminated
  commentId: P:WaveEngine.Common.Service.IsTerminated
  parent: WaveEngine.Common.Service
  name: IsTerminated
  nameWithType: Service.IsTerminated
  fullName: WaveEngine.Common.Service.IsTerminated
- uid: WaveEngine.Common.Service.BaseInitialize
  commentId: M:WaveEngine.Common.Service.BaseInitialize
  parent: WaveEngine.Common.Service
  name: BaseInitialize()
  nameWithType: Service.BaseInitialize()
  fullName: WaveEngine.Common.Service.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.BaseTerminate
  commentId: M:WaveEngine.Common.Service.BaseTerminate
  parent: WaveEngine.Common.Service
  name: BaseTerminate()
  nameWithType: Service.BaseTerminate()
  fullName: WaveEngine.Common.Service.BaseTerminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnActivated
  commentId: M:WaveEngine.Common.Service.OnActivated
  parent: WaveEngine.Common.Service
  name: OnActivated()
  nameWithType: Service.OnActivated()
  fullName: WaveEngine.Common.Service.OnActivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnDeactivated
  commentId: M:WaveEngine.Common.Service.OnDeactivated
  parent: WaveEngine.Common.Service
  name: OnDeactivated()
  nameWithType: Service.OnDeactivated()
  fullName: WaveEngine.Common.Service.OnDeactivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Services.FastRandom.Seed*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.Seed
  name: Seed
  nameWithType: FastRandom.Seed
  fullName: WaveEngine.Framework.Services.FastRandom.Seed
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Framework.Services.FastRandom
  commentId: T:WaveEngine.Framework.Services.FastRandom
  parent: WaveEngine.Framework.Services
  name: FastRandom
  nameWithType: FastRandom
  fullName: WaveEngine.Framework.Services.FastRandom
- uid: WaveEngine.Framework.Services.FastRandom.#ctor*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.#ctor
  name: FastRandom
  nameWithType: FastRandom.FastRandom
  fullName: WaveEngine.Framework.Services.FastRandom.FastRandom
- uid: WaveEngine.Common.Service.Initialize
  commentId: M:WaveEngine.Common.Service.Initialize
  parent: WaveEngine.Common.Service
  name: Initialize()
  nameWithType: Service.Initialize()
  fullName: WaveEngine.Common.Service.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.FastRandom.Initialize*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.Initialize
  name: Initialize
  nameWithType: FastRandom.Initialize
  fullName: WaveEngine.Framework.Services.FastRandom.Initialize
- uid: WaveEngine.Common.Service.Terminate
  commentId: M:WaveEngine.Common.Service.Terminate
  parent: WaveEngine.Common.Service
  name: Terminate()
  nameWithType: Service.Terminate()
  fullName: WaveEngine.Common.Service.Terminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.FastRandom.Terminate*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.Terminate
  name: Terminate
  nameWithType: FastRandom.Terminate
  fullName: WaveEngine.Framework.Services.FastRandom.Terminate
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
  isExternal: true
- uid: WaveEngine.Framework.Services.FastRandom.Next*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.Next
  name: Next
  nameWithType: FastRandom.Next
  fullName: WaveEngine.Framework.Services.FastRandom.Next
- uid: WaveEngine.Framework.Services.FastRandom.NextDouble*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.NextDouble
  name: NextDouble
  nameWithType: FastRandom.NextDouble
  fullName: WaveEngine.Framework.Services.FastRandom.NextDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: WaveEngine.Framework.Services.FastRandom.NextBytes*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.NextBytes
  name: NextBytes
  nameWithType: FastRandom.NextBytes
  fullName: WaveEngine.Framework.Services.FastRandom.NextBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt32.MaxValue
  commentId: F:System.UInt32.MaxValue
  isExternal: true
- uid: WaveEngine.Framework.Services.FastRandom.NextUInt*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.NextUInt
  name: NextUInt
  nameWithType: FastRandom.NextUInt
  fullName: WaveEngine.Framework.Services.FastRandom.NextUInt
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: WaveEngine.Framework.Services.FastRandom.NextInt*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.NextInt
  name: NextInt
  nameWithType: FastRandom.NextInt
  fullName: WaveEngine.Framework.Services.FastRandom.NextInt
- uid: WaveEngine.Framework.Services.FastRandom.NextBool*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.NextBool
  name: NextBool
  nameWithType: FastRandom.NextBool
  fullName: WaveEngine.Framework.Services.FastRandom.NextBool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Framework.Services.FastRandom.NextRotation*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.NextRotation
  name: NextRotation
  nameWithType: FastRandom.NextRotation
  fullName: WaveEngine.Framework.Services.FastRandom.NextRotation
- uid: WaveEngine.Framework.Services.FastRandom.InsideUnitCircle*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.InsideUnitCircle
  name: InsideUnitCircle
  nameWithType: FastRandom.InsideUnitCircle
  fullName: WaveEngine.Framework.Services.FastRandom.InsideUnitCircle
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Framework.Services.FastRandom.OnUnitSphere*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.OnUnitSphere
  name: OnUnitSphere
  nameWithType: FastRandom.OnUnitSphere
  fullName: WaveEngine.Framework.Services.FastRandom.OnUnitSphere
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Framework.Services.FastRandom.InUnitSphere*
  commentId: Overload:WaveEngine.Framework.Services.FastRandom.InUnitSphere
  name: InUnitSphere
  nameWithType: FastRandom.InUnitSphere
  fullName: WaveEngine.Framework.Services.FastRandom.InUnitSphere
