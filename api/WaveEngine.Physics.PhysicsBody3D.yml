### YamlMime:ManagedReference
items:
- uid: WaveEngine.Physics.PhysicsBody3D
  commentId: T:WaveEngine.Physics.PhysicsBody3D
  id: PhysicsBody3D
  parent: WaveEngine.Physics
  children:
  - WaveEngine.Physics.PhysicsBody3D.AngularVelocity
  - WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse(WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Physics.PhysicsBody3D.ApplyForce(WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Physics.PhysicsBody3D.ApplyForce(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Physics.PhysicsBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Physics.PhysicsBody3D.Damping
  - WaveEngine.Physics.PhysicsBody3D.EnableContinousContact
  - WaveEngine.Physics.PhysicsBody3D.InternalCenter
  - WaveEngine.Physics.PhysicsBody3D.IsKinectic
  - WaveEngine.Physics.PhysicsBody3D.KineticFriction
  - WaveEngine.Physics.PhysicsBody3D.LinearVelocity
  - WaveEngine.Physics.PhysicsBody3D.Mass
  - WaveEngine.Physics.PhysicsBody3D.OnCollision
  - WaveEngine.Physics.PhysicsBody3D.Orientation
  - WaveEngine.Physics.PhysicsBody3D.Position
  - WaveEngine.Physics.PhysicsBody3D.Restitution
  - WaveEngine.Physics.PhysicsBody3D.Rotation
  - WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup(WaveEngine.Physics.Collision3DGroup)
  - WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.PhysicsBody3D.StaticFriction
  - WaveEngine.Physics.PhysicsBody3D.UserData
  - WaveEngine.Physics.PhysicsBody3D.WorldTransform
  langs:
  - csharp
  - vb
  name: PhysicsBody3D
  nameWithType: PhysicsBody3D
  fullName: WaveEngine.Physics.PhysicsBody3D
  type: Class
  source:
    id: PhysicsBody3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 21
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThis class represent a 3D physics body and properties.\n"
  example: []
  syntax:
    content: public class PhysicsBody3D
    content.vb: Public Class PhysicsBody3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Physics.PhysicsBody3D.OnCollision
  commentId: E:WaveEngine.Physics.PhysicsBody3D.OnCollision
  id: OnCollision
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: OnCollision
  nameWithType: PhysicsBody3D.OnCollision
  fullName: WaveEngine.Physics.PhysicsBody3D.OnCollision
  type: Event
  source:
    id: OnCollision
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 32
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCollision Event Handler\n"
  example: []
  syntax:
    content: public event PhysicsBody3D.Collision3DEventHandler OnCollision
    return:
      type: WaveEngine.Physics.PhysicsBody3D.Collision3DEventHandler
    content.vb: Public Event OnCollision As PhysicsBody3D.Collision3DEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.InternalCenter
  commentId: P:WaveEngine.Physics.PhysicsBody3D.InternalCenter
  id: InternalCenter
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: InternalCenter
  nameWithType: PhysicsBody3D.InternalCenter
  fullName: WaveEngine.Physics.PhysicsBody3D.InternalCenter
  type: Property
  source:
    id: InternalCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 64
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets the internal center\n"
  example: []
  syntax:
    content: public Vector3 InternalCenter { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public ReadOnly Property InternalCenter As Vector3
  overload: WaveEngine.Physics.PhysicsBody3D.InternalCenter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Physics.PhysicsBody3D.Damping
  commentId: P:WaveEngine.Physics.PhysicsBody3D.Damping
  id: Damping
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: Damping
  nameWithType: PhysicsBody3D.Damping
  fullName: WaveEngine.Physics.PhysicsBody3D.Damping
  type: Property
  source:
    id: Damping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 118
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the linear damping of the physics entity.\n"
  remarks: "\nValues range from 0 to 1, correspondong to a fraction of linear momentum removed\nfrom the physics entity over a unit of time.\n"
  example: []
  syntax:
    content: public float Damping { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe damping.\n"
    content.vb: Public Property Damping As Single
  overload: WaveEngine.Physics.PhysicsBody3D.Damping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.StaticFriction
  commentId: P:WaveEngine.Physics.PhysicsBody3D.StaticFriction
  id: StaticFriction
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: StaticFriction
  nameWithType: PhysicsBody3D.StaticFriction
  fullName: WaveEngine.Physics.PhysicsBody3D.StaticFriction
  type: Property
  source:
    id: StaticFriction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 146
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the friction coefficient used when the object is sliding slowly.\n"
  example: []
  syntax:
    content: public float StaticFriction { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe static friction.\n"
    content.vb: Public Property StaticFriction As Single
  overload: WaveEngine.Physics.PhysicsBody3D.StaticFriction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.KineticFriction
  commentId: P:WaveEngine.Physics.PhysicsBody3D.KineticFriction
  id: KineticFriction
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: KineticFriction
  nameWithType: PhysicsBody3D.KineticFriction
  fullName: WaveEngine.Physics.PhysicsBody3D.KineticFriction
  type: Property
  source:
    id: KineticFriction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 165
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the friction coefficient used when the object is sliding quickly.\n"
  example: []
  syntax:
    content: public float KineticFriction { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe kinetic friction.\n"
    content.vb: Public Property KineticFriction As Single
  overload: WaveEngine.Physics.PhysicsBody3D.KineticFriction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.Restitution
  commentId: P:WaveEngine.Physics.PhysicsBody3D.Restitution
  id: Restitution
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: Restitution
  nameWithType: PhysicsBody3D.Restitution
  fullName: WaveEngine.Physics.PhysicsBody3D.Restitution
  type: Property
  source:
    id: Restitution
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 184
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the coefficient of restitution between the objects.\n"
  example: []
  syntax:
    content: public float Restitution { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe restitution.\n"
    content.vb: Public Property Restitution As Single
  overload: WaveEngine.Physics.PhysicsBody3D.Restitution*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.IsKinectic
  commentId: P:WaveEngine.Physics.PhysicsBody3D.IsKinectic
  id: IsKinectic
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: IsKinectic
  nameWithType: PhysicsBody3D.IsKinectic
  fullName: WaveEngine.Physics.PhysicsBody3D.IsKinectic
  type: Property
  source:
    id: IsKinectic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 208
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the physics entity is kinectic or Dynamic.\n"
  remarks: "\nDynamic entities have finite mass and respond\nto collisions.  Kinematic (non-dynamic) entities\nhave infinite mass and inertia and will plow through anything.\n"
  example: []
  syntax:
    content: public bool IsKinectic { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is kinectic; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsKinectic As Boolean
  overload: WaveEngine.Physics.PhysicsBody3D.IsKinectic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.Mass
  commentId: P:WaveEngine.Physics.PhysicsBody3D.Mass
  id: Mass
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: PhysicsBody3D.Mass
  fullName: WaveEngine.Physics.PhysicsBody3D.Mass
  type: Property
  source:
    id: Mass
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 249
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the mass of the physics entity.\n"
  remarks: "\nSetting this to an invalid value, such as a non-positive number, NaN, or infinity, makes the entity kinematic.\nSetting it to a valid positive number will also scale the inertia tensor if it was already dynamic, or force the calculation of a new inertia tensor\nif it was previously kinematic.\n"
  example: []
  syntax:
    content: public float Mass { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe mass of this object.\n"
    content.vb: Public Property Mass As Single
  overload: WaveEngine.Physics.PhysicsBody3D.Mass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.Position
  commentId: P:WaveEngine.Physics.PhysicsBody3D.Position
  id: Position
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: PhysicsBody3D.Position
  fullName: WaveEngine.Physics.PhysicsBody3D.Position
  type: Property
  source:
    id: Position
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 274
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the position of the physics Entity.  This Position acts\nas the center of mass for dynamic entities.\n"
  example: []
  syntax:
    content: public Vector3 Position { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe position.\n"
    content.vb: Public Property Position As Vector3
  overload: WaveEngine.Physics.PhysicsBody3D.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.Rotation
  commentId: P:WaveEngine.Physics.PhysicsBody3D.Rotation
  id: Rotation
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: PhysicsBody3D.Rotation
  fullName: WaveEngine.Physics.PhysicsBody3D.Rotation
  type: Property
  source:
    id: Rotation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 303
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the world rotation of the physics entity.\n"
  example: []
  syntax:
    content: public Vector3 Rotation { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe rotation.\n"
    content.vb: Public Property Rotation As Vector3
  overload: WaveEngine.Physics.PhysicsBody3D.Rotation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.WorldTransform
  commentId: P:WaveEngine.Physics.PhysicsBody3D.WorldTransform
  id: WorldTransform
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: WorldTransform
  nameWithType: PhysicsBody3D.WorldTransform
  fullName: WaveEngine.Physics.PhysicsBody3D.WorldTransform
  type: Property
  source:
    id: WorldTransform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 339
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets the world transform.\n"
  example: []
  syntax:
    content: public Matrix WorldTransform { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe world transform.\n"
    content.vb: Public ReadOnly Property WorldTransform As Matrix
  overload: WaveEngine.Physics.PhysicsBody3D.WorldTransform*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Physics.PhysicsBody3D.Orientation
  commentId: P:WaveEngine.Physics.PhysicsBody3D.Orientation
  id: Orientation
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: PhysicsBody3D.Orientation
  fullName: WaveEngine.Physics.PhysicsBody3D.Orientation
  type: Property
  source:
    id: Orientation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 353
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the orientation quaternion of the physics entity.\n"
  example: []
  syntax:
    content: public Quaternion Orientation { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Quaternion
      description: "\nThe orientation quaternion.\n"
    content.vb: Public Property Orientation As Quaternion
  overload: WaveEngine.Physics.PhysicsBody3D.Orientation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.EnableContinousContact
  commentId: P:WaveEngine.Physics.PhysicsBody3D.EnableContinousContact
  id: EnableContinousContact
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: EnableContinousContact
  nameWithType: PhysicsBody3D.EnableContinousContact
  fullName: WaveEngine.Physics.PhysicsBody3D.EnableContinousContact
  type: Property
  source:
    id: EnableContinousContact
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 383
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether [enable continous contact].\n"
  example: []
  syntax:
    content: public bool EnableContinousContact { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<remarks>\nWhether EnabledContinuosContanct is false fast-moving entities, such as bullets or falling objects, can pass right through a wall or floor.\n</remarks>\n<code>true</code> if [enable continous contact]; otherwise, <code>false</code>.\n"
    content.vb: Public Property EnableContinousContact As Boolean
  overload: WaveEngine.Physics.PhysicsBody3D.EnableContinousContact*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.LinearVelocity
  commentId: P:WaveEngine.Physics.PhysicsBody3D.LinearVelocity
  id: LinearVelocity
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: PhysicsBody3D.LinearVelocity
  fullName: WaveEngine.Physics.PhysicsBody3D.LinearVelocity
  type: Property
  source:
    id: LinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 417
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the linear velocity of the physics entity.\n"
  example: []
  syntax:
    content: public Vector3 LinearVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe linear velocity.\n"
    content.vb: Public Property LinearVelocity As Vector3
  overload: WaveEngine.Physics.PhysicsBody3D.LinearVelocity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.AngularVelocity
  commentId: P:WaveEngine.Physics.PhysicsBody3D.AngularVelocity
  id: AngularVelocity
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: PhysicsBody3D.AngularVelocity
  fullName: WaveEngine.Physics.PhysicsBody3D.AngularVelocity
  type: Property
  source:
    id: AngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 444
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the angular velocity of the physics entity.\n"
  example: []
  syntax:
    content: public Vector3 AngularVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe angular velocity.\n"
    content.vb: Public Property AngularVelocity As Vector3
  overload: WaveEngine.Physics.PhysicsBody3D.AngularVelocity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.UserData
  commentId: P:WaveEngine.Physics.PhysicsBody3D.UserData
  id: UserData
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: PhysicsBody3D.UserData
  fullName: WaveEngine.Physics.PhysicsBody3D.UserData
  type: Property
  source:
    id: UserData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 471
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the user data.\n"
  example: []
  syntax:
    content: public object UserData { get; set; }
    parameters: []
    return:
      type: System.Object
      description: "\nThe user data.\n"
    content.vb: Public Property UserData As Object
  overload: WaveEngine.Physics.PhysicsBody3D.UserData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset(WaveEngine.Common.Math.Vector3)
  id: SetCollisionLocalOffset(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: SetCollisionLocalOffset(Vector3)
  nameWithType: PhysicsBody3D.SetCollisionLocalOffset(Vector3)
  fullName: WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: SetCollisionLocalOffset
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 557
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nSets Collision local offset to better geometry adjustment\n"
  example: []
  syntax:
    content: public void SetCollisionLocalOffset(Vector3 offset)
    parameters:
    - id: offset
      type: WaveEngine.Common.Math.Vector3
      description: Offset vector
    content.vb: Public Sub SetCollisionLocalOffset(offset As Vector3)
  overload: WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup(WaveEngine.Physics.Collision3DGroup)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup(WaveEngine.Physics.Collision3DGroup)
  id: SetCollisionGroup(WaveEngine.Physics.Collision3DGroup)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: SetCollisionGroup(Collision3DGroup)
  nameWithType: PhysicsBody3D.SetCollisionGroup(Collision3DGroup)
  fullName: WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup(WaveEngine.Physics.Collision3DGroup)
  type: Method
  source:
    id: SetCollisionGroup
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 569
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nSets Physic Collision Group\n"
  example: []
  syntax:
    content: public void SetCollisionGroup(Collision3DGroup group)
    parameters:
    - id: group
      type: WaveEngine.Physics.Collision3DGroup
      description: Collision Group
    content.vb: Public Sub SetCollisionGroup(group As Collision3DGroup)
  overload: WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse(WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse(WaveEngine.Common.Math.Vector3@)
  id: ApplyAngularImpulse(WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: ApplyAngularImpulse(ref Vector3)
  nameWithType: PhysicsBody3D.ApplyAngularImpulse(ref Vector3)
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse(ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyAngularImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 602
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nApplies an angular velocity change to the physics entity using the given impulse.\n"
  remarks: "\nThis method does not wake up the object or perform any other nonessential operation;\nit is meant to be used for performance-sensitive constraint solving.\nConsider equivalently adding to the AngularMomentum property for convenience instead.\n"
  example: []
  syntax:
    content: public void ApplyAngularImpulse(ref Vector3 impulse)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: Impulse to apply.
    content.vb: Public Sub ApplyAngularImpulse(ByRef impulse As Vector3)
  overload: WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse*
  nameWithType.vb: PhysicsBody3D.ApplyAngularImpulse(ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse(ByRef WaveEngine.Common.Math.Vector3)
  name.vb: ApplyAngularImpulse(ByRef Vector3)
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyForce(WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.ApplyForce(WaveEngine.Common.Math.Vector3@)
  id: ApplyForce(WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: ApplyForce(ref Vector3)
  nameWithType: PhysicsBody3D.ApplyForce(ref Vector3)
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyForce(ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 615
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nApplies the force to this physics entity.\n"
  example: []
  syntax:
    content: public void ApplyForce(ref Vector3 force)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector3
      description: Force to apply.
    content.vb: Public Sub ApplyForce(ByRef force As Vector3)
  overload: WaveEngine.Physics.PhysicsBody3D.ApplyForce*
  nameWithType.vb: PhysicsBody3D.ApplyForce(ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.PhysicsBody3D.ApplyForce(ByRef WaveEngine.Common.Math.Vector3)
  name.vb: ApplyForce(ByRef Vector3)
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyForce(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.ApplyForce(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: ApplyForce(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: ApplyForce(ref Vector3, ref Vector3)
  nameWithType: PhysicsBody3D.ApplyForce(ref Vector3, ref Vector3)
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyForce(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 624
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nApplies the force to this physics entity.\n"
  example: []
  syntax:
    content: public void ApplyForce(ref Vector3 force, ref Vector3 position)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector3
      description: Force to apply.
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The force position.
    content.vb: Public Sub ApplyForce(ByRef force As Vector3, ByRef position As Vector3)
  overload: WaveEngine.Physics.PhysicsBody3D.ApplyForce*
  nameWithType.vb: PhysicsBody3D.ApplyForce(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.PhysicsBody3D.ApplyForce(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: ApplyForce(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector3@)
  id: ApplyLinearImpulse(WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: ApplyLinearImpulse(ref Vector3)
  nameWithType: PhysicsBody3D.ApplyLinearImpulse(ref Vector3)
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse(ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyLinearImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 635
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nApplies a linear velocity change to the entity using the given impulse.\nThis method does not wake up the object or perform any other nonessential operation;\nit is meant to be used for performance-sensitive constraint solving.\nConsider equivalently adding to the LinearMomentum property for convenience instead.\n"
  example: []
  syntax:
    content: public void ApplyLinearImpulse(ref Vector3 impulse)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: The impulse.
    content.vb: Public Sub ApplyLinearImpulse(ByRef impulse As Vector3)
  overload: WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse*
  nameWithType.vb: PhysicsBody3D.ApplyLinearImpulse(ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse(ByRef WaveEngine.Common.Math.Vector3)
  name.vb: ApplyLinearImpulse(ByRef Vector3)
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Physics.PhysicsBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: ApplyImpulse(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Physics.PhysicsBody3D
  langs:
  - csharp
  - vb
  name: ApplyImpulse(ref Vector3, ref Vector3)
  nameWithType: PhysicsBody3D.ApplyImpulse(ref Vector3, ref Vector3)
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyImpulse(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsBody3D.cs
    startLine: 652
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nApplies a linear velocity change to the entity using the given impulse.\nThis method does not wake up the object or perform any other nonessential operation;\nit is meant to be used for performance-sensitive constraint solving.\nConsider equivalently adding to the LinearMomentum property for convenience instead.\n"
  example: []
  syntax:
    content: public void ApplyImpulse(ref Vector3 location, ref Vector3 impulse)
    parameters:
    - id: location
      type: WaveEngine.Common.Math.Vector3
      description: The location.
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: The impulse.
    content.vb: Public Sub ApplyImpulse(ByRef location As Vector3, ByRef impulse As Vector3)
  overload: WaveEngine.Physics.PhysicsBody3D.ApplyImpulse*
  nameWithType.vb: PhysicsBody3D.ApplyImpulse(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.PhysicsBody3D.ApplyImpulse(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: ApplyImpulse(ByRef Vector3, ByRef Vector3)
references:
- uid: WaveEngine.Physics
  commentId: N:WaveEngine.Physics
  name: WaveEngine.Physics
  nameWithType: WaveEngine.Physics
  fullName: WaveEngine.Physics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Physics.PhysicsBody3D.Collision3DEventHandler
  commentId: T:WaveEngine.Physics.PhysicsBody3D.Collision3DEventHandler
  parent: WaveEngine.Physics
  name: PhysicsBody3D.Collision3DEventHandler
  nameWithType: PhysicsBody3D.Collision3DEventHandler
  fullName: WaveEngine.Physics.PhysicsBody3D.Collision3DEventHandler
- uid: WaveEngine.Physics.PhysicsBody3D.InternalCenter*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.InternalCenter
  name: InternalCenter
  nameWithType: PhysicsBody3D.InternalCenter
  fullName: WaveEngine.Physics.PhysicsBody3D.InternalCenter
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Physics.PhysicsBody3D.Damping*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.Damping
  name: Damping
  nameWithType: PhysicsBody3D.Damping
  fullName: WaveEngine.Physics.PhysicsBody3D.Damping
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Physics.PhysicsBody3D.StaticFriction*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.StaticFriction
  name: StaticFriction
  nameWithType: PhysicsBody3D.StaticFriction
  fullName: WaveEngine.Physics.PhysicsBody3D.StaticFriction
- uid: WaveEngine.Physics.PhysicsBody3D.KineticFriction*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.KineticFriction
  name: KineticFriction
  nameWithType: PhysicsBody3D.KineticFriction
  fullName: WaveEngine.Physics.PhysicsBody3D.KineticFriction
- uid: WaveEngine.Physics.PhysicsBody3D.Restitution*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.Restitution
  name: Restitution
  nameWithType: PhysicsBody3D.Restitution
  fullName: WaveEngine.Physics.PhysicsBody3D.Restitution
- uid: WaveEngine.Physics.PhysicsBody3D.IsKinectic*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.IsKinectic
  name: IsKinectic
  nameWithType: PhysicsBody3D.IsKinectic
  fullName: WaveEngine.Physics.PhysicsBody3D.IsKinectic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Physics.PhysicsBody3D.Mass*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.Mass
  name: Mass
  nameWithType: PhysicsBody3D.Mass
  fullName: WaveEngine.Physics.PhysicsBody3D.Mass
- uid: WaveEngine.Physics.PhysicsBody3D.Position*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.Position
  name: Position
  nameWithType: PhysicsBody3D.Position
  fullName: WaveEngine.Physics.PhysicsBody3D.Position
- uid: WaveEngine.Physics.PhysicsBody3D.Rotation*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.Rotation
  name: Rotation
  nameWithType: PhysicsBody3D.Rotation
  fullName: WaveEngine.Physics.PhysicsBody3D.Rotation
- uid: WaveEngine.Physics.PhysicsBody3D.WorldTransform*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.WorldTransform
  name: WorldTransform
  nameWithType: PhysicsBody3D.WorldTransform
  fullName: WaveEngine.Physics.PhysicsBody3D.WorldTransform
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Physics.PhysicsBody3D.Orientation*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.Orientation
  name: Orientation
  nameWithType: PhysicsBody3D.Orientation
  fullName: WaveEngine.Physics.PhysicsBody3D.Orientation
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Physics.PhysicsBody3D.EnableContinousContact*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.EnableContinousContact
  name: EnableContinousContact
  nameWithType: PhysicsBody3D.EnableContinousContact
  fullName: WaveEngine.Physics.PhysicsBody3D.EnableContinousContact
- uid: WaveEngine.Physics.PhysicsBody3D.LinearVelocity*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.LinearVelocity
  name: LinearVelocity
  nameWithType: PhysicsBody3D.LinearVelocity
  fullName: WaveEngine.Physics.PhysicsBody3D.LinearVelocity
- uid: WaveEngine.Physics.PhysicsBody3D.AngularVelocity*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.AngularVelocity
  name: AngularVelocity
  nameWithType: PhysicsBody3D.AngularVelocity
  fullName: WaveEngine.Physics.PhysicsBody3D.AngularVelocity
- uid: WaveEngine.Physics.PhysicsBody3D.UserData*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.UserData
  name: UserData
  nameWithType: PhysicsBody3D.UserData
  fullName: WaveEngine.Physics.PhysicsBody3D.UserData
- uid: WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset
  name: SetCollisionLocalOffset
  nameWithType: PhysicsBody3D.SetCollisionLocalOffset
  fullName: WaveEngine.Physics.PhysicsBody3D.SetCollisionLocalOffset
- uid: WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup
  name: SetCollisionGroup
  nameWithType: PhysicsBody3D.SetCollisionGroup
  fullName: WaveEngine.Physics.PhysicsBody3D.SetCollisionGroup
- uid: WaveEngine.Physics.Collision3DGroup
  commentId: T:WaveEngine.Physics.Collision3DGroup
  parent: WaveEngine.Physics
  name: Collision3DGroup
  nameWithType: Collision3DGroup
  fullName: WaveEngine.Physics.Collision3DGroup
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse
  name: ApplyAngularImpulse
  nameWithType: PhysicsBody3D.ApplyAngularImpulse
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyAngularImpulse
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyForce*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.ApplyForce
  name: ApplyForce
  nameWithType: PhysicsBody3D.ApplyForce
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyForce
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse
  name: ApplyLinearImpulse
  nameWithType: PhysicsBody3D.ApplyLinearImpulse
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyLinearImpulse
- uid: WaveEngine.Physics.PhysicsBody3D.ApplyImpulse*
  commentId: Overload:WaveEngine.Physics.PhysicsBody3D.ApplyImpulse
  name: ApplyImpulse
  nameWithType: PhysicsBody3D.ApplyImpulse
  fullName: WaveEngine.Physics.PhysicsBody3D.ApplyImpulse
