### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Threading.GameActionExtensions
  commentId: T:WaveEngine.Framework.Threading.GameActionExtensions
  id: GameActionExtensions
  parent: WaveEngine.Framework.Threading
  children:
  - WaveEngine.Framework.Threading.GameActionExtensions.AsTask(WaveEngine.Framework.Services.IGameAction)
  - WaveEngine.Framework.Threading.GameActionExtensions.AsTask``1(WaveEngine.Framework.Services.IGameAction{``0})
  langs:
  - csharp
  - vb
  name: GameActionExtensions
  nameWithType: GameActionExtensions
  fullName: WaveEngine.Framework.Threading.GameActionExtensions
  type: Class
  source:
    id: GameActionExtensions
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\GameActionExtensions.cs
    startLine: 12
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nProvides methods for creating taks from <xref href=\"WaveEngine.Framework.Services.IGameAction\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public static class GameActionExtensions
    content.vb: Public Module GameActionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Framework.Threading.GameActionExtensions.AsTask(WaveEngine.Framework.Services.IGameAction)
  commentId: M:WaveEngine.Framework.Threading.GameActionExtensions.AsTask(WaveEngine.Framework.Services.IGameAction)
  id: AsTask(WaveEngine.Framework.Services.IGameAction)
  isExtensionMethod: true
  parent: WaveEngine.Framework.Threading.GameActionExtensions
  langs:
  - csharp
  - vb
  name: AsTask(IGameAction)
  nameWithType: GameActionExtensions.AsTask(IGameAction)
  fullName: WaveEngine.Framework.Threading.GameActionExtensions.AsTask(WaveEngine.Framework.Services.IGameAction)
  type: Method
  source:
    id: AsTask
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\GameActionExtensions.cs
    startLine: 158
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nReturns a task that represents a <xref href=\"WaveEngine.Framework.Services.IGameAction\" data-throw-if-not-resolved=\"false\"></xref> action.\n"
  remarks: "\nUse this method to get a <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> object that represents a Wave Engine GameAction.\n<xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> objects simplify the coordination of asynchronous operations.\n"
  example: []
  syntax:
    content: public static Task<bool> AsTask(this IGameAction gameAction)
    parameters:
    - id: gameAction
      type: WaveEngine.Framework.Services.IGameAction
      description: The <xref href="WaveEngine.Framework.Services.IGameAction" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents a <xref href="WaveEngine.Framework.Services.IGameAction" data-throw-if-not-resolved="false"></xref> action.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(gameAction As IGameAction) As Task(Of Boolean)
  overload: WaveEngine.Framework.Threading.GameActionExtensions.AsTask*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Threading.GameActionExtensions.AsTask``1(WaveEngine.Framework.Services.IGameAction{``0})
  commentId: M:WaveEngine.Framework.Threading.GameActionExtensions.AsTask``1(WaveEngine.Framework.Services.IGameAction{``0})
  id: AsTask``1(WaveEngine.Framework.Services.IGameAction{``0})
  isExtensionMethod: true
  parent: WaveEngine.Framework.Threading.GameActionExtensions
  langs:
  - csharp
  - vb
  name: AsTask<T>(IGameAction<T>)
  nameWithType: GameActionExtensions.AsTask<T>(IGameAction<T>)
  fullName: WaveEngine.Framework.Threading.GameActionExtensions.AsTask<T>(WaveEngine.Framework.Services.IGameAction<T>)
  type: Method
  source:
    id: AsTask
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\GameActionExtensions.cs
    startLine: 174
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nReturns a task that represents a <xref href=\"WaveEngine.Framework.Services.IGameAction%601\" data-throw-if-not-resolved=\"false\"></xref> action.\n"
  remarks: "\nUse this method to get a <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> object that represents a Wave Engine GameAction.\n<xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> objects simplify the coordination of asynchronous operations.\n"
  example: []
  syntax:
    content: public static Task<T> AsTask<T>(this IGameAction<T> gameAction)
    parameters:
    - id: gameAction
      type: WaveEngine.Framework.Services.IGameAction{{T}}
      description: The <xref href="WaveEngine.Framework.Services.IGameAction%601" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
      description: The game action result type.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task that represents a <xref href="WaveEngine.Framework.Services.IGameAction%601" data-throw-if-not-resolved="false"></xref> action.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsTask(Of T)(gameAction As IGameAction(Of T)) As Task(Of T)
  overload: WaveEngine.Framework.Threading.GameActionExtensions.AsTask*
  nameWithType.vb: GameActionExtensions.AsTask(Of T)(IGameAction(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.GameActionExtensions.AsTask(Of T)(WaveEngine.Framework.Services.IGameAction(Of T))
  name.vb: AsTask(Of T)(IGameAction(Of T))
references:
- uid: WaveEngine.Framework.Services.IGameAction
  commentId: T:WaveEngine.Framework.Services.IGameAction
  parent: WaveEngine.Framework.Services
  name: IGameAction
  nameWithType: IGameAction
  fullName: WaveEngine.Framework.Services.IGameAction
- uid: WaveEngine.Framework.Threading
  commentId: N:WaveEngine.Framework.Threading
  name: WaveEngine.Framework.Threading
  nameWithType: WaveEngine.Framework.Threading
  fullName: WaveEngine.Framework.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: WaveEngine.Framework.Threading.GameActionExtensions.AsTask*
  commentId: Overload:WaveEngine.Framework.Threading.GameActionExtensions.AsTask
  name: AsTask
  nameWithType: GameActionExtensions.AsTask
  fullName: WaveEngine.Framework.Threading.GameActionExtensions.AsTask
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.IGameAction`1
  commentId: T:WaveEngine.Framework.Services.IGameAction`1
  name: IGameAction<T>
  nameWithType: IGameAction<T>
  fullName: WaveEngine.Framework.Services.IGameAction<T>
  nameWithType.vb: IGameAction(Of T)
  fullName.vb: WaveEngine.Framework.Services.IGameAction(Of T)
  name.vb: IGameAction(Of T)
  spec.csharp:
  - uid: WaveEngine.Framework.Services.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Services.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.IGameAction{{T}}
  commentId: T:WaveEngine.Framework.Services.IGameAction{``0}
  parent: WaveEngine.Framework.Services
  definition: WaveEngine.Framework.Services.IGameAction`1
  name: IGameAction<T>
  nameWithType: IGameAction<T>
  fullName: WaveEngine.Framework.Services.IGameAction<T>
  nameWithType.vb: IGameAction(Of T)
  fullName.vb: WaveEngine.Framework.Services.IGameAction(Of T)
  name.vb: IGameAction(Of T)
  spec.csharp:
  - uid: WaveEngine.Framework.Services.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Services.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
