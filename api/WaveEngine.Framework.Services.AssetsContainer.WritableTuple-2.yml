### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  commentId: T:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  id: AssetsContainer.WritableTuple`2
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.#ctor(`0,`1)
  - WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item1
  - WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item2
  langs:
  - csharp
  - vb
  name: AssetsContainer.WritableTuple<T1, T2>
  nameWithType: AssetsContainer.WritableTuple<T1, T2>
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>
  type: Class
  source:
    id: WritableTuple
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\AssetsContainer.cs
    startLine: 27
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nThis class represent a writable tuple.\n"
  example: []
  syntax:
    content: public class WritableTuple<T1, T2>
    typeParameters:
    - id: T1
      description: The type of the 1.
    - id: T2
      description: The type of the 2.
    content.vb: Public Class WritableTuple(Of T1, T2)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2)
  name.vb: AssetsContainer.WritableTuple(Of T1, T2)
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item1
  commentId: P:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item1
  id: Item1
  parent: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  langs:
  - csharp
  - vb
  name: Item1
  nameWithType: AssetsContainer.WritableTuple<T1, T2>.Item1
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>.Item1
  type: Property
  source:
    id: Item1
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\AssetsContainer.cs
    startLine: 35
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets or sets the item1.\n"
  example: []
  syntax:
    content: public T1 Item1 { get; set; }
    parameters: []
    return:
      type: '{T1}'
      description: "\nThe item1.\n"
    content.vb: Public Property Item1 As T1
  overload: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item1*
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2).Item1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2).Item1
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item2
  commentId: P:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item2
  id: Item2
  parent: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  langs:
  - csharp
  - vb
  name: Item2
  nameWithType: AssetsContainer.WritableTuple<T1, T2>.Item2
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>.Item2
  type: Property
  source:
    id: Item2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\AssetsContainer.cs
    startLine: 43
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets or sets the item2.\n"
  example: []
  syntax:
    content: public T2 Item2 { get; set; }
    parameters: []
    return:
      type: '{T2}'
      description: "\nThe item2.\n"
    content.vb: Public Property Item2 As T2
  overload: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item2*
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2).Item2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2).Item2
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.#ctor(`0,`1)
  commentId: M:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  langs:
  - csharp
  - vb
  name: WritableTuple(T1, T2)
  nameWithType: AssetsContainer.WritableTuple<T1, T2>.WritableTuple(T1, T2)
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>.WritableTuple(T1, T2)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\AssetsContainer.cs
    startLine: 50
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Services.AssetsContainer.WritableTuple%602\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public WritableTuple(T1 item1, T2 item2)
    parameters:
    - id: item1
      type: '{T1}'
      description: The item1.
    - id: item2
      type: '{T2}'
      description: The item2.
    content.vb: Public Sub New(item1 As T1, item2 As T2)
  overload: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.#ctor*
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2).WritableTuple(T1, T2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2).WritableTuple(T1, T2)
references:
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item1*
  commentId: Overload:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item1
  name: Item1
  nameWithType: AssetsContainer.WritableTuple<T1, T2>.Item1
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>.Item1
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2).Item1
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2).Item1
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item2*
  commentId: Overload:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.Item2
  name: Item2
  nameWithType: AssetsContainer.WritableTuple<T1, T2>.Item2
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>.Item2
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2).Item2
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2).Item2
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  commentId: T:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
  name: AssetsContainer.WritableTuple<T1, T2>
  nameWithType: AssetsContainer.WritableTuple<T1, T2>
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2)
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2)
  name.vb: AssetsContainer.WritableTuple(Of T1, T2)
  spec.csharp:
  - uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
    name: AssetsContainer.WritableTuple
    nameWithType: AssetsContainer.WritableTuple
    fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2
    name: AssetsContainer.WritableTuple
    nameWithType: AssetsContainer.WritableTuple
    fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.#ctor*
  commentId: Overload:WaveEngine.Framework.Services.AssetsContainer.WritableTuple`2.#ctor
  name: WritableTuple
  nameWithType: AssetsContainer.WritableTuple<T1, T2>.WritableTuple
  fullName: WaveEngine.Framework.Services.AssetsContainer.WritableTuple<T1, T2>.WritableTuple
  nameWithType.vb: AssetsContainer.WritableTuple(Of T1, T2).WritableTuple
  fullName.vb: WaveEngine.Framework.Services.AssetsContainer.WritableTuple(Of T1, T2).WritableTuple
