### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  commentId: T:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  id: PhysicCategory
  parent: WaveEngine.Framework.Models.Settings.Categories
  children:
  - WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.#ctor
  - WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep
  - WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency
  - WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone
  - WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D
  - WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D
  langs:
  - csharp
  - vb
  name: PhysicCategory
  nameWithType: PhysicCategory
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  type: Class
  source:
    id: PhysicCategory
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 12
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nPhysic Category Model class\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Framework.Models.Settings.Categories", Name = "PhysicCategory")]

      public class PhysicCategory : ISettingCategory
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Framework.Models.Settings.Categories", Name:="PhysicCategory")>

      Public Class PhysicCategory

          Implements ISettingCategory
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Framework.Models.Settings.ISettingCategory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Framework.Models.Settings.Categories
    - name: Name
      type: System.String
      value: PhysicCategory
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D
  commentId: P:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D
  id: Gravity2D
  parent: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  langs:
  - csharp
  - vb
  name: Gravity2D
  nameWithType: PhysicCategory.Gravity2D
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D
  type: Property
  source:
    id: Gravity2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 18
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nGets or sets gravity 2d property\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector2 Gravity2D { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: >-
      <DataMember>

      Public Property Gravity2D As Vector2
  overload: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D
  commentId: P:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D
  id: Gravity3D
  parent: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  langs:
  - csharp
  - vb
  name: Gravity3D
  nameWithType: PhysicCategory.Gravity3D
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D
  type: Property
  source:
    id: Gravity3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 24
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nGets or sets gravity 3d property\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector3 Gravity3D { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: >-
      <DataMember>

      Public Property Gravity3D As Vector3
  overload: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep
  commentId: P:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep
  id: AllowSleep
  parent: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  langs:
  - csharp
  - vb
  name: AllowSleep
  nameWithType: PhysicCategory.AllowSleep
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep
  type: Property
  source:
    id: AllowSleep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 30
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nGets or sets a value indicating whether allow sleep physics entities property\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool AllowSleep { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property AllowSleep As Boolean
  overload: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.#ctor
  commentId: M:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  langs:
  - csharp
  - vb
  name: PhysicCategory()
  nameWithType: PhysicCategory.PhysicCategory()
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.PhysicCategory()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 36
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Models.Settings.Categories.PhysicCategory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PhysicCategory()
    content.vb: Public Sub New
  overload: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone
  commentId: M:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone
  id: Clone
  parent: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PhysicCategory.Clone()
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone()
  type: Method
  source:
    id: Clone
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 49
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nCreates a new object that is a copy of the current instance.\n"
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: "\nA new object that is a copy of this instance.\n"
    content.vb: Public Function Clone As Object
  overload: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency
  commentId: M:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency
  id: CheckConsistency
  parent: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  langs:
  - csharp
  - vb
  name: CheckConsistency()
  nameWithType: PhysicCategory.CheckConsistency()
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency()
  type: Method
  source:
    id: CheckConsistency
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Settings\Categories\PhysicCategory.cs
    startLine: 63
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Settings.Categories
  summary: "\nChecks the consistency of the setting category\n"
  example: []
  syntax:
    content: public bool CheckConsistency()
    return:
      type: System.Boolean
      description: <code>true</code>, if the categiry was modified, <code>false</code> otherwise.
    content.vb: Public Function CheckConsistency As Boolean
  overload: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency*
  implements:
  - WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Models.Settings.Categories
  commentId: N:WaveEngine.Framework.Models.Settings.Categories
  name: WaveEngine.Framework.Models.Settings.Categories
  nameWithType: WaveEngine.Framework.Models.Settings.Categories
  fullName: WaveEngine.Framework.Models.Settings.Categories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Framework.Models.Settings.ISettingCategory
  commentId: T:WaveEngine.Framework.Models.Settings.ISettingCategory
  parent: WaveEngine.Framework.Models.Settings
  name: ISettingCategory
  nameWithType: ISettingCategory
  fullName: WaveEngine.Framework.Models.Settings.ISettingCategory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Framework.Models.Settings
  commentId: N:WaveEngine.Framework.Models.Settings
  name: WaveEngine.Framework.Models.Settings
  nameWithType: WaveEngine.Framework.Models.Settings
  fullName: WaveEngine.Framework.Models.Settings
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D*
  commentId: Overload:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D
  name: Gravity2D
  nameWithType: PhysicCategory.Gravity2D
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity2D
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D*
  commentId: Overload:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D
  name: Gravity3D
  nameWithType: PhysicCategory.Gravity3D
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Gravity3D
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep*
  commentId: Overload:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep
  name: AllowSleep
  nameWithType: PhysicCategory.AllowSleep
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.AllowSleep
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  commentId: T:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
  name: PhysicCategory
  nameWithType: PhysicCategory
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.#ctor*
  commentId: Overload:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.#ctor
  name: PhysicCategory
  nameWithType: PhysicCategory.PhysicCategory
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.PhysicCategory
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone*
  commentId: Overload:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone
  name: Clone
  nameWithType: PhysicCategory.Clone
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.Clone
- uid: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency*
  commentId: Overload:WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency
  name: CheckConsistency
  nameWithType: PhysicCategory.CheckConsistency
  fullName: WaveEngine.Framework.Models.Settings.Categories.PhysicCategory.CheckConsistency
- uid: WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
  commentId: M:WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
  parent: WaveEngine.Framework.Models.Settings.ISettingCategory
  name: CheckConsistency()
  nameWithType: ISettingCategory.CheckConsistency()
  fullName: WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency()
  spec.csharp:
  - uid: WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
    name: CheckConsistency
    nameWithType: ISettingCategory.CheckConsistency
    fullName: WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
    name: CheckConsistency
    nameWithType: ISettingCategory.CheckConsistency
    fullName: WaveEngine.Framework.Models.Settings.ISettingCategory.CheckConsistency
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
