### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Media.IMicrophone
  commentId: T:WaveEngine.Common.Media.IMicrophone
  id: IMicrophone
  parent: WaveEngine.Common.Media
  children:
  - WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle
  - WaveEngine.Common.Media.IMicrophone.DataAvailable
  - WaveEngine.Common.Media.IMicrophone.GetRecordedSound
  - WaveEngine.Common.Media.IMicrophone.IsConnected
  - WaveEngine.Common.Media.IMicrophone.IsRecording
  - WaveEngine.Common.Media.IMicrophone.RecordSoundPath
  - WaveEngine.Common.Media.IMicrophone.Start
  - WaveEngine.Common.Media.IMicrophone.Start(System.String)
  - WaveEngine.Common.Media.IMicrophone.Stop
  langs:
  - csharp
  - vb
  name: IMicrophone
  nameWithType: IMicrophone
  fullName: WaveEngine.Common.Media.IMicrophone
  type: Interface
  source:
    id: IMicrophone
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 13
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nMicrophone support\n"
  example: []
  syntax:
    content: 'public interface IMicrophone : IDisposable'
    content.vb: >-
      Public Interface IMicrophone

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Media.IMicrophone.DataAvailable
  commentId: E:WaveEngine.Common.Media.IMicrophone.DataAvailable
  id: DataAvailable
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: DataAvailable
  nameWithType: IMicrophone.DataAvailable
  fullName: WaveEngine.Common.Media.IMicrophone.DataAvailable
  type: Event
  source:
    id: DataAvailable
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 20
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nEvent launched when there is data available.\n"
  example: []
  syntax:
    content: event EventHandler<MicrophoneDataEventArgs> DataAvailable
    return:
      type: System.EventHandler{WaveEngine.Common.Media.MicrophoneDataEventArgs}
    content.vb: Event DataAvailable As EventHandler(Of MicrophoneDataEventArgs)
- uid: WaveEngine.Common.Media.IMicrophone.IsRecording
  commentId: P:WaveEngine.Common.Media.IMicrophone.IsRecording
  id: IsRecording
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: IsRecording
  nameWithType: IMicrophone.IsRecording
  fullName: WaveEngine.Common.Media.IMicrophone.IsRecording
  type: Property
  source:
    id: IsRecording
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 32
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nGets a value indicating whether the microphone is recording now\n"
  example: []
  syntax:
    content: bool IsRecording { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is recording; otherwise, <code>false</code>.\n"
    content.vb: ReadOnly Property IsRecording As Boolean
  overload: WaveEngine.Common.Media.IMicrophone.IsRecording*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Media.IMicrophone.RecordSoundPath
  commentId: P:WaveEngine.Common.Media.IMicrophone.RecordSoundPath
  id: RecordSoundPath
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: RecordSoundPath
  nameWithType: IMicrophone.RecordSoundPath
  fullName: WaveEngine.Common.Media.IMicrophone.RecordSoundPath
  type: Property
  source:
    id: RecordSoundPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 37
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nGets the current record file path\n"
  example: []
  syntax:
    content: string RecordSoundPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property RecordSoundPath As String
  overload: WaveEngine.Common.Media.IMicrophone.RecordSoundPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Media.IMicrophone.IsConnected
  commentId: P:WaveEngine.Common.Media.IMicrophone.IsConnected
  id: IsConnected
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: IMicrophone.IsConnected
  fullName: WaveEngine.Common.Media.IMicrophone.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 42
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nGets a value indicating whether there is a microphone available.\n"
  example: []
  syntax:
    content: bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsConnected As Boolean
  overload: WaveEngine.Common.Media.IMicrophone.IsConnected*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle
  commentId: P:WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle
  id: CurrentSoundHandle
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: CurrentSoundHandle
  nameWithType: IMicrophone.CurrentSoundHandle
  fullName: WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle
  type: Property
  source:
    id: CurrentSoundHandle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 47
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nGets the current sound handle id\n"
  example: []
  syntax:
    content: uint CurrentSoundHandle { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: ReadOnly Property CurrentSoundHandle As UInteger
  overload: WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Media.IMicrophone.Start
  commentId: M:WaveEngine.Common.Media.IMicrophone.Start
  id: Start
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: IMicrophone.Start()
  fullName: WaveEngine.Common.Media.IMicrophone.Start()
  type: Method
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 56
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nStarts the record\n"
  example: []
  syntax:
    content: void Start()
    content.vb: Sub Start
  overload: WaveEngine.Common.Media.IMicrophone.Start*
- uid: WaveEngine.Common.Media.IMicrophone.Start(System.String)
  commentId: M:WaveEngine.Common.Media.IMicrophone.Start(System.String)
  id: Start(System.String)
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: Start(String)
  nameWithType: IMicrophone.Start(String)
  fullName: WaveEngine.Common.Media.IMicrophone.Start(System.String)
  type: Method
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 62
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nStarts the record in a custom file\n"
  example: []
  syntax:
    content: void Start(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: Path of the recorded file.
    content.vb: Sub Start(filePath As String)
  overload: WaveEngine.Common.Media.IMicrophone.Start*
- uid: WaveEngine.Common.Media.IMicrophone.Stop
  commentId: M:WaveEngine.Common.Media.IMicrophone.Stop
  id: Stop
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: IMicrophone.Stop()
  fullName: WaveEngine.Common.Media.IMicrophone.Stop()
  type: Method
  source:
    id: Stop
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 67
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nStops the record.\n"
  example: []
  syntax:
    content: void Stop()
    content.vb: Sub Stop
  overload: WaveEngine.Common.Media.IMicrophone.Stop*
- uid: WaveEngine.Common.Media.IMicrophone.GetRecordedSound
  commentId: M:WaveEngine.Common.Media.IMicrophone.GetRecordedSound
  id: GetRecordedSound
  parent: WaveEngine.Common.Media.IMicrophone
  langs:
  - csharp
  - vb
  name: GetRecordedSound()
  nameWithType: IMicrophone.GetRecordedSound()
  fullName: WaveEngine.Common.Media.IMicrophone.GetRecordedSound()
  type: Method
  source:
    id: GetRecordedSound
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Media\IMicrophone.cs
    startLine: 73
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Media
  summary: "\nGet a soundbase object\n"
  example: []
  syntax:
    content: SoundBase GetRecordedSound()
    return:
      type: WaveEngine.Common.Media.SoundBase
      description: The recorded sound.
    content.vb: Function GetRecordedSound As SoundBase
  overload: WaveEngine.Common.Media.IMicrophone.GetRecordedSound*
references:
- uid: WaveEngine.Common.Media
  commentId: N:WaveEngine.Common.Media
  name: WaveEngine.Common.Media
  nameWithType: WaveEngine.Common.Media
  fullName: WaveEngine.Common.Media
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.EventHandler{WaveEngine.Common.Media.MicrophoneDataEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Common.Media.MicrophoneDataEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MicrophoneDataEventArgs>
  nameWithType: EventHandler<MicrophoneDataEventArgs>
  fullName: System.EventHandler<WaveEngine.Common.Media.MicrophoneDataEventArgs>
  nameWithType.vb: EventHandler(Of MicrophoneDataEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Common.Media.MicrophoneDataEventArgs)
  name.vb: EventHandler(Of MicrophoneDataEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Media.MicrophoneDataEventArgs
    name: MicrophoneDataEventArgs
    nameWithType: MicrophoneDataEventArgs
    fullName: WaveEngine.Common.Media.MicrophoneDataEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Media.MicrophoneDataEventArgs
    name: MicrophoneDataEventArgs
    nameWithType: MicrophoneDataEventArgs
    fullName: WaveEngine.Common.Media.MicrophoneDataEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Media.IMicrophone.IsRecording*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.IsRecording
  name: IsRecording
  nameWithType: IMicrophone.IsRecording
  fullName: WaveEngine.Common.Media.IMicrophone.IsRecording
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Media.IMicrophone.RecordSoundPath*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.RecordSoundPath
  name: RecordSoundPath
  nameWithType: IMicrophone.RecordSoundPath
  fullName: WaveEngine.Common.Media.IMicrophone.RecordSoundPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Common.Media.IMicrophone.IsConnected*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.IsConnected
  name: IsConnected
  nameWithType: IMicrophone.IsConnected
  fullName: WaveEngine.Common.Media.IMicrophone.IsConnected
- uid: WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle
  name: CurrentSoundHandle
  nameWithType: IMicrophone.CurrentSoundHandle
  fullName: WaveEngine.Common.Media.IMicrophone.CurrentSoundHandle
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: WaveEngine.Common.Media.IMicrophone.Start*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.Start
  name: Start
  nameWithType: IMicrophone.Start
  fullName: WaveEngine.Common.Media.IMicrophone.Start
- uid: WaveEngine.Common.Media.IMicrophone.Stop*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.Stop
  name: Stop
  nameWithType: IMicrophone.Stop
  fullName: WaveEngine.Common.Media.IMicrophone.Stop
- uid: WaveEngine.Common.Media.IMicrophone.GetRecordedSound*
  commentId: Overload:WaveEngine.Common.Media.IMicrophone.GetRecordedSound
  name: GetRecordedSound
  nameWithType: IMicrophone.GetRecordedSound
  fullName: WaveEngine.Common.Media.IMicrophone.GetRecordedSound
- uid: WaveEngine.Common.Media.SoundBase
  commentId: T:WaveEngine.Common.Media.SoundBase
  parent: WaveEngine.Common.Media
  name: SoundBase
  nameWithType: SoundBase
  fullName: WaveEngine.Common.Media.SoundBase
