### YamlMime:ManagedReference
items:
- uid: WaveEngine.TiledMap.TiledMapObjectLayer
  commentId: T:WaveEngine.TiledMap.TiledMapObjectLayer
  id: TiledMapObjectLayer
  parent: WaveEngine.TiledMap
  children:
  - WaveEngine.TiledMap.TiledMapObjectLayer.#ctor(TiledSharp.TmxObjectGroup)
  - WaveEngine.TiledMap.TiledMapObjectLayer.Color
  - WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName
  - WaveEngine.TiledMap.TiledMapObjectLayer.Objects
  - WaveEngine.TiledMap.TiledMapObjectLayer.Offset
  - WaveEngine.TiledMap.TiledMapObjectLayer.Opacity
  - WaveEngine.TiledMap.TiledMapObjectLayer.Properties
  - WaveEngine.TiledMap.TiledMapObjectLayer.Visible
  langs:
  - csharp
  - vb
  name: TiledMapObjectLayer
  nameWithType: TiledMapObjectLayer
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer
  type: Class
  source:
    id: TiledMapObjectLayer
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 19
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nThe represent the TMX object layer\n"
  example: []
  syntax:
    content: public class TiledMapObjectLayer
    content.vb: Public Class TiledMapObjectLayer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName
  id: ObjectLayerName
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: ObjectLayerName
  nameWithType: TiledMapObjectLayer.ObjectLayerName
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName
  type: Property
  source:
    id: ObjectLayerName
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 26
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object layer name\n"
  example: []
  syntax:
    content: public string ObjectLayerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ObjectLayerName As String
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Color
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.Color
  id: Color
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: TiledMapObjectLayer.Color
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Color
  type: Property
  source:
    id: Color
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 31
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object layer color\n"
  example: []
  syntax:
    content: public Color Color { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Graphics.Color
    content.vb: Public ReadOnly Property Color As Color
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.Color*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Opacity
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.Opacity
  id: Opacity
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: Opacity
  nameWithType: TiledMapObjectLayer.Opacity
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Opacity
  type: Property
  source:
    id: Opacity
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 36
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object layer Opacity\n"
  example: []
  syntax:
    content: public double Opacity { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Opacity As Double
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.Opacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Visible
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.Visible
  id: Visible
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: TiledMapObjectLayer.Visible
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Visible
  type: Property
  source:
    id: Visible
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 41
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets a value indicating whether this object layer is visible\n"
  example: []
  syntax:
    content: public bool Visible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Visible As Boolean
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.Visible*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Offset
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.Offset
  id: Offset
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: TiledMapObjectLayer.Offset
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Offset
  type: Property
  source:
    id: Offset
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 46
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object layer offset\n"
  example: []
  syntax:
    content: public Vector2 Offset { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public ReadOnly Property Offset As Vector2
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.Offset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Objects
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.Objects
  id: Objects
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: Objects
  nameWithType: TiledMapObjectLayer.Objects
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Objects
  type: Property
  source:
    id: Objects
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 51
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the objects contained in the object layer.\n"
  example: []
  syntax:
    content: public List<TiledMapObject> Objects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.TiledMap.TiledMapObject}
    content.vb: Public ReadOnly Property Objects As List(Of TiledMapObject)
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.Objects*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Properties
  commentId: P:WaveEngine.TiledMap.TiledMapObjectLayer.Properties
  id: Properties
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: TiledMapObjectLayer.Properties
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Properties
  type: Property
  source:
    id: Properties
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 56
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object layer properties\n"
  example: []
  syntax:
    content: public IReadOnlyDictionary<string, string> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Properties As IReadOnlyDictionary(Of String, String)
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.#ctor(TiledSharp.TmxObjectGroup)
  commentId: M:WaveEngine.TiledMap.TiledMapObjectLayer.#ctor(TiledSharp.TmxObjectGroup)
  id: '#ctor(TiledSharp.TmxObjectGroup)'
  parent: WaveEngine.TiledMap.TiledMapObjectLayer
  langs:
  - csharp
  - vb
  name: TiledMapObjectLayer(TmxObjectGroup)
  nameWithType: TiledMapObjectLayer.TiledMapObjectLayer(TmxObjectGroup)
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.TiledMapObjectLayer(TiledSharp.TmxObjectGroup)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObjectLayer.cs
    startLine: 65
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.TiledMap.TiledMapObjectLayer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TiledMapObjectLayer(TmxObjectGroup tmxObjectLayer)
    parameters:
    - id: tmxObjectLayer
      type: TiledSharp.TmxObjectGroup
      description: The TMX parsed object layer
    content.vb: Public Sub New(tmxObjectLayer As TmxObjectGroup)
  overload: WaveEngine.TiledMap.TiledMapObjectLayer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.TiledMap
  commentId: N:WaveEngine.TiledMap
  name: WaveEngine.TiledMap
  nameWithType: WaveEngine.TiledMap
  fullName: WaveEngine.TiledMap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName
  name: ObjectLayerName
  nameWithType: TiledMapObjectLayer.ObjectLayerName
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.ObjectLayerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Color*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.Color
  name: Color
  nameWithType: TiledMapObjectLayer.Color
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Color
- uid: WaveEngine.Common.Graphics.Color
  commentId: T:WaveEngine.Common.Graphics.Color
  parent: WaveEngine.Common.Graphics
  name: Color
  nameWithType: Color
  fullName: WaveEngine.Common.Graphics.Color
- uid: WaveEngine.Common.Graphics
  commentId: N:WaveEngine.Common.Graphics
  name: WaveEngine.Common.Graphics
  nameWithType: WaveEngine.Common.Graphics
  fullName: WaveEngine.Common.Graphics
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Opacity*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.Opacity
  name: Opacity
  nameWithType: TiledMapObjectLayer.Opacity
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Opacity
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Visible*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.Visible
  name: Visible
  nameWithType: TiledMapObjectLayer.Visible
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Visible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Offset*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.Offset
  name: Offset
  nameWithType: TiledMapObjectLayer.Offset
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Offset
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Objects*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.Objects
  name: Objects
  nameWithType: TiledMapObjectLayer.Objects
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Objects
- uid: System.Collections.Generic.List{WaveEngine.TiledMap.TiledMapObject}
  commentId: T:System.Collections.Generic.List{WaveEngine.TiledMap.TiledMapObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TiledMapObject>
  nameWithType: List<TiledMapObject>
  fullName: System.Collections.Generic.List<WaveEngine.TiledMap.TiledMapObject>
  nameWithType.vb: List(Of TiledMapObject)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.TiledMap.TiledMapObject)
  name.vb: List(Of TiledMapObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.TiledMap.TiledMapObject
    name: TiledMapObject
    nameWithType: TiledMapObject
    fullName: WaveEngine.TiledMap.TiledMapObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.TiledMap.TiledMapObject
    name: TiledMapObject
    nameWithType: TiledMapObject
    fullName: WaveEngine.TiledMap.TiledMapObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.Properties*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.Properties
  name: Properties
  nameWithType: TiledMapObjectLayer.Properties
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.Properties
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.TiledMap.TiledMapObjectLayer
  commentId: T:WaveEngine.TiledMap.TiledMapObjectLayer
  name: TiledMapObjectLayer
  nameWithType: TiledMapObjectLayer
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer
- uid: WaveEngine.TiledMap.TiledMapObjectLayer.#ctor*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObjectLayer.#ctor
  name: TiledMapObjectLayer
  nameWithType: TiledMapObjectLayer.TiledMapObjectLayer
  fullName: WaveEngine.TiledMap.TiledMapObjectLayer.TiledMapObjectLayer
- uid: TiledSharp.TmxObjectGroup
  commentId: T:TiledSharp.TmxObjectGroup
  parent: TiledSharp
  isExternal: true
  name: TmxObjectGroup
  nameWithType: TmxObjectGroup
  fullName: TiledSharp.TmxObjectGroup
- uid: TiledSharp
  commentId: N:TiledSharp
  isExternal: true
  name: TiledSharp
  nameWithType: TiledSharp
  fullName: TiledSharp
