### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel
  commentId: T:WaveEngine.Framework.Models.Entities.BaseEntityModel
  id: BaseEntityModel
  parent: WaveEngine.Framework.Models.Entities
  children:
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.#ctor
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild(WaveEngine.Framework.Models.Entities.BaseEntityModel,System.Int32)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent(WaveEngine.Framework.Component)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Children
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Components
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild(System.String)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.entity
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath(System.String)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.isDisabled
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.isSerializable
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.isStatic
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.isVisible
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.name
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Name
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.PropertySeparator
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Recreated
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent(WaveEngine.Framework.Component)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath(System.String,System.Object)
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.tag
  - WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag
  langs:
  - csharp
  - vb
  name: BaseEntityModel
  nameWithType: BaseEntityModel
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel
  type: Class
  source:
    id: BaseEntityModel
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 16
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nBase Entity Model class.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Framework.Models.Entities", Name = "BaseEntityModel")]

      public abstract class BaseEntityModel
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Framework.Models.Entities", Name:="BaseEntityModel")>

      Public MustInherit Class BaseEntityModel
  inheritance:
  - System.Object
  derivedClasses:
  - WaveEngine.Framework.Models.Entities.EntityModel
  - WaveEngine.Framework.Models.Entities.PrefabInstanceModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Framework.Models.Entities
    - name: Name
      type: System.String
      value: BaseEntityModel
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.PropertySeparator
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.PropertySeparator
  id: PropertySeparator
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: PropertySeparator
  nameWithType: BaseEntityModel.PropertySeparator
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.PropertySeparator
  type: Field
  source:
    id: PropertySeparator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 22
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nThe property path separator\n"
  example: []
  syntax:
    content: protected const char PropertySeparator = '#'
    return:
      type: System.Char
    content.vb: Protected Const PropertySeparator As Char = "#"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.name
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.name
  id: name
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: name
  nameWithType: BaseEntityModel.name
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.name
  type: Field
  source:
    id: name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 28
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nThe entity name\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected string name
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Protected name As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.isDisabled
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.isDisabled
  id: isDisabled
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: isDisabled
  nameWithType: BaseEntityModel.isDisabled
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.isDisabled
  type: Field
  source:
    id: isDisabled
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 34
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nIf the entity is disabled\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected bool isDisabled
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Protected isDisabled As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.isVisible
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.isVisible
  id: isVisible
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: isVisible
  nameWithType: BaseEntityModel.isVisible
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.isVisible
  type: Field
  source:
    id: isVisible
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 40
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nIf the entity is visible\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected bool isVisible
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Protected isVisible As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.isStatic
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.isStatic
  id: isStatic
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: isStatic
  nameWithType: BaseEntityModel.isStatic
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.isStatic
  type: Field
  source:
    id: isStatic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 46
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nIf the entity is static\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected bool isStatic
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Protected isStatic As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.tag
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.tag
  id: tag
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: tag
  nameWithType: BaseEntityModel.tag
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.tag
  type: Field
  source:
    id: tag
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 52
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nThe entity tag\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected string tag
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Protected tag As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.isSerializable
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.isSerializable
  id: isSerializable
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: isSerializable
  nameWithType: BaseEntityModel.isSerializable
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.isSerializable
  type: Field
  source:
    id: isSerializable
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 57
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nIf the entity is serializable\n"
  example: []
  syntax:
    content: protected bool isSerializable
    return:
      type: System.Boolean
    content.vb: Protected isSerializable As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.entity
  commentId: F:WaveEngine.Framework.Models.Entities.BaseEntityModel.entity
  id: entity
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: entity
  nameWithType: BaseEntityModel.entity
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.entity
  type: Field
  source:
    id: entity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 62
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nThe Entity\n"
  example: []
  syntax:
    content: protected Entity entity
    return:
      type: WaveEngine.Framework.Entity
    content.vb: Protected entity As Entity
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Recreated
  commentId: E:WaveEngine.Framework.Models.Entities.BaseEntityModel.Recreated
  id: Recreated
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Recreated
  nameWithType: BaseEntityModel.Recreated
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Recreated
  type: Event
  source:
    id: Recreated
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 67
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nEvent called when the entity has been recreated.\n"
  example: []
  syntax:
    content: public event EventHandler<BaseEntityModel> Recreated
    return:
      type: System.EventHandler{WaveEngine.Framework.Models.Entities.BaseEntityModel}
    content.vb: Public Event Recreated As EventHandler(Of BaseEntityModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity
  id: Entity
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: BaseEntityModel.Entity
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity
  type: Property
  source:
    id: Entity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 72
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets the entity\n"
  example: []
  syntax:
    content: public Entity Entity { get; protected set; }
    parameters: []
    return:
      type: WaveEngine.Framework.Entity
    content.vb: Public Property Entity As Entity
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Name
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.Name
  id: Name
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BaseEntityModel.Name
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 93
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets entity Name\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible
  id: IsVisible
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: BaseEntityModel.IsVisible
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible
  type: Property
  source:
    id: IsVisible
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 114
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets a value indicating whether this instance is static. Once an entity is initialized, this cannot be displaced, rotated or scalated\n"
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive
  id: IsActive
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: BaseEntityModel.IsActive
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive
  type: Property
  source:
    id: IsActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 135
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets a value indicating whether this instance is active.\n"
  example: []
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic
  id: IsStatic
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: IsStatic
  nameWithType: BaseEntityModel.IsStatic
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic
  type: Property
  source:
    id: IsStatic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 156
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets a value indicating whether this instance is static. Once an entity is initialized, this cannot be displaced, rotated or scalated\n"
  example: []
  syntax:
    content: public bool IsStatic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsStatic As Boolean
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath
  id: EntityPath
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: EntityPath
  nameWithType: BaseEntityModel.EntityPath
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath
  type: Property
  source:
    id: EntityPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 177
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets the entity path\n"
  example: []
  syntax:
    content: public string EntityPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EntityPath As String
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag
  id: Tag
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: BaseEntityModel.Tag
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag
  type: Property
  source:
    id: Tag
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 188
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets the tag.\n"
  example: []
  syntax:
    content: public string Tag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Tag As String
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable
  id: IsSerializable
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: IsSerializable
  nameWithType: BaseEntityModel.IsSerializable
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable
  type: Property
  source:
    id: IsSerializable
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 209
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets a value indicating whether this instance is serializable.\n"
  example: []
  syntax:
    content: public bool IsSerializable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSerializable As Boolean
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder
  id: SerializationOrder
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: SerializationOrder
  nameWithType: BaseEntityModel.SerializationOrder
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder
  type: Property
  source:
    id: SerializationOrder
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 230
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets serialization order\n"
  example: []
  syntax:
    content: public int SerializationOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SerializationOrder As Integer
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed
  id: IsDisposed
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: BaseEntityModel.IsDisposed
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed
  type: Property
  source:
    id: IsDisposed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 235
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets a value indicating whether the entity is disposed.\n"
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  id: SerializeChildrens
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: SerializeChildrens
  nameWithType: BaseEntityModel.SerializeChildrens
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  type: Property
  source:
    id: SerializeChildrens
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 243
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets the <xref href=\"WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens\" data-throw-if-not-resolved=\"false\"></xref> collection for serialization.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<BaseEntityModel> SerializeChildrens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.BaseEntityModel}
    content.vb: >-
      <DataMember>

      Public Property SerializeChildrens As List(Of BaseEntityModel)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Components
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.Components
  id: Components
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: BaseEntityModel.Components
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Components
  type: Property
  source:
    id: Components
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 277
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets the component list.\n"
  example: []
  syntax:
    content: public abstract List<Component> Components { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Component}
    content.vb: Public MustOverride Property Components As List(Of Component)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.Components*
  modifiers.csharp:
  - public
  - abstract
  - get
  - protected set
  modifiers.vb:
  - Public
  - MustOverride
  - Get
  - Protected Set
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.#ctor
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: BaseEntityModel()
  nameWithType: BaseEntityModel.BaseEntityModel()
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.BaseEntityModel()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 282
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Models.Entities.BaseEntityModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BaseEntityModel()
    content.vb: Public Sub New
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Children
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.Children
  id: Children
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: BaseEntityModel.Children
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Children
  type: Property
  source:
    id: Children
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 290
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nGets or sets the children list.\n"
  example: []
  syntax:
    content: public abstract List<BaseEntityModel> Children { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.BaseEntityModel}
    content.vb: Public MustOverride Property Children As List(Of BaseEntityModel)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.Children*
  modifiers.csharp:
  - public
  - abstract
  - get
  - protected set
  modifiers.vb:
  - Public
  - MustOverride
  - Get
  - Protected Set
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent(WaveEngine.Framework.Component)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent(WaveEngine.Framework.Component)
  id: AddComponent(WaveEngine.Framework.Component)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: AddComponent(Component)
  nameWithType: BaseEntityModel.AddComponent(Component)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent(WaveEngine.Framework.Component)
  type: Method
  source:
    id: AddComponent
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 296
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nAdd components\n"
  example: []
  syntax:
    content: public virtual void AddComponent(Component c)
    parameters:
    - id: c
      type: WaveEngine.Framework.Component
      description: the component instance
    content.vb: Public Overridable Sub AddComponent(c As Component)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh
  id: Refresh
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: BaseEntityModel.Refresh()
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh()
  type: Method
  source:
    id: Refresh
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 311
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nRefresh method\n"
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent(WaveEngine.Framework.Component)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent(WaveEngine.Framework.Component)
  id: RemoveComponent(WaveEngine.Framework.Component)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: RemoveComponent(Component)
  nameWithType: BaseEntityModel.RemoveComponent(Component)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent(WaveEngine.Framework.Component)
  type: Method
  source:
    id: RemoveComponent
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 360
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nRemove Component\n"
  example: []
  syntax:
    content: public virtual void RemoveComponent(Component component)
    parameters:
    - id: component
      type: WaveEngine.Framework.Component
      description: The component
    content.vb: Public Overridable Sub RemoveComponent(component As Component)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild(WaveEngine.Framework.Models.Entities.BaseEntityModel,System.Int32)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild(WaveEngine.Framework.Models.Entities.BaseEntityModel,System.Int32)
  id: AddChild(WaveEngine.Framework.Models.Entities.BaseEntityModel,System.Int32)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: AddChild(BaseEntityModel, Int32)
  nameWithType: BaseEntityModel.AddChild(BaseEntityModel, Int32)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild(WaveEngine.Framework.Models.Entities.BaseEntityModel, System.Int32)
  type: Method
  source:
    id: AddChild
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 375
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nAdd child\n"
  example: []
  syntax:
    content: public virtual void AddChild(BaseEntityModel newChild, int order = 0)
    parameters:
    - id: newChild
      type: WaveEngine.Framework.Models.Entities.BaseEntityModel
      description: child base entity model
    - id: order
      type: System.Int32
      description: the order
    content.vb: Public Overridable Sub AddChild(newChild As BaseEntityModel, order As Integer = 0)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild(System.String)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild(System.String)
  id: DetachChild(System.String)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: DetachChild(String)
  nameWithType: BaseEntityModel.DetachChild(String)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild(System.String)
  type: Method
  source:
    id: DetachChild
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 402
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nDetach child\n"
  example: []
  syntax:
    content: public virtual void DetachChild(string childName)
    parameters:
    - id: childName
      type: System.String
      description: child name
    content.vb: Public Overridable Sub DetachChild(childName As String)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  id: OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: OnDeserializing(StreamingContext)
  nameWithType: BaseEntityModel.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    id: OnDeserializing
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 416
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nDeserializing process contructor\n"
  example: []
  syntax:
    content: >-
      [OnDeserializing]

      protected void OnDeserializing(StreamingContext context)
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context
    content.vb: >-
      <OnDeserializing>

      Protected Sub OnDeserializing(context As StreamingContext)
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing*
  attributes:
  - type: System.Runtime.Serialization.OnDeserializingAttribute
    ctor: System.Runtime.Serialization.OnDeserializingAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues
  id: DefaultValues
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: DefaultValues()
  nameWithType: BaseEntityModel.DefaultValues()
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues()
  type: Method
  source:
    id: DefaultValues
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 425
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nSets the default values\n"
  example: []
  syntax:
    content: protected virtual void DefaultValues()
    content.vb: Protected Overridable Sub DefaultValues
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity
  id: RecreateEntity
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: RecreateEntity()
  nameWithType: BaseEntityModel.RecreateEntity()
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity()
  type: Method
  source:
    id: RecreateEntity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 438
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nConstruct the underlyning entity\n"
  example: []
  syntax:
    content: public virtual void RecreateEntity()
    content.vb: Public Overridable Sub RecreateEntity
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath(System.String)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath(System.String)
  id: FindChildByRelativePath(System.String)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: FindChildByRelativePath(String)
  nameWithType: BaseEntityModel.FindChildByRelativePath(String)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath(System.String)
  type: Method
  source:
    id: FindChildByRelativePath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 453
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nFind child by Relative Path\n"
  example: []
  syntax:
    content: public BaseEntityModel FindChildByRelativePath(string relativePath)
    parameters:
    - id: relativePath
      type: System.String
      description: relative child path
    return:
      type: WaveEngine.Framework.Models.Entities.BaseEntityModel
      description: base entity model
    content.vb: Public Function FindChildByRelativePath(relativePath As String) As BaseEntityModel
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath(System.String,System.Object)
  commentId: M:WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath(System.String,System.Object)
  id: SetMemberByPath(System.String,System.Object)
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  langs:
  - csharp
  - vb
  name: SetMemberByPath(String, Object)
  nameWithType: BaseEntityModel.SetMemberByPath(String, Object)
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath(System.String, System.Object)
  type: Method
  source:
    id: SetMemberByPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Entities\BaseEntityModel.cs
    startLine: 497
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Entities
  summary: "\nSet property value by Property Path\n"
  example: []
  syntax:
    content: public bool SetMemberByPath(string propertyPath, object value)
    parameters:
    - id: propertyPath
      type: System.String
      description: The propertyPath
    - id: value
      type: System.Object
      description: New property value
    return:
      type: System.Boolean
      description: Property info
    content.vb: Public Function SetMemberByPath(propertyPath As String, value As Object) As Boolean
  overload: WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Models.Entities
  commentId: N:WaveEngine.Framework.Models.Entities
  name: WaveEngine.Framework.Models.Entities
  nameWithType: WaveEngine.Framework.Models.Entities
  fullName: WaveEngine.Framework.Models.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: System.EventHandler{WaveEngine.Framework.Models.Entities.BaseEntityModel}
  commentId: T:System.EventHandler{WaveEngine.Framework.Models.Entities.BaseEntityModel}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BaseEntityModel>
  nameWithType: EventHandler<BaseEntityModel>
  fullName: System.EventHandler<WaveEngine.Framework.Models.Entities.BaseEntityModel>
  nameWithType.vb: EventHandler(Of BaseEntityModel)
  fullName.vb: System.EventHandler(Of WaveEngine.Framework.Models.Entities.BaseEntityModel)
  name.vb: EventHandler(Of BaseEntityModel)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Models.Entities.BaseEntityModel
    name: BaseEntityModel
    nameWithType: BaseEntityModel
    fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Models.Entities.BaseEntityModel
    name: BaseEntityModel
    nameWithType: BaseEntityModel
    fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity
  name: Entity
  nameWithType: BaseEntityModel.Entity
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Entity
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Name*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.Name
  name: Name
  nameWithType: BaseEntityModel.Name
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Name
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible
  name: IsVisible
  nameWithType: BaseEntityModel.IsVisible
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsVisible
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive
  name: IsActive
  nameWithType: BaseEntityModel.IsActive
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsActive
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic
  name: IsStatic
  nameWithType: BaseEntityModel.IsStatic
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsStatic
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath
  name: EntityPath
  nameWithType: BaseEntityModel.EntityPath
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.EntityPath
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag
  name: Tag
  nameWithType: BaseEntityModel.Tag
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Tag
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable
  name: IsSerializable
  nameWithType: BaseEntityModel.IsSerializable
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsSerializable
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder
  name: SerializationOrder
  nameWithType: BaseEntityModel.SerializationOrder
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializationOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed
  name: IsDisposed
  nameWithType: BaseEntityModel.IsDisposed
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.IsDisposed
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  commentId: P:WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  parent: WaveEngine.Framework.Models.Entities.BaseEntityModel
  name: SerializeChildrens
  nameWithType: BaseEntityModel.SerializeChildrens
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
  name: SerializeChildrens
  nameWithType: BaseEntityModel.SerializeChildrens
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SerializeChildrens
- uid: System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.BaseEntityModel}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.BaseEntityModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BaseEntityModel>
  nameWithType: List<BaseEntityModel>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Models.Entities.BaseEntityModel>
  nameWithType.vb: List(Of BaseEntityModel)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Models.Entities.BaseEntityModel)
  name.vb: List(Of BaseEntityModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Models.Entities.BaseEntityModel
    name: BaseEntityModel
    nameWithType: BaseEntityModel
    fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Models.Entities.BaseEntityModel
    name: BaseEntityModel
    nameWithType: BaseEntityModel
    fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel
  commentId: T:WaveEngine.Framework.Models.Entities.BaseEntityModel
  parent: WaveEngine.Framework.Models.Entities
  name: BaseEntityModel
  nameWithType: BaseEntityModel
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Components*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.Components
  name: Components
  nameWithType: BaseEntityModel.Components
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Components
- uid: System.Collections.Generic.List{WaveEngine.Framework.Component}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Component}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Component>
  nameWithType: List<Component>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Component>
  nameWithType.vb: List(Of Component)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Component)
  name.vb: List(Of Component)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Component
    name: Component
    nameWithType: Component
    fullName: WaveEngine.Framework.Component
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Component
    name: Component
    nameWithType: Component
    fullName: WaveEngine.Framework.Component
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.#ctor*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.#ctor
  name: BaseEntityModel
  nameWithType: BaseEntityModel.BaseEntityModel
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.BaseEntityModel
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Children*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.Children
  name: Children
  nameWithType: BaseEntityModel.Children
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Children
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent
  name: AddComponent
  nameWithType: BaseEntityModel.AddComponent
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddComponent
- uid: WaveEngine.Framework.Component
  commentId: T:WaveEngine.Framework.Component
  parent: WaveEngine.Framework
  name: Component
  nameWithType: Component
  fullName: WaveEngine.Framework.Component
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh
  name: Refresh
  nameWithType: BaseEntityModel.Refresh
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.Refresh
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent
  name: RemoveComponent
  nameWithType: BaseEntityModel.RemoveComponent
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.RemoveComponent
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild
  name: AddChild
  nameWithType: BaseEntityModel.AddChild
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.AddChild
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild
  name: DetachChild
  nameWithType: BaseEntityModel.DetachChild
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.DetachChild
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing
  name: OnDeserializing
  nameWithType: BaseEntityModel.OnDeserializing
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.OnDeserializing
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues
  name: DefaultValues
  nameWithType: BaseEntityModel.DefaultValues
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.DefaultValues
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity
  name: RecreateEntity
  nameWithType: BaseEntityModel.RecreateEntity
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.RecreateEntity
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath
  name: FindChildByRelativePath
  nameWithType: BaseEntityModel.FindChildByRelativePath
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.FindChildByRelativePath
- uid: WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath*
  commentId: Overload:WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath
  name: SetMemberByPath
  nameWithType: BaseEntityModel.SetMemberByPath
  fullName: WaveEngine.Framework.Models.Entities.BaseEntityModel.SetMemberByPath
