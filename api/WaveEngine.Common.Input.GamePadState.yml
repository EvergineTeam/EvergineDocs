### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Input.GamePadState
  commentId: T:WaveEngine.Common.Input.GamePadState
  id: GamePadState
  parent: WaveEngine.Common.Input
  children:
  - WaveEngine.Common.Input.GamePadState.Buttons
  - WaveEngine.Common.Input.GamePadState.DPad
  - WaveEngine.Common.Input.GamePadState.IsButtonPressed(WaveEngine.Common.Input.Buttons)
  - WaveEngine.Common.Input.GamePadState.IsButtonReleased(WaveEngine.Common.Input.Buttons)
  - WaveEngine.Common.Input.GamePadState.IsConnected
  - WaveEngine.Common.Input.GamePadState.ThumbSticks
  - WaveEngine.Common.Input.GamePadState.Triggers
  langs:
  - csharp
  - vb
  name: GamePadState
  nameWithType: GamePadState
  fullName: WaveEngine.Common.Input.GamePadState
  type: Struct
  source:
    id: GamePadState
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 11
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nRepresents the game pad state.\n"
  example: []
  syntax:
    content: 'public struct GamePadState : IController'
    content.vb: >-
      Public Structure GamePadState

          Implements IController
  implements:
  - WaveEngine.Common.Input.IController
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Input.GamePadState.DPad
  commentId: F:WaveEngine.Common.Input.GamePadState.DPad
  id: DPad
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: DPad
  nameWithType: GamePadState.DPad
  fullName: WaveEngine.Common.Input.GamePadState.DPad
  type: Field
  source:
    id: DPad
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nDirection buttons.\n"
  example: []
  syntax:
    content: public GamePadDPad DPad
    return:
      type: WaveEngine.Common.Input.GamePadDPad
    content.vb: Public DPad As GamePadDPad
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.GamePadState.ThumbSticks
  commentId: F:WaveEngine.Common.Input.GamePadState.ThumbSticks
  id: ThumbSticks
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: ThumbSticks
  nameWithType: GamePadState.ThumbSticks
  fullName: WaveEngine.Common.Input.GamePadState.ThumbSticks
  type: Field
  source:
    id: ThumbSticks
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 21
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nThumb sticks.\n"
  example: []
  syntax:
    content: public GamePadThumbSticks ThumbSticks
    return:
      type: WaveEngine.Common.Input.GamePadThumbSticks
    content.vb: Public ThumbSticks As GamePadThumbSticks
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.GamePadState.Buttons
  commentId: F:WaveEngine.Common.Input.GamePadState.Buttons
  id: Buttons
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: Buttons
  nameWithType: GamePadState.Buttons
  fullName: WaveEngine.Common.Input.GamePadState.Buttons
  type: Field
  source:
    id: Buttons
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 26
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGamepad buttons.\n"
  example: []
  syntax:
    content: public GamePadButtons Buttons
    return:
      type: WaveEngine.Common.Input.GamePadButtons
    content.vb: Public Buttons As GamePadButtons
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.GamePadState.Triggers
  commentId: F:WaveEngine.Common.Input.GamePadState.Triggers
  id: Triggers
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: Triggers
  nameWithType: GamePadState.Triggers
  fullName: WaveEngine.Common.Input.GamePadState.Triggers
  type: Field
  source:
    id: Triggers
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 31
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGamepad triggers.\n"
  example: []
  syntax:
    content: public GamePadTriggers Triggers
    return:
      type: WaveEngine.Common.Input.GamePadTriggers
    content.vb: Public Triggers As GamePadTriggers
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.GamePadState.IsConnected
  commentId: P:WaveEngine.Common.Input.GamePadState.IsConnected
  id: IsConnected
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: GamePadState.IsConnected
  fullName: WaveEngine.Common.Input.GamePadState.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 41
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets or sets a value indicating whether this instance is connected.\n"
  example: []
  syntax:
    content: public bool IsConnected { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is connected; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsConnected As Boolean
  overload: WaveEngine.Common.Input.GamePadState.IsConnected*
  implements:
  - WaveEngine.Common.Input.IController.IsConnected
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.GamePadState.IsButtonPressed(WaveEngine.Common.Input.Buttons)
  commentId: M:WaveEngine.Common.Input.GamePadState.IsButtonPressed(WaveEngine.Common.Input.Buttons)
  id: IsButtonPressed(WaveEngine.Common.Input.Buttons)
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: IsButtonPressed(Buttons)
  nameWithType: GamePadState.IsButtonPressed(Buttons)
  fullName: WaveEngine.Common.Input.GamePadState.IsButtonPressed(WaveEngine.Common.Input.Buttons)
  type: Method
  source:
    id: IsButtonPressed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 53
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nDetermines whether [is button pressed] [the specified button].\n"
  example: []
  syntax:
    content: public bool IsButtonPressed(Buttons button)
    parameters:
    - id: button
      type: WaveEngine.Common.Input.Buttons
      description: the specified button.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [is button pressed] [the specified button]; otherwise, <code>false</code>.\n"
    content.vb: Public Function IsButtonPressed(button As Buttons) As Boolean
  overload: WaveEngine.Common.Input.GamePadState.IsButtonPressed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.GamePadState.IsButtonReleased(WaveEngine.Common.Input.Buttons)
  commentId: M:WaveEngine.Common.Input.GamePadState.IsButtonReleased(WaveEngine.Common.Input.Buttons)
  id: IsButtonReleased(WaveEngine.Common.Input.Buttons)
  parent: WaveEngine.Common.Input.GamePadState
  langs:
  - csharp
  - vb
  name: IsButtonReleased(Buttons)
  nameWithType: GamePadState.IsButtonReleased(Buttons)
  fullName: WaveEngine.Common.Input.GamePadState.IsButtonReleased(WaveEngine.Common.Input.Buttons)
  type: Method
  source:
    id: IsButtonReleased
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\GamePadState.cs
    startLine: 117
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nDetermines whether [is button released] [the specified button].\n"
  example: []
  syntax:
    content: public bool IsButtonReleased(Buttons button)
    parameters:
    - id: button
      type: WaveEngine.Common.Input.Buttons
      description: the specified button.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [is button released] [the specified button]; otherwise, <code>false</code>.\n"
    content.vb: Public Function IsButtonReleased(button As Buttons) As Boolean
  overload: WaveEngine.Common.Input.GamePadState.IsButtonReleased*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Common.Input
  commentId: N:WaveEngine.Common.Input
  name: WaveEngine.Common.Input
  nameWithType: WaveEngine.Common.Input
  fullName: WaveEngine.Common.Input
- uid: WaveEngine.Common.Input.IController
  commentId: T:WaveEngine.Common.Input.IController
  parent: WaveEngine.Common.Input
  name: IController
  nameWithType: IController
  fullName: WaveEngine.Common.Input.IController
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Input.GamePadDPad
  commentId: T:WaveEngine.Common.Input.GamePadDPad
  parent: WaveEngine.Common.Input
  name: GamePadDPad
  nameWithType: GamePadDPad
  fullName: WaveEngine.Common.Input.GamePadDPad
- uid: WaveEngine.Common.Input.GamePadThumbSticks
  commentId: T:WaveEngine.Common.Input.GamePadThumbSticks
  parent: WaveEngine.Common.Input
  name: GamePadThumbSticks
  nameWithType: GamePadThumbSticks
  fullName: WaveEngine.Common.Input.GamePadThumbSticks
- uid: WaveEngine.Common.Input.GamePadButtons
  commentId: T:WaveEngine.Common.Input.GamePadButtons
  parent: WaveEngine.Common.Input
  name: GamePadButtons
  nameWithType: GamePadButtons
  fullName: WaveEngine.Common.Input.GamePadButtons
- uid: WaveEngine.Common.Input.GamePadTriggers
  commentId: T:WaveEngine.Common.Input.GamePadTriggers
  parent: WaveEngine.Common.Input
  name: GamePadTriggers
  nameWithType: GamePadTriggers
  fullName: WaveEngine.Common.Input.GamePadTriggers
- uid: WaveEngine.Common.Input.GamePadState.IsConnected*
  commentId: Overload:WaveEngine.Common.Input.GamePadState.IsConnected
  name: IsConnected
  nameWithType: GamePadState.IsConnected
  fullName: WaveEngine.Common.Input.GamePadState.IsConnected
- uid: WaveEngine.Common.Input.IController.IsConnected
  commentId: P:WaveEngine.Common.Input.IController.IsConnected
  parent: WaveEngine.Common.Input.IController
  name: IsConnected
  nameWithType: IController.IsConnected
  fullName: WaveEngine.Common.Input.IController.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Input.GamePadState.IsButtonPressed*
  commentId: Overload:WaveEngine.Common.Input.GamePadState.IsButtonPressed
  name: IsButtonPressed
  nameWithType: GamePadState.IsButtonPressed
  fullName: WaveEngine.Common.Input.GamePadState.IsButtonPressed
- uid: WaveEngine.Common.Input.Buttons
  commentId: T:WaveEngine.Common.Input.Buttons
  parent: WaveEngine.Common.Input
  name: Buttons
  nameWithType: Buttons
  fullName: WaveEngine.Common.Input.Buttons
- uid: WaveEngine.Common.Input.GamePadState.IsButtonReleased*
  commentId: Overload:WaveEngine.Common.Input.GamePadState.IsButtonReleased
  name: IsButtonReleased
  nameWithType: GamePadState.IsButtonReleased
  fullName: WaveEngine.Common.Input.GamePadState.IsButtonReleased
