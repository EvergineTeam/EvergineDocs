### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Serialization.SerializationUtils
  commentId: T:WaveEngine.Common.Serialization.SerializationUtils
  id: SerializationUtils
  parent: WaveEngine.Common.Serialization
  children:
  - WaveEngine.Common.Serialization.SerializationUtils.AdditionalAssemblies
  - WaveEngine.Common.Serialization.SerializationUtils.AssemblyCache
  - WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache
  - WaveEngine.Common.Serialization.SerializationUtils.ExcludeAssemblies
  - WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes(System.Type,WaveEngine.Common.Attributes.WaveAssemblyUsage)
  - WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType(System.Reflection.TypeInfo,System.Boolean)
  - WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly(System.Reflection.Assembly)
  - WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType(System.String)
  - WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly(System.Reflection.Assembly)
  - WaveEngine.Common.Serialization.SerializationUtils.SkipReferencedAssemblies
  - WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes
  - WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces
  langs:
  - csharp
  - vb
  name: SerializationUtils
  nameWithType: SerializationUtils
  fullName: WaveEngine.Common.Serialization.SerializationUtils
  type: Class
  source:
    id: SerializationUtils
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 18
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nSerialization Utils static class\n"
  example: []
  syntax:
    content: public static class SerializationUtils
    content.vb: Public Module SerializationUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Common.Serialization.SerializationUtils.AdditionalAssemblies
  commentId: F:WaveEngine.Common.Serialization.SerializationUtils.AdditionalAssemblies
  id: AdditionalAssemblies
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: AdditionalAssemblies
  nameWithType: SerializationUtils.AdditionalAssemblies
  fullName: WaveEngine.Common.Serialization.SerializationUtils.AdditionalAssemblies
  type: Field
  source:
    id: AdditionalAssemblies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 23
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nThe additional assemblies\n"
  example: []
  syntax:
    content: public static List<Assembly> AdditionalAssemblies
    return:
      type: System.Collections.Generic.List{System.Reflection.Assembly}
    content.vb: Public Shared AdditionalAssemblies As List(Of Assembly)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.ExcludeAssemblies
  commentId: F:WaveEngine.Common.Serialization.SerializationUtils.ExcludeAssemblies
  id: ExcludeAssemblies
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: ExcludeAssemblies
  nameWithType: SerializationUtils.ExcludeAssemblies
  fullName: WaveEngine.Common.Serialization.SerializationUtils.ExcludeAssemblies
  type: Field
  source:
    id: ExcludeAssemblies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 28
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nThe assemblies to be excluded\n"
  example: []
  syntax:
    content: public static List<Assembly> ExcludeAssemblies
    return:
      type: System.Collections.Generic.List{System.Reflection.Assembly}
    content.vb: Public Shared ExcludeAssemblies As List(Of Assembly)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.AssemblyCache
  commentId: F:WaveEngine.Common.Serialization.SerializationUtils.AssemblyCache
  id: AssemblyCache
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: AssemblyCache
  nameWithType: SerializationUtils.AssemblyCache
  fullName: WaveEngine.Common.Serialization.SerializationUtils.AssemblyCache
  type: Field
  source:
    id: AssemblyCache
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 33
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nDictionary Assemblies (cache)\n"
  example: []
  syntax:
    content: public static Dictionary<string, List<Type>> AssemblyCache
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Type}}
    content.vb: Public Shared AssemblyCache As Dictionary(Of String, List(Of Type))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.SkipReferencedAssemblies
  commentId: F:WaveEngine.Common.Serialization.SerializationUtils.SkipReferencedAssemblies
  id: SkipReferencedAssemblies
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: SkipReferencedAssemblies
  nameWithType: SerializationUtils.SkipReferencedAssemblies
  fullName: WaveEngine.Common.Serialization.SerializationUtils.SkipReferencedAssemblies
  type: Field
  source:
    id: SkipReferencedAssemblies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 38
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nIndicates if the referenced assemblies should be loaded\n"
  example: []
  syntax:
    content: public static bool SkipReferencedAssemblies
    return:
      type: System.Boolean
    content.vb: Public Shared SkipReferencedAssemblies As Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes
  commentId: P:WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes
  id: WaveEngineTypes
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: WaveEngineTypes
  nameWithType: SerializationUtils.WaveEngineTypes
  fullName: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes
  type: Property
  source:
    id: WaveEngineTypes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 63
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nGets the wave engine types\n"
  example: []
  syntax:
    content: public static List<Type> WaveEngineTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public Shared ReadOnly Property WaveEngineTypes As List(Of Type)
  overload: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces
  commentId: P:WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces
  id: WaveEngineTypesAndInterfaces
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: WaveEngineTypesAndInterfaces
  nameWithType: SerializationUtils.WaveEngineTypesAndInterfaces
  fullName: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces
  type: Property
  source:
    id: WaveEngineTypesAndInterfaces
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 68
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nGets the wave engine types and interfaces\n"
  example: []
  syntax:
    content: public static List<Type> WaveEngineTypesAndInterfaces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public Shared ReadOnly Property WaveEngineTypesAndInterfaces As List(Of Type)
  overload: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache
  commentId: M:WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache
  id: CleanWaveTypesCache
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: CleanWaveTypesCache()
  nameWithType: SerializationUtils.CleanWaveTypesCache()
  fullName: WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache()
  type: Method
  source:
    id: CleanWaveTypesCache
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 82
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nClean the wave engine cache\n"
  example: []
  syntax:
    content: public static void CleanWaveTypesCache()
    content.vb: Public Shared Sub CleanWaveTypesCache
  overload: WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType(System.String)
  commentId: M:WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType(System.String)
  id: SearchWaveEngineType(System.String)
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: SearchWaveEngineType(String)
  nameWithType: SerializationUtils.SearchWaveEngineType(String)
  fullName: WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType(System.String)
  type: Method
  source:
    id: SearchWaveEngineType
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 93
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nSearches the type of the wave engine.\n"
  example: []
  syntax:
    content: public static Type SearchWaveEngineType(string typeFullName)
    parameters:
    - id: typeFullName
      type: System.String
      description: Full name of the type.
    return:
      type: System.Type
      description: Type whether exists or null
    content.vb: Public Shared Function SearchWaveEngineType(typeFullName As String) As Type
  overload: WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes(System.Type,WaveEngine.Common.Attributes.WaveAssemblyUsage)
  commentId: M:WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes(System.Type,WaveEngine.Common.Attributes.WaveAssemblyUsage)
  id: GetFilteredTypes(System.Type,WaveEngine.Common.Attributes.WaveAssemblyUsage)
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: GetFilteredTypes(Type, WaveAssemblyUsage)
  nameWithType: SerializationUtils.GetFilteredTypes(Type, WaveAssemblyUsage)
  fullName: WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes(System.Type, WaveEngine.Common.Attributes.WaveAssemblyUsage)
  type: Method
  source:
    id: GetFilteredTypes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 149
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nGets the types of a desired class.\n"
  example: []
  syntax:
    content: public static List<Type> GetFilteredTypes(Type filter, WaveAssemblyUsage assemblyUsage)
    parameters:
    - id: filter
      type: System.Type
      description: The filter.
    - id: assemblyUsage
      type: WaveEngine.Common.Attributes.WaveAssemblyUsage
      description: The assembly usage to look for types
    return:
      type: System.Collections.Generic.List{System.Type}
      description: Known types of Wave Engine
    content.vb: Public Shared Function GetFilteredTypes(filter As Type, assemblyUsage As WaveAssemblyUsage) As List(Of Type)
  overload: WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType(System.Reflection.TypeInfo,System.Boolean)
  commentId: M:WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType(System.Reflection.TypeInfo,System.Boolean)
  id: IsValidWaveType(System.Reflection.TypeInfo,System.Boolean)
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: IsValidWaveType(TypeInfo, Boolean)
  nameWithType: SerializationUtils.IsValidWaveType(TypeInfo, Boolean)
  fullName: WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType(System.Reflection.TypeInfo, System.Boolean)
  type: Method
  source:
    id: IsValidWaveType
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 182
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nDetermines whether a type is a valid Wave Engine type.\n"
  example: []
  syntax:
    content: public static bool IsValidWaveType(TypeInfo typeInfo, bool includeInterfaces = false)
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The type information.
    - id: includeInterfaces
      type: System.Boolean
      description: if set to <code>true</code> interfaces will be included.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the type is a valid Wave Engine type; otherwise, <code>false</code>.\n"
    content.vb: Public Shared Function IsValidWaveType(typeInfo As TypeInfo, includeInterfaces As Boolean = False) As Boolean
  overload: WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly(System.Reflection.Assembly)
  commentId: M:WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly(System.Reflection.Assembly)
  id: SetUserAssembly(System.Reflection.Assembly)
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: SetUserAssembly(Assembly)
  nameWithType: SerializationUtils.SetUserAssembly(Assembly)
  fullName: WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly(System.Reflection.Assembly)
  type: Method
  source:
    id: SetUserAssembly
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 276
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nRegister user project assembly\n"
  example: []
  syntax:
    content: public static void SetUserAssembly(Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: User assembly.
    content.vb: Public Shared Sub SetUserAssembly(assembly As Assembly)
  overload: WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly(System.Reflection.Assembly)
  commentId: M:WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly(System.Reflection.Assembly)
  id: RegisterAditionalAssembly(System.Reflection.Assembly)
  parent: WaveEngine.Common.Serialization.SerializationUtils
  langs:
  - csharp
  - vb
  name: RegisterAditionalAssembly(Assembly)
  nameWithType: SerializationUtils.RegisterAditionalAssembly(Assembly)
  fullName: WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly(System.Reflection.Assembly)
  type: Method
  source:
    id: RegisterAditionalAssembly
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\SerializationUtils.cs
    startLine: 285
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nRegister additional assembly\n"
  example: []
  syntax:
    content: public static void RegisterAditionalAssembly(Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: Assembly to be registered.
    content.vb: Public Shared Sub RegisterAditionalAssembly(assembly As Assembly)
  overload: WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Common.Serialization
  commentId: N:WaveEngine.Common.Serialization
  name: WaveEngine.Common.Serialization
  nameWithType: WaveEngine.Common.Serialization
  fullName: WaveEngine.Common.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.List{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Assembly>
  nameWithType: List<Assembly>
  fullName: System.Collections.Generic.List<System.Reflection.Assembly>
  nameWithType.vb: List(Of Assembly)
  fullName.vb: System.Collections.Generic.List(Of System.Reflection.Assembly)
  name.vb: List(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Type}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Type}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<Type>>
  nameWithType: Dictionary<String, List<Type>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.Type>>
  nameWithType.vb: Dictionary(Of String, List(Of Type))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.Type))
  name.vb: Dictionary(Of String, List(Of Type))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes
  name: WaveEngineTypes
  nameWithType: SerializationUtils.WaveEngineTypes
  fullName: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypes
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces
  name: WaveEngineTypesAndInterfaces
  nameWithType: SerializationUtils.WaveEngineTypesAndInterfaces
  fullName: WaveEngine.Common.Serialization.SerializationUtils.WaveEngineTypesAndInterfaces
- uid: WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache
  name: CleanWaveTypesCache
  nameWithType: SerializationUtils.CleanWaveTypesCache
  fullName: WaveEngine.Common.Serialization.SerializationUtils.CleanWaveTypesCache
- uid: WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType
  name: SearchWaveEngineType
  nameWithType: SerializationUtils.SearchWaveEngineType
  fullName: WaveEngine.Common.Serialization.SerializationUtils.SearchWaveEngineType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes
  name: GetFilteredTypes
  nameWithType: SerializationUtils.GetFilteredTypes
  fullName: WaveEngine.Common.Serialization.SerializationUtils.GetFilteredTypes
- uid: WaveEngine.Common.Attributes.WaveAssemblyUsage
  commentId: T:WaveEngine.Common.Attributes.WaveAssemblyUsage
  parent: WaveEngine.Common.Attributes
  name: WaveAssemblyUsage
  nameWithType: WaveAssemblyUsage
  fullName: WaveEngine.Common.Attributes.WaveAssemblyUsage
- uid: WaveEngine.Common.Attributes
  commentId: N:WaveEngine.Common.Attributes
  name: WaveEngine.Common.Attributes
  nameWithType: WaveEngine.Common.Attributes
  fullName: WaveEngine.Common.Attributes
- uid: WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType
  name: IsValidWaveType
  nameWithType: SerializationUtils.IsValidWaveType
  fullName: WaveEngine.Common.Serialization.SerializationUtils.IsValidWaveType
- uid: System.Reflection.TypeInfo
  commentId: T:System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly
  name: SetUserAssembly
  nameWithType: SerializationUtils.SetUserAssembly
  fullName: WaveEngine.Common.Serialization.SerializationUtils.SetUserAssembly
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly*
  commentId: Overload:WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly
  name: RegisterAditionalAssembly
  nameWithType: SerializationUtils.RegisterAditionalAssembly
  fullName: WaveEngine.Common.Serialization.SerializationUtils.RegisterAditionalAssembly
