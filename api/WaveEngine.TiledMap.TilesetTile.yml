### YamlMime:ManagedReference
items:
- uid: WaveEngine.TiledMap.TilesetTile
  commentId: T:WaveEngine.TiledMap.TilesetTile
  id: TilesetTile
  parent: WaveEngine.TiledMap
  children:
  - WaveEngine.TiledMap.TilesetTile.#ctor(TiledSharp.TmxTilesetTile,WaveEngine.TiledMap.Tileset)
  - WaveEngine.TiledMap.TilesetTile.BottomLeft
  - WaveEngine.TiledMap.TilesetTile.BottomRight
  - WaveEngine.TiledMap.TilesetTile.ID
  - WaveEngine.TiledMap.TilesetTile.Probability
  - WaveEngine.TiledMap.TilesetTile.Properties
  - WaveEngine.TiledMap.TilesetTile.TerrainEdges
  - WaveEngine.TiledMap.TilesetTile.Tileset
  - WaveEngine.TiledMap.TilesetTile.TopLeft
  - WaveEngine.TiledMap.TilesetTile.TopRight
  langs:
  - csharp
  - vb
  name: TilesetTile
  nameWithType: TilesetTile
  fullName: WaveEngine.TiledMap.TilesetTile
  type: Class
  source:
    id: TilesetTile
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 16
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nRepresent a single Tile in a Layer\n"
  example: []
  syntax:
    content: public class TilesetTile
    content.vb: Public Class TilesetTile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.TiledMap.TilesetTile.ID
  commentId: P:WaveEngine.TiledMap.TilesetTile.ID
  id: ID
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: TilesetTile.ID
  fullName: WaveEngine.TiledMap.TilesetTile.ID
  type: Property
  source:
    id: ID
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 23
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the tile ID\n"
  example: []
  syntax:
    content: public int ID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ID As Integer
  overload: WaveEngine.TiledMap.TilesetTile.ID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.Probability
  commentId: P:WaveEngine.TiledMap.TilesetTile.Probability
  id: Probability
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: TilesetTile.Probability
  fullName: WaveEngine.TiledMap.TilesetTile.Probability
  type: Property
  source:
    id: Probability
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 28
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the tile probability in a terrain\n"
  example: []
  syntax:
    content: public double Probability { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Probability As Double
  overload: WaveEngine.TiledMap.TilesetTile.Probability*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.Properties
  commentId: P:WaveEngine.TiledMap.TilesetTile.Properties
  id: Properties
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: TilesetTile.Properties
  fullName: WaveEngine.TiledMap.TilesetTile.Properties
  type: Property
  source:
    id: Properties
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 33
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the tileset tile properties\n"
  example: []
  syntax:
    content: public IReadOnlyDictionary<string, string> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Properties As IReadOnlyDictionary(Of String, String)
  overload: WaveEngine.TiledMap.TilesetTile.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.TerrainEdges
  commentId: P:WaveEngine.TiledMap.TilesetTile.TerrainEdges
  id: TerrainEdges
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: TerrainEdges
  nameWithType: TilesetTile.TerrainEdges
  fullName: WaveEngine.TiledMap.TilesetTile.TerrainEdges
  type: Property
  source:
    id: TerrainEdges
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 38
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the terrain associated edges\n"
  example: []
  syntax:
    content: public List<TilesetTerrain> TerrainEdges { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.TiledMap.TilesetTerrain}
    content.vb: Public ReadOnly Property TerrainEdges As List(Of TilesetTerrain)
  overload: WaveEngine.TiledMap.TilesetTile.TerrainEdges*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.BottomLeft
  commentId: P:WaveEngine.TiledMap.TilesetTile.BottomLeft
  id: BottomLeft
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: BottomLeft
  nameWithType: TilesetTile.BottomLeft
  fullName: WaveEngine.TiledMap.TilesetTile.BottomLeft
  type: Property
  source:
    id: BottomLeft
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 43
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the terrain at the bottom left edge\n"
  example: []
  syntax:
    content: public TilesetTerrain BottomLeft { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.TilesetTerrain
    content.vb: Public ReadOnly Property BottomLeft As TilesetTerrain
  overload: WaveEngine.TiledMap.TilesetTile.BottomLeft*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.BottomRight
  commentId: P:WaveEngine.TiledMap.TilesetTile.BottomRight
  id: BottomRight
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: BottomRight
  nameWithType: TilesetTile.BottomRight
  fullName: WaveEngine.TiledMap.TilesetTile.BottomRight
  type: Property
  source:
    id: BottomRight
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 48
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the terrain at the bottom right edge\n"
  example: []
  syntax:
    content: public TilesetTerrain BottomRight { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.TilesetTerrain
    content.vb: Public ReadOnly Property BottomRight As TilesetTerrain
  overload: WaveEngine.TiledMap.TilesetTile.BottomRight*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.TopLeft
  commentId: P:WaveEngine.TiledMap.TilesetTile.TopLeft
  id: TopLeft
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: TopLeft
  nameWithType: TilesetTile.TopLeft
  fullName: WaveEngine.TiledMap.TilesetTile.TopLeft
  type: Property
  source:
    id: TopLeft
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 53
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the terrain at the top left edge\n"
  example: []
  syntax:
    content: public TilesetTerrain TopLeft { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.TilesetTerrain
    content.vb: Public ReadOnly Property TopLeft As TilesetTerrain
  overload: WaveEngine.TiledMap.TilesetTile.TopLeft*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.TopRight
  commentId: P:WaveEngine.TiledMap.TilesetTile.TopRight
  id: TopRight
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: TopRight
  nameWithType: TilesetTile.TopRight
  fullName: WaveEngine.TiledMap.TilesetTile.TopRight
  type: Property
  source:
    id: TopRight
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 58
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the terrain at the top right edge\n"
  example: []
  syntax:
    content: public TilesetTerrain TopRight { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.TilesetTerrain
    content.vb: Public ReadOnly Property TopRight As TilesetTerrain
  overload: WaveEngine.TiledMap.TilesetTile.TopRight*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.Tileset
  commentId: P:WaveEngine.TiledMap.TilesetTile.Tileset
  id: Tileset
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: Tileset
  nameWithType: TilesetTile.Tileset
  fullName: WaveEngine.TiledMap.TilesetTile.Tileset
  type: Property
  source:
    id: Tileset
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 63
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the associated tileset\n"
  example: []
  syntax:
    content: public Tileset Tileset { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.Tileset
    content.vb: Public ReadOnly Property Tileset As Tileset
  overload: WaveEngine.TiledMap.TilesetTile.Tileset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TilesetTile.#ctor(TiledSharp.TmxTilesetTile,WaveEngine.TiledMap.Tileset)
  commentId: M:WaveEngine.TiledMap.TilesetTile.#ctor(TiledSharp.TmxTilesetTile,WaveEngine.TiledMap.Tileset)
  id: '#ctor(TiledSharp.TmxTilesetTile,WaveEngine.TiledMap.Tileset)'
  parent: WaveEngine.TiledMap.TilesetTile
  langs:
  - csharp
  - vb
  name: TilesetTile(TmxTilesetTile, Tileset)
  nameWithType: TilesetTile.TilesetTile(TmxTilesetTile, Tileset)
  fullName: WaveEngine.TiledMap.TilesetTile.TilesetTile(TiledSharp.TmxTilesetTile, WaveEngine.TiledMap.Tileset)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TilesetTile.cs
    startLine: 73
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.TiledMap.TilesetTile\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TilesetTile(TmxTilesetTile tmxTilesetTile, Tileset tileset)
    parameters:
    - id: tmxTilesetTile
      type: TiledSharp.TmxTilesetTile
      description: The TMX parsed tileset tile.
    - id: tileset
      type: WaveEngine.TiledMap.Tileset
      description: The associated tileset
    content.vb: Public Sub New(tmxTilesetTile As TmxTilesetTile, tileset As Tileset)
  overload: WaveEngine.TiledMap.TilesetTile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.TiledMap
  commentId: N:WaveEngine.TiledMap
  name: WaveEngine.TiledMap
  nameWithType: WaveEngine.TiledMap
  fullName: WaveEngine.TiledMap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.TiledMap.TilesetTile.ID*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.ID
  name: ID
  nameWithType: TilesetTile.ID
  fullName: WaveEngine.TiledMap.TilesetTile.ID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.TiledMap.TilesetTile.Probability*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.Probability
  name: Probability
  nameWithType: TilesetTile.Probability
  fullName: WaveEngine.TiledMap.TilesetTile.Probability
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: WaveEngine.TiledMap.TilesetTile.Properties*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.Properties
  name: Properties
  nameWithType: TilesetTile.Properties
  fullName: WaveEngine.TiledMap.TilesetTile.Properties
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.TiledMap.TilesetTile.TerrainEdges*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.TerrainEdges
  name: TerrainEdges
  nameWithType: TilesetTile.TerrainEdges
  fullName: WaveEngine.TiledMap.TilesetTile.TerrainEdges
- uid: System.Collections.Generic.List{WaveEngine.TiledMap.TilesetTerrain}
  commentId: T:System.Collections.Generic.List{WaveEngine.TiledMap.TilesetTerrain}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TilesetTerrain>
  nameWithType: List<TilesetTerrain>
  fullName: System.Collections.Generic.List<WaveEngine.TiledMap.TilesetTerrain>
  nameWithType.vb: List(Of TilesetTerrain)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.TiledMap.TilesetTerrain)
  name.vb: List(Of TilesetTerrain)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.TiledMap.TilesetTerrain
    name: TilesetTerrain
    nameWithType: TilesetTerrain
    fullName: WaveEngine.TiledMap.TilesetTerrain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.TiledMap.TilesetTerrain
    name: TilesetTerrain
    nameWithType: TilesetTerrain
    fullName: WaveEngine.TiledMap.TilesetTerrain
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.TiledMap.TilesetTile.BottomLeft*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.BottomLeft
  name: BottomLeft
  nameWithType: TilesetTile.BottomLeft
  fullName: WaveEngine.TiledMap.TilesetTile.BottomLeft
- uid: WaveEngine.TiledMap.TilesetTerrain
  commentId: T:WaveEngine.TiledMap.TilesetTerrain
  parent: WaveEngine.TiledMap
  name: TilesetTerrain
  nameWithType: TilesetTerrain
  fullName: WaveEngine.TiledMap.TilesetTerrain
- uid: WaveEngine.TiledMap.TilesetTile.BottomRight*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.BottomRight
  name: BottomRight
  nameWithType: TilesetTile.BottomRight
  fullName: WaveEngine.TiledMap.TilesetTile.BottomRight
- uid: WaveEngine.TiledMap.TilesetTile.TopLeft*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.TopLeft
  name: TopLeft
  nameWithType: TilesetTile.TopLeft
  fullName: WaveEngine.TiledMap.TilesetTile.TopLeft
- uid: WaveEngine.TiledMap.TilesetTile.TopRight*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.TopRight
  name: TopRight
  nameWithType: TilesetTile.TopRight
  fullName: WaveEngine.TiledMap.TilesetTile.TopRight
- uid: WaveEngine.TiledMap.TilesetTile.Tileset*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.Tileset
  name: Tileset
  nameWithType: TilesetTile.Tileset
  fullName: WaveEngine.TiledMap.TilesetTile.Tileset
- uid: WaveEngine.TiledMap.Tileset
  commentId: T:WaveEngine.TiledMap.Tileset
  parent: WaveEngine.TiledMap
  name: Tileset
  nameWithType: Tileset
  fullName: WaveEngine.TiledMap.Tileset
- uid: WaveEngine.TiledMap.TilesetTile
  commentId: T:WaveEngine.TiledMap.TilesetTile
  parent: WaveEngine.TiledMap
  name: TilesetTile
  nameWithType: TilesetTile
  fullName: WaveEngine.TiledMap.TilesetTile
- uid: WaveEngine.TiledMap.TilesetTile.#ctor*
  commentId: Overload:WaveEngine.TiledMap.TilesetTile.#ctor
  name: TilesetTile
  nameWithType: TilesetTile.TilesetTile
  fullName: WaveEngine.TiledMap.TilesetTile.TilesetTile
- uid: TiledSharp.TmxTilesetTile
  commentId: T:TiledSharp.TmxTilesetTile
  parent: TiledSharp
  isExternal: true
  name: TmxTilesetTile
  nameWithType: TmxTilesetTile
  fullName: TiledSharp.TmxTilesetTile
- uid: TiledSharp
  commentId: N:TiledSharp
  isExternal: true
  name: TiledSharp
  nameWithType: TiledSharp
  fullName: TiledSharp
