### YamlMime:ManagedReference
items:
- uid: WaveEngine.Components.GameActions.GameActionFactory
  commentId: T:WaveEngine.Components.GameActions.GameActionFactory
  id: GameActionFactory
  parent: WaveEngine.Components.GameActions
  children:
  - WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.MusicInfo)
  - WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  - WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.VideoInfo)
  - WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition(WaveEngine.Framework.Services.IGameAction,System.Func{System.Boolean},System.Int32)
  - WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap(WaveEngine.Framework.Services.IGameAction,WaveEngine.Components.Gestures.TouchGestures)
  - WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction(WaveEngine.Framework.Services.IGameAction)
  - WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  - WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction)
  - WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction[])
  - WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction(WaveEngine.Framework.Services.IGameAction,System.Action)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  - WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  - WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  - WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  - WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  - WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  - WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  - WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  - WaveEngine.Components.GameActions.GameActionFactory.Delay(WaveEngine.Framework.Services.IGameAction,System.TimeSpan)
  langs:
  - csharp
  - vb
  name: GameActionFactory
  nameWithType: GameActionFactory
  fullName: WaveEngine.Components.GameActions.GameActionFactory
  type: Class
  source:
    id: GameActionFactory
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 19
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nExtension methods for GameAction class\n"
  example: []
  syntax:
    content: public static class GameActionFactory
    content.vb: Public Module GameActionFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction)
  id: ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: ContinueWith(IGameAction, IGameAction)
  nameWithType: GameActionFactory.ContinueWith(IGameAction, IGameAction)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, WaveEngine.Framework.Services.IGameAction)
  type: Method
  source:
    id: ContinueWith
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 28
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another action.\n"
  example: []
  syntax:
    content: public static IGameAction ContinueWith(this IGameAction parent, IGameAction nextAction)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: nextAction
      type: WaveEngine.Framework.Services.IGameAction
      description: The next action.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContinueWith(parent As IGameAction, nextAction As IGameAction) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction})
  id: ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: ContinueWith(IGameAction, Func<IGameAction>)
  nameWithType: GameActionFactory.ContinueWith(IGameAction, Func<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, System.Func<WaveEngine.Framework.Services.IGameAction>)
  type: Method
  source:
    id: ContinueWith
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 46
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another action.\n"
  example: []
  syntax:
    content: public static IGameAction ContinueWith(this IGameAction parent, Func<IGameAction> nextActionGenerator)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: nextActionGenerator
      type: System.Func{WaveEngine.Framework.Services.IGameAction}
      description: The next action generator.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContinueWith(parent As IGameAction, nextActionGenerator As Func(Of IGameAction)) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  nameWithType.vb: GameActionFactory.ContinueWith(IGameAction, Func(Of IGameAction))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, System.Func(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: ContinueWith(IGameAction, Func(Of IGameAction))
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction(WaveEngine.Framework.Services.IGameAction,System.Action)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction(WaveEngine.Framework.Services.IGameAction,System.Action)
  id: ContinueWithAction(WaveEngine.Framework.Services.IGameAction,System.Action)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: ContinueWithAction(IGameAction, Action)
  nameWithType: GameActionFactory.ContinueWithAction(IGameAction, Action)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction(WaveEngine.Framework.Services.IGameAction, System.Action)
  type: Method
  source:
    id: ContinueWithAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 58
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another an action function\n"
  example: []
  syntax:
    content: public static IGameAction ContinueWithAction(this IGameAction parent, Action action)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: action
      type: System.Action
      description: The next action.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContinueWithAction(parent As IGameAction, action As Action) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction[])
  id: ContinueWith(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Services.IGameAction[])
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: ContinueWith(IGameAction, IGameAction[])
  nameWithType: GameActionFactory.ContinueWith(IGameAction, IGameAction[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, WaveEngine.Framework.Services.IGameAction[])
  type: Method
  source:
    id: ContinueWith
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 70
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another action.\n"
  example: []
  syntax:
    content: public static IGameActionSet ContinueWith(this IGameAction parent, params IGameAction[] childTasks)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: childTasks
      type: WaveEngine.Framework.Services.IGameAction[]
      description: The chhild tasks.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContinueWith(parent As IGameAction, ParamArray childTasks As IGameAction()) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  nameWithType.vb: GameActionFactory.ContinueWith(IGameAction, IGameAction())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, WaveEngine.Framework.Services.IGameAction())
  name.vb: ContinueWith(IGameAction, IGameAction())
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  id: ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: ContinueWith(IGameAction, IEnumerable<IGameAction>)
  nameWithType: GameActionFactory.ContinueWith(IGameAction, IEnumerable<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>)
  type: Method
  source:
    id: ContinueWith
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 82
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another action.\n"
  example: []
  syntax:
    content: public static IGameActionSet ContinueWith(this IGameAction parent, IEnumerable<IGameAction> childTasks)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: childTasks
      type: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
      description: The chhild tasks.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContinueWith(parent As IGameAction, childTasks As IEnumerable(Of IGameAction)) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  nameWithType.vb: GameActionFactory.ContinueWith(IGameAction, IEnumerable(Of IGameAction))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: ContinueWith(IGameAction, IEnumerable(Of IGameAction))
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  id: ContinueWith(WaveEngine.Framework.Services.IGameAction,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: ContinueWith(IGameAction, Func<IGameAction>[])
  nameWithType: GameActionFactory.ContinueWith(IGameAction, Func<IGameAction>[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, System.Func<WaveEngine.Framework.Services.IGameAction>[])
  type: Method
  source:
    id: ContinueWith
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 94
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another action.\n"
  example: []
  syntax:
    content: public static IGameActionSet ContinueWith(this IGameAction parent, params Func<IGameAction>[] childTaskGenerators)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: childTaskGenerators
      type: System.Func{WaveEngine.Framework.Services.IGameAction}[]
      description: The chhild task generators.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContinueWith(parent As IGameAction, ParamArray childTaskGenerators As Func(Of IGameAction)()) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  nameWithType.vb: GameActionFactory.ContinueWith(IGameAction, Func(Of IGameAction)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith(WaveEngine.Framework.Services.IGameAction, System.Func(Of WaveEngine.Framework.Services.IGameAction)())
  name.vb: ContinueWith(IGameAction, Func(Of IGameAction)())
- uid: WaveEngine.Components.GameActions.GameActionFactory.Delay(WaveEngine.Framework.Services.IGameAction,System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.Delay(WaveEngine.Framework.Services.IGameAction,System.TimeSpan)
  id: Delay(WaveEngine.Framework.Services.IGameAction,System.TimeSpan)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: Delay(IGameAction, TimeSpan)
  nameWithType: GameActionFactory.Delay(IGameAction, TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.Delay(WaveEngine.Framework.Services.IGameAction, System.TimeSpan)
  type: Method
  source:
    id: Delay
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 105
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAdd a delay action.\n"
  example: []
  syntax:
    content: public static IGameAction Delay(this IGameAction parent, TimeSpan time)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: time
      type: System.TimeSpan
      description: The time.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delay(parent As IGameAction, time As TimeSpan) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.Delay*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap(WaveEngine.Framework.Services.IGameAction,WaveEngine.Components.Gestures.TouchGestures)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap(WaveEngine.Framework.Services.IGameAction,WaveEngine.Components.Gestures.TouchGestures)
  id: AndWaitTap(WaveEngine.Framework.Services.IGameAction,WaveEngine.Components.Gestures.TouchGestures)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AndWaitTap(IGameAction, TouchGestures)
  nameWithType: GameActionFactory.AndWaitTap(IGameAction, TouchGestures)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap(WaveEngine.Framework.Services.IGameAction, WaveEngine.Components.Gestures.TouchGestures)
  type: Method
  source:
    id: AndWaitTap
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 116
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAnd wait a tap to the touch gesture.\n"
  example: []
  syntax:
    content: public static IGameAction AndWaitTap(this IGameAction parent, TouchGestures touchGestures)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: touchGestures
      type: WaveEngine.Components.Gestures.TouchGestures
      description: The touch gestures.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AndWaitTap(parent As IGameAction, touchGestures As TouchGestures) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition(WaveEngine.Framework.Services.IGameAction,System.Func{System.Boolean},System.Int32)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition(WaveEngine.Framework.Services.IGameAction,System.Func{System.Boolean},System.Int32)
  id: AndWaitCondition(WaveEngine.Framework.Services.IGameAction,System.Func{System.Boolean},System.Int32)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AndWaitCondition(IGameAction, Func<Boolean>, Int32)
  nameWithType: GameActionFactory.AndWaitCondition(IGameAction, Func<Boolean>, Int32)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition(WaveEngine.Framework.Services.IGameAction, System.Func<System.Boolean>, System.Int32)
  type: Method
  source:
    id: AndWaitCondition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 128
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAnds the wait condition.\n"
  example: []
  syntax:
    content: public static IGameAction AndWaitCondition(this IGameAction parent, Func<bool> breakPredicate, int eventCount = 1)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: breakPredicate
      type: System.Func{System.Boolean}
      description: The predicate.
    - id: eventCount
      type: System.Int32
      description: The event count.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AndWaitCondition(parent As IGameAction, breakPredicate As Func(Of Boolean), eventCount As Integer = 1) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition*
  nameWithType.vb: GameActionFactory.AndWaitCondition(IGameAction, Func(Of Boolean), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition(WaveEngine.Framework.Services.IGameAction, System.Func(Of System.Boolean), System.Int32)
  name.vb: AndWaitCondition(IGameAction, Func(Of Boolean), Int32)
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  id: AndPlaySingleAnimation(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AndPlaySingleAnimation(IGameAction, SingleAnimation, AnimationUI, DependencyProperty)
  nameWithType: GameActionFactory.AndPlaySingleAnimation(IGameAction, SingleAnimation, AnimationUI, DependencyProperty)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation(WaveEngine.Framework.Services.IGameAction, WaveEngine.Framework.Animation.SingleAnimation, WaveEngine.Framework.Animation.AnimationUI, WaveEngine.Framework.DependencyProperty)
  type: Method
  source:
    id: AndPlaySingleAnimation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 141
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAnd play a single animation action.\n"
  example: []
  syntax:
    content: public static IGameAction AndPlaySingleAnimation(this IGameAction parent, SingleAnimation singleAnimation, AnimationUI animationUI, DependencyProperty dependencyProperty)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: singleAnimation
      type: WaveEngine.Framework.Animation.SingleAnimation
      description: The single animation.
    - id: animationUI
      type: WaveEngine.Framework.Animation.AnimationUI
      description: The animation UI.
    - id: dependencyProperty
      type: WaveEngine.Framework.DependencyProperty
      description: The dependency property.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AndPlaySingleAnimation(parent As IGameAction, singleAnimation As SingleAnimation, animationUI As AnimationUI, dependencyProperty As DependencyProperty) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.MusicInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.MusicInfo)
  id: AndPlayMusic(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.MusicInfo)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AndPlayMusic(IGameAction, MusicInfo)
  nameWithType: GameActionFactory.AndPlayMusic(IGameAction, MusicInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic(WaveEngine.Framework.Services.IGameAction, WaveEngine.Common.Media.MusicInfo)
  type: Method
  source:
    id: AndPlayMusic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 152
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAnd play a music action.\n"
  example: []
  syntax:
    content: public static IGameAction AndPlayMusic(this IGameAction parent, MusicInfo musicInfo)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: musicInfo
      type: WaveEngine.Common.Media.MusicInfo
      description: The music info to play
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AndPlayMusic(parent As IGameAction, musicInfo As MusicInfo) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  id: AndPlaySound(WaveEngine.Framework.Services.IGameAction,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AndPlaySound(IGameAction, SoundInfo, Single, Boolean)
  nameWithType: GameActionFactory.AndPlaySound(IGameAction, SoundInfo, Single, Boolean)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound(WaveEngine.Framework.Services.IGameAction, WaveEngine.Framework.Sound.SoundInfo, System.Single, System.Boolean)
  type: Method
  source:
    id: AndPlaySound
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 165
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAnd play a sound action.\n"
  example: []
  syntax:
    content: public static IGameAction AndPlaySound(this IGameAction parent, SoundInfo soundInfo, float volume = 1F, bool loop = false)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: soundInfo
      type: WaveEngine.Framework.Sound.SoundInfo
      description: The sound info to play
    - id: volume
      type: System.Single
      description: The sound volume
    - id: loop
      type: System.Boolean
      description: The sound loop is enabled
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AndPlaySound(parent As IGameAction, soundInfo As SoundInfo, volume As Single = 1F, loop As Boolean = False) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.VideoInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.VideoInfo)
  id: AndPlayVideo(WaveEngine.Framework.Services.IGameAction,WaveEngine.Common.Media.VideoInfo)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AndPlayVideo(IGameAction, VideoInfo)
  nameWithType: GameActionFactory.AndPlayVideo(IGameAction, VideoInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo(WaveEngine.Framework.Services.IGameAction, WaveEngine.Common.Media.VideoInfo)
  type: Method
  source:
    id: AndPlayVideo
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 176
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAnd play a video action.\n"
  example: []
  syntax:
    content: public static IGameAction AndPlayVideo(this IGameAction parent, VideoInfo videoInfo)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent.
    - id: videoInfo
      type: WaveEngine.Common.Media.VideoInfo
      description: The video info to play
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AndPlayVideo(parent As IGameAction, videoInfo As VideoInfo) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  id: CreateEmptyGameAction(WaveEngine.Framework.Scene)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateEmptyGameAction(Scene)
  nameWithType: GameActionFactory.CreateEmptyGameAction(Scene)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  type: Method
  source:
    id: CreateEmptyGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 186
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates an empty game action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateEmptyGameAction(this Scene scene)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateEmptyGameAction(scene As Scene) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  id: CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateDelayGameAction(Scene, TimeSpan)
  nameWithType: GameActionFactory.CreateDelayGameAction(Scene, TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene, System.TimeSpan)
  type: Method
  source:
    id: CreateDelayGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 197
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates a delay action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateDelayGameAction(this Scene scene, TimeSpan time)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: time
      type: System.TimeSpan
      description: The time.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDelayGameAction(scene As Scene, time As TimeSpan) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  id: CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateGameActionFromAction(Scene, Action)
  nameWithType: GameActionFactory.CreateGameActionFromAction(Scene, Action)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene, System.Action)
  type: Method
  source:
    id: CreateGameActionFromAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 208
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates an empty game action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateGameActionFromAction(this Scene scene, Action action)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: action
      type: System.Action
      description: simple code to be executed
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateGameActionFromAction(scene As Scene, action As Action) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  id: CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateWaitGameAction(Scene, TimeSpan)
  nameWithType: GameActionFactory.CreateWaitGameAction(Scene, TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene, System.TimeSpan)
  type: Method
  source:
    id: CreateWaitGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 219
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates the wait action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateWaitGameAction(this Scene scene, TimeSpan timeSpan)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: timeSpan
      type: System.TimeSpan
      description: The time span.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateWaitGameAction(scene As Scene, timeSpan As TimeSpan) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  id: CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateGameAction(Scene, Func<IGameAction>)
  nameWithType: GameActionFactory.CreateGameAction(Scene, Func<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene, System.Func<WaveEngine.Framework.Services.IGameAction>)
  type: Method
  source:
    id: CreateGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 230
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates a game action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateGameAction(this Scene scene, Func<IGameAction> actionGenerator)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: actionGenerator
      type: System.Func{WaveEngine.Framework.Services.IGameAction}
      description: The action generator method.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateGameAction(scene As Scene, actionGenerator As Func(Of IGameAction)) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction*
  nameWithType.vb: GameActionFactory.CreateGameAction(Scene, Func(Of IGameAction))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene, System.Func(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateGameAction(Scene, Func(Of IGameAction))
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  id: CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateGameAction(Scene, IGameAction)
  nameWithType: GameActionFactory.CreateGameAction(Scene, IGameAction)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene, WaveEngine.Framework.Services.IGameAction)
  type: Method
  source:
    id: CreateGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 241
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates a game action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateGameAction(this Scene scene, IGameAction action)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: action
      type: WaveEngine.Framework.Services.IGameAction
      description: The action.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateGameAction(scene As Scene, action As IGameAction) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  id: CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateWaitConditionGameAction(Scene, Func<Boolean>, Int32)
  nameWithType: GameActionFactory.CreateWaitConditionGameAction(Scene, Func<Boolean>, Int32)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene, System.Func<System.Boolean>, System.Int32)
  type: Method
  source:
    id: CreateWaitConditionGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 253
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreate a wait condition action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateWaitConditionGameAction(this Scene scene, Func<bool> breakPredicate, int eventCount = 1)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: breakPredicate
      type: System.Func{System.Boolean}
      description: The predicate.
    - id: eventCount
      type: System.Int32
      description: The event count.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateWaitConditionGameAction(scene As Scene, breakPredicate As Func(Of Boolean), eventCount As Integer = 1) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction*
  nameWithType.vb: GameActionFactory.CreateWaitConditionGameAction(Scene, Func(Of Boolean), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene, System.Func(Of System.Boolean), System.Int32)
  name.vb: CreateWaitConditionGameAction(Scene, Func(Of Boolean), Int32)
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  id: CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateSingleAnimationGameAction(Scene, SingleAnimation, AnimationUI, DependencyProperty)
  nameWithType: GameActionFactory.CreateSingleAnimationGameAction(Scene, SingleAnimation, AnimationUI, DependencyProperty)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene, WaveEngine.Framework.Animation.SingleAnimation, WaveEngine.Framework.Animation.AnimationUI, WaveEngine.Framework.DependencyProperty)
  type: Method
  source:
    id: CreateSingleAnimationGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 266
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates the single animation action.\n"
  example: []
  syntax:
    content: public static IGameAction CreateSingleAnimationGameAction(this Scene scene, SingleAnimation singleAnimation, AnimationUI animationUI, DependencyProperty dependencyProperty)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: singleAnimation
      type: WaveEngine.Framework.Animation.SingleAnimation
      description: The single animation.
    - id: animationUI
      type: WaveEngine.Framework.Animation.AnimationUI
      description: The animation UI.
    - id: dependencyProperty
      type: WaveEngine.Framework.DependencyProperty
      description: The dependency property.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateSingleAnimationGameAction(scene As Scene, singleAnimation As SingleAnimation, animationUI As AnimationUI, dependencyProperty As DependencyProperty) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  id: CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreatePlayMusicGameAction(Scene, MusicInfo)
  nameWithType: GameActionFactory.CreatePlayMusicGameAction(Scene, MusicInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene, WaveEngine.Common.Media.MusicInfo)
  type: Method
  source:
    id: CreatePlayMusicGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 277
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates a play music action.\n"
  example: []
  syntax:
    content: public static IGameAction CreatePlayMusicGameAction(this Scene scene, MusicInfo musicInfo)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: musicInfo
      type: WaveEngine.Common.Media.MusicInfo
      description: The music info to play
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreatePlayMusicGameAction(scene As Scene, musicInfo As MusicInfo) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  id: CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreatePlaySoundGameAction(Scene, SoundInfo, Single, Boolean)
  nameWithType: GameActionFactory.CreatePlaySoundGameAction(Scene, SoundInfo, Single, Boolean)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene, WaveEngine.Framework.Sound.SoundInfo, System.Single, System.Boolean)
  type: Method
  source:
    id: CreatePlaySoundGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 290
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates a play sound action.\n"
  example: []
  syntax:
    content: public static IGameAction CreatePlaySoundGameAction(this Scene scene, SoundInfo soundInfo, float volume = 1F, bool loop = false)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: soundInfo
      type: WaveEngine.Framework.Sound.SoundInfo
      description: The sound info to play
    - id: volume
      type: System.Single
      description: The sound volume
    - id: loop
      type: System.Boolean
      description: The sound loop is enabled
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreatePlaySoundGameAction(scene As Scene, soundInfo As SoundInfo, volume As Single = 1F, loop As Boolean = False) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  id: CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreatePlayVideoGameAction(Scene, VideoInfo)
  nameWithType: GameActionFactory.CreatePlayVideoGameAction(Scene, VideoInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene, WaveEngine.Common.Media.VideoInfo)
  type: Method
  source:
    id: CreatePlayVideoGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 301
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates a play video action.\n"
  example: []
  syntax:
    content: public static IGameAction CreatePlayVideoGameAction(this Scene scene, VideoInfo videoInfo)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: videoInfo
      type: WaveEngine.Common.Media.VideoInfo
      description: The video info to play
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreatePlayVideoGameAction(scene As Scene, videoInfo As VideoInfo) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  id: CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateWaitTapGameAction(Scene, TouchGestures)
  nameWithType: GameActionFactory.CreateWaitTapGameAction(Scene, TouchGestures)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene, WaveEngine.Components.Gestures.TouchGestures)
  type: Method
  source:
    id: CreateWaitTapGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 312
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates the wait tap task.\n"
  example: []
  syntax:
    content: public static IGameAction CreateWaitTapGameAction(this Scene scene, TouchGestures touchGestures)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: touchGestures
      type: WaveEngine.Components.Gestures.TouchGestures
      description: The touch gestures.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateWaitTapGameAction(scene As Scene, touchGestures As TouchGestures) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  id: CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateParallelGameActions(Scene, IEnumerable<Func<IGameAction>>)
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable<Func<IGameAction>>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>)
  type: Method
  source:
    id: CreateParallelGameActions
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 323
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreate parallel actions.\n"
  example: []
  syntax:
    content: public static IGameActionSet CreateParallelGameActions(this Scene scene, IEnumerable<Func<IGameAction>> actionGenerators)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: actionGenerators
      type: System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
      description: The action generators.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateParallelGameActions(scene As Scene, actionGenerators As IEnumerable(Of Func(Of IGameAction))) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions*
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable(Of Func(Of IGameAction)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction)))
  name.vb: CreateParallelGameActions(Scene, IEnumerable(Of Func(Of IGameAction)))
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  id: CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateParallelGameActions(Scene, IEnumerable<IGameAction>)
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>)
  type: Method
  source:
    id: CreateParallelGameActions
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 334
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreate parallel actions.\n"
  example: []
  syntax:
    content: public static IGameActionSet CreateParallelGameActions(this Scene scene, IEnumerable<IGameAction> actions)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: actions
      type: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
      description: The actions.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateParallelGameActions(scene As Scene, actions As IEnumerable(Of IGameAction)) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions*
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable(Of IGameAction))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateParallelGameActions(Scene, IEnumerable(Of IGameAction))
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  id: CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateParallelGameActions(Scene, Func<IGameAction>[])
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, Func<IGameAction>[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Func<WaveEngine.Framework.Services.IGameAction>[])
  type: Method
  source:
    id: CreateParallelGameActions
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 345
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreate parallel actions.\n"
  example: []
  syntax:
    content: public static IGameActionSet CreateParallelGameActions(this Scene scene, params Func<IGameAction>[] actionGenerators)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: actionGenerators
      type: System.Func{WaveEngine.Framework.Services.IGameAction}[]
      description: The action generators.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateParallelGameActions(scene As Scene, ParamArray actionGenerators As Func(Of IGameAction)()) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions*
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, Func(Of IGameAction)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Func(Of WaveEngine.Framework.Services.IGameAction)())
  name.vb: CreateParallelGameActions(Scene, Func(Of IGameAction)())
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  id: CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateParallelGameActions(Scene, IGameAction[])
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, IGameAction[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, WaveEngine.Framework.Services.IGameAction[])
  type: Method
  source:
    id: CreateParallelGameActions
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 356
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreate parallel actions.\n"
  example: []
  syntax:
    content: public static IGameActionSet CreateParallelGameActions(this Scene scene, params IGameAction[] actions)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: actions
      type: WaveEngine.Framework.Services.IGameAction[]
      description: The actions.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateParallelGameActions(scene As Scene, ParamArray actions As IGameAction()) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions*
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, IGameAction())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, WaveEngine.Framework.Services.IGameAction())
  name.vb: CreateParallelGameActions(Scene, IGameAction())
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  id: CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateParallelGameActions(IGameAction, IEnumerable<IGameAction>)
  nameWithType: GameActionFactory.CreateParallelGameActions(IGameAction, IEnumerable<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>)
  type: Method
  source:
    id: CreateParallelGameActions
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 368
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nContinue with another action.\n"
  example: []
  syntax:
    content: public static IGameActionSet CreateParallelGameActions(this IGameAction parent, IEnumerable<IGameAction> childTasks)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: childTasks
      type: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
      description: The chhild tasks.
    return:
      type: WaveEngine.Components.GameActions.IGameActionSet
      description: An action that continue with the next action when the parent is completed
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateParallelGameActions(parent As IGameAction, childTasks As IEnumerable(Of IGameAction)) As IGameActionSet
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: It is not possible to continue with, aborted or finised task. Defer the run command to a posterior stage.
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(IGameAction, IEnumerable(Of IGameAction))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateParallelGameActions(IGameAction, IEnumerable(Of IGameAction))
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  id: CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: CreateLoopGameActionUntil(Scene, Func<IGameAction>, Func<Boolean>)
  nameWithType: GameActionFactory.CreateLoopGameActionUntil(Scene, Func<IGameAction>, Func<Boolean>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene, System.Func<WaveEngine.Framework.Services.IGameAction>, System.Func<System.Boolean>)
  type: Method
  source:
    id: CreateLoopGameActionUntil
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 380
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nCreates the repeat task until.\n"
  example: []
  syntax:
    content: public static IGameAction CreateLoopGameActionUntil(this Scene scene, Func<IGameAction> actionGenerator, Func<bool> stopCondition)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    - id: actionGenerator
      type: System.Func{WaveEngine.Framework.Services.IGameAction}
      description: The action generator.
    - id: stopCondition
      type: System.Func{System.Boolean}
      description: The until predicate.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateLoopGameActionUntil(scene As Scene, actionGenerator As Func(Of IGameAction), stopCondition As Func(Of Boolean)) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil*
  nameWithType.vb: GameActionFactory.CreateLoopGameActionUntil(Scene, Func(Of IGameAction), Func(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene, System.Func(Of WaveEngine.Framework.Services.IGameAction), System.Func(Of System.Boolean))
  name.vb: CreateLoopGameActionUntil(Scene, Func(Of IGameAction), Func(Of Boolean))
- uid: WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction(WaveEngine.Framework.Services.IGameAction)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction(WaveEngine.Framework.Services.IGameAction)
  id: AsSkippableGameAction(WaveEngine.Framework.Services.IGameAction)
  isExtensionMethod: true
  parent: WaveEngine.Components.GameActions.GameActionFactory
  langs:
  - csharp
  - vb
  name: AsSkippableGameAction(IGameAction)
  nameWithType: GameActionFactory.AsSkippableGameAction(IGameAction)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction(WaveEngine.Framework.Services.IGameAction)
  type: Method
  source:
    id: AsSkippableGameAction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionFactory.cs
    startLine: 400
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nAses the skipable task.\n"
  example: []
  syntax:
    content: public static IGameAction AsSkippableGameAction(this IGameAction actionToSkip)
    parameters:
    - id: actionToSkip
      type: WaveEngine.Framework.Services.IGameAction
      description: The action to skip.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsSkippableGameAction(actionToSkip As IGameAction) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Components.GameActions
  commentId: N:WaveEngine.Components.GameActions
  name: WaveEngine.Components.GameActions
  nameWithType: WaveEngine.Components.GameActions
  fullName: WaveEngine.Components.GameActions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.ContinueWith
  name: ContinueWith
  nameWithType: GameActionFactory.ContinueWith
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWith
- uid: WaveEngine.Framework.Services.IGameAction
  commentId: T:WaveEngine.Framework.Services.IGameAction
  parent: WaveEngine.Framework.Services
  name: IGameAction
  nameWithType: IGameAction
  fullName: WaveEngine.Framework.Services.IGameAction
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Func{WaveEngine.Framework.Services.IGameAction}
  commentId: T:System.Func{WaveEngine.Framework.Services.IGameAction}
  parent: System
  definition: System.Func`1
  name: Func<IGameAction>
  nameWithType: Func<IGameAction>
  fullName: System.Func<WaveEngine.Framework.Services.IGameAction>
  nameWithType.vb: Func(Of IGameAction)
  fullName.vb: System.Func(Of WaveEngine.Framework.Services.IGameAction)
  name.vb: Func(Of IGameAction)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction
  name: ContinueWithAction
  nameWithType: GameActionFactory.ContinueWithAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.ContinueWithAction
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: WaveEngine.Framework.Services.IGameAction[]
  isExternal: true
  name: IGameAction[]
  nameWithType: IGameAction[]
  fullName: WaveEngine.Framework.Services.IGameAction[]
  nameWithType.vb: IGameAction()
  fullName.vb: WaveEngine.Framework.Services.IGameAction()
  name.vb: IGameAction()
  spec.csharp:
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Components.GameActions.IGameActionSet
  commentId: T:WaveEngine.Components.GameActions.IGameActionSet
  parent: WaveEngine.Components.GameActions
  name: IGameActionSet
  nameWithType: IGameActionSet
  fullName: WaveEngine.Components.GameActions.IGameActionSet
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGameAction>
  nameWithType: IEnumerable<IGameAction>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>
  nameWithType.vb: IEnumerable(Of IGameAction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction)
  name.vb: IEnumerable(Of IGameAction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func{WaveEngine.Framework.Services.IGameAction}[]
  isExternal: true
  name: Func<IGameAction>[]
  nameWithType: Func<IGameAction>[]
  fullName: System.Func<WaveEngine.Framework.Services.IGameAction>[]
  nameWithType.vb: Func(Of IGameAction)()
  fullName.vb: System.Func(Of WaveEngine.Framework.Services.IGameAction)()
  name.vb: Func(Of IGameAction)()
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Components.GameActions.GameActionFactory.Delay*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.Delay
  name: Delay
  nameWithType: GameActionFactory.Delay
  fullName: WaveEngine.Components.GameActions.GameActionFactory.Delay
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap
  name: AndWaitTap
  nameWithType: GameActionFactory.AndWaitTap
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndWaitTap
- uid: WaveEngine.Components.Gestures.TouchGestures
  commentId: T:WaveEngine.Components.Gestures.TouchGestures
  parent: WaveEngine.Components.Gestures
  name: TouchGestures
  nameWithType: TouchGestures
  fullName: WaveEngine.Components.Gestures.TouchGestures
- uid: WaveEngine.Components.Gestures
  commentId: N:WaveEngine.Components.Gestures
  name: WaveEngine.Components.Gestures
  nameWithType: WaveEngine.Components.Gestures
  fullName: WaveEngine.Components.Gestures
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition
  name: AndWaitCondition
  nameWithType: GameActionFactory.AndWaitCondition
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndWaitCondition
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation
  name: AndPlaySingleAnimation
  nameWithType: GameActionFactory.AndPlaySingleAnimation
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySingleAnimation
- uid: WaveEngine.Framework.Animation.SingleAnimation
  commentId: T:WaveEngine.Framework.Animation.SingleAnimation
  parent: WaveEngine.Framework.Animation
  name: SingleAnimation
  nameWithType: SingleAnimation
  fullName: WaveEngine.Framework.Animation.SingleAnimation
- uid: WaveEngine.Framework.Animation.AnimationUI
  commentId: T:WaveEngine.Framework.Animation.AnimationUI
  parent: WaveEngine.Framework.Animation
  name: AnimationUI
  nameWithType: AnimationUI
  fullName: WaveEngine.Framework.Animation.AnimationUI
- uid: WaveEngine.Framework.DependencyProperty
  commentId: T:WaveEngine.Framework.DependencyProperty
  parent: WaveEngine.Framework
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: WaveEngine.Framework.DependencyProperty
- uid: WaveEngine.Framework.Animation
  commentId: N:WaveEngine.Framework.Animation
  name: WaveEngine.Framework.Animation
  nameWithType: WaveEngine.Framework.Animation
  fullName: WaveEngine.Framework.Animation
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic
  name: AndPlayMusic
  nameWithType: GameActionFactory.AndPlayMusic
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlayMusic
- uid: WaveEngine.Common.Media.MusicInfo
  commentId: T:WaveEngine.Common.Media.MusicInfo
  parent: WaveEngine.Common.Media
  name: MusicInfo
  nameWithType: MusicInfo
  fullName: WaveEngine.Common.Media.MusicInfo
- uid: WaveEngine.Common.Media
  commentId: N:WaveEngine.Common.Media
  name: WaveEngine.Common.Media
  nameWithType: WaveEngine.Common.Media
  fullName: WaveEngine.Common.Media
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound
  name: AndPlaySound
  nameWithType: GameActionFactory.AndPlaySound
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlaySound
- uid: WaveEngine.Framework.Sound.SoundInfo
  commentId: T:WaveEngine.Framework.Sound.SoundInfo
  parent: WaveEngine.Framework.Sound
  name: SoundInfo
  nameWithType: SoundInfo
  fullName: WaveEngine.Framework.Sound.SoundInfo
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Sound
  commentId: N:WaveEngine.Framework.Sound
  name: WaveEngine.Framework.Sound
  nameWithType: WaveEngine.Framework.Sound
  fullName: WaveEngine.Framework.Sound
- uid: WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo
  name: AndPlayVideo
  nameWithType: GameActionFactory.AndPlayVideo
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AndPlayVideo
- uid: WaveEngine.Common.Media.VideoInfo
  commentId: T:WaveEngine.Common.Media.VideoInfo
  parent: WaveEngine.Common.Media
  name: VideoInfo
  nameWithType: VideoInfo
  fullName: WaveEngine.Common.Media.VideoInfo
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  name: CreateEmptyGameAction
  nameWithType: GameActionFactory.CreateEmptyGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
- uid: WaveEngine.Framework.Scene
  commentId: T:WaveEngine.Framework.Scene
  parent: WaveEngine.Framework
  name: Scene
  nameWithType: Scene
  fullName: WaveEngine.Framework.Scene
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction
  name: CreateDelayGameAction
  nameWithType: GameActionFactory.CreateDelayGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction
  name: CreateGameActionFromAction
  nameWithType: GameActionFactory.CreateGameActionFromAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction
  name: CreateWaitGameAction
  nameWithType: GameActionFactory.CreateWaitGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  name: CreateGameAction
  nameWithType: GameActionFactory.CreateGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction
  name: CreateWaitConditionGameAction
  nameWithType: GameActionFactory.CreateWaitConditionGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction
  name: CreateSingleAnimationGameAction
  nameWithType: GameActionFactory.CreateSingleAnimationGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction
  name: CreatePlayMusicGameAction
  nameWithType: GameActionFactory.CreatePlayMusicGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction
  name: CreatePlaySoundGameAction
  nameWithType: GameActionFactory.CreatePlaySoundGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction
  name: CreatePlayVideoGameAction
  nameWithType: GameActionFactory.CreatePlayVideoGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction
  name: CreateWaitTapGameAction
  nameWithType: GameActionFactory.CreateWaitTapGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  name: CreateParallelGameActions
  nameWithType: GameActionFactory.CreateParallelGameActions
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
- uid: System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Func<IGameAction>>
  nameWithType: IEnumerable<Func<IGameAction>>
  fullName: System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>
  nameWithType.vb: IEnumerable(Of Func(Of IGameAction))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: IEnumerable(Of Func(Of IGameAction))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil
  name: CreateLoopGameActionUntil
  nameWithType: GameActionFactory.CreateLoopGameActionUntil
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil
- uid: WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction
  name: AsSkippableGameAction
  nameWithType: GameActionFactory.AsSkippableGameAction
  fullName: WaveEngine.Components.GameActions.GameActionFactory.AsSkippableGameAction
