### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.SceneBehavior
  commentId: T:WaveEngine.Framework.SceneBehavior
  id: SceneBehavior
  parent: WaveEngine.Framework
  children:
  - WaveEngine.Framework.SceneBehavior.#ctor
  - WaveEngine.Framework.SceneBehavior.#ctor(System.String)
  - WaveEngine.Framework.SceneBehavior.IsActive
  - WaveEngine.Framework.SceneBehavior.Name
  - WaveEngine.Framework.SceneBehavior.ResolveDependencies
  - WaveEngine.Framework.SceneBehavior.Scene
  - WaveEngine.Framework.SceneBehavior.ToString
  - WaveEngine.Framework.SceneBehavior.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: SceneBehavior
  nameWithType: SceneBehavior
  fullName: WaveEngine.Framework.SceneBehavior
  type: Class
  source:
    id: SceneBehavior
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 13
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nThis abstract class represent a scene behavior.\n"
  example: []
  syntax:
    content: public abstract class SceneBehavior
    content.vb: Public MustInherit Class SceneBehavior
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Framework.SceneBehavior.Name
  commentId: P:WaveEngine.Framework.SceneBehavior.Name
  id: Name
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SceneBehavior.Name
  fullName: WaveEngine.Framework.SceneBehavior.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 46
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets the name.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: WaveEngine.Framework.SceneBehavior.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.SceneBehavior.IsActive
  commentId: P:WaveEngine.Framework.SceneBehavior.IsActive
  id: IsActive
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: SceneBehavior.IsActive
  fullName: WaveEngine.Framework.SceneBehavior.IsActive
  type: Property
  source:
    id: IsActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 57
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets a value indicating whether this instance is active.\n"
  remarks: "\nA <xref href=\"WaveEngine.Framework.Behavior\" data-throw-if-not-resolved=\"false\"></xref> will be inactive if its owner <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> is inactive.\n"
  example: []
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is active; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsActive As Boolean
  overload: WaveEngine.Framework.SceneBehavior.IsActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.SceneBehavior.Scene
  commentId: P:WaveEngine.Framework.SceneBehavior.Scene
  id: Scene
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: SceneBehavior.Scene
  fullName: WaveEngine.Framework.SceneBehavior.Scene
  type: Property
  source:
    id: Scene
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 73
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets the <xref href=\"WaveEngine.Framework.SceneBehavior.Scene\" data-throw-if-not-resolved=\"false\"></xref> that contains this instance.\n"
  example: []
  syntax:
    content: protected Scene Scene { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Scene
    content.vb: Protected ReadOnly Property Scene As Scene
  overload: WaveEngine.Framework.SceneBehavior.Scene*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: WaveEngine.Framework.SceneBehavior.#ctor
  commentId: M:WaveEngine.Framework.SceneBehavior.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: SceneBehavior()
  nameWithType: SceneBehavior.SceneBehavior()
  fullName: WaveEngine.Framework.SceneBehavior.SceneBehavior()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 81
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.SceneBehavior\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected SceneBehavior()
    content.vb: Protected Sub New
  overload: WaveEngine.Framework.SceneBehavior.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.SceneBehavior.#ctor(System.String)
  commentId: M:WaveEngine.Framework.SceneBehavior.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: SceneBehavior(String)
  nameWithType: SceneBehavior.SceneBehavior(String)
  fullName: WaveEngine.Framework.SceneBehavior.SceneBehavior(System.String)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 91
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.SceneBehavior\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected SceneBehavior(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of this instance.
    content.vb: Protected Sub New(name As String)
  overload: WaveEngine.Framework.SceneBehavior.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If name is null or empty.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.SceneBehavior.ToString
  commentId: M:WaveEngine.Framework.SceneBehavior.ToString
  id: ToString
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SceneBehavior.ToString()
  fullName: WaveEngine.Framework.SceneBehavior.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 107
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: WaveEngine.Framework.SceneBehavior.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Framework.SceneBehavior.Update(System.TimeSpan)
  commentId: M:WaveEngine.Framework.SceneBehavior.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: SceneBehavior.Update(TimeSpan)
  fullName: WaveEngine.Framework.SceneBehavior.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 157
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nAllows this instance to execute custom logic during its <code>Update</code>.\n"
  remarks: "\nThis method will not be executed if it are not <code>Active</code>.\n"
  example: []
  syntax:
    content: protected abstract void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: The game time.
    content.vb: Protected MustOverride Sub Update(gameTime As TimeSpan)
  overload: WaveEngine.Framework.SceneBehavior.Update*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: WaveEngine.Framework.SceneBehavior.ResolveDependencies
  commentId: M:WaveEngine.Framework.SceneBehavior.ResolveDependencies
  id: ResolveDependencies
  parent: WaveEngine.Framework.SceneBehavior
  langs:
  - csharp
  - vb
  name: ResolveDependencies()
  nameWithType: SceneBehavior.ResolveDependencies()
  fullName: WaveEngine.Framework.SceneBehavior.ResolveDependencies()
  type: Method
  source:
    id: ResolveDependencies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\SceneBehavior.cs
    startLine: 162
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nResolves the dependencies needed for this instance to work.\n"
  example: []
  syntax:
    content: protected abstract void ResolveDependencies()
    content.vb: Protected MustOverride Sub ResolveDependencies
  overload: WaveEngine.Framework.SceneBehavior.ResolveDependencies*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.SceneBehavior.Name*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.Name
  name: Name
  nameWithType: SceneBehavior.Name
  fullName: WaveEngine.Framework.SceneBehavior.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework.Behavior
  commentId: T:WaveEngine.Framework.Behavior
  parent: WaveEngine.Framework
  name: Behavior
  nameWithType: Behavior
  fullName: WaveEngine.Framework.Behavior
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: WaveEngine.Framework.SceneBehavior.IsActive*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.IsActive
  name: IsActive
  nameWithType: SceneBehavior.IsActive
  fullName: WaveEngine.Framework.SceneBehavior.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.SceneBehavior.Scene
  commentId: P:WaveEngine.Framework.SceneBehavior.Scene
  isExternal: true
- uid: WaveEngine.Framework.SceneBehavior.Scene*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.Scene
  name: Scene
  nameWithType: SceneBehavior.Scene
  fullName: WaveEngine.Framework.SceneBehavior.Scene
- uid: WaveEngine.Framework.Scene
  commentId: T:WaveEngine.Framework.Scene
  parent: WaveEngine.Framework
  name: Scene
  nameWithType: Scene
  fullName: WaveEngine.Framework.Scene
- uid: WaveEngine.Framework.SceneBehavior
  commentId: T:WaveEngine.Framework.SceneBehavior
  parent: WaveEngine.Framework
  name: SceneBehavior
  nameWithType: SceneBehavior
  fullName: WaveEngine.Framework.SceneBehavior
- uid: WaveEngine.Framework.SceneBehavior.#ctor*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.#ctor
  name: SceneBehavior
  nameWithType: SceneBehavior.SceneBehavior
  fullName: WaveEngine.Framework.SceneBehavior.SceneBehavior
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.SceneBehavior.ToString*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.ToString
  name: ToString
  nameWithType: SceneBehavior.ToString
  fullName: WaveEngine.Framework.SceneBehavior.ToString
- uid: WaveEngine.Framework.SceneBehavior.Update*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.Update
  name: Update
  nameWithType: SceneBehavior.Update
  fullName: WaveEngine.Framework.SceneBehavior.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Framework.SceneBehavior.ResolveDependencies*
  commentId: Overload:WaveEngine.Framework.SceneBehavior.ResolveDependencies
  name: ResolveDependencies
  nameWithType: SceneBehavior.ResolveDependencies
  fullName: WaveEngine.Framework.SceneBehavior.ResolveDependencies
