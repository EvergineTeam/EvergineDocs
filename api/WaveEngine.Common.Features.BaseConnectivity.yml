### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Features.BaseConnectivity
  commentId: T:WaveEngine.Common.Features.BaseConnectivity
  id: BaseConnectivity
  parent: WaveEngine.Common.Features
  children:
  - WaveEngine.Common.Features.BaseConnectivity.Dispose
  - WaveEngine.Common.Features.BaseConnectivity.Dispose(System.Boolean)
  - WaveEngine.Common.Features.BaseConnectivity.Finalize
  - WaveEngine.Common.Features.BaseConnectivity.IsConnected
  - WaveEngine.Common.Features.BaseConnectivity.IsConnectedChanged
  - WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged(WaveEngine.Common.Features.IsConnectedChangedEventArgs)
  langs:
  - csharp
  - vb
  name: BaseConnectivity
  nameWithType: BaseConnectivity
  fullName: WaveEngine.Common.Features.BaseConnectivity
  type: Class
  source:
    id: BaseConnectivity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 11
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nBase class for cross connectivity.\n"
  example: []
  syntax:
    content: 'public abstract class BaseConnectivity : IConnectivity, IDisposable'
    content.vb: >-
      Public MustInherit Class BaseConnectivity

          Implements IConnectivity, IDisposable
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Common.Features.IConnectivity
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Common.Features.BaseConnectivity.IsConnected
  commentId: P:WaveEngine.Common.Features.BaseConnectivity.IsConnected
  id: IsConnected
  parent: WaveEngine.Common.Features.BaseConnectivity
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: BaseConnectivity.IsConnected
  fullName: WaveEngine.Common.Features.BaseConnectivity.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 18
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nGets a value indicating whether device is connected to a network or not.\n"
  example: []
  syntax:
    content: public abstract bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsConnected As Boolean
  overload: WaveEngine.Common.Features.BaseConnectivity.IsConnected*
  implements:
  - WaveEngine.Common.Features.IConnectivity.IsConnected
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged(WaveEngine.Common.Features.IsConnectedChangedEventArgs)
  commentId: M:WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged(WaveEngine.Common.Features.IsConnectedChangedEventArgs)
  id: OnIsConnectedChanged(WaveEngine.Common.Features.IsConnectedChangedEventArgs)
  parent: WaveEngine.Common.Features.BaseConnectivity
  langs:
  - csharp
  - vb
  name: OnIsConnectedChanged(IsConnectedChangedEventArgs)
  nameWithType: BaseConnectivity.OnIsConnectedChanged(IsConnectedChangedEventArgs)
  fullName: WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged(WaveEngine.Common.Features.IsConnectedChangedEventArgs)
  type: Method
  source:
    id: OnIsConnectedChanged
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 27
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nExecuted when connection changes.\n"
  example: []
  syntax:
    content: protected virtual void OnIsConnectedChanged(IsConnectedChangedEventArgs e)
    parameters:
    - id: e
      type: WaveEngine.Common.Features.IsConnectedChangedEventArgs
      description: <xref href="WaveEngine.Common.Features.IsConnectedChangedEventArgs" data-throw-if-not-resolved="false"></xref> args
    content.vb: Protected Overridable Sub OnIsConnectedChanged(e As IsConnectedChangedEventArgs)
  overload: WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Common.Features.BaseConnectivity.IsConnectedChanged
  commentId: E:WaveEngine.Common.Features.BaseConnectivity.IsConnectedChanged
  id: IsConnectedChanged
  parent: WaveEngine.Common.Features.BaseConnectivity
  langs:
  - csharp
  - vb
  name: IsConnectedChanged
  nameWithType: BaseConnectivity.IsConnectedChanged
  fullName: WaveEngine.Common.Features.BaseConnectivity.IsConnectedChanged
  type: Event
  source:
    id: IsConnectedChanged
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 33
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nEvent handler for connection changes.\n"
  example: []
  syntax:
    content: public event ConnectivityIsConnectedChangedEventHandler IsConnectedChanged
    return:
      type: WaveEngine.Common.Features.ConnectivityIsConnectedChangedEventHandler
    content.vb: Public Event IsConnectedChanged As ConnectivityIsConnectedChangedEventHandler
  implements:
  - WaveEngine.Common.Features.IConnectivity.IsConnectedChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Features.BaseConnectivity.Dispose
  commentId: M:WaveEngine.Common.Features.BaseConnectivity.Dispose
  id: Dispose
  parent: WaveEngine.Common.Features.BaseConnectivity
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseConnectivity.Dispose()
  fullName: WaveEngine.Common.Features.BaseConnectivity.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 38
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nDispose of class and parent classes\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: WaveEngine.Common.Features.BaseConnectivity.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Features.BaseConnectivity.Finalize
  commentId: M:WaveEngine.Common.Features.BaseConnectivity.Finalize
  id: Finalize
  parent: WaveEngine.Common.Features.BaseConnectivity
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: BaseConnectivity.Finalize()
  fullName: WaveEngine.Common.Features.BaseConnectivity.Finalize()
  type: Method
  source:
    id: Finalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 47
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nFinalizes an instance of the <xref href=\"WaveEngine.Common.Features.BaseConnectivity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: WaveEngine.Common.Features.BaseConnectivity.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Common.Features.BaseConnectivity.Dispose(System.Boolean)
  commentId: M:WaveEngine.Common.Features.BaseConnectivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: WaveEngine.Common.Features.BaseConnectivity
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BaseConnectivity.Dispose(Boolean)
  fullName: WaveEngine.Common.Features.BaseConnectivity.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Features\BaseConnectivity.cs
    startLine: 56
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Features
  summary: "\nDispose method\n"
  example: []
  syntax:
    content: public virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Whether to dispose of unmanaged resources
    content.vb: Public Overridable Sub Dispose(disposing As Boolean)
  overload: WaveEngine.Common.Features.BaseConnectivity.Dispose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: WaveEngine.Common.Features
  commentId: N:WaveEngine.Common.Features
  name: WaveEngine.Common.Features
  nameWithType: WaveEngine.Common.Features
  fullName: WaveEngine.Common.Features
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Features.IConnectivity
  commentId: T:WaveEngine.Common.Features.IConnectivity
  parent: WaveEngine.Common.Features
  name: IConnectivity
  nameWithType: IConnectivity
  fullName: WaveEngine.Common.Features.IConnectivity
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Features.BaseConnectivity.IsConnected*
  commentId: Overload:WaveEngine.Common.Features.BaseConnectivity.IsConnected
  name: IsConnected
  nameWithType: BaseConnectivity.IsConnected
  fullName: WaveEngine.Common.Features.BaseConnectivity.IsConnected
- uid: WaveEngine.Common.Features.IConnectivity.IsConnected
  commentId: P:WaveEngine.Common.Features.IConnectivity.IsConnected
  parent: WaveEngine.Common.Features.IConnectivity
  name: IsConnected
  nameWithType: IConnectivity.IsConnected
  fullName: WaveEngine.Common.Features.IConnectivity.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Features.IsConnectedChangedEventArgs
  commentId: T:WaveEngine.Common.Features.IsConnectedChangedEventArgs
  parent: WaveEngine.Common.Features
  name: IsConnectedChangedEventArgs
  nameWithType: IsConnectedChangedEventArgs
  fullName: WaveEngine.Common.Features.IsConnectedChangedEventArgs
- uid: WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged*
  commentId: Overload:WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged
  name: OnIsConnectedChanged
  nameWithType: BaseConnectivity.OnIsConnectedChanged
  fullName: WaveEngine.Common.Features.BaseConnectivity.OnIsConnectedChanged
- uid: WaveEngine.Common.Features.IConnectivity.IsConnectedChanged
  commentId: E:WaveEngine.Common.Features.IConnectivity.IsConnectedChanged
  parent: WaveEngine.Common.Features.IConnectivity
  name: IsConnectedChanged
  nameWithType: IConnectivity.IsConnectedChanged
  fullName: WaveEngine.Common.Features.IConnectivity.IsConnectedChanged
- uid: WaveEngine.Common.Features.ConnectivityIsConnectedChangedEventHandler
  commentId: T:WaveEngine.Common.Features.ConnectivityIsConnectedChangedEventHandler
  parent: WaveEngine.Common.Features
  name: ConnectivityIsConnectedChangedEventHandler
  nameWithType: ConnectivityIsConnectedChangedEventHandler
  fullName: WaveEngine.Common.Features.ConnectivityIsConnectedChangedEventHandler
- uid: WaveEngine.Common.Features.BaseConnectivity.Dispose*
  commentId: Overload:WaveEngine.Common.Features.BaseConnectivity.Dispose
  name: Dispose
  nameWithType: BaseConnectivity.Dispose
  fullName: WaveEngine.Common.Features.BaseConnectivity.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Features.BaseConnectivity
  commentId: T:WaveEngine.Common.Features.BaseConnectivity
  name: BaseConnectivity
  nameWithType: BaseConnectivity
  fullName: WaveEngine.Common.Features.BaseConnectivity
- uid: WaveEngine.Common.Features.BaseConnectivity.Finalize*
  commentId: Overload:WaveEngine.Common.Features.BaseConnectivity.Finalize
  name: Finalize
  nameWithType: BaseConnectivity.Finalize
  fullName: WaveEngine.Common.Features.BaseConnectivity.Finalize
