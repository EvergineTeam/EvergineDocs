### YamlMime:ManagedReference
items:
- uid: WaveEngine.Networking.NetworkPropertiesTable
  commentId: T:WaveEngine.Networking.NetworkPropertiesTable
  id: NetworkPropertiesTable
  parent: WaveEngine.Networking
  children:
  - WaveEngine.Networking.NetworkPropertiesTable.Clear
  - WaveEngine.Networking.NetworkPropertiesTable.ContainsKey(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetBoolean(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetByte(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetBytes(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetColor(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetDateTime(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetFloat(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetInt32(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetInt64(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetMatrix(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetSerializable``1(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetString(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan(System.Byte,System.Boolean)
  - WaveEngine.Networking.NetworkPropertiesTable.GetVector2(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetVector3(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.GetVector4(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly
  - WaveEngine.Networking.NetworkPropertiesTable.Keys
  - WaveEngine.Networking.NetworkPropertiesTable.NeedSync
  - WaveEngine.Networking.NetworkPropertiesTable.PropertyAdded
  - WaveEngine.Networking.NetworkPropertiesTable.PropertyChanged
  - WaveEngine.Networking.NetworkPropertiesTable.PropertyRemoved
  - WaveEngine.Networking.NetworkPropertiesTable.Remove(System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Boolean)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Byte)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Byte[])
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.DateTime)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Int32)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Int64)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Single)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.String)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.TimeSpan,System.Boolean)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Graphics.Color)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector4)
  - WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Networking.NetworkEndpoint)
  - WaveEngine.Networking.NetworkPropertiesTable.Set``1(System.Byte,``0)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean(System.Byte,System.Boolean@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetByte(System.Byte,System.Byte@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes(System.Byte,System.Byte[]@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetColor(System.Byte,WaveEngine.Common.Graphics.Color@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime(System.Byte,System.DateTime@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat(System.Byte,System.Single@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32(System.Byte,System.Int32@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64(System.Byte,System.Int64@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix(System.Byte,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint(System.Byte,WaveEngine.Networking.NetworkEndpoint@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion(System.Byte,WaveEngine.Common.Math.Quaternion@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable``1(System.Byte,``0@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetString(System.Byte,System.String@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan(System.Byte,System.Boolean,System.TimeSpan@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2(System.Byte,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3(System.Byte,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4(System.Byte,WaveEngine.Common.Math.Vector4@)
  langs:
  - csharp
  - vb
  name: NetworkPropertiesTable
  nameWithType: NetworkPropertiesTable
  fullName: WaveEngine.Networking.NetworkPropertiesTable
  type: Class
  source:
    id: NetworkPropertiesTable
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 17
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nThis class represents a properties table used for custom properties of network players and rooms.\n"
  example: []
  syntax:
    content: public class NetworkPropertiesTable
    content.vb: Public Class NetworkPropertiesTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly
  commentId: P:WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly
  id: IsReadOnly
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: NetworkPropertiesTable.IsReadOnly
  fullName: WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 28
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a value indicating whether the properties of this table are read only.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.NetworkPropertiesTable.NeedSync
  commentId: P:WaveEngine.Networking.NetworkPropertiesTable.NeedSync
  id: NeedSync
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: NeedSync
  nameWithType: NetworkPropertiesTable.NeedSync
  fullName: WaveEngine.Networking.NetworkPropertiesTable.NeedSync
  type: Property
  source:
    id: NeedSync
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 37
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a value indicating whether this properties table needs to be sync or not.\n"
  example: []
  syntax:
    content: public bool NeedSync { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NeedSync As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.NeedSync*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.NetworkPropertiesTable.Keys
  commentId: P:WaveEngine.Networking.NetworkPropertiesTable.Keys
  id: Keys
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: NetworkPropertiesTable.Keys
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Keys
  type: Property
  source:
    id: Keys
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 48
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a enumerable that contains the existing keys in the properties table.\n"
  example: []
  syntax:
    content: public IEnumerable<byte> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Byte}
    content.vb: Public ReadOnly Property Keys As IEnumerable(Of Byte)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Keys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.NetworkPropertiesTable.PropertyAdded
  commentId: E:WaveEngine.Networking.NetworkPropertiesTable.PropertyAdded
  id: PropertyAdded
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: PropertyAdded
  nameWithType: NetworkPropertiesTable.PropertyAdded
  fullName: WaveEngine.Networking.NetworkPropertiesTable.PropertyAdded
  type: Event
  source:
    id: PropertyAdded
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 63
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nOccurs when a property in the properties table is added by a remote player.\n"
  example: []
  syntax:
    content: public event EventHandler<byte> PropertyAdded
    return:
      type: System.EventHandler{System.Byte}
    content.vb: Public Event PropertyAdded As EventHandler(Of Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.PropertyChanged
  commentId: E:WaveEngine.Networking.NetworkPropertiesTable.PropertyChanged
  id: PropertyChanged
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: NetworkPropertiesTable.PropertyChanged
  fullName: WaveEngine.Networking.NetworkPropertiesTable.PropertyChanged
  type: Event
  source:
    id: PropertyChanged
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 68
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nOccurs when a property in the properties table is changed by a remote player.\n"
  example: []
  syntax:
    content: public event EventHandler<byte> PropertyChanged
    return:
      type: System.EventHandler{System.Byte}
    content.vb: Public Event PropertyChanged As EventHandler(Of Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.PropertyRemoved
  commentId: E:WaveEngine.Networking.NetworkPropertiesTable.PropertyRemoved
  id: PropertyRemoved
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: PropertyRemoved
  nameWithType: NetworkPropertiesTable.PropertyRemoved
  fullName: WaveEngine.Networking.NetworkPropertiesTable.PropertyRemoved
  type: Event
  source:
    id: PropertyRemoved
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 73
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nOccurs when a property in the properties table is removed by a remote player.\n"
  example: []
  syntax:
    content: public event EventHandler<byte> PropertyRemoved
    return:
      type: System.EventHandler{System.Byte}
    content.vb: Public Event PropertyRemoved As EventHandler(Of Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Boolean)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Boolean)
  id: Set(System.Byte,System.Boolean)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Boolean)
  nameWithType: NetworkPropertiesTable.Set(Byte, Boolean)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Boolean)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 99
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a boolean value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, bool value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Boolean
      description: The boolean value
    content.vb: Public Sub Set(key As Byte, value As Boolean)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetBoolean(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetBoolean(System.Byte)
  id: GetBoolean(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetBoolean(Byte)
  nameWithType: NetworkPropertiesTable.GetBoolean(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetBoolean(System.Byte)
  type: Method
  source:
    id: GetBoolean
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 111
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a boolean value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool GetBoolean(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Boolean
      description: A boolean value
    content.vb: Public Function GetBoolean(key As Byte) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetBoolean*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean(System.Byte,System.Boolean@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean(System.Byte,System.Boolean@)
  id: TryGetBoolean(System.Byte,System.Boolean@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetBoolean(Byte, out Boolean)
  nameWithType: NetworkPropertiesTable.TryGetBoolean(Byte, out Boolean)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean(System.Byte, out System.Boolean)
  type: Method
  source:
    id: TryGetBoolean
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 128
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a boolean value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetBoolean(byte key, out bool value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Boolean
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetBoolean(key As Byte, ByRef value As Boolean) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean*
  nameWithType.vb: NetworkPropertiesTable.TryGetBoolean(Byte, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean(System.Byte, ByRef System.Boolean)
  name.vb: TryGetBoolean(Byte, ByRef Boolean)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Byte)
  id: Set(System.Byte,System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Byte)
  nameWithType: NetworkPropertiesTable.Set(Byte, Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Byte)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 147
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a byte value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, byte value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Byte
      description: The byte value
    content.vb: Public Sub Set(key As Byte, value As Byte)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetByte(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetByte(System.Byte)
  id: GetByte(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetByte(Byte)
  nameWithType: NetworkPropertiesTable.GetByte(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetByte(System.Byte)
  type: Method
  source:
    id: GetByte
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 159
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a byte value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public byte GetByte(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Byte
      description: A byte value
    content.vb: Public Function GetByte(key As Byte) As Byte
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetByte(System.Byte,System.Byte@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetByte(System.Byte,System.Byte@)
  id: TryGetByte(System.Byte,System.Byte@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetByte(Byte, out Byte)
  nameWithType: NetworkPropertiesTable.TryGetByte(Byte, out Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetByte(System.Byte, out System.Byte)
  type: Method
  source:
    id: TryGetByte
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 176
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a byte value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetByte(byte key, out byte value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Byte
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetByte(key As Byte, ByRef value As Byte) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetByte*
  nameWithType.vb: NetworkPropertiesTable.TryGetByte(Byte, ByRef Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetByte(System.Byte, ByRef System.Byte)
  name.vb: TryGetByte(Byte, ByRef Byte)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Int32)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Int32)
  id: Set(System.Byte,System.Int32)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Int32)
  nameWithType: NetworkPropertiesTable.Set(Byte, Int32)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Int32)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 195
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a integer value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, int value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Int32
      description: The integer value
    content.vb: Public Sub Set(key As Byte, value As Integer)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetInt32(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetInt32(System.Byte)
  id: GetInt32(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetInt32(Byte)
  nameWithType: NetworkPropertiesTable.GetInt32(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetInt32(System.Byte)
  type: Method
  source:
    id: GetInt32
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 207
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a integer value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public int GetInt32(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Int32
      description: A integer value
    content.vb: Public Function GetInt32(key As Byte) As Integer
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32(System.Byte,System.Int32@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32(System.Byte,System.Int32@)
  id: TryGetInt32(System.Byte,System.Int32@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetInt32(Byte, out Int32)
  nameWithType: NetworkPropertiesTable.TryGetInt32(Byte, out Int32)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32(System.Byte, out System.Int32)
  type: Method
  source:
    id: TryGetInt32
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 224
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a integer value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetInt32(byte key, out int value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Int32
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetInt32(key As Byte, ByRef value As Integer) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32*
  nameWithType.vb: NetworkPropertiesTable.TryGetInt32(Byte, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32(System.Byte, ByRef System.Int32)
  name.vb: TryGetInt32(Byte, ByRef Int32)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Int64)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Int64)
  id: Set(System.Byte,System.Int64)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Int64)
  nameWithType: NetworkPropertiesTable.Set(Byte, Int64)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Int64)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 243
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a long integer value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, long value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Int64
      description: The long integer value
    content.vb: Public Sub Set(key As Byte, value As Long)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetInt64(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetInt64(System.Byte)
  id: GetInt64(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetInt64(Byte)
  nameWithType: NetworkPropertiesTable.GetInt64(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetInt64(System.Byte)
  type: Method
  source:
    id: GetInt64
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 255
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a long value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public long GetInt64(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Int64
      description: A long value
    content.vb: Public Function GetInt64(key As Byte) As Long
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetInt64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64(System.Byte,System.Int64@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64(System.Byte,System.Int64@)
  id: TryGetInt64(System.Byte,System.Int64@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetInt64(Byte, out Int64)
  nameWithType: NetworkPropertiesTable.TryGetInt64(Byte, out Int64)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64(System.Byte, out System.Int64)
  type: Method
  source:
    id: TryGetInt64
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 272
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a long value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetInt64(byte key, out long value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Int64
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetInt64(key As Byte, ByRef value As Long) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64*
  nameWithType.vb: NetworkPropertiesTable.TryGetInt64(Byte, ByRef Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64(System.Byte, ByRef System.Int64)
  name.vb: TryGetInt64(Byte, ByRef Int64)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Single)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Single)
  id: Set(System.Byte,System.Single)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Single)
  nameWithType: NetworkPropertiesTable.Set(Byte, Single)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Single)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 291
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a float value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, float value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Single
      description: The float value
    content.vb: Public Sub Set(key As Byte, value As Single)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetFloat(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetFloat(System.Byte)
  id: GetFloat(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetFloat(Byte)
  nameWithType: NetworkPropertiesTable.GetFloat(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetFloat(System.Byte)
  type: Method
  source:
    id: GetFloat
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 303
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a float value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public float GetFloat(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Single
      description: A float value
    content.vb: Public Function GetFloat(key As Byte) As Single
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat(System.Byte,System.Single@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat(System.Byte,System.Single@)
  id: TryGetFloat(System.Byte,System.Single@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetFloat(Byte, out Single)
  nameWithType: NetworkPropertiesTable.TryGetFloat(Byte, out Single)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat(System.Byte, out System.Single)
  type: Method
  source:
    id: TryGetFloat
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 320
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a float value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetFloat(byte key, out float value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Single
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetFloat(key As Byte, ByRef value As Single) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat*
  nameWithType.vb: NetworkPropertiesTable.TryGetFloat(Byte, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat(System.Byte, ByRef System.Single)
  name.vb: TryGetFloat(Byte, ByRef Single)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.String)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.String)
  id: Set(System.Byte,System.String)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, String)
  nameWithType: NetworkPropertiesTable.Set(Byte, String)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.String)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 339
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a string value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, string value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.String
      description: The string value
    content.vb: Public Sub Set(key As Byte, value As String)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetString(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetString(System.Byte)
  id: GetString(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetString(Byte)
  nameWithType: NetworkPropertiesTable.GetString(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetString(System.Byte)
  type: Method
  source:
    id: GetString
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 351
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a string value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public string GetString(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.String
      description: A string value
    content.vb: Public Function GetString(key As Byte) As String
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetString(System.Byte,System.String@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetString(System.Byte,System.String@)
  id: TryGetString(System.Byte,System.String@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetString(Byte, out String)
  nameWithType: NetworkPropertiesTable.TryGetString(Byte, out String)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetString(System.Byte, out System.String)
  type: Method
  source:
    id: TryGetString
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 368
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a string value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetString(byte key, out string value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.String
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetString(key As Byte, ByRef value As String) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetString*
  nameWithType.vb: NetworkPropertiesTable.TryGetString(Byte, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetString(System.Byte, ByRef System.String)
  name.vb: TryGetString(Byte, ByRef String)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Byte[])
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.Byte[])
  id: Set(System.Byte,System.Byte[])
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Byte[])
  nameWithType: NetworkPropertiesTable.Set(Byte, Byte[])
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Byte[])
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 387
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a byte array for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, byte[] value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Byte[]
      description: The byte array
    content.vb: Public Sub Set(key As Byte, value As Byte())
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  nameWithType.vb: NetworkPropertiesTable.Set(Byte, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.Byte())
  name.vb: Set(Byte, Byte())
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetBytes(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetBytes(System.Byte)
  id: GetBytes(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetBytes(Byte)
  nameWithType: NetworkPropertiesTable.GetBytes(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetBytes(System.Byte)
  type: Method
  source:
    id: GetBytes
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 399
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a byte array from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public byte[] GetBytes(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Byte[]
      description: A byte array
    content.vb: Public Function GetBytes(key As Byte) As Byte()
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes(System.Byte,System.Byte[]@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes(System.Byte,System.Byte[]@)
  id: TryGetBytes(System.Byte,System.Byte[]@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetBytes(Byte, out Byte[])
  nameWithType: NetworkPropertiesTable.TryGetBytes(Byte, out Byte[])
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes(System.Byte, out System.Byte[])
  type: Method
  source:
    id: TryGetBytes
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 416
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a byte array from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetBytes(byte key, out byte[] value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.Byte[]
      description: "\nThe byte array associated with the specified key, if the key exists; otherwise, the predefined value for\nthe parameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetBytes(key As Byte, ByRef value As Byte()) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes*
  nameWithType.vb: NetworkPropertiesTable.TryGetBytes(Byte, ByRef Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes(System.Byte, ByRef System.Byte())
  name.vb: TryGetBytes(Byte, ByRef Byte())
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector2)
  id: Set(System.Byte,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Vector2)
  nameWithType: NetworkPropertiesTable.Set(Byte, Vector2)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 435
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, Vector2 value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The <xref href="WaveEngine.Common.Math.Vector2" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Vector2)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetVector2(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetVector2(System.Byte)
  id: GetVector2(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetVector2(Byte)
  nameWithType: NetworkPropertiesTable.GetVector2(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetVector2(System.Byte)
  type: Method
  source:
    id: GetVector2
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 447
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public Vector2 GetVector2(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Common.Math.Vector2
      description: A <xref href="WaveEngine.Common.Math.Vector2" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetVector2(key As Byte) As Vector2
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetVector2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2(System.Byte,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2(System.Byte,WaveEngine.Common.Math.Vector2@)
  id: TryGetVector2(System.Byte,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetVector2(Byte, out Vector2)
  nameWithType: NetworkPropertiesTable.TryGetVector2(Byte, out Vector2)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2(System.Byte, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: TryGetVector2
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 464
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetVector2(byte key, out Vector2 value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetVector2(key As Byte, ByRef value As Vector2) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2*
  nameWithType.vb: NetworkPropertiesTable.TryGetVector2(Byte, ByRef Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2(System.Byte, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: TryGetVector2(Byte, ByRef Vector2)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector3)
  id: Set(System.Byte,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Vector3)
  nameWithType: NetworkPropertiesTable.Set(Byte, Vector3)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 483
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, Vector3 value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The <xref href="WaveEngine.Common.Math.Vector3" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Vector3)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetVector3(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetVector3(System.Byte)
  id: GetVector3(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetVector3(Byte)
  nameWithType: NetworkPropertiesTable.GetVector3(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetVector3(System.Byte)
  type: Method
  source:
    id: GetVector3
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 495
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public Vector3 GetVector3(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Common.Math.Vector3
      description: A <xref href="WaveEngine.Common.Math.Vector3" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetVector3(key As Byte) As Vector3
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetVector3*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3(System.Byte,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3(System.Byte,WaveEngine.Common.Math.Vector3@)
  id: TryGetVector3(System.Byte,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetVector3(Byte, out Vector3)
  nameWithType: NetworkPropertiesTable.TryGetVector3(Byte, out Vector3)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3(System.Byte, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: TryGetVector3
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 512
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetVector3(byte key, out Vector3 value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetVector3(key As Byte, ByRef value As Vector3) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3*
  nameWithType.vb: NetworkPropertiesTable.TryGetVector3(Byte, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3(System.Byte, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: TryGetVector3(Byte, ByRef Vector3)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector4)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Vector4)
  id: Set(System.Byte,WaveEngine.Common.Math.Vector4)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Vector4)
  nameWithType: NetworkPropertiesTable.Set(Byte, Vector4)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Common.Math.Vector4)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 531
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, Vector4 value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Vector4
      description: The <xref href="WaveEngine.Common.Math.Vector4" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Vector4)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetVector4(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetVector4(System.Byte)
  id: GetVector4(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetVector4(Byte)
  nameWithType: NetworkPropertiesTable.GetVector4(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetVector4(System.Byte)
  type: Method
  source:
    id: GetVector4
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 543
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public Vector4 GetVector4(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Common.Math.Vector4
      description: A <xref href="WaveEngine.Common.Math.Vector4" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetVector4(key As Byte) As Vector4
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetVector4*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4(System.Byte,WaveEngine.Common.Math.Vector4@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4(System.Byte,WaveEngine.Common.Math.Vector4@)
  id: TryGetVector4(System.Byte,WaveEngine.Common.Math.Vector4@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetVector4(Byte, out Vector4)
  nameWithType: NetworkPropertiesTable.TryGetVector4(Byte, out Vector4)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4(System.Byte, out WaveEngine.Common.Math.Vector4)
  type: Method
  source:
    id: TryGetVector4
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 560
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetVector4(byte key, out Vector4 value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Vector4
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetVector4(key As Byte, ByRef value As Vector4) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4*
  nameWithType.vb: NetworkPropertiesTable.TryGetVector4(Byte, ByRef Vector4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4(System.Byte, ByRef WaveEngine.Common.Math.Vector4)
  name.vb: TryGetVector4(Byte, ByRef Vector4)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Graphics.Color)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Graphics.Color)
  id: Set(System.Byte,WaveEngine.Common.Graphics.Color)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Color)
  nameWithType: NetworkPropertiesTable.Set(Byte, Color)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Common.Graphics.Color)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 579
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Common.Graphics.Color\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, Color value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Graphics.Color
      description: The <xref href="WaveEngine.Common.Graphics.Color" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Color)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetColor(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetColor(System.Byte)
  id: GetColor(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetColor(Byte)
  nameWithType: NetworkPropertiesTable.GetColor(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetColor(System.Byte)
  type: Method
  source:
    id: GetColor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 591
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Graphics.Color\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public Color GetColor(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Common.Graphics.Color
      description: A <xref href="WaveEngine.Common.Graphics.Color" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetColor(key As Byte) As Color
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetColor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetColor(System.Byte,WaveEngine.Common.Graphics.Color@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetColor(System.Byte,WaveEngine.Common.Graphics.Color@)
  id: TryGetColor(System.Byte,WaveEngine.Common.Graphics.Color@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetColor(Byte, out Color)
  nameWithType: NetworkPropertiesTable.TryGetColor(Byte, out Color)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetColor(System.Byte, out WaveEngine.Common.Graphics.Color)
  type: Method
  source:
    id: TryGetColor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 608
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Graphics.Color\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetColor(byte key, out Color value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Graphics.Color
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetColor(key As Byte, ByRef value As Color) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetColor*
  nameWithType.vb: NetworkPropertiesTable.TryGetColor(Byte, ByRef Color)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetColor(System.Byte, ByRef WaveEngine.Common.Graphics.Color)
  name.vb: TryGetColor(Byte, ByRef Color)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.TimeSpan,System.Boolean)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.TimeSpan,System.Boolean)
  id: Set(System.Byte,System.TimeSpan,System.Boolean)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, TimeSpan, Boolean)
  nameWithType: NetworkPropertiesTable.Set(Byte, TimeSpan, Boolean)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.TimeSpan, System.Boolean)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 635
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  remarks: "\nHigh precision allows full <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> range, otherwise it will be limited to\n&quot;+-24.20:31:23.647&quot; (+-24 days, 20 hours, 31 minutes, 23 seconds and 647 milliseconds).\n"
  example: []
  syntax:
    content: public void Set(byte key, TimeSpan value, bool highPrecision)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> value
    - id: highPrecision
      type: System.Boolean
      description: "\nIndicates whether the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> will be written using high precision (ticks)\nor not (milliseconds)\n"
    content.vb: Public Sub Set(key As Byte, value As TimeSpan, highPrecision As Boolean)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan(System.Byte,System.Boolean)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan(System.Byte,System.Boolean)
  id: GetTimeSpan(System.Byte,System.Boolean)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetTimeSpan(Byte, Boolean)
  nameWithType: NetworkPropertiesTable.GetTimeSpan(Byte, Boolean)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan(System.Byte, System.Boolean)
  type: Method
  source:
    id: GetTimeSpan
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 655
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  remarks: "\nHigh precision allows full <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> range, otherwise it will be limited to\n&quot;+-24.20:31:23.647&quot; (+-24 days, 20 hours, 31 minutes, 23 seconds and 647 milliseconds)\n"
  example: []
  syntax:
    content: public TimeSpan GetTimeSpan(byte key, bool highPrecision)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: highPrecision
      type: System.Boolean
      description: "\nIndicates whether the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> will be read using high precision (ticks)\nor not (milliseconds)\n"
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetTimeSpan(key As Byte, highPrecision As Boolean) As TimeSpan
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan(System.Byte,System.Boolean,System.TimeSpan@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan(System.Byte,System.Boolean,System.TimeSpan@)
  id: TryGetTimeSpan(System.Byte,System.Boolean,System.TimeSpan@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetTimeSpan(Byte, Boolean, out TimeSpan)
  nameWithType: NetworkPropertiesTable.TryGetTimeSpan(Byte, Boolean, out TimeSpan)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan(System.Byte, System.Boolean, out System.TimeSpan)
  type: Method
  source:
    id: TryGetTimeSpan
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 680
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  remarks: "\nHigh precision allows full <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> range, otherwise it will be limited to\n&quot;+-24.20:31:23.647&quot; (+-24 days, 20 hours, 31 minutes, 23 seconds and 647 milliseconds).\n"
  example: []
  syntax:
    content: public bool TryGetTimeSpan(byte key, bool highPrecision, out TimeSpan value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: highPrecision
      type: System.Boolean
      description: "\nIndicates whether the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> will be read using high precision (ticks)\nor not (milliseconds)\n"
    - id: value
      type: System.TimeSpan
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>.\n"
    content.vb: Public Function TryGetTimeSpan(key As Byte, highPrecision As Boolean, ByRef value As TimeSpan) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan*
  nameWithType.vb: NetworkPropertiesTable.TryGetTimeSpan(Byte, Boolean, ByRef TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan(System.Byte, System.Boolean, ByRef System.TimeSpan)
  name.vb: TryGetTimeSpan(Byte, Boolean, ByRef TimeSpan)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.DateTime)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,System.DateTime)
  id: Set(System.Byte,System.DateTime)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, DateTime)
  nameWithType: NetworkPropertiesTable.Set(Byte, DateTime)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, System.DateTime)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 699
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, DateTime value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.DateTime
      description: The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Date)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetDateTime(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetDateTime(System.Byte)
  id: GetDateTime(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetDateTime(Byte)
  nameWithType: NetworkPropertiesTable.GetDateTime(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetDateTime(System.Byte)
  type: Method
  source:
    id: GetDateTime
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 711
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public DateTime GetDateTime(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetDateTime(key As Byte) As Date
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetDateTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime(System.Byte,System.DateTime@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime(System.Byte,System.DateTime@)
  id: TryGetDateTime(System.Byte,System.DateTime@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetDateTime(Byte, out DateTime)
  nameWithType: NetworkPropertiesTable.TryGetDateTime(Byte, out DateTime)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime(System.Byte, out System.DateTime)
  type: Method
  source:
    id: TryGetDateTime
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 728
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetDateTime(byte key, out DateTime value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: System.DateTime
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetDateTime(key As Byte, ByRef value As Date) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime*
  nameWithType.vb: NetworkPropertiesTable.TryGetDateTime(Byte, ByRef DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime(System.Byte, ByRef System.DateTime)
  name.vb: TryGetDateTime(Byte, ByRef DateTime)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Quaternion)
  id: Set(System.Byte,WaveEngine.Common.Math.Quaternion)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Quaternion)
  nameWithType: NetworkPropertiesTable.Set(Byte, Quaternion)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 747
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Common.Math.Quaternion\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, Quaternion value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Quaternion
      description: The <xref href="WaveEngine.Common.Math.Quaternion" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Quaternion)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion(System.Byte)
  id: GetQuaternion(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetQuaternion(Byte)
  nameWithType: NetworkPropertiesTable.GetQuaternion(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion(System.Byte)
  type: Method
  source:
    id: GetQuaternion
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 759
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Quaternion\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public Quaternion GetQuaternion(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Common.Math.Quaternion
      description: A <xref href="WaveEngine.Common.Math.Quaternion" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetQuaternion(key As Byte) As Quaternion
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion(System.Byte,WaveEngine.Common.Math.Quaternion@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion(System.Byte,WaveEngine.Common.Math.Quaternion@)
  id: TryGetQuaternion(System.Byte,WaveEngine.Common.Math.Quaternion@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetQuaternion(Byte, out Quaternion)
  nameWithType: NetworkPropertiesTable.TryGetQuaternion(Byte, out Quaternion)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion(System.Byte, out WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: TryGetQuaternion
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 776
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Quaternion\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetQuaternion(byte key, out Quaternion value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Quaternion
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetQuaternion(key As Byte, ByRef value As Quaternion) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion*
  nameWithType.vb: NetworkPropertiesTable.TryGetQuaternion(Byte, ByRef Quaternion)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion(System.Byte, ByRef WaveEngine.Common.Math.Quaternion)
  name.vb: TryGetQuaternion(Byte, ByRef Quaternion)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Common.Math.Matrix)
  id: Set(System.Byte,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, Matrix)
  nameWithType: NetworkPropertiesTable.Set(Byte, Matrix)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 795
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, Matrix value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Matrix
      description: The <xref href="WaveEngine.Common.Math.Matrix" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As Matrix)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetMatrix(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetMatrix(System.Byte)
  id: GetMatrix(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetMatrix(Byte)
  nameWithType: NetworkPropertiesTable.GetMatrix(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetMatrix(System.Byte)
  type: Method
  source:
    id: GetMatrix
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 807
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public Matrix GetMatrix(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Common.Math.Matrix
      description: A <xref href="WaveEngine.Common.Math.Matrix" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetMatrix(key As Byte) As Matrix
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetMatrix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix(System.Byte,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix(System.Byte,WaveEngine.Common.Math.Matrix@)
  id: TryGetMatrix(System.Byte,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetMatrix(Byte, out Matrix)
  nameWithType: NetworkPropertiesTable.TryGetMatrix(Byte, out Matrix)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix(System.Byte, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: TryGetMatrix
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 824
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetMatrix(byte key, out Matrix value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetMatrix(key As Byte, ByRef value As Matrix) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix*
  nameWithType.vb: NetworkPropertiesTable.TryGetMatrix(Byte, ByRef Matrix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix(System.Byte, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: TryGetMatrix(Byte, ByRef Matrix)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte,WaveEngine.Networking.NetworkEndpoint)
  id: Set(System.Byte,WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set(Byte, NetworkEndpoint)
  nameWithType: NetworkPropertiesTable.Set(Byte, NetworkEndpoint)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set(System.Byte, WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 843
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nSet a <xref href=\"WaveEngine.Networking.NetworkEndpoint\" data-throw-if-not-resolved=\"false\"></xref> value for the specified key in the properties table.\n"
  example: []
  syntax:
    content: public void Set(byte key, NetworkEndpoint value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Networking.NetworkEndpoint
      description: The <xref href="WaveEngine.Networking.NetworkEndpoint" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Sub Set(key As Byte, value As NetworkEndpoint)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint(System.Byte)
  id: GetNetworkEndpoint(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetNetworkEndpoint(Byte)
  nameWithType: NetworkPropertiesTable.GetNetworkEndpoint(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint(System.Byte)
  type: Method
  source:
    id: GetNetworkEndpoint
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 855
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Networking.NetworkEndpoint\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public NetworkEndpoint GetNetworkEndpoint(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: WaveEngine.Networking.NetworkEndpoint
      description: A <xref href="WaveEngine.Networking.NetworkEndpoint" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetNetworkEndpoint(key As Byte) As NetworkEndpoint
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint(System.Byte,WaveEngine.Networking.NetworkEndpoint@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint(System.Byte,WaveEngine.Networking.NetworkEndpoint@)
  id: TryGetNetworkEndpoint(System.Byte,WaveEngine.Networking.NetworkEndpoint@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetNetworkEndpoint(Byte, out NetworkEndpoint)
  nameWithType: NetworkPropertiesTable.TryGetNetworkEndpoint(Byte, out NetworkEndpoint)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint(System.Byte, out WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: TryGetNetworkEndpoint
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 872
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Networking.NetworkEndpoint\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool TryGetNetworkEndpoint(byte key, out NetworkEndpoint value)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: WaveEngine.Networking.NetworkEndpoint
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetNetworkEndpoint(key As Byte, ByRef value As NetworkEndpoint) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint*
  nameWithType.vb: NetworkPropertiesTable.TryGetNetworkEndpoint(Byte, ByRef NetworkEndpoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint(System.Byte, ByRef WaveEngine.Networking.NetworkEndpoint)
  name.vb: TryGetNetworkEndpoint(Byte, ByRef NetworkEndpoint)
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set``1(System.Byte,``0)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Set``1(System.Byte,``0)
  id: Set``1(System.Byte,``0)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Set<T>(Byte, T)
  nameWithType: NetworkPropertiesTable.Set<T>(Byte, T)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set<T>(System.Byte, T)
  type: Method
  source:
    id: Set
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 892
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Networking.INetworkSerializable\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: >-
      public void Set<T>(byte key, T value)

          where T : INetworkSerializable, new()
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: '{T}'
      description: The <xref href="WaveEngine.Networking.INetworkSerializable" data-throw-if-not-resolved="false"></xref> value
    typeParameters:
    - id: T
      description: An <xref href="WaveEngine.Networking.INetworkSerializable" data-throw-if-not-resolved="false"></xref> type
    content.vb: Public Sub Set(Of T As {INetworkSerializable, New})(key As Byte, value As T)
  overload: WaveEngine.Networking.NetworkPropertiesTable.Set*
  nameWithType.vb: NetworkPropertiesTable.Set(Of T)(Byte, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.Set(Of T)(System.Byte, T)
  name.vb: Set(Of T)(Byte, T)
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetSerializable``1(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.GetSerializable``1(System.Byte)
  id: GetSerializable``1(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: GetSerializable<T>(Byte)
  nameWithType: NetworkPropertiesTable.GetSerializable<T>(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetSerializable<T>(System.Byte)
  type: Method
  source:
    id: GetSerializable
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 906
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Networking.INetworkSerializable\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: >-
      public T GetSerializable<T>(byte key)

          where T : INetworkSerializable, new()
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    typeParameters:
    - id: T
      description: An <xref href="WaveEngine.Networking.INetworkSerializable" data-throw-if-not-resolved="false"></xref> type
    return:
      type: '{T}'
      description: A <xref href="WaveEngine.Networking.INetworkSerializable" data-throw-if-not-resolved="false"></xref> value
    content.vb: Public Function GetSerializable(Of T As {INetworkSerializable, New})(key As Byte) As T
  overload: WaveEngine.Networking.NetworkPropertiesTable.GetSerializable*
  nameWithType.vb: NetworkPropertiesTable.GetSerializable(Of T)(Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.GetSerializable(Of T)(System.Byte)
  name.vb: GetSerializable(Of T)(Byte)
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable``1(System.Byte,``0@)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable``1(System.Byte,``0@)
  id: TryGetSerializable``1(System.Byte,``0@)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: TryGetSerializable<T>(Byte, out T)
  nameWithType: NetworkPropertiesTable.TryGetSerializable<T>(Byte, out T)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable<T>(System.Byte, out T)
  type: Method
  source:
    id: TryGetSerializable
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 927
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nGets a <xref href=\"WaveEngine.Networking.INetworkSerializable\" data-throw-if-not-resolved=\"false\"></xref> value from the specified key from the properties table.\n"
  example: []
  syntax:
    content: >-
      public bool TryGetSerializable<T>(byte key, out T value)

          where T : INetworkSerializable, new()
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    - id: value
      type: '{T}'
      description: "\nThe value associated with the specified key, if the key exists; otherwise, the predefined value for the\nparameter type\n"
    typeParameters:
    - id: T
      description: An <xref href="WaveEngine.Networking.INetworkSerializable" data-throw-if-not-resolved="false"></xref> type
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the table contains a property for the specified key; otherwise, <code>false</code>\n"
    content.vb: Public Function TryGetSerializable(Of T As {INetworkSerializable, New})(key As Byte, ByRef value As T) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable*
  nameWithType.vb: NetworkPropertiesTable.TryGetSerializable(Of T)(Byte, ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable(Of T)(System.Byte, ByRef T)
  name.vb: TryGetSerializable(Of T)(Byte, ByRef T)
- uid: WaveEngine.Networking.NetworkPropertiesTable.ContainsKey(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.ContainsKey(System.Byte)
  id: ContainsKey(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: ContainsKey(Byte)
  nameWithType: NetworkPropertiesTable.ContainsKey(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.ContainsKey(System.Byte)
  type: Method
  source:
    id: ContainsKey
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 949
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nDetermines whether the properties table contains the specified key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key to locate in the properties table
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the properties table contains an element with the specified key; otherwise, <code>false</code>.\n"
    content.vb: Public Function ContainsKey(key As Byte) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.Remove(System.Byte)
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Remove(System.Byte)
  id: Remove(System.Byte)
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Remove(Byte)
  nameWithType: NetworkPropertiesTable.Remove(Byte)
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Remove(System.Byte)
  type: Method
  source:
    id: Remove
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 962
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nRemoves the value with the specified key from the properties table.\n"
  example: []
  syntax:
    content: public bool Remove(byte key)
    parameters:
    - id: key
      type: System.Byte
      description: The byte key
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the element is successfully found and removed; otherwise, <code>false</code>.\nThis method returns <code>false</code> if key is not found in the properties table.\n"
    content.vb: Public Function Remove(key As Byte) As Boolean
  overload: WaveEngine.Networking.NetworkPropertiesTable.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.NetworkPropertiesTable.Clear
  commentId: M:WaveEngine.Networking.NetworkPropertiesTable.Clear
  id: Clear
  parent: WaveEngine.Networking.NetworkPropertiesTable
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: NetworkPropertiesTable.Clear()
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\NetworkPropertiesTable.cs
    startLine: 980
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking
  summary: "\nClears all the existing properties in the table\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: WaveEngine.Networking.NetworkPropertiesTable.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Networking
  commentId: N:WaveEngine.Networking
  name: WaveEngine.Networking
  nameWithType: WaveEngine.Networking
  fullName: WaveEngine.Networking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly
  name: IsReadOnly
  nameWithType: NetworkPropertiesTable.IsReadOnly
  fullName: WaveEngine.Networking.NetworkPropertiesTable.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Networking.NetworkPropertiesTable.NeedSync*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.NeedSync
  name: NeedSync
  nameWithType: NetworkPropertiesTable.NeedSync
  fullName: WaveEngine.Networking.NetworkPropertiesTable.NeedSync
- uid: WaveEngine.Networking.NetworkPropertiesTable.Keys*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.Keys
  name: Keys
  nameWithType: NetworkPropertiesTable.Keys
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Keys
- uid: System.Collections.Generic.IEnumerable{System.Byte}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte>
  nameWithType: IEnumerable<Byte>
  fullName: System.Collections.Generic.IEnumerable<System.Byte>
  nameWithType.vb: IEnumerable(Of Byte)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Byte)
  name.vb: IEnumerable(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.EventHandler{System.Byte}
  commentId: T:System.EventHandler{System.Byte}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Byte>
  nameWithType: EventHandler<Byte>
  fullName: System.EventHandler<System.Byte>
  nameWithType.vb: EventHandler(Of Byte)
  fullName.vb: System.EventHandler(Of System.Byte)
  name.vb: EventHandler(Of Byte)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.NetworkPropertiesTable.Set*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.Set
  name: Set
  nameWithType: NetworkPropertiesTable.Set
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Set
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetBoolean*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetBoolean
  name: GetBoolean
  nameWithType: NetworkPropertiesTable.GetBoolean
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetBoolean
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean
  name: TryGetBoolean
  nameWithType: NetworkPropertiesTable.TryGetBoolean
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetBoolean
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetByte*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetByte
  name: GetByte
  nameWithType: NetworkPropertiesTable.GetByte
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetByte
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetByte*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetByte
  name: TryGetByte
  nameWithType: NetworkPropertiesTable.TryGetByte
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetByte
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetInt32*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetInt32
  name: GetInt32
  nameWithType: NetworkPropertiesTable.GetInt32
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetInt32
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32
  name: TryGetInt32
  nameWithType: NetworkPropertiesTable.TryGetInt32
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetInt64*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetInt64
  name: GetInt64
  nameWithType: NetworkPropertiesTable.GetInt64
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetInt64
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64
  name: TryGetInt64
  nameWithType: NetworkPropertiesTable.TryGetInt64
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetInt64
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetFloat*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetFloat
  name: GetFloat
  nameWithType: NetworkPropertiesTable.GetFloat
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetFloat
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat
  name: TryGetFloat
  nameWithType: NetworkPropertiesTable.TryGetFloat
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetFloat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetString*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetString
  name: GetString
  nameWithType: NetworkPropertiesTable.GetString
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetString
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetString*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetString
  name: TryGetString
  nameWithType: NetworkPropertiesTable.TryGetString
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetString
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetBytes*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetBytes
  name: GetBytes
  nameWithType: NetworkPropertiesTable.GetBytes
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetBytes
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes
  name: TryGetBytes
  nameWithType: NetworkPropertiesTable.TryGetBytes
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetBytes
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetVector2*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetVector2
  name: GetVector2
  nameWithType: NetworkPropertiesTable.GetVector2
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetVector2
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2
  name: TryGetVector2
  nameWithType: NetworkPropertiesTable.TryGetVector2
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector2
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetVector3*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetVector3
  name: GetVector3
  nameWithType: NetworkPropertiesTable.GetVector3
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetVector3
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3
  name: TryGetVector3
  nameWithType: NetworkPropertiesTable.TryGetVector3
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector3
- uid: WaveEngine.Common.Math.Vector4
  commentId: T:WaveEngine.Common.Math.Vector4
  parent: WaveEngine.Common.Math
  name: Vector4
  nameWithType: Vector4
  fullName: WaveEngine.Common.Math.Vector4
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetVector4*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetVector4
  name: GetVector4
  nameWithType: NetworkPropertiesTable.GetVector4
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetVector4
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4
  name: TryGetVector4
  nameWithType: NetworkPropertiesTable.TryGetVector4
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetVector4
- uid: WaveEngine.Common.Graphics.Color
  commentId: T:WaveEngine.Common.Graphics.Color
  parent: WaveEngine.Common.Graphics
  name: Color
  nameWithType: Color
  fullName: WaveEngine.Common.Graphics.Color
- uid: WaveEngine.Common.Graphics
  commentId: N:WaveEngine.Common.Graphics
  name: WaveEngine.Common.Graphics
  nameWithType: WaveEngine.Common.Graphics
  fullName: WaveEngine.Common.Graphics
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetColor*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetColor
  name: GetColor
  nameWithType: NetworkPropertiesTable.GetColor
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetColor
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetColor*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetColor
  name: TryGetColor
  nameWithType: NetworkPropertiesTable.TryGetColor
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetColor
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan
  name: GetTimeSpan
  nameWithType: NetworkPropertiesTable.GetTimeSpan
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetTimeSpan
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan
  name: TryGetTimeSpan
  nameWithType: NetworkPropertiesTable.TryGetTimeSpan
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetTimeSpan
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetDateTime*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetDateTime
  name: GetDateTime
  nameWithType: NetworkPropertiesTable.GetDateTime
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetDateTime
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime
  name: TryGetDateTime
  nameWithType: NetworkPropertiesTable.TryGetDateTime
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetDateTime
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion
  name: GetQuaternion
  nameWithType: NetworkPropertiesTable.GetQuaternion
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetQuaternion
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion
  name: TryGetQuaternion
  nameWithType: NetworkPropertiesTable.TryGetQuaternion
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetQuaternion
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetMatrix*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetMatrix
  name: GetMatrix
  nameWithType: NetworkPropertiesTable.GetMatrix
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetMatrix
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix
  name: TryGetMatrix
  nameWithType: NetworkPropertiesTable.TryGetMatrix
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetMatrix
- uid: WaveEngine.Networking.NetworkEndpoint
  commentId: T:WaveEngine.Networking.NetworkEndpoint
  parent: WaveEngine.Networking
  name: NetworkEndpoint
  nameWithType: NetworkEndpoint
  fullName: WaveEngine.Networking.NetworkEndpoint
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint
  name: GetNetworkEndpoint
  nameWithType: NetworkPropertiesTable.GetNetworkEndpoint
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetNetworkEndpoint
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint
  name: TryGetNetworkEndpoint
  nameWithType: NetworkPropertiesTable.TryGetNetworkEndpoint
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetNetworkEndpoint
- uid: WaveEngine.Networking.INetworkSerializable
  commentId: T:WaveEngine.Networking.INetworkSerializable
  name: INetworkSerializable
  nameWithType: INetworkSerializable
  fullName: WaveEngine.Networking.INetworkSerializable
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Networking.NetworkPropertiesTable.GetSerializable*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.GetSerializable
  name: GetSerializable
  nameWithType: NetworkPropertiesTable.GetSerializable
  fullName: WaveEngine.Networking.NetworkPropertiesTable.GetSerializable
- uid: WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable
  name: TryGetSerializable
  nameWithType: NetworkPropertiesTable.TryGetSerializable
  fullName: WaveEngine.Networking.NetworkPropertiesTable.TryGetSerializable
- uid: WaveEngine.Networking.NetworkPropertiesTable.ContainsKey*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.ContainsKey
  name: ContainsKey
  nameWithType: NetworkPropertiesTable.ContainsKey
  fullName: WaveEngine.Networking.NetworkPropertiesTable.ContainsKey
- uid: WaveEngine.Networking.NetworkPropertiesTable.Remove*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.Remove
  name: Remove
  nameWithType: NetworkPropertiesTable.Remove
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Remove
- uid: WaveEngine.Networking.NetworkPropertiesTable.Clear*
  commentId: Overload:WaveEngine.Networking.NetworkPropertiesTable.Clear
  name: Clear
  nameWithType: NetworkPropertiesTable.Clear
  fullName: WaveEngine.Networking.NetworkPropertiesTable.Clear
