### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D
  commentId: T:WaveEngine.Framework.Physics3D.CollisionInfo3D
  id: CollisionInfo3D
  parent: WaveEngine.Framework.Physics3D
  children:
  - WaveEngine.Framework.Physics3D.CollisionInfo3D.#ctor(WaveEngine.Framework.Physics3D.PhysicBody3D,WaveEngine.Framework.Physics3D.PhysicBody3D)
  - WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts
  - WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody
  - WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset
  - WaveEngine.Framework.Physics3D.CollisionInfo3D.State
  - WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody
  langs:
  - csharp
  - vb
  name: CollisionInfo3D
  nameWithType: CollisionInfo3D
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D
  type: Class
  source:
    id: CollisionInfo3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 13
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGeneric contact between colliders, Always using Vector3 as the engine allows mixed 2D/3D contacts.\nNote: As class because it is shared between the 2 Colliders.. maybe struct is faster?\n"
  example: []
  syntax:
    content: public class CollisionInfo3D
    content.vb: Public Class CollisionInfo3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.State
  commentId: P:WaveEngine.Framework.Physics3D.CollisionInfo3D.State
  id: State
  parent: WaveEngine.Framework.Physics3D.CollisionInfo3D
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CollisionInfo3D.State
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.State
  type: Property
  source:
    id: State
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 20
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the collision state\n"
  example: []
  syntax:
    content: public CollisionInfo3DState State { get; set; }
    parameters: []
    return:
      type: WaveEngine.Framework.Physics3D.CollisionInfo3DState
    content.vb: Public Property State As CollisionInfo3DState
  overload: WaveEngine.Framework.Physics3D.CollisionInfo3D.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody
  commentId: P:WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody
  id: ThisBody
  parent: WaveEngine.Framework.Physics3D.CollisionInfo3D
  langs:
  - csharp
  - vb
  name: ThisBody
  nameWithType: CollisionInfo3D.ThisBody
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody
  type: Property
  source:
    id: ThisBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 25
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets the Collider A\n"
  example: []
  syntax:
    content: public PhysicBody3D ThisBody { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Physics3D.PhysicBody3D
    content.vb: Public ReadOnly Property ThisBody As PhysicBody3D
  overload: WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody
  commentId: P:WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody
  id: OtherBody
  parent: WaveEngine.Framework.Physics3D.CollisionInfo3D
  langs:
  - csharp
  - vb
  name: OtherBody
  nameWithType: CollisionInfo3D.OtherBody
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody
  type: Property
  source:
    id: OtherBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 30
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets the Collider B\n"
  example: []
  syntax:
    content: public PhysicBody3D OtherBody { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Physics3D.PhysicBody3D
    content.vb: Public ReadOnly Property OtherBody As PhysicBody3D
  overload: WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts
  commentId: P:WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts
  id: Contacts
  parent: WaveEngine.Framework.Physics3D.CollisionInfo3D
  langs:
  - csharp
  - vb
  name: Contacts
  nameWithType: CollisionInfo3D.Contacts
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts
  type: Property
  source:
    id: Contacts
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 35
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets the concat list\n"
  example: []
  syntax:
    content: public List<ContactPoint3D> Contacts { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Physics3D.ContactPoint3D}
    content.vb: Public ReadOnly Property Contacts As List(Of ContactPoint3D)
  overload: WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.#ctor(WaveEngine.Framework.Physics3D.PhysicBody3D,WaveEngine.Framework.Physics3D.PhysicBody3D)
  commentId: M:WaveEngine.Framework.Physics3D.CollisionInfo3D.#ctor(WaveEngine.Framework.Physics3D.PhysicBody3D,WaveEngine.Framework.Physics3D.PhysicBody3D)
  id: '#ctor(WaveEngine.Framework.Physics3D.PhysicBody3D,WaveEngine.Framework.Physics3D.PhysicBody3D)'
  parent: WaveEngine.Framework.Physics3D.CollisionInfo3D
  langs:
  - csharp
  - vb
  name: CollisionInfo3D(PhysicBody3D, PhysicBody3D)
  nameWithType: CollisionInfo3D.CollisionInfo3D(PhysicBody3D, PhysicBody3D)
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.CollisionInfo3D(WaveEngine.Framework.Physics3D.PhysicBody3D, WaveEngine.Framework.Physics3D.PhysicBody3D)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 45
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Physics3D.CollisionInfo3D\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CollisionInfo3D(PhysicBody3D bodyA, PhysicBody3D bodyB)
    parameters:
    - id: bodyA
      type: WaveEngine.Framework.Physics3D.PhysicBody3D
      description: The collider A
    - id: bodyB
      type: WaveEngine.Framework.Physics3D.PhysicBody3D
      description: The collider B
    content.vb: Public Sub New(bodyA As PhysicBody3D, bodyB As PhysicBody3D)
  overload: WaveEngine.Framework.Physics3D.CollisionInfo3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset
  commentId: M:WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset
  id: Reset
  parent: WaveEngine.Framework.Physics3D.CollisionInfo3D
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: CollisionInfo3D.Reset()
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset()
  type: Method
  source:
    id: Reset
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Contacts\CollisionInfo3D.cs
    startLine: 59
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nReset info\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Physics3D
  commentId: N:WaveEngine.Framework.Physics3D
  name: WaveEngine.Framework.Physics3D
  nameWithType: WaveEngine.Framework.Physics3D
  fullName: WaveEngine.Framework.Physics3D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.State*
  commentId: Overload:WaveEngine.Framework.Physics3D.CollisionInfo3D.State
  name: State
  nameWithType: CollisionInfo3D.State
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.State
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3DState
  commentId: T:WaveEngine.Framework.Physics3D.CollisionInfo3DState
  parent: WaveEngine.Framework.Physics3D
  name: CollisionInfo3DState
  nameWithType: CollisionInfo3DState
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3DState
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody*
  commentId: Overload:WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody
  name: ThisBody
  nameWithType: CollisionInfo3D.ThisBody
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.ThisBody
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D
  commentId: T:WaveEngine.Framework.Physics3D.PhysicBody3D
  parent: WaveEngine.Framework.Physics3D
  name: PhysicBody3D
  nameWithType: PhysicBody3D
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody*
  commentId: Overload:WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody
  name: OtherBody
  nameWithType: CollisionInfo3D.OtherBody
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.OtherBody
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts*
  commentId: Overload:WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts
  name: Contacts
  nameWithType: CollisionInfo3D.Contacts
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.Contacts
- uid: System.Collections.Generic.List{WaveEngine.Framework.Physics3D.ContactPoint3D}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Physics3D.ContactPoint3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ContactPoint3D>
  nameWithType: List<ContactPoint3D>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Physics3D.ContactPoint3D>
  nameWithType.vb: List(Of ContactPoint3D)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Physics3D.ContactPoint3D)
  name.vb: List(Of ContactPoint3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Physics3D.ContactPoint3D
    name: ContactPoint3D
    nameWithType: ContactPoint3D
    fullName: WaveEngine.Framework.Physics3D.ContactPoint3D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Physics3D.ContactPoint3D
    name: ContactPoint3D
    nameWithType: ContactPoint3D
    fullName: WaveEngine.Framework.Physics3D.ContactPoint3D
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D
  commentId: T:WaveEngine.Framework.Physics3D.CollisionInfo3D
  parent: WaveEngine.Framework.Physics3D
  name: CollisionInfo3D
  nameWithType: CollisionInfo3D
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.#ctor*
  commentId: Overload:WaveEngine.Framework.Physics3D.CollisionInfo3D.#ctor
  name: CollisionInfo3D
  nameWithType: CollisionInfo3D.CollisionInfo3D
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.CollisionInfo3D
- uid: WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset*
  commentId: Overload:WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset
  name: Reset
  nameWithType: CollisionInfo3D.Reset
  fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D.Reset
