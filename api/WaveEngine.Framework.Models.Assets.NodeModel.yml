### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Models.Assets.NodeModel
  commentId: T:WaveEngine.Framework.Models.Assets.NodeModel
  id: NodeModel
  parent: WaveEngine.Framework.Models.Assets
  children:
  - WaveEngine.Framework.Models.Assets.NodeModel.#ctor
  - WaveEngine.Framework.Models.Assets.NodeModel.Children
  - WaveEngine.Framework.Models.Assets.NodeModel.Meshes
  - WaveEngine.Framework.Models.Assets.NodeModel.Name
  - WaveEngine.Framework.Models.Assets.NodeModel.Orientation
  - WaveEngine.Framework.Models.Assets.NodeModel.Parent
  - WaveEngine.Framework.Models.Assets.NodeModel.Position
  - WaveEngine.Framework.Models.Assets.NodeModel.Scale
  langs:
  - csharp
  - vb
  name: NodeModel
  nameWithType: NodeModel
  fullName: WaveEngine.Framework.Models.Assets.NodeModel
  type: Class
  source:
    id: NodeModel
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 14
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nNode Model\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Framework.Models.Assets", Name = "Node")]

      public class NodeModel
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Framework.Models.Assets", Name:="Node")>

      Public Class NodeModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Framework.Models.Assets
    - name: Name
      type: System.String
      value: Node
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Name
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Name
  id: Name
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NodeModel.Name
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 20
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets the node name\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property Name As String
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Name*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Meshes
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Meshes
  id: Meshes
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Meshes
  nameWithType: NodeModel.Meshes
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Meshes
  type: Property
  source:
    id: Meshes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 27
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets meshes list\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<MeshModel> Meshes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Models.Assets.MeshModel}
    content.vb: >-
      <DataMember>

      Public Property Meshes As List(Of MeshModel)
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Meshes*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Parent
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Parent
  id: Parent
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: NodeModel.Parent
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Parent
  type: Property
  source:
    id: Parent
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 34
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets parent node\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public NodeModel Parent { get; set; }
    parameters: []
    return:
      type: WaveEngine.Framework.Models.Assets.NodeModel
    content.vb: >-
      <DataMember>

      Public Property Parent As NodeModel
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Parent*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Children
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Children
  id: Children
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: NodeModel.Children
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Children
  type: Property
  source:
    id: Children
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 41
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets children nodes\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public List<NodeModel> Children { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Models.Assets.NodeModel}
    content.vb: >-
      <DataMember>

      Public Property Children As List(Of NodeModel)
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Children*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Position
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Position
  id: Position
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: NodeModel.Position
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Position
  type: Property
  source:
    id: Position
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 48
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets children nodes\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector3 Position { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: >-
      <DataMember>

      Public Property Position As Vector3
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Position*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Orientation
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Orientation
  id: Orientation
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: NodeModel.Orientation
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Orientation
  type: Property
  source:
    id: Orientation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 55
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets children nodes\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Quaternion Orientation { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Quaternion
    content.vb: >-
      <DataMember>

      Public Property Orientation As Quaternion
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Orientation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Scale
  commentId: P:WaveEngine.Framework.Models.Assets.NodeModel.Scale
  id: Scale
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: NodeModel.Scale
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Scale
  type: Property
  source:
    id: Scale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 62
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nGets or sets children nodes\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector3 Scale { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: >-
      <DataMember>

      Public Property Scale As Vector3
  overload: WaveEngine.Framework.Models.Assets.NodeModel.Scale*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Models.Assets.NodeModel.#ctor
  commentId: M:WaveEngine.Framework.Models.Assets.NodeModel.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Models.Assets.NodeModel
  langs:
  - csharp
  - vb
  name: NodeModel()
  nameWithType: NodeModel.NodeModel()
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.NodeModel()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Models\Assets\NodeModel.cs
    startLine: 69
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Models.Assets
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Models.Assets.NodeModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public NodeModel()
    content.vb: Public Sub New
  overload: WaveEngine.Framework.Models.Assets.NodeModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Models.Assets
  commentId: N:WaveEngine.Framework.Models.Assets
  name: WaveEngine.Framework.Models.Assets
  nameWithType: WaveEngine.Framework.Models.Assets
  fullName: WaveEngine.Framework.Models.Assets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Name*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Name
  name: Name
  nameWithType: NodeModel.Name
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Meshes*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Meshes
  name: Meshes
  nameWithType: NodeModel.Meshes
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Meshes
- uid: System.Collections.Generic.List{WaveEngine.Framework.Models.Assets.MeshModel}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Models.Assets.MeshModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MeshModel>
  nameWithType: List<MeshModel>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Models.Assets.MeshModel>
  nameWithType.vb: List(Of MeshModel)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Models.Assets.MeshModel)
  name.vb: List(Of MeshModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Models.Assets.MeshModel
    name: MeshModel
    nameWithType: MeshModel
    fullName: WaveEngine.Framework.Models.Assets.MeshModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Models.Assets.MeshModel
    name: MeshModel
    nameWithType: MeshModel
    fullName: WaveEngine.Framework.Models.Assets.MeshModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Parent*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Parent
  name: Parent
  nameWithType: NodeModel.Parent
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Parent
- uid: WaveEngine.Framework.Models.Assets.NodeModel
  commentId: T:WaveEngine.Framework.Models.Assets.NodeModel
  parent: WaveEngine.Framework.Models.Assets
  name: NodeModel
  nameWithType: NodeModel
  fullName: WaveEngine.Framework.Models.Assets.NodeModel
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Children*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Children
  name: Children
  nameWithType: NodeModel.Children
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Children
- uid: System.Collections.Generic.List{WaveEngine.Framework.Models.Assets.NodeModel}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Models.Assets.NodeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NodeModel>
  nameWithType: List<NodeModel>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Models.Assets.NodeModel>
  nameWithType.vb: List(Of NodeModel)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Models.Assets.NodeModel)
  name.vb: List(Of NodeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Models.Assets.NodeModel
    name: NodeModel
    nameWithType: NodeModel
    fullName: WaveEngine.Framework.Models.Assets.NodeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Models.Assets.NodeModel
    name: NodeModel
    nameWithType: NodeModel
    fullName: WaveEngine.Framework.Models.Assets.NodeModel
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Position*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Position
  name: Position
  nameWithType: NodeModel.Position
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Position
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Orientation*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Orientation
  name: Orientation
  nameWithType: NodeModel.Orientation
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Orientation
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Framework.Models.Assets.NodeModel.Scale*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.Scale
  name: Scale
  nameWithType: NodeModel.Scale
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.Scale
- uid: WaveEngine.Framework.Models.Assets.NodeModel.#ctor*
  commentId: Overload:WaveEngine.Framework.Models.Assets.NodeModel.#ctor
  name: NodeModel
  nameWithType: NodeModel.NodeModel
  fullName: WaveEngine.Framework.Models.Assets.NodeModel.NodeModel
