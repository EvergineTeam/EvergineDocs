### YamlMime:ManagedReference
items:
- uid: WaveEngine.Physics.Simulation3D
  commentId: T:WaveEngine.Physics.Simulation3D
  id: Simulation3D
  parent: WaveEngine.Physics
  children:
  - WaveEngine.Physics.Simulation3D.#ctor
  - WaveEngine.Physics.Simulation3D.CreateBallSocketJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateBox(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateCapsule(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,System.Single,System.Single)
  - WaveEngine.Physics.Simulation3D.CreateCone(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  - WaveEngine.Physics.Simulation3D.CreateCylinder(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  - WaveEngine.Physics.Simulation3D.CreateFixedJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D)
  - WaveEngine.Physics.Simulation3D.CreateHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateLineSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreatePhysicsWorld
  - WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreatePrismaticJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateSphere(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Physics.Simulation3D.CreateStaticMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateTriangleMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.CreateUniversalJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Physics.Simulation3D.DestroyWorld
  - WaveEngine.Physics.Simulation3D.Gravity
  - WaveEngine.Physics.Simulation3D.IterationLimit
  - WaveEngine.Physics.Simulation3D.RayCast(WaveEngine.Common.Math.Ray,WaveEngine.Common.Math.RayHit3D@,WaveEngine.Physics.PhysicsBody3D@)
  - WaveEngine.Physics.Simulation3D.RemoveAllRigidBody
  - WaveEngine.Physics.Simulation3D.RemoveJoint(WaveEngine.Physics.PhysicsJoint3D)
  - WaveEngine.Physics.Simulation3D.RemoveRigidBody(WaveEngine.Physics.PhysicsBody3D)
  - WaveEngine.Physics.Simulation3D.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: Simulation3D
  nameWithType: Simulation3D
  fullName: WaveEngine.Physics.Simulation3D
  type: Class
  source:
    id: Simulation3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 16
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe Simulation3D class manages all 3D physics entities.\n"
  example: []
  syntax:
    content: public sealed class Simulation3D
    content.vb: Public NotInheritable Class Simulation3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Physics.Simulation3D.Gravity
  commentId: P:WaveEngine.Physics.Simulation3D.Gravity
  id: Gravity
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: Simulation3D.Gravity
  fullName: WaveEngine.Physics.Simulation3D.Gravity
  type: Property
  source:
    id: Gravity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 31
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets the gravity.\n"
  example: []
  syntax:
    content: public Vector3 Gravity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe gravity.\n"
    content.vb: Public Property Gravity As Vector3
  overload: WaveEngine.Physics.Simulation3D.Gravity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.IterationLimit
  commentId: P:WaveEngine.Physics.Simulation3D.IterationLimit
  id: IterationLimit
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: IterationLimit
  nameWithType: Simulation3D.IterationLimit
  fullName: WaveEngine.Physics.Simulation3D.IterationLimit
  type: Property
  source:
    id: IterationLimit
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 47
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets Physic World Iteration Limit\n"
  example: []
  syntax:
    content: public int IterationLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IterationLimit As Integer
  overload: WaveEngine.Physics.Simulation3D.IterationLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.#ctor
  commentId: M:WaveEngine.Physics.Simulation3D.#ctor
  id: '#ctor'
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: Simulation3D()
  nameWithType: Simulation3D.Simulation3D()
  fullName: WaveEngine.Physics.Simulation3D.Simulation3D()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 66
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Physics.Simulation3D\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Simulation3D()
    content.vb: Public Sub New
  overload: WaveEngine.Physics.Simulation3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreatePhysicsWorld
  commentId: M:WaveEngine.Physics.Simulation3D.CreatePhysicsWorld
  id: CreatePhysicsWorld
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreatePhysicsWorld()
  nameWithType: Simulation3D.CreatePhysicsWorld()
  fullName: WaveEngine.Physics.Simulation3D.CreatePhysicsWorld()
  type: Method
  source:
    id: CreatePhysicsWorld
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 76
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics world.\n"
  example: []
  syntax:
    content: public void CreatePhysicsWorld()
    content.vb: Public Sub CreatePhysicsWorld
  overload: WaveEngine.Physics.Simulation3D.CreatePhysicsWorld*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.RayCast(WaveEngine.Common.Math.Ray,WaveEngine.Common.Math.RayHit3D@,WaveEngine.Physics.PhysicsBody3D@)
  commentId: M:WaveEngine.Physics.Simulation3D.RayCast(WaveEngine.Common.Math.Ray,WaveEngine.Common.Math.RayHit3D@,WaveEngine.Physics.PhysicsBody3D@)
  id: RayCast(WaveEngine.Common.Math.Ray,WaveEngine.Common.Math.RayHit3D@,WaveEngine.Physics.PhysicsBody3D@)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: RayCast(Ray, out RayHit3D, out PhysicsBody3D)
  nameWithType: Simulation3D.RayCast(Ray, out RayHit3D, out PhysicsBody3D)
  fullName: WaveEngine.Physics.Simulation3D.RayCast(WaveEngine.Common.Math.Ray, out WaveEngine.Common.Math.RayHit3D, out WaveEngine.Physics.PhysicsBody3D)
  type: Method
  source:
    id: RayCast
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 104
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nLaunch a Ray to interact with the simulation\n"
  example: []
  syntax:
    content: public void RayCast(Ray ray, out RayHit3D rayHit, out PhysicsBody3D body)
    parameters:
    - id: ray
      type: WaveEngine.Common.Math.Ray
      description: The ray
    - id: rayHit
      type: WaveEngine.Common.Math.RayHit3D
      description: The ray cast result
    - id: body
      type: WaveEngine.Physics.PhysicsBody3D
      description: The physics body
    content.vb: Public Sub RayCast(ray As Ray, ByRef rayHit As RayHit3D, ByRef body As PhysicsBody3D)
  overload: WaveEngine.Physics.Simulation3D.RayCast*
  nameWithType.vb: Simulation3D.RayCast(Ray, ByRef RayHit3D, ByRef PhysicsBody3D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.Simulation3D.RayCast(WaveEngine.Common.Math.Ray, ByRef WaveEngine.Common.Math.RayHit3D, ByRef WaveEngine.Physics.PhysicsBody3D)
  name.vb: RayCast(Ray, ByRef RayHit3D, ByRef PhysicsBody3D)
- uid: WaveEngine.Physics.Simulation3D.CreateBox(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateBox(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: CreateBox(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateBox(Vector3, Quaternion, Vector3)
  nameWithType: Simulation3D.CreateBox(Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateBox(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateBox
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 131
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics box.\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateBox(Vector3 position, Quaternion orientation, Vector3 size)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Box position.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: The orientation.
    - id: size
      type: WaveEngine.Common.Math.Vector3
      description: Box size.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: "\nA 3D physics box.\n"
    content.vb: Public Function CreateBox(position As Vector3, orientation As Quaternion, size As Vector3) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateBox*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateSphere(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateSphere(WaveEngine.Common.Math.Vector3,System.Single)
  id: CreateSphere(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateSphere(Vector3, Single)
  nameWithType: Simulation3D.CreateSphere(Vector3, Single)
  fullName: WaveEngine.Physics.Simulation3D.CreateSphere(WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: CreateSphere
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 148
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreates a 3D physics sphere.\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateSphere(Vector3 position, float radius)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Sphere position.
    - id: radius
      type: System.Single
      description: Sphere radius.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: A 3D sphere box.
    content.vb: Public Function CreateSphere(position As Vector3, radius As Single) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateSphere*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateCapsule(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,System.Single,System.Single)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateCapsule(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,System.Single,System.Single)
  id: CreateCapsule(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,System.Single,System.Single)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateCapsule(Vector3, Quaternion, Single, Single)
  nameWithType: Simulation3D.CreateCapsule(Vector3, Quaternion, Single, Single)
  fullName: WaveEngine.Physics.Simulation3D.CreateCapsule(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, System.Single, System.Single)
  type: Method
  source:
    id: CreateCapsule
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 167
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3d physics capsule.\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateCapsule(Vector3 position, Quaternion orientation, float length, float radius)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Capsule position.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: The orientation.
    - id: length
      type: System.Single
      description: Capsule length.
    - id: radius
      type: System.Single
      description: Capsule radius.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: "\nA 3D physics capsule.\n"
    content.vb: Public Function CreateCapsule(position As Vector3, orientation As Quaternion, length As Single, radius As Single) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateCapsule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateCylinder(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateCylinder(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  id: CreateCylinder(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateCylinder(Vector3, Single, Single)
  nameWithType: Simulation3D.CreateCylinder(Vector3, Single, Single)
  fullName: WaveEngine.Physics.Simulation3D.CreateCylinder(WaveEngine.Common.Math.Vector3, System.Single, System.Single)
  type: Method
  source:
    id: CreateCylinder
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 184
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3d physics cylinder.\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateCylinder(Vector3 position, float length, float radius)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Cylinder position.
    - id: length
      type: System.Single
      description: Cylinder length.
    - id: radius
      type: System.Single
      description: Cylinder radius.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: A 3D physics cylinder.
    content.vb: Public Function CreateCylinder(position As Vector3, length As Single, radius As Single) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateCylinder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateCone(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateCone(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  id: CreateCone(WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateCone(Vector3, Single, Single)
  nameWithType: Simulation3D.CreateCone(Vector3, Single, Single)
  fullName: WaveEngine.Physics.Simulation3D.CreateCone(WaveEngine.Common.Math.Vector3, System.Single, System.Single)
  type: Method
  source:
    id: CreateCone
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 200
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics cone.\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateCone(Vector3 position, float length, float radius)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Cone position.
    - id: length
      type: System.Single
      description: Cone length.
    - id: radius
      type: System.Single
      description: Cone radius.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: A 3D physics cone.
    content.vb: Public Function CreateCone(position As Vector3, length As Single, radius As Single) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateCone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateTriangleMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateTriangleMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: CreateTriangleMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateTriangleMesh(Vector3[], Int32[], Vector3, Quaternion, Vector3)
  nameWithType: Simulation3D.CreateTriangleMesh(Vector3[], Int32[], Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateTriangleMesh(WaveEngine.Common.Math.Vector3[], System.Int32[], WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateTriangleMesh
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 218
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreates a triangle Mesh\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateTriangleMesh(Vector3[] vertices, int[] indices, Vector3 position, Quaternion orientation, Vector3 scale)
    parameters:
    - id: vertices
      type: WaveEngine.Common.Math.Vector3[]
      description: The Vertices
    - id: indices
      type: System.Int32[]
      description: The Indices
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Mesh position.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: Mesh orientation.
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: Mesh scale.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: A 3d Physics Triangle Mesh
    content.vb: Public Function CreateTriangleMesh(vertices As Vector3(), indices As Integer(), position As Vector3, orientation As Quaternion, scale As Vector3) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateTriangleMesh*
  nameWithType.vb: Simulation3D.CreateTriangleMesh(Vector3(), Int32(), Vector3, Quaternion, Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.Simulation3D.CreateTriangleMesh(WaveEngine.Common.Math.Vector3(), System.Int32(), WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  name.vb: CreateTriangleMesh(Vector3(), Int32(), Vector3, Quaternion, Vector3)
- uid: WaveEngine.Physics.Simulation3D.CreateStaticMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateStaticMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: CreateStaticMesh(WaveEngine.Common.Math.Vector3[],System.Int32[],WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateStaticMesh(Vector3[], Int32[], Vector3, Quaternion, Vector3)
  nameWithType: Simulation3D.CreateStaticMesh(Vector3[], Int32[], Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateStaticMesh(WaveEngine.Common.Math.Vector3[], System.Int32[], WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateStaticMesh
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 240
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreates a static Mesh\n"
  example: []
  syntax:
    content: public PhysicsBody3D CreateStaticMesh(Vector3[] vertices, int[] indices, Vector3 position, Quaternion orientation, Vector3 scale)
    parameters:
    - id: vertices
      type: WaveEngine.Common.Math.Vector3[]
      description: The Vertices
    - id: indices
      type: System.Int32[]
      description: The Indices
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Mesh position.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: Mesh orientation.
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: Mesh scale.
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: A 3d Physics Triangle Mesh
    content.vb: Public Function CreateStaticMesh(vertices As Vector3(), indices As Integer(), position As Vector3, orientation As Quaternion, scale As Vector3) As PhysicsBody3D
  overload: WaveEngine.Physics.Simulation3D.CreateStaticMesh*
  nameWithType.vb: Simulation3D.CreateStaticMesh(Vector3(), Int32(), Vector3, Quaternion, Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.Simulation3D.CreateStaticMesh(WaveEngine.Common.Math.Vector3(), System.Int32(), WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  name.vb: CreateStaticMesh(Vector3(), Int32(), Vector3, Quaternion, Vector3)
- uid: WaveEngine.Physics.Simulation3D.CreateFixedJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateFixedJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D)
  id: CreateFixedJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateFixedJoint(PhysicsBody3D, PhysicsBody3D)
  nameWithType: Simulation3D.CreateFixedJoint(PhysicsBody3D, PhysicsBody3D)
  fullName: WaveEngine.Physics.Simulation3D.CreateFixedJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D)
  type: Method
  source:
    id: CreateFixedJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 256
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics fixed joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateFixedJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: Fist physics body.
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics fixed joint.
    content.vb: Public Function CreateFixedJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateFixedJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateBallSocketJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateBallSocketJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  id: CreateBallSocketJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateBallSocketJoint(PhysicsBody3D, PhysicsBody3D, Vector3)
  nameWithType: Simulation3D.CreateBallSocketJoint(PhysicsBody3D, PhysicsBody3D, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateBallSocketJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateBallSocketJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 270
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics ball socket joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateBallSocketJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 anchorLocation)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: Fist physics body.
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: anchorLocation
      type: WaveEngine.Common.Math.Vector3
      description: The anchor location.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics ball socket joint.
    content.vb: Public Function CreateBallSocketJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, anchorLocation As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateBallSocketJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreateHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateHingeJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3)
  nameWithType: Simulation3D.CreateHingeJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateHingeJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateHingeJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 286
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics hinge joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateHingeJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 anchorLocation, Vector3 freeAxis)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: anchorLocation
      type: WaveEngine.Common.Math.Vector3
      description: The anchor location.
    - id: freeAxis
      type: WaveEngine.Common.Math.Vector3
      description: The free axis.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3d physics hinge joint.
    content.vb: Public Function CreateHingeJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, anchorLocation As Vector3, freeAxis As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateHingeJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreatePointPointDistanceJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreatePointPointDistanceJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3)
  nameWithType: Simulation3D.CreatePointPointDistanceJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreatePointPointDistanceJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 304
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics the point point distance joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreatePointPointDistanceJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 anchorLocation, Vector3 freeAxis)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: anchorLocation
      type: WaveEngine.Common.Math.Vector3
      description: The anchor location.
    - id: freeAxis
      type: WaveEngine.Common.Math.Vector3
      description: The free axis.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics point point distance joint.
    content.vb: Public Function CreatePointPointDistanceJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, anchorLocation As Vector3, freeAxis As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateLineSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateLineSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreateLineSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateLineSliderJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3, Vector3)
  nameWithType: Simulation3D.CreateLineSliderJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateLineSliderJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateLineSliderJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 321
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics line slider joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateLineSliderJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 lineAnchor, Vector3 lineDirection, Vector3 pointAnchor)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: lineAnchor
      type: WaveEngine.Common.Math.Vector3
      description: The line anchor.
    - id: lineDirection
      type: WaveEngine.Common.Math.Vector3
      description: The line direction.
    - id: pointAnchor
      type: WaveEngine.Common.Math.Vector3
      description: The point anchor.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics line slider joint.
    content.vb: Public Function CreateLineSliderJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, lineAnchor As Vector3, lineDirection As Vector3, pointAnchor As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateLineSliderJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreatePlaneSliderJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreatePlaneSliderJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3, Vector3, Vector3, Vector3)
  nameWithType: Simulation3D.CreatePlaneSliderJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3, Vector3, Vector3, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreatePlaneSliderJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 343
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics plane slider joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreatePlaneSliderJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 planeAnchor, Vector3 planeNormal, Vector3 xAxis, Vector3 yAxis, Vector3 pointAnchor)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: planeAnchor
      type: WaveEngine.Common.Math.Vector3
      description: The plane anchor.
    - id: planeNormal
      type: WaveEngine.Common.Math.Vector3
      description: The plane normal.
    - id: xAxis
      type: WaveEngine.Common.Math.Vector3
      description: The x axis.
    - id: yAxis
      type: WaveEngine.Common.Math.Vector3
      description: The y axis.
    - id: pointAnchor
      type: WaveEngine.Common.Math.Vector3
      description: The point anchor.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics plane slider joint.
    content.vb: Public Function CreatePlaneSliderJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, planeAnchor As Vector3, planeNormal As Vector3, xAxis As Vector3, yAxis As Vector3, pointAnchor As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreatePrismaticJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreatePrismaticJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreatePrismaticJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreatePrismaticJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3, Vector3)
  nameWithType: Simulation3D.CreatePrismaticJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreatePrismaticJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreatePrismaticJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 366
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics prismatic joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreatePrismaticJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 lineAnchor, Vector3 lineDirection, Vector3 pointAnchor)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: lineAnchor
      type: WaveEngine.Common.Math.Vector3
      description: The line anchor.
    - id: lineDirection
      type: WaveEngine.Common.Math.Vector3
      description: The line direction.
    - id: pointAnchor
      type: WaveEngine.Common.Math.Vector3
      description: The point anchor.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics prismatic joint.
    content.vb: Public Function CreatePrismaticJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, lineAnchor As Vector3, lineDirection As Vector3, pointAnchor As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreatePrismaticJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreateSwivelHingeJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateSwivelHingeJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3)
  nameWithType: Simulation3D.CreateSwivelHingeJoint(PhysicsBody3D, PhysicsBody3D, Vector3, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateSwivelHingeJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 385
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics swivel hinge joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateSwivelHingeJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 anchorLocation, Vector3 freeAxis)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: anchorLocation
      type: WaveEngine.Common.Math.Vector3
      description: The anchor.
    - id: freeAxis
      type: WaveEngine.Common.Math.Vector3
      description: The hinge axis.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics swivel hinge joint.
    content.vb: Public Function CreateSwivelHingeJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, anchorLocation As Vector3, freeAxis As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateUniversalJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateUniversalJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  id: CreateUniversalJoint(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateUniversalJoint(PhysicsBody3D, PhysicsBody3D, Vector3)
  nameWithType: Simulation3D.CreateUniversalJoint(PhysicsBody3D, PhysicsBody3D, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateUniversalJoint(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateUniversalJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 402
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreate a 3D physics universal joint.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateUniversalJoint(PhysicsBody3D bodyA, PhysicsBody3D bodyB, Vector3 anchorLocation)
    parameters:
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: 'Fist physics body.  '
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: anchorLocation
      type: WaveEngine.Common.Math.Vector3
      description: The anchor.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: A 3D physics universal joint.
    content.vb: Public Function CreateUniversalJoint(bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, anchorLocation As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateUniversalJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  id: CreateMotorizedGrabSpring(WaveEngine.Physics.PhysicsBody3D,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: CreateMotorizedGrabSpring(PhysicsBody3D, Vector3)
  nameWithType: Simulation3D.CreateMotorizedGrabSpring(PhysicsBody3D, Vector3)
  fullName: WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring(WaveEngine.Physics.PhysicsBody3D, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateMotorizedGrabSpring
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 416
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nCreates a Motorized Grab spring to move Entities on the Space\n"
  example: []
  syntax:
    content: public PhysicsJoint3D CreateMotorizedGrabSpring(PhysicsBody3D body, Vector3 grabLocation)
    parameters:
    - id: body
      type: WaveEngine.Physics.PhysicsBody3D
      description: Physic Body.
    - id: grabLocation
      type: WaveEngine.Common.Math.Vector3
      description: Grab Location.
    return:
      type: WaveEngine.Physics.PhysicsJoint3D
      description: Returns a MotorizedGrabSpring Joint
    content.vb: Public Function CreateMotorizedGrabSpring(body As PhysicsBody3D, grabLocation As Vector3) As PhysicsJoint3D
  overload: WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.RemoveJoint(WaveEngine.Physics.PhysicsJoint3D)
  commentId: M:WaveEngine.Physics.Simulation3D.RemoveJoint(WaveEngine.Physics.PhysicsJoint3D)
  id: RemoveJoint(WaveEngine.Physics.PhysicsJoint3D)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: RemoveJoint(PhysicsJoint3D)
  nameWithType: Simulation3D.RemoveJoint(PhysicsJoint3D)
  fullName: WaveEngine.Physics.Simulation3D.RemoveJoint(WaveEngine.Physics.PhysicsJoint3D)
  type: Method
  source:
    id: RemoveJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 428
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nRemoves a Physic Joint 3D from Physic Space.\n"
  example: []
  syntax:
    content: public void RemoveJoint(PhysicsJoint3D physicJoint)
    parameters:
    - id: physicJoint
      type: WaveEngine.Physics.PhysicsJoint3D
      description: Physic Joint 3D
    content.vb: Public Sub RemoveJoint(physicJoint As PhysicsJoint3D)
  overload: WaveEngine.Physics.Simulation3D.RemoveJoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.RemoveAllRigidBody
  commentId: M:WaveEngine.Physics.Simulation3D.RemoveAllRigidBody
  id: RemoveAllRigidBody
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: RemoveAllRigidBody()
  nameWithType: Simulation3D.RemoveAllRigidBody()
  fullName: WaveEngine.Physics.Simulation3D.RemoveAllRigidBody()
  type: Method
  source:
    id: RemoveAllRigidBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 459
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nRemoves all 3D rigid body.\n"
  example: []
  syntax:
    content: public void RemoveAllRigidBody()
    content.vb: Public Sub RemoveAllRigidBody
  overload: WaveEngine.Physics.Simulation3D.RemoveAllRigidBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.RemoveRigidBody(WaveEngine.Physics.PhysicsBody3D)
  commentId: M:WaveEngine.Physics.Simulation3D.RemoveRigidBody(WaveEngine.Physics.PhysicsBody3D)
  id: RemoveRigidBody(WaveEngine.Physics.PhysicsBody3D)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: RemoveRigidBody(PhysicsBody3D)
  nameWithType: Simulation3D.RemoveRigidBody(PhysicsBody3D)
  fullName: WaveEngine.Physics.Simulation3D.RemoveRigidBody(WaveEngine.Physics.PhysicsBody3D)
  type: Method
  source:
    id: RemoveRigidBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 468
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nRemoves the 3D rigid body.\n"
  example: []
  syntax:
    content: public void RemoveRigidBody(PhysicsBody3D physicsBody)
    parameters:
    - id: physicsBody
      type: WaveEngine.Physics.PhysicsBody3D
      description: The physics body.
    content.vb: Public Sub RemoveRigidBody(physicsBody As PhysicsBody3D)
  overload: WaveEngine.Physics.Simulation3D.RemoveRigidBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.Update(System.TimeSpan)
  commentId: M:WaveEngine.Physics.Simulation3D.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: Simulation3D.Update(TimeSpan)
  fullName: WaveEngine.Physics.Simulation3D.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 477
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nUpdate all 3D physics entities for this instance.\n"
  example: []
  syntax:
    content: public void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: Elapsed game time.
    content.vb: Public Sub Update(gameTime As TimeSpan)
  overload: WaveEngine.Physics.Simulation3D.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.Simulation3D.DestroyWorld
  commentId: M:WaveEngine.Physics.Simulation3D.DestroyWorld
  id: DestroyWorld
  parent: WaveEngine.Physics.Simulation3D
  langs:
  - csharp
  - vb
  name: DestroyWorld()
  nameWithType: Simulation3D.DestroyWorld()
  fullName: WaveEngine.Physics.Simulation3D.DestroyWorld()
  type: Method
  source:
    id: DestroyWorld
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\Simulation3D.cs
    startLine: 486
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nDestroys all 3d physics entities for this instance.\n"
  example: []
  syntax:
    content: public void DestroyWorld()
    content.vb: Public Sub DestroyWorld
  overload: WaveEngine.Physics.Simulation3D.DestroyWorld*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Physics
  commentId: N:WaveEngine.Physics
  name: WaveEngine.Physics
  nameWithType: WaveEngine.Physics
  fullName: WaveEngine.Physics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Physics.Simulation3D.Gravity*
  commentId: Overload:WaveEngine.Physics.Simulation3D.Gravity
  name: Gravity
  nameWithType: Simulation3D.Gravity
  fullName: WaveEngine.Physics.Simulation3D.Gravity
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Physics.Simulation3D.IterationLimit*
  commentId: Overload:WaveEngine.Physics.Simulation3D.IterationLimit
  name: IterationLimit
  nameWithType: Simulation3D.IterationLimit
  fullName: WaveEngine.Physics.Simulation3D.IterationLimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Physics.Simulation3D
  commentId: T:WaveEngine.Physics.Simulation3D
  parent: WaveEngine.Physics
  name: Simulation3D
  nameWithType: Simulation3D
  fullName: WaveEngine.Physics.Simulation3D
- uid: WaveEngine.Physics.Simulation3D.#ctor*
  commentId: Overload:WaveEngine.Physics.Simulation3D.#ctor
  name: Simulation3D
  nameWithType: Simulation3D.Simulation3D
  fullName: WaveEngine.Physics.Simulation3D.Simulation3D
- uid: WaveEngine.Physics.Simulation3D.CreatePhysicsWorld*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreatePhysicsWorld
  name: CreatePhysicsWorld
  nameWithType: Simulation3D.CreatePhysicsWorld
  fullName: WaveEngine.Physics.Simulation3D.CreatePhysicsWorld
- uid: WaveEngine.Physics.Simulation3D.RayCast*
  commentId: Overload:WaveEngine.Physics.Simulation3D.RayCast
  name: RayCast
  nameWithType: Simulation3D.RayCast
  fullName: WaveEngine.Physics.Simulation3D.RayCast
- uid: WaveEngine.Common.Math.Ray
  commentId: T:WaveEngine.Common.Math.Ray
  parent: WaveEngine.Common.Math
  name: Ray
  nameWithType: Ray
  fullName: WaveEngine.Common.Math.Ray
- uid: WaveEngine.Common.Math.RayHit3D
  commentId: T:WaveEngine.Common.Math.RayHit3D
  parent: WaveEngine.Common.Math
  name: RayHit3D
  nameWithType: RayHit3D
  fullName: WaveEngine.Common.Math.RayHit3D
- uid: WaveEngine.Physics.PhysicsBody3D
  commentId: T:WaveEngine.Physics.PhysicsBody3D
  parent: WaveEngine.Physics
  name: PhysicsBody3D
  nameWithType: PhysicsBody3D
  fullName: WaveEngine.Physics.PhysicsBody3D
- uid: WaveEngine.Physics.Simulation3D.CreateBox*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateBox
  name: CreateBox
  nameWithType: Simulation3D.CreateBox
  fullName: WaveEngine.Physics.Simulation3D.CreateBox
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Physics.Simulation3D.CreateSphere*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateSphere
  name: CreateSphere
  nameWithType: Simulation3D.CreateSphere
  fullName: WaveEngine.Physics.Simulation3D.CreateSphere
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Physics.Simulation3D.CreateCapsule*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateCapsule
  name: CreateCapsule
  nameWithType: Simulation3D.CreateCapsule
  fullName: WaveEngine.Physics.Simulation3D.CreateCapsule
- uid: WaveEngine.Physics.Simulation3D.CreateCylinder*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateCylinder
  name: CreateCylinder
  nameWithType: Simulation3D.CreateCylinder
  fullName: WaveEngine.Physics.Simulation3D.CreateCylinder
- uid: WaveEngine.Physics.Simulation3D.CreateCone*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateCone
  name: CreateCone
  nameWithType: Simulation3D.CreateCone
  fullName: WaveEngine.Physics.Simulation3D.CreateCone
- uid: WaveEngine.Physics.Simulation3D.CreateTriangleMesh*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateTriangleMesh
  name: CreateTriangleMesh
  nameWithType: Simulation3D.CreateTriangleMesh
  fullName: WaveEngine.Physics.Simulation3D.CreateTriangleMesh
- uid: WaveEngine.Common.Math.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: WaveEngine.Common.Math.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: WaveEngine.Common.Math.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Physics.Simulation3D.CreateStaticMesh*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateStaticMesh
  name: CreateStaticMesh
  nameWithType: Simulation3D.CreateStaticMesh
  fullName: WaveEngine.Physics.Simulation3D.CreateStaticMesh
- uid: WaveEngine.Physics.Simulation3D.CreateFixedJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateFixedJoint
  name: CreateFixedJoint
  nameWithType: Simulation3D.CreateFixedJoint
  fullName: WaveEngine.Physics.Simulation3D.CreateFixedJoint
- uid: WaveEngine.Physics.PhysicsJoint3D
  commentId: T:WaveEngine.Physics.PhysicsJoint3D
  parent: WaveEngine.Physics
  name: PhysicsJoint3D
  nameWithType: PhysicsJoint3D
  fullName: WaveEngine.Physics.PhysicsJoint3D
- uid: WaveEngine.Physics.Simulation3D.CreateBallSocketJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateBallSocketJoint
  name: CreateBallSocketJoint
  nameWithType: Simulation3D.CreateBallSocketJoint
  fullName: WaveEngine.Physics.Simulation3D.CreateBallSocketJoint
- uid: WaveEngine.Physics.Simulation3D.CreateHingeJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateHingeJoint
  name: CreateHingeJoint
  nameWithType: Simulation3D.CreateHingeJoint
  fullName: WaveEngine.Physics.Simulation3D.CreateHingeJoint
- uid: WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint
  name: CreatePointPointDistanceJoint
  nameWithType: Simulation3D.CreatePointPointDistanceJoint
  fullName: WaveEngine.Physics.Simulation3D.CreatePointPointDistanceJoint
- uid: WaveEngine.Physics.Simulation3D.CreateLineSliderJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateLineSliderJoint
  name: CreateLineSliderJoint
  nameWithType: Simulation3D.CreateLineSliderJoint
  fullName: WaveEngine.Physics.Simulation3D.CreateLineSliderJoint
- uid: WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint
  name: CreatePlaneSliderJoint
  nameWithType: Simulation3D.CreatePlaneSliderJoint
  fullName: WaveEngine.Physics.Simulation3D.CreatePlaneSliderJoint
- uid: WaveEngine.Physics.Simulation3D.CreatePrismaticJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreatePrismaticJoint
  name: CreatePrismaticJoint
  nameWithType: Simulation3D.CreatePrismaticJoint
  fullName: WaveEngine.Physics.Simulation3D.CreatePrismaticJoint
- uid: WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint
  name: CreateSwivelHingeJoint
  nameWithType: Simulation3D.CreateSwivelHingeJoint
  fullName: WaveEngine.Physics.Simulation3D.CreateSwivelHingeJoint
- uid: WaveEngine.Physics.Simulation3D.CreateUniversalJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateUniversalJoint
  name: CreateUniversalJoint
  nameWithType: Simulation3D.CreateUniversalJoint
  fullName: WaveEngine.Physics.Simulation3D.CreateUniversalJoint
- uid: WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring*
  commentId: Overload:WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring
  name: CreateMotorizedGrabSpring
  nameWithType: Simulation3D.CreateMotorizedGrabSpring
  fullName: WaveEngine.Physics.Simulation3D.CreateMotorizedGrabSpring
- uid: WaveEngine.Physics.Simulation3D.RemoveJoint*
  commentId: Overload:WaveEngine.Physics.Simulation3D.RemoveJoint
  name: RemoveJoint
  nameWithType: Simulation3D.RemoveJoint
  fullName: WaveEngine.Physics.Simulation3D.RemoveJoint
- uid: WaveEngine.Physics.Simulation3D.RemoveAllRigidBody*
  commentId: Overload:WaveEngine.Physics.Simulation3D.RemoveAllRigidBody
  name: RemoveAllRigidBody
  nameWithType: Simulation3D.RemoveAllRigidBody
  fullName: WaveEngine.Physics.Simulation3D.RemoveAllRigidBody
- uid: WaveEngine.Physics.Simulation3D.RemoveRigidBody*
  commentId: Overload:WaveEngine.Physics.Simulation3D.RemoveRigidBody
  name: RemoveRigidBody
  nameWithType: Simulation3D.RemoveRigidBody
  fullName: WaveEngine.Physics.Simulation3D.RemoveRigidBody
- uid: WaveEngine.Physics.Simulation3D.Update*
  commentId: Overload:WaveEngine.Physics.Simulation3D.Update
  name: Update
  nameWithType: Simulation3D.Update
  fullName: WaveEngine.Physics.Simulation3D.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Physics.Simulation3D.DestroyWorld*
  commentId: Overload:WaveEngine.Physics.Simulation3D.DestroyWorld
  name: DestroyWorld
  nameWithType: Simulation3D.DestroyWorld
  fullName: WaveEngine.Physics.Simulation3D.DestroyWorld
