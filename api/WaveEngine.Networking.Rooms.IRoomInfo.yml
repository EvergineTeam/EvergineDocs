### YamlMime:ManagedReference
items:
- uid: WaveEngine.Networking.Rooms.IRoomInfo
  commentId: T:WaveEngine.Networking.Rooms.IRoomInfo
  id: IRoomInfo
  parent: WaveEngine.Networking.Rooms
  children:
  - WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  - WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  - WaveEngine.Networking.Rooms.IRoomInfo.Name
  - WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  - WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  langs:
  - csharp
  - vb
  name: IRoomInfo
  nameWithType: IRoomInfo
  fullName: WaveEngine.Networking.Rooms.IRoomInfo
  type: Interface
  source:
    id: IRoomInfo
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\IRoomInfo.cs
    startLine: 11
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nDefines the basic information of a network room\n"
  example: []
  syntax:
    content: public interface IRoomInfo
    content.vb: Public Interface IRoomInfo
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Networking.Rooms.IRoomInfo.Name
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.Name
  id: Name
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IRoomInfo.Name
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\IRoomInfo.cs
    startLine: 21
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nGets the name of a room. Unique identifier for a room/match (per AppId + game-Version).\n"
  remarks: "\nThe name can&apos;t be changed once it&apos;s set by the matchmaking server.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: WaveEngine.Networking.Rooms.IRoomInfo.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  id: PlayerCount
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  langs:
  - csharp
  - vb
  name: PlayerCount
  nameWithType: IRoomInfo.PlayerCount
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  type: Property
  source:
    id: PlayerCount
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\IRoomInfo.cs
    startLine: 26
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nGets the count of players currently in room.\n"
  example: []
  syntax:
    content: byte PlayerCount { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: ReadOnly Property PlayerCount As Byte
  overload: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  id: IsFull
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  langs:
  - csharp
  - vb
  name: IsFull
  nameWithType: IRoomInfo.IsFull
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  type: Property
  source:
    id: IsFull
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\IRoomInfo.cs
    startLine: 31
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nGets a value indicating whether the room is full and therefore, no more players can join it.\n"
  example: []
  syntax:
    content: bool IsFull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsFull As Boolean
  overload: WaveEngine.Networking.Rooms.IRoomInfo.IsFull*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  id: PropertiesListedInLobby
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  langs:
  - csharp
  - vb
  name: PropertiesListedInLobby
  nameWithType: IRoomInfo.PropertiesListedInLobby
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  type: Property
  source:
    id: PropertiesListedInLobby
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\IRoomInfo.cs
    startLine: 40
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nGets a set of string properties that are in the RoomInfo of the Lobby.\nThis list is defined when creating the room and can&apos;t be changed afterwards.\n"
  remarks: "\nYou could name properties that are not set from the beginning. Those will be synchronized with the lobby when added later on.\n"
  example: []
  syntax:
    content: HashSet<string> PropertiesListedInLobby { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: ReadOnly Property PropertiesListedInLobby As HashSet(Of String)
  overload: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  id: MaxPlayers
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  langs:
  - csharp
  - vb
  name: MaxPlayers
  nameWithType: IRoomInfo.MaxPlayers
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  type: Property
  source:
    id: MaxPlayers
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\IRoomInfo.cs
    startLine: 49
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nGets the limit of players for this room. This property is shown in lobby, too.\nIf the room is full (players count == maxplayers), joining this room will fail.\n"
  remarks: "\nIf the player has joined the room, the setter will update the server and all clients.\n"
  example: []
  syntax:
    content: byte MaxPlayers { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: ReadOnly Property MaxPlayers As Byte
  overload: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: WaveEngine.Networking.Rooms
  commentId: N:WaveEngine.Networking.Rooms
  name: WaveEngine.Networking.Rooms
  nameWithType: WaveEngine.Networking.Rooms
  fullName: WaveEngine.Networking.Rooms
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Networking.Rooms.IRoomInfo.Name*
  commentId: Overload:WaveEngine.Networking.Rooms.IRoomInfo.Name
  name: Name
  nameWithType: IRoomInfo.Name
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount*
  commentId: Overload:WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  name: PlayerCount
  nameWithType: IRoomInfo.PlayerCount
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: WaveEngine.Networking.Rooms.IRoomInfo.IsFull*
  commentId: Overload:WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  name: IsFull
  nameWithType: IRoomInfo.IsFull
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.IsFull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby*
  commentId: Overload:WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  name: PropertiesListedInLobby
  nameWithType: IRoomInfo.PropertiesListedInLobby
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers*
  commentId: Overload:WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  name: MaxPlayers
  nameWithType: IRoomInfo.MaxPlayers
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
