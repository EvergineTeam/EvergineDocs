### YamlMime:ManagedReference
items:
- uid: WaveEngine.Components.Catalog
  commentId: T:WaveEngine.Components.Catalog
  id: Catalog
  parent: WaveEngine.Components
  children:
  - WaveEngine.Components.Catalog.GetItem``1
  - WaveEngine.Components.Catalog.RegisterItem``1(``0)
  langs:
  - csharp
  - vb
  name: Catalog
  nameWithType: Catalog
  fullName: WaveEngine.Components.Catalog
  type: Class
  source:
    id: Catalog
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Catalog.cs
    startLine: 13
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components
  summary: "\nClass that holds a catalog of items organized by their types.\n"
  example: []
  syntax:
    content: public static class Catalog
    content.vb: Public Module Catalog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Components.Catalog.RegisterItem``1(``0)
  commentId: M:WaveEngine.Components.Catalog.RegisterItem``1(``0)
  id: RegisterItem``1(``0)
  parent: WaveEngine.Components.Catalog
  langs:
  - csharp
  - vb
  name: RegisterItem<T>(T)
  nameWithType: Catalog.RegisterItem<T>(T)
  fullName: WaveEngine.Components.Catalog.RegisterItem<T>(T)
  type: Method
  source:
    id: RegisterItem
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Catalog.cs
    startLine: 28
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components
  summary: "\nRegisters an item.\n"
  example: []
  syntax:
    content: public static void RegisterItem<T>(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to register.
    typeParameters:
    - id: T
      description: Type of the item
    content.vb: Public Shared Sub RegisterItem(Of T)(item As T)
  overload: WaveEngine.Components.Catalog.RegisterItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If item is null.
  nameWithType.vb: Catalog.RegisterItem(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.Catalog.RegisterItem(Of T)(T)
  name.vb: RegisterItem(Of T)(T)
- uid: WaveEngine.Components.Catalog.GetItem``1
  commentId: M:WaveEngine.Components.Catalog.GetItem``1
  id: GetItem``1
  parent: WaveEngine.Components.Catalog
  langs:
  - csharp
  - vb
  name: GetItem<T>()
  nameWithType: Catalog.GetItem<T>()
  fullName: WaveEngine.Components.Catalog.GetItem<T>()
  type: Method
  source:
    id: GetItem
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Catalog.cs
    startLine: 43
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components
  summary: "\nGets an item.\n"
  example: []
  syntax:
    content: public static T GetItem<T>()
    typeParameters:
    - id: T
      description: Type of the item.
    return:
      type: '{T}'
      description: The registered item, or the default value for its type in case it was not found.
    content.vb: Public Shared Function GetItem(Of T) As T
  overload: WaveEngine.Components.Catalog.GetItem*
  nameWithType.vb: Catalog.GetItem(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Components.Catalog.GetItem(Of T)()
  name.vb: GetItem(Of T)()
references:
- uid: WaveEngine.Components
  commentId: N:WaveEngine.Components
  name: WaveEngine.Components
  nameWithType: WaveEngine.Components
  fullName: WaveEngine.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: WaveEngine.Components.Catalog.RegisterItem*
  commentId: Overload:WaveEngine.Components.Catalog.RegisterItem
  name: RegisterItem
  nameWithType: Catalog.RegisterItem
  fullName: WaveEngine.Components.Catalog.RegisterItem
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Components.Catalog.GetItem*
  commentId: Overload:WaveEngine.Components.Catalog.GetItem
  name: GetItem
  nameWithType: Catalog.GetItem
  fullName: WaveEngine.Components.Catalog.GetItem
