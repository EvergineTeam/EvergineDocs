### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Input.TouchPanelState
  commentId: T:WaveEngine.Common.Input.TouchPanelState
  id: TouchPanelState
  parent: WaveEngine.Common.Input
  children:
  - WaveEngine.Common.Input.TouchPanelState.#ctor(WaveEngine.Common.Input.TouchLocation[])
  - WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32,System.Single,System.Single)
  - WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  - WaveEngine.Common.Input.TouchPanelState.Clear
  - WaveEngine.Common.Input.TouchPanelState.Contains(System.Int32)
  - WaveEngine.Common.Input.TouchPanelState.Contains(WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchPanelState.CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  - WaveEngine.Common.Input.TouchPanelState.Count
  - WaveEngine.Common.Input.TouchPanelState.GetEnumerator
  - WaveEngine.Common.Input.TouchPanelState.IndexOf(WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchPanelState.IsConnected
  - WaveEngine.Common.Input.TouchPanelState.IsReadOnly
  - WaveEngine.Common.Input.TouchPanelState.Item(System.Int32)
  - WaveEngine.Common.Input.TouchPanelState.MaxTouches
  - WaveEngine.Common.Input.TouchPanelState.ModifyTouch(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  - WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation(System.Int32)
  - WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add(WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove(WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator
  - WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt(System.Int32)
  - WaveEngine.Common.Input.TouchPanelState.System#Collections#IEnumerable#GetEnumerator
  - WaveEngine.Common.Input.TouchPanelState.TryGetTouch(System.Int32,WaveEngine.Common.Input.TouchLocation@)
  - WaveEngine.Common.Input.TouchPanelState.Update
  langs:
  - csharp
  - vb
  name: TouchPanelState
  nameWithType: TouchPanelState
  fullName: WaveEngine.Common.Input.TouchPanelState
  type: Struct
  source:
    id: TouchPanelState
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nRepresents the state of the touch panel.\n"
  example: []
  syntax:
    content: 'public struct TouchPanelState : IController, IList<TouchLocation>, ICollection<TouchLocation>, IEnumerable<TouchLocation>, IEnumerable'
    content.vb: >-
      Public Structure TouchPanelState

          Implements IController, IList(Of TouchLocation), ICollection(Of TouchLocation), IEnumerable(Of TouchLocation), IEnumerable
  implements:
  - WaveEngine.Common.Input.IController
  - System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  - System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Input.TouchPanelState.MaxTouches
  commentId: F:WaveEngine.Common.Input.TouchPanelState.MaxTouches
  id: MaxTouches
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: MaxTouches
  nameWithType: TouchPanelState.MaxTouches
  fullName: WaveEngine.Common.Input.TouchPanelState.MaxTouches
  type: Field
  source:
    id: MaxTouches
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 118
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nMaximum number of touches.\n"
  example: []
  syntax:
    content: public const int MaxTouches = 16
    return:
      type: System.Int32
    content.vb: Public Const MaxTouches As Integer = 16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Input.TouchPanelState.IsConnected
  commentId: P:WaveEngine.Common.Input.TouchPanelState.IsConnected
  id: IsConnected
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: TouchPanelState.IsConnected
  fullName: WaveEngine.Common.Input.TouchPanelState.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 140
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets or sets a value indicating whether this instance is connected.\n"
  example: []
  syntax:
    content: public bool IsConnected { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is connected; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsConnected As Boolean
  overload: WaveEngine.Common.Input.TouchPanelState.IsConnected*
  implements:
  - WaveEngine.Common.Input.IController.IsConnected
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.Count
  commentId: P:WaveEngine.Common.Input.TouchPanelState.Count
  id: Count
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TouchPanelState.Count
  fullName: WaveEngine.Common.Input.TouchPanelState.Count
  type: Property
  source:
    id: Count
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 149
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets the count.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: WaveEngine.Common.Input.TouchPanelState.Count*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Input.TouchPanelState.IsReadOnly
  commentId: P:WaveEngine.Common.Input.TouchPanelState.IsReadOnly
  id: IsReadOnly
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: TouchPanelState.IsReadOnly
  fullName: WaveEngine.Common.Input.TouchPanelState.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 160
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets a value indicating whether this instance is read only.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is read only; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: WaveEngine.Common.Input.TouchPanelState.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Input.TouchPanelState.Item(System.Int32)
  commentId: P:WaveEngine.Common.Input.TouchPanelState.Item(System.Int32)
  id: Item(System.Int32)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TouchPanelState.Item[Int32]
  fullName: WaveEngine.Common.Input.TouchPanelState.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 170
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets or sets the <xref href=\"WaveEngine.Common.Input.TouchLocation\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public TouchLocation this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Touch index.
    return:
      type: WaveEngine.Common.Input.TouchLocation
      description: The result.
    content.vb: Public Property Item(index As Integer) As TouchLocation
  overload: WaveEngine.Common.Input.TouchPanelState.Item*
  implements:
  - System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.Item(System.Int32)
  nameWithType.vb: TouchPanelState.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Input.TouchPanelState.Item(System.Int32)
  name.vb: Item(Int32)
- uid: WaveEngine.Common.Input.TouchPanelState.#ctor(WaveEngine.Common.Input.TouchLocation[])
  commentId: M:WaveEngine.Common.Input.TouchPanelState.#ctor(WaveEngine.Common.Input.TouchLocation[])
  id: '#ctor(WaveEngine.Common.Input.TouchLocation[])'
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: TouchPanelState(TouchLocation[])
  nameWithType: TouchPanelState.TouchPanelState(TouchLocation[])
  fullName: WaveEngine.Common.Input.TouchPanelState.TouchPanelState(WaveEngine.Common.Input.TouchLocation[])
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 208
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Input.TouchPanelState\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public TouchPanelState(TouchLocation[] touches)
    parameters:
    - id: touches
      type: WaveEngine.Common.Input.TouchLocation[]
      description: The touches.
    content.vb: Public Sub New(touches As TouchLocation())
  overload: WaveEngine.Common.Input.TouchPanelState.#ctor*
  nameWithType.vb: TouchPanelState.TouchPanelState(TouchLocation())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Input.TouchPanelState.TouchPanelState(WaveEngine.Common.Input.TouchLocation())
  name.vb: TouchPanelState(TouchLocation())
- uid: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  id: AddTouchLocation(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: AddTouchLocation(Int32, TouchLocationState, Single, Single)
  nameWithType: TouchPanelState.AddTouchLocation(Int32, TouchLocationState, Single, Single)
  fullName: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32, WaveEngine.Common.Input.TouchLocationState, System.Single, System.Single)
  type: Method
  source:
    id: AddTouchLocation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 252
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nAdds the touch location.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AddTouchLocation(int id, float x, float y) instead")]

      public void AddTouchLocation(int id, TouchLocationState state, float x, float y)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    - id: state
      type: WaveEngine.Common.Input.TouchLocationState
      description: The touch state.
    - id: x
      type: System.Single
      description: The x.
    - id: y
      type: System.Single
      description: The y.
    content.vb: >-
      <Obsolete("Use AddTouchLocation(int id, float x, float y) instead")>

      Public Sub AddTouchLocation(id As Integer, state As TouchLocationState, x As Single, y As Single)
  overload: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddTouchLocation(int id, float x, float y) instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32,System.Single,System.Single)
  id: AddTouchLocation(System.Int32,System.Single,System.Single)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: AddTouchLocation(Int32, Single, Single)
  nameWithType: TouchPanelState.AddTouchLocation(Int32, Single, Single)
  fullName: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation(System.Int32, System.Single, System.Single)
  type: Method
  source:
    id: AddTouchLocation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 264
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nAdds the touch location.\n"
  example: []
  syntax:
    content: public void AddTouchLocation(int id, float x, float y)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    - id: x
      type: System.Single
      description: The x.
    - id: y
      type: System.Single
      description: The y.
    content.vb: Public Sub AddTouchLocation(id As Integer, x As Single, y As Single)
  overload: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation(System.Int32)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation(System.Int32)
  id: RemoveTouchLocation(System.Int32)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: RemoveTouchLocation(Int32)
  nameWithType: TouchPanelState.RemoveTouchLocation(Int32)
  fullName: WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation(System.Int32)
  type: Method
  source:
    id: RemoveTouchLocation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 320
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nAdds the touch location.\n"
  example: []
  syntax:
    content: public void RemoveTouchLocation(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    content.vb: Public Sub RemoveTouchLocation(id As Integer)
  overload: WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.TryGetTouch(System.Int32,WaveEngine.Common.Input.TouchLocation@)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.TryGetTouch(System.Int32,WaveEngine.Common.Input.TouchLocation@)
  id: TryGetTouch(System.Int32,WaveEngine.Common.Input.TouchLocation@)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: TryGetTouch(Int32, out TouchLocation)
  nameWithType: TouchPanelState.TryGetTouch(Int32, out TouchLocation)
  fullName: WaveEngine.Common.Input.TouchPanelState.TryGetTouch(System.Int32, out WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: TryGetTouch
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 352
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nTries the get touch.\n"
  example: []
  syntax:
    content: public bool TryGetTouch(int id, out TouchLocation touchLocation)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    - id: touchLocation
      type: WaveEngine.Common.Input.TouchLocation
      description: The touch location.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function TryGetTouch(id As Integer, ByRef touchLocation As TouchLocation) As Boolean
  overload: WaveEngine.Common.Input.TouchPanelState.TryGetTouch*
  nameWithType.vb: TouchPanelState.TryGetTouch(Int32, ByRef TouchLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Input.TouchPanelState.TryGetTouch(System.Int32, ByRef WaveEngine.Common.Input.TouchLocation)
  name.vb: TryGetTouch(Int32, ByRef TouchLocation)
- uid: WaveEngine.Common.Input.TouchPanelState.ModifyTouch(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.ModifyTouch(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  id: ModifyTouch(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: ModifyTouch(Int32, TouchLocationState, Single, Single)
  nameWithType: TouchPanelState.ModifyTouch(Int32, TouchLocationState, Single, Single)
  fullName: WaveEngine.Common.Input.TouchPanelState.ModifyTouch(System.Int32, WaveEngine.Common.Input.TouchLocationState, System.Single, System.Single)
  type: Method
  source:
    id: ModifyTouch
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 375
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nModifies the touch.\n"
  example: []
  syntax:
    content: public void ModifyTouch(int id, TouchLocationState newState, float newX, float newY)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    - id: newState
      type: WaveEngine.Common.Input.TouchLocationState
      description: The new state.
    - id: newX
      type: System.Single
      description: The new X.
    - id: newY
      type: System.Single
      description: The new Y.
    content.vb: Public Sub ModifyTouch(id As Integer, newState As TouchLocationState, newX As Single, newY As Single)
  overload: WaveEngine.Common.Input.TouchPanelState.ModifyTouch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.GetEnumerator
  commentId: M:WaveEngine.Common.Input.TouchPanelState.GetEnumerator
  id: GetEnumerator
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TouchPanelState.GetEnumerator()
  fullName: WaveEngine.Common.Input.TouchPanelState.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 402
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets the enumerator.\n"
  example: []
  syntax:
    content: public TouchPanelState.Enumerator GetEnumerator()
    return:
      type: WaveEngine.Common.Input.TouchPanelState.Enumerator
      description: The result.
    content.vb: Public Function GetEnumerator As TouchPanelState.Enumerator
  overload: WaveEngine.Common.Input.TouchPanelState.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#IEnumerable#GetEnumerator
  commentId: M:WaveEngine.Common.Input.TouchPanelState.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: TouchPanelState.IEnumerable.GetEnumerator()
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    id: System.Collections.IEnumerable.GetEnumerator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 413
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: WaveEngine.Common.Input.TouchPanelState.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TouchPanelState.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator
  commentId: M:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator
  isEii: true
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IEnumerable<TouchLocation>.GetEnumerator()
  nameWithType: TouchPanelState.IEnumerable<TouchLocation>.GetEnumerator()
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator()
  type: Method
  source:
    id: System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 422
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets the enumerator.\n"
  example: []
  syntax:
    content: IEnumerator<TouchLocation> IEnumerable<TouchLocation>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{WaveEngine.Common.Input.TouchLocation}
      description: The result.
    content.vb: Function System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator As IEnumerator(Of TouchLocation) Implements IEnumerable(Of TouchLocation).GetEnumerator
  overload: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}.GetEnumerator
  nameWithType.vb: TouchPanelState.System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator()
- uid: WaveEngine.Common.Input.TouchPanelState.IndexOf(WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.IndexOf(WaveEngine.Common.Input.TouchLocation)
  id: IndexOf(WaveEngine.Common.Input.TouchLocation)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IndexOf(TouchLocation)
  nameWithType: TouchPanelState.IndexOf(TouchLocation)
  fullName: WaveEngine.Common.Input.TouchPanelState.IndexOf(WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: IndexOf
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 432
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nIndexes the of.\n"
  example: []
  syntax:
    content: public int IndexOf(TouchLocation touch)
    parameters:
    - id: touch
      type: WaveEngine.Common.Input.TouchLocation
      description: The touch.
    return:
      type: System.Int32
      description: The result.
    content.vb: Public Function IndexOf(touch As TouchLocation) As Integer
  overload: WaveEngine.Common.Input.TouchPanelState.IndexOf*
  implements:
  - System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.IndexOf(WaveEngine.Common.Input.TouchLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.Clear
  commentId: M:WaveEngine.Common.Input.TouchPanelState.Clear
  id: Clear
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TouchPanelState.Clear()
  fullName: WaveEngine.Common.Input.TouchPanelState.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 448
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nClears this instance.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: WaveEngine.Common.Input.TouchPanelState.Clear*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.Update
  commentId: M:WaveEngine.Common.Input.TouchPanelState.Update
  id: Update
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: TouchPanelState.Update()
  fullName: WaveEngine.Common.Input.TouchPanelState.Update()
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 456
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nClears this instance.\n"
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update
  overload: WaveEngine.Common.Input.TouchPanelState.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.Contains(WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.Contains(WaveEngine.Common.Input.TouchLocation)
  id: Contains(WaveEngine.Common.Input.TouchLocation)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: Contains(TouchLocation)
  nameWithType: TouchPanelState.Contains(TouchLocation)
  fullName: WaveEngine.Common.Input.TouchPanelState.Contains(WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 500
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nDetermines whether [contains] [the specified item].\n"
  example: []
  syntax:
    content: public bool Contains(TouchLocation item)
    parameters:
    - id: item
      type: WaveEngine.Common.Input.TouchLocation
      description: The item.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [contains] [the specified item]; otherwise, <code>false</code>.\n"
    content.vb: Public Function Contains(item As TouchLocation) As Boolean
  overload: WaveEngine.Common.Input.TouchPanelState.Contains*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Contains(WaveEngine.Common.Input.TouchLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.Contains(System.Int32)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: Contains(Int32)
  nameWithType: TouchPanelState.Contains(Int32)
  fullName: WaveEngine.Common.Input.TouchPanelState.Contains(System.Int32)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 520
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nDetermines whether [contains] [the specified id].\n"
  example: []
  syntax:
    content: public bool Contains(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [contains] [the specified id]; otherwise, <code>false</code>.\n"
    content.vb: Public Function Contains(id As Integer) As Boolean
  overload: WaveEngine.Common.Input.TouchPanelState.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchPanelState.CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  id: CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: CopyTo(TouchLocation[], Int32)
  nameWithType: TouchPanelState.CopyTo(TouchLocation[], Int32)
  fullName: WaveEngine.Common.Input.TouchPanelState.CopyTo(WaveEngine.Common.Input.TouchLocation[], System.Int32)
  type: Method
  source:
    id: CopyTo
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 538
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nCopies to.\n"
  example: []
  syntax:
    content: public void CopyTo(TouchLocation[] array, int arrayIndex)
    parameters:
    - id: array
      type: WaveEngine.Common.Input.TouchLocation[]
      description: The array.
    - id: arrayIndex
      type: System.Int32
      description: Index of the array.
    content.vb: Public Sub CopyTo(array As TouchLocation(), arrayIndex As Integer)
  overload: WaveEngine.Common.Input.TouchPanelState.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  nameWithType.vb: TouchPanelState.CopyTo(TouchLocation(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Input.TouchPanelState.CopyTo(WaveEngine.Common.Input.TouchLocation(), System.Int32)
  name.vb: CopyTo(TouchLocation(), Int32)
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add(WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add(WaveEngine.Common.Input.TouchLocation)
  id: System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add(WaveEngine.Common.Input.TouchLocation)
  isEii: true
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: ICollection<TouchLocation>.Add(TouchLocation)
  nameWithType: TouchPanelState.ICollection<TouchLocation>.Add(TouchLocation)
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add(WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 571
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nAdds the specified item.\n"
  example: []
  syntax:
    content: void ICollection<TouchLocation>.Add(TouchLocation item)
    parameters:
    - id: item
      type: WaveEngine.Common.Input.TouchLocation
      description: The item.
    content.vb: Sub System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add(item As TouchLocation) Implements ICollection(Of TouchLocation).Add
  overload: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Add(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add(TouchLocation)
  name.vb: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add(TouchLocation)
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove(WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove(WaveEngine.Common.Input.TouchLocation)
  id: System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove(WaveEngine.Common.Input.TouchLocation)
  isEii: true
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: ICollection<TouchLocation>.Remove(TouchLocation)
  nameWithType: TouchPanelState.ICollection<TouchLocation>.Remove(TouchLocation)
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove(WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 581
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nRemoves the specified item.\n"
  example: []
  syntax:
    content: bool ICollection<TouchLocation>.Remove(TouchLocation item)
    parameters:
    - id: item
      type: WaveEngine.Common.Input.TouchLocation
      description: The item.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Function System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove(item As TouchLocation) As Boolean Implements ICollection(Of TouchLocation).Remove
  overload: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove*
  implements:
  - System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Remove(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove(TouchLocation)
  name.vb: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove(TouchLocation)
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  id: System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  isEii: true
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IList<TouchLocation>.Insert(Int32, TouchLocation)
  nameWithType: TouchPanelState.IList<TouchLocation>.Insert(Int32, TouchLocation)
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert(System.Int32, WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 591
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nInserts the specified index.\n"
  example: []
  syntax:
    content: void IList<TouchLocation>.Insert(int index, TouchLocation item)
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    - id: item
      type: WaveEngine.Common.Input.TouchLocation
      description: The item.
    content.vb: Sub System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert(index As Integer, item As TouchLocation) Implements IList(Of TouchLocation).Insert
  overload: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert*
  implements:
  - System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert(Int32, TouchLocation)
  name.vb: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert(Int32, TouchLocation)
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt(System.Int32)
  commentId: M:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt(System.Int32)
  isEii: true
  parent: WaveEngine.Common.Input.TouchPanelState
  langs:
  - csharp
  - vb
  name: IList<TouchLocation>.RemoveAt(Int32)
  nameWithType: TouchPanelState.IList<TouchLocation>.RemoveAt(Int32)
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt(System.Int32)
  type: Method
  source:
    id: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchPanelState.cs
    startLine: 600
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nRemoves at.\n"
  example: []
  syntax:
    content: void IList<TouchLocation>.RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    content.vb: Sub System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt(index As Integer) Implements IList(Of TouchLocation).RemoveAt
  overload: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt*
  implements:
  - System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.RemoveAt(System.Int32)
  nameWithType.vb: TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt(Int32)
  name.vb: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt(Int32)
references:
- uid: WaveEngine.Common.Input
  commentId: N:WaveEngine.Common.Input
  name: WaveEngine.Common.Input
  nameWithType: WaveEngine.Common.Input
  fullName: WaveEngine.Common.Input
- uid: WaveEngine.Common.Input.IController
  commentId: T:WaveEngine.Common.Input.IController
  parent: WaveEngine.Common.Input
  name: IController
  nameWithType: IController
  fullName: WaveEngine.Common.Input.IController
- uid: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  commentId: T:System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TouchLocation>
  nameWithType: IList<TouchLocation>
  fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>
  nameWithType.vb: IList(Of TouchLocation)
  fullName.vb: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation)
  name.vb: IList(Of TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  commentId: T:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TouchLocation>
  nameWithType: ICollection<TouchLocation>
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>
  nameWithType.vb: ICollection(Of TouchLocation)
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation)
  name.vb: ICollection(Of TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TouchLocation>
  nameWithType: IEnumerable<TouchLocation>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>
  nameWithType.vb: IEnumerable(Of TouchLocation)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Input.TouchLocation)
  name.vb: IEnumerable(Of TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Input.TouchPanelState.IsConnected*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.IsConnected
  name: IsConnected
  nameWithType: TouchPanelState.IsConnected
  fullName: WaveEngine.Common.Input.TouchPanelState.IsConnected
- uid: WaveEngine.Common.Input.IController.IsConnected
  commentId: P:WaveEngine.Common.Input.IController.IsConnected
  parent: WaveEngine.Common.Input.IController
  name: IsConnected
  nameWithType: IController.IsConnected
  fullName: WaveEngine.Common.Input.IController.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Input.TouchPanelState.Count*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.Count
  name: Count
  nameWithType: TouchPanelState.Count
  fullName: WaveEngine.Common.Input.TouchPanelState.Count
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Count
  commentId: P:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Count
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<TouchLocation>.Count
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Count
  nameWithType.vb: ICollection(Of TouchLocation).Count
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: WaveEngine.Common.Input.TouchPanelState.IsReadOnly*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.IsReadOnly
  name: IsReadOnly
  nameWithType: TouchPanelState.IsReadOnly
  fullName: WaveEngine.Common.Input.TouchPanelState.IsReadOnly
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.IsReadOnly
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<TouchLocation>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.IsReadOnly
  nameWithType.vb: ICollection(Of TouchLocation).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: WaveEngine.Common.Input.TouchLocation
  commentId: T:WaveEngine.Common.Input.TouchLocation
  parent: WaveEngine.Common.Input
  name: TouchLocation
  nameWithType: TouchLocation
  fullName: WaveEngine.Common.Input.TouchLocation
- uid: WaveEngine.Common.Input.TouchPanelState.Item*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.Item
  name: Item
  nameWithType: TouchPanelState.Item
  fullName: WaveEngine.Common.Input.TouchPanelState.Item
- uid: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.Item(System.Int32)
  parent: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<TouchLocation>.Item[Int32]
  fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Item[System.Int32]
  nameWithType.vb: IList(Of TouchLocation).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<TouchLocation>.Item
    fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of TouchLocation).Item
    fullName: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState
  commentId: T:WaveEngine.Common.Input.TouchPanelState
  parent: WaveEngine.Common.Input
  name: TouchPanelState
  nameWithType: TouchPanelState
  fullName: WaveEngine.Common.Input.TouchPanelState
- uid: WaveEngine.Common.Input.TouchPanelState.#ctor*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.#ctor
  name: TouchPanelState
  nameWithType: TouchPanelState.TouchPanelState
  fullName: WaveEngine.Common.Input.TouchPanelState.TouchPanelState
- uid: WaveEngine.Common.Input.TouchLocation[]
  isExternal: true
  name: TouchLocation[]
  nameWithType: TouchLocation[]
  fullName: WaveEngine.Common.Input.TouchLocation[]
  nameWithType.vb: TouchLocation()
  fullName.vb: WaveEngine.Common.Input.TouchLocation()
  name.vb: TouchLocation()
  spec.csharp:
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.AddTouchLocation
  name: AddTouchLocation
  nameWithType: TouchPanelState.AddTouchLocation
  fullName: WaveEngine.Common.Input.TouchPanelState.AddTouchLocation
- uid: WaveEngine.Common.Input.TouchLocationState
  commentId: T:WaveEngine.Common.Input.TouchLocationState
  parent: WaveEngine.Common.Input
  name: TouchLocationState
  nameWithType: TouchLocationState
  fullName: WaveEngine.Common.Input.TouchLocationState
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation
  name: RemoveTouchLocation
  nameWithType: TouchPanelState.RemoveTouchLocation
  fullName: WaveEngine.Common.Input.TouchPanelState.RemoveTouchLocation
- uid: WaveEngine.Common.Input.TouchPanelState.TryGetTouch*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.TryGetTouch
  name: TryGetTouch
  nameWithType: TouchPanelState.TryGetTouch
  fullName: WaveEngine.Common.Input.TouchPanelState.TryGetTouch
- uid: WaveEngine.Common.Input.TouchPanelState.ModifyTouch*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.ModifyTouch
  name: ModifyTouch
  nameWithType: TouchPanelState.ModifyTouch
  fullName: WaveEngine.Common.Input.TouchPanelState.ModifyTouch
- uid: WaveEngine.Common.Input.TouchPanelState.GetEnumerator*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.GetEnumerator
  name: GetEnumerator
  nameWithType: TouchPanelState.GetEnumerator
  fullName: WaveEngine.Common.Input.TouchPanelState.GetEnumerator
- uid: WaveEngine.Common.Input.TouchPanelState.Enumerator
  commentId: T:WaveEngine.Common.Input.TouchPanelState.Enumerator
  parent: WaveEngine.Common.Input
  name: TouchPanelState.Enumerator
  nameWithType: TouchPanelState.Enumerator
  fullName: WaveEngine.Common.Input.TouchPanelState.Enumerator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: TouchPanelState.IEnumerable.GetEnumerator
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TouchPanelState.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IEnumerable{WaveEngine#Common#Input#TouchLocation}#GetEnumerator
  name: IEnumerable<TouchLocation>.GetEnumerator
  nameWithType: TouchPanelState.IEnumerable<TouchLocation>.GetEnumerator
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator
  nameWithType.vb: TouchPanelState.System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TouchLocation>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TouchLocation).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Input.TouchLocation).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TouchLocation>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Input.TouchLocation>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TouchLocation).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Input.TouchLocation).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{WaveEngine.Common.Input.TouchLocation}
  commentId: T:System.Collections.Generic.IEnumerator{WaveEngine.Common.Input.TouchLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TouchLocation>
  nameWithType: IEnumerator<TouchLocation>
  fullName: System.Collections.Generic.IEnumerator<WaveEngine.Common.Input.TouchLocation>
  nameWithType.vb: IEnumerator(Of TouchLocation)
  fullName.vb: System.Collections.Generic.IEnumerator(Of WaveEngine.Common.Input.TouchLocation)
  name.vb: IEnumerator(Of TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.IndexOf*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.IndexOf
  name: IndexOf
  nameWithType: TouchPanelState.IndexOf
  fullName: WaveEngine.Common.Input.TouchPanelState.IndexOf
- uid: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.IndexOf(WaveEngine.Common.Input.TouchLocation)
  commentId: M:System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.IndexOf(WaveEngine.Common.Input.TouchLocation)
  parent: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(TouchLocation)
  nameWithType: IList<TouchLocation>.IndexOf(TouchLocation)
  fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.IndexOf(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: IList(Of TouchLocation).IndexOf(TouchLocation)
  fullName.vb: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).IndexOf(WaveEngine.Common.Input.TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<TouchLocation>.IndexOf
    fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of TouchLocation).IndexOf
    fullName: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.Clear*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.Clear
  name: Clear
  nameWithType: TouchPanelState.Clear
  fullName: WaveEngine.Common.Input.TouchPanelState.Clear
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Clear
  commentId: M:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Clear
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<TouchLocation>.Clear()
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Clear()
  nameWithType.vb: ICollection(Of TouchLocation).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<TouchLocation>.Clear
    fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of TouchLocation).Clear
    fullName: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.Update*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.Update
  name: Update
  nameWithType: TouchPanelState.Update
  fullName: WaveEngine.Common.Input.TouchPanelState.Update
- uid: WaveEngine.Common.Input.TouchPanelState.Contains*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.Contains
  name: Contains
  nameWithType: TouchPanelState.Contains
  fullName: WaveEngine.Common.Input.TouchPanelState.Contains
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Contains(WaveEngine.Common.Input.TouchLocation)
  commentId: M:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Contains(WaveEngine.Common.Input.TouchLocation)
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(TouchLocation)
  nameWithType: ICollection<TouchLocation>.Contains(TouchLocation)
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Contains(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: ICollection(Of TouchLocation).Contains(TouchLocation)
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Contains(WaveEngine.Common.Input.TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<TouchLocation>.Contains
    fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of TouchLocation).Contains
    fullName: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.CopyTo*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.CopyTo
  name: CopyTo
  nameWithType: TouchPanelState.CopyTo
  fullName: WaveEngine.Common.Input.TouchPanelState.CopyTo
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.CopyTo(WaveEngine.Common.Input.TouchLocation[],System.Int32)
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TouchLocation[], Int32)
  nameWithType: ICollection<TouchLocation>.CopyTo(TouchLocation[], Int32)
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.CopyTo(WaveEngine.Common.Input.TouchLocation[], System.Int32)
  nameWithType.vb: ICollection(Of TouchLocation).CopyTo(TouchLocation(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).CopyTo(WaveEngine.Common.Input.TouchLocation(), System.Int32)
  name.vb: CopyTo(TouchLocation(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<TouchLocation>.CopyTo
    fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of TouchLocation).CopyTo
    fullName: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Add
  name: ICollection<TouchLocation>.Add
  nameWithType: TouchPanelState.ICollection<TouchLocation>.Add
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add
  nameWithType.vb: TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add
  name.vb: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Add(WaveEngine.Common.Input.TouchLocation)
  commentId: M:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Add(WaveEngine.Common.Input.TouchLocation)
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TouchLocation)
  nameWithType: ICollection<TouchLocation>.Add(TouchLocation)
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: ICollection(Of TouchLocation).Add(TouchLocation)
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Add(WaveEngine.Common.Input.TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<TouchLocation>.Add
    fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of TouchLocation).Add
    fullName: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#ICollection{WaveEngine#Common#Input#TouchLocation}#Remove
  name: ICollection<TouchLocation>.Remove
  nameWithType: TouchPanelState.ICollection<TouchLocation>.Remove
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove
  nameWithType.vb: TouchPanelState.System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove
  name.vb: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Remove(WaveEngine.Common.Input.TouchLocation)
  commentId: M:System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}.Remove(WaveEngine.Common.Input.TouchLocation)
  parent: System.Collections.Generic.ICollection{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TouchLocation)
  nameWithType: ICollection<TouchLocation>.Remove(TouchLocation)
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: ICollection(Of TouchLocation).Remove(TouchLocation)
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Remove(WaveEngine.Common.Input.TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<TouchLocation>.Remove
    fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Input.TouchLocation>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of TouchLocation).Remove
    fullName: System.Collections.Generic.ICollection(Of WaveEngine.Common.Input.TouchLocation).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#Insert
  name: IList<TouchLocation>.Insert
  nameWithType: TouchPanelState.IList<TouchLocation>.Insert
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert
  nameWithType.vb: TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert
  name.vb: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert
- uid: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  commentId: M:System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.Insert(System.Int32,WaveEngine.Common.Input.TouchLocation)
  parent: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, TouchLocation)
  nameWithType: IList<TouchLocation>.Insert(Int32, TouchLocation)
  fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert(System.Int32, WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: IList(Of TouchLocation).Insert(Int32, TouchLocation)
  fullName.vb: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).Insert(System.Int32, WaveEngine.Common.Input.TouchLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<TouchLocation>.Insert
    fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of TouchLocation).Insert
    fullName: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt*
  commentId: Overload:WaveEngine.Common.Input.TouchPanelState.System#Collections#Generic#IList{WaveEngine#Common#Input#TouchLocation}#RemoveAt
  name: IList<TouchLocation>.RemoveAt
  nameWithType: TouchPanelState.IList<TouchLocation>.RemoveAt
  fullName: WaveEngine.Common.Input.TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt
  nameWithType.vb: TouchPanelState.System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt
  name.vb: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt
- uid: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{WaveEngine.Common.Input.TouchLocation}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<TouchLocation>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of TouchLocation).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<TouchLocation>.RemoveAt
    fullName: System.Collections.Generic.IList<WaveEngine.Common.Input.TouchLocation>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of TouchLocation).RemoveAt
    fullName: System.Collections.Generic.IList(Of WaveEngine.Common.Input.TouchLocation).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
