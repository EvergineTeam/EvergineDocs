### YamlMime:ManagedReference
items:
- uid: WaveEngine.Components.Gestures.TouchGestures
  commentId: T:WaveEngine.Components.Gestures.TouchGestures
  id: TouchGestures
  parent: WaveEngine.Components.Gestures
  children:
  - WaveEngine.Components.Gestures.TouchGestures.#ctor
  - WaveEngine.Components.Gestures.TouchGestures.#ctor(System.Boolean)
  - WaveEngine.Components.Gestures.TouchGestures.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  - WaveEngine.Components.Gestures.TouchGestures.Collider
  - WaveEngine.Components.Gestures.TouchGestures.Contains(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Components.Gestures.TouchGestures.DefaultValues
  - WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies
  - WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  - WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  - WaveEngine.Components.Gestures.TouchGestures.MaxScale
  - WaveEngine.Components.Gestures.TouchGestures.MinScale
  - WaveEngine.Components.Gestures.TouchGestures.ProjectCamera
  - WaveEngine.Components.Gestures.TouchGestures.ReadGesture
  - WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies
  - WaveEngine.Components.Gestures.TouchGestures.TouchMoved
  - WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  - WaveEngine.Components.Gestures.TouchGestures.TouchOrderChanged
  - WaveEngine.Components.Gestures.TouchGestures.TouchPressed
  - WaveEngine.Components.Gestures.TouchGestures.TouchReleased
  - WaveEngine.Components.Gestures.TouchGestures.TouchTap
  - WaveEngine.Components.Gestures.TouchGestures.Transform2D
  - WaveEngine.Components.Gestures.TouchGestures.Update(System.TimeSpan)
  - WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
  langs:
  - csharp
  - vb
  name: TouchGestures
  nameWithType: TouchGestures
  fullName: WaveEngine.Components.Gestures.TouchGestures
  type: Class
  source:
    id: TouchGestures
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 25
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nEnables an <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> to support touchs.\nIt requires a <xref href=\"WaveEngine.Framework.Physics2D.Collider2D\" data-throw-if-not-resolved=\"false\"></xref> (usually, <xref href=\"WaveEngine.Framework.Physics2D.RectangleCollider2D\" data-throw-if-not-resolved=\"false\"></xref>)\nand a <xref href=\"WaveEngine.Components.Gestures.TouchGestures.Transform2D\" data-throw-if-not-resolved=\"false\"></xref>.\nCommon events on touch scenarios are provided: pressed, released, etc.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Components.Gestures")]

      public class TouchGestures : Behavior, ITouchable
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Components.Gestures")>

      Public Class TouchGestures

          Inherits Behavior

          Implements ITouchable
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Framework.DependencyObject
  - WaveEngine.Framework.Component
  - WaveEngine.Framework.Behavior
  implements:
  - WaveEngine.Common.Input.ITouchable
  inheritedMembers:
  - WaveEngine.Framework.Behavior.Family
  - WaveEngine.Framework.Behavior.IsActive
  - WaveEngine.Framework.Behavior.UpdateOrder
  - WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  - WaveEngine.Framework.Behavior.ActiveNotification(System.Boolean)
  - WaveEngine.Framework.Component.isInitialized
  - WaveEngine.Framework.Component.OnComponentInitialized
  - WaveEngine.Framework.Component.OnComponentRemoved
  - WaveEngine.Framework.Component.Name
  - WaveEngine.Framework.Component.Owner
  - WaveEngine.Framework.Component.Assets
  - WaveEngine.Framework.Component.EntityManager
  - WaveEngine.Framework.Component.BehaviorManager
  - WaveEngine.Framework.Component.RenderManager
  - WaveEngine.Framework.Component.Clone
  - WaveEngine.Framework.Component.ToString
  - WaveEngine.Framework.Component.Initialize
  - WaveEngine.Framework.Component.Removed
  - WaveEngine.Framework.DependencyObject.PropertyChanged
  - WaveEngine.Framework.DependencyObject.ParentDependencyObject
  - WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  - WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  - WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Components.Gestures
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Components.Gestures.TouchGestures.Collider
  commentId: F:WaveEngine.Components.Gestures.TouchGestures.Collider
  id: Collider
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: Collider
  nameWithType: TouchGestures.Collider
  fullName: WaveEngine.Components.Gestures.TouchGestures.Collider
  type: Field
  source:
    id: Collider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 33
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nRequired <xref href=\"WaveEngine.Framework.Physics2D.Collider2D\" data-throw-if-not-resolved=\"false\"></xref>.\nIt provides a way to detect whether a touch hits the dessired area.\n"
  example: []
  syntax:
    content: >-
      [RequiredComponent(false)]

      public Collider2D Collider
    return:
      type: WaveEngine.Framework.Physics2D.Collider2D
    content.vb: >-
      <RequiredComponent(False)>

      Public Collider As Collider2D
  attributes:
  - type: WaveEngine.Framework.RequiredComponent
    ctor: WaveEngine.Framework.RequiredComponent.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.Transform2D
  commentId: F:WaveEngine.Components.Gestures.TouchGestures.Transform2D
  id: Transform2D
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: Transform2D
  nameWithType: TouchGestures.Transform2D
  fullName: WaveEngine.Components.Gestures.TouchGestures.Transform2D
  type: Field
  source:
    id: Transform2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 40
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nRequired <xref href=\"WaveEngine.Components.Gestures.TouchGestures.Transform2D\" data-throw-if-not-resolved=\"false\"></xref>.\nIt provides position information to generate touch events data.\n"
  example: []
  syntax:
    content: >-
      [RequiredComponent]

      public Transform2D Transform2D
    return:
      type: WaveEngine.Framework.Graphics.Transform2D
    content.vb: >-
      <RequiredComponent>

      Public Transform2D As Transform2D
  attributes:
  - type: WaveEngine.Framework.RequiredComponent
    ctor: WaveEngine.Framework.RequiredComponent.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchTap
  commentId: E:WaveEngine.Components.Gestures.TouchGestures.TouchTap
  id: TouchTap
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchTap
  nameWithType: TouchGestures.TouchTap
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchTap
  type: Event
  source:
    id: TouchTap
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 135
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nOccurs when there is a tap gesture.\n"
  example: []
  syntax:
    content: public event EventHandler<GestureEventArgs> TouchTap
    return:
      type: System.EventHandler{WaveEngine.Components.Gestures.GestureEventArgs}
    content.vb: Public Event TouchTap As EventHandler(Of GestureEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchPressed
  commentId: E:WaveEngine.Components.Gestures.TouchGestures.TouchPressed
  id: TouchPressed
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchPressed
  nameWithType: TouchGestures.TouchPressed
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchPressed
  type: Event
  source:
    id: TouchPressed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 140
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nOccurs when there is a pressed gesture.\n"
  example: []
  syntax:
    content: public event EventHandler<GestureEventArgs> TouchPressed
    return:
      type: System.EventHandler{WaveEngine.Components.Gestures.GestureEventArgs}
    content.vb: Public Event TouchPressed As EventHandler(Of GestureEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchReleased
  commentId: E:WaveEngine.Components.Gestures.TouchGestures.TouchReleased
  id: TouchReleased
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchReleased
  nameWithType: TouchGestures.TouchReleased
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchReleased
  type: Event
  source:
    id: TouchReleased
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 145
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nOccurs when there is a released gesture.\n"
  example: []
  syntax:
    content: public event EventHandler<GestureEventArgs> TouchReleased
    return:
      type: System.EventHandler{WaveEngine.Components.Gestures.GestureEventArgs}
    content.vb: Public Event TouchReleased As EventHandler(Of GestureEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchMoved
  commentId: E:WaveEngine.Components.Gestures.TouchGestures.TouchMoved
  id: TouchMoved
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchMoved
  nameWithType: TouchGestures.TouchMoved
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchMoved
  type: Event
  source:
    id: TouchMoved
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 150
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nOccurs when there is a moved gesture.\n"
  example: []
  syntax:
    content: public event EventHandler<GestureEventArgs> TouchMoved
    return:
      type: System.EventHandler{WaveEngine.Components.Gestures.GestureEventArgs}
    content.vb: Public Event TouchMoved As EventHandler(Of GestureEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchOrderChanged
  commentId: E:WaveEngine.Components.Gestures.TouchGestures.TouchOrderChanged
  id: TouchOrderChanged
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchOrderChanged
  nameWithType: TouchGestures.TouchOrderChanged
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchOrderChanged
  type: Event
  source:
    id: TouchOrderChanged
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 155
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nOccurs when touch order is changed.\n"
  example: []
  syntax:
    content: public event EventHandler TouchOrderChanged
    return:
      type: System.EventHandler
    content.vb: Public Event TouchOrderChanged As EventHandler
  implements:
  - WaveEngine.Common.Input.ITouchable.TouchOrderChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  id: TouchOrder
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchOrder
  nameWithType: TouchGestures.TouchOrder
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  type: Property
  source:
    id: TouchOrder
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 169
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets or sets the touch order.\nValue within [0, Int32.MaxValue] where 0 means the farthest (i.e., the last to receive the touch gesture)\nand bigger values come near increasing the chance to receive the input.\nNOTE: It is required to have set <xref href=\"WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder\" data-throw-if-not-resolved=\"false\"></xref> to <code>true</code> in order the engine not to override\nthis value. See <xref href=\"WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder\" data-throw-if-not-resolved=\"false\"></xref> for a more detailed information.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int TouchOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe touch order.\n"
    content.vb: >-
      <DataMember>

      Public Property TouchOrder As Integer
  overload: WaveEngine.Components.Gestures.TouchGestures.TouchOrder*
  implements:
  - WaveEngine.Common.Input.ITouchable.TouchOrder
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.MinScale
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.MinScale
  id: MinScale
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: MinScale
  nameWithType: TouchGestures.MinScale
  fullName: WaveEngine.Components.Gestures.TouchGestures.MinScale
  type: Property
  source:
    id: MinScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 196
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets or sets the minimun scale.\nValue within [0, float.MaxValue] which is understood as the minimun scale applicable to required\n<xref href=\"WaveEngine.Components.Gestures.TouchGestures.Transform2D\" data-throw-if-not-resolved=\"false\"></xref> when <xref href=\"WaveEngine.Components.Gestures.SupportedGesture.Scale\" data-throw-if-not-resolved=\"false\"></xref> is enabled through\n<xref href=\"WaveEngine.Components.Gestures.TouchGestures.EnabledGestures\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float MinScale { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe minimun scale.\n"
    content.vb: >-
      <DataMember>

      Public Property MinScale As Single
  overload: WaveEngine.Components.Gestures.TouchGestures.MinScale*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.MaxScale
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.MaxScale
  id: MaxScale
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: MaxScale
  nameWithType: TouchGestures.MaxScale
  fullName: WaveEngine.Components.Gestures.TouchGestures.MaxScale
  type: Property
  source:
    id: MaxScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 219
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets or sets the maximun scale.\nValue within [0, float.MaxValue] which is understood as the maximun scale applicable to required\n<xref href=\"WaveEngine.Components.Gestures.TouchGestures.Transform2D\" data-throw-if-not-resolved=\"false\"></xref> when <xref href=\"WaveEngine.Components.Gestures.SupportedGesture.Scale\" data-throw-if-not-resolved=\"false\"></xref> is enabled through\n<xref href=\"WaveEngine.Components.Gestures.TouchGestures.EnabledGestures\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float MaxScale { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe maximun scale.\n"
    content.vb: >-
      <DataMember>

      Public Property MaxScale As Single
  overload: WaveEngine.Components.Gestures.TouchGestures.MaxScale*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  id: EnabledGestures
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: EnabledGestures
  nameWithType: TouchGestures.EnabledGestures
  fullName: WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  type: Property
  source:
    id: EnabledGestures
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 242
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets or sets which gestures are enabled.\nSee <xref href=\"WaveEngine.Components.Gestures.SupportedGesture\" data-throw-if-not-resolved=\"false\"></xref> for available options.\nSuch values can be set through bit masks, enabling more than once at the same time, for example:\nEnabledGestures = SupportedGestures.Translation | SupportedGestures.Rotation\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public SupportedGesture EnabledGestures { get; set; }
    parameters: []
    return:
      type: WaveEngine.Components.Gestures.SupportedGesture
      description: "\nThe enabled gestures.\n"
    content.vb: >-
      <DataMember>

      Public Property EnabledGestures As SupportedGesture
  overload: WaveEngine.Components.Gestures.TouchGestures.EnabledGestures*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  id: ManualTouchOrder
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: ManualTouchOrder
  nameWithType: TouchGestures.ManualTouchOrder
  fullName: WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  type: Property
  source:
    id: ManualTouchOrder
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 265
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets or sets a value indicating whether using <xref href=\"WaveEngine.Components.Gestures.TouchGestures.TouchOrder\" data-throw-if-not-resolved=\"false\"></xref>,\nor a different order gathered using both the <see pref=\"Transform2D.DrawOrder\"></see> and\nthe <xref href=\"WaveEngine.Framework.Graphics.RenderLayer\" data-throw-if-not-resolved=\"false\"></xref> used. Such calcs are performed during the call to\n<xref href=\"WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool ManualTouchOrder { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if using <xref href=\"WaveEngine.Components.Gestures.TouchGestures.TouchOrder\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <code>false</code>.\n"
    content.vb: >-
      <DataMember>

      Public Property ManualTouchOrder As Boolean
  overload: WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder*
  implements:
  - WaveEngine.Common.Input.ITouchable.ManualTouchOrder
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.ProjectCamera
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.ProjectCamera
  id: ProjectCamera
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: ProjectCamera
  nameWithType: TouchGestures.ProjectCamera
  fullName: WaveEngine.Components.Gestures.TouchGestures.ProjectCamera
  type: Property
  source:
    id: ProjectCamera
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 275
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets or sets a value indicating whether touches must be projected using Camera2D\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool ProjectCamera { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property ProjectCamera As Boolean
  overload: WaveEngine.Components.Gestures.TouchGestures.ProjectCamera*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.#ctor
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.#ctor
  id: '#ctor'
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchGestures()
  nameWithType: TouchGestures.TouchGestures()
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchGestures()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 288
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Components.Gestures.TouchGestures\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TouchGestures()
    content.vb: Public Sub New
  overload: WaveEngine.Components.Gestures.TouchGestures.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.#ctor(System.Boolean)
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: TouchGestures(Boolean)
  nameWithType: TouchGestures.TouchGestures(Boolean)
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchGestures(System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 299
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Components.Gestures.TouchGestures\" data-throw-if-not-resolved=\"false\"></xref> class.\nBy default, scale is within [0.1, 5], the delta scale is set to 1 and there is no\nsupported gesture.\n"
  example: []
  syntax:
    content: public TouchGestures(bool projectCamera = true)
    parameters:
    - id: projectCamera
      type: System.Boolean
      description: Indicates if the touches will be processed using Cameras
    content.vb: Public Sub New(projectCamera As Boolean = True)
  overload: WaveEngine.Components.Gestures.TouchGestures.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.DefaultValues
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.DefaultValues
  id: DefaultValues
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: DefaultValues()
  nameWithType: TouchGestures.DefaultValues()
  fullName: WaveEngine.Components.Gestures.TouchGestures.DefaultValues()
  type: Method
  source:
    id: DefaultValues
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 309
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nThis methods is used to set default values by the default constructor of our classes.\nThis is called too when an entity is deserializing.\n"
  example: []
  syntax:
    content: protected override void DefaultValues()
    content.vb: Protected Overrides Sub DefaultValues
  overridden: WaveEngine.Framework.Behavior.DefaultValues
  overload: WaveEngine.Components.Gestures.TouchGestures.DefaultValues*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Components.Gestures.TouchGestures.Contains(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.Contains(WaveEngine.Common.Math.Vector2)
  id: Contains(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: Contains(Vector2)
  nameWithType: TouchGestures.Contains(Vector2)
  fullName: WaveEngine.Components.Gestures.TouchGestures.Contains(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 331
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nDetermines whether the required <xref href=\"WaveEngine.Framework.Physics2D.Collider2D\" data-throw-if-not-resolved=\"false\"></xref> contains the passed point.\n"
  example: []
  syntax:
    content: public bool Contains(Vector2 point)
    parameters:
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: The point.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the point is contained; otherwise, <code>false</code>.\n"
    content.vb: Public Function Contains(point As Vector2) As Boolean
  overload: WaveEngine.Components.Gestures.TouchGestures.Contains*
  implements:
  - WaveEngine.Common.Input.ITouchable.Contains(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  id: AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: AddTouch(TouchLocation, Boolean)
  nameWithType: TouchGestures.AddTouch(TouchLocation, Boolean)
  fullName: WaveEngine.Components.Gestures.TouchGestures.AddTouch(WaveEngine.Common.Input.TouchLocation, System.Boolean)
  type: Method
  source:
    id: AddTouch
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 375
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nAdds a <xref href=\"WaveEngine.Common.Input.TouchLocation\" data-throw-if-not-resolved=\"false\"></xref> to the current active touches.\n"
  example: []
  syntax:
    content: public void AddTouch(TouchLocation touch, bool isNew)
    parameters:
    - id: touch
      type: WaveEngine.Common.Input.TouchLocation
      description: The touch location.
    - id: isNew
      type: System.Boolean
      description: Whether such touch must be considered as new.
    content.vb: Public Sub AddTouch(touch As TouchLocation, isNew As Boolean)
  overload: WaveEngine.Components.Gestures.TouchGestures.AddTouch*
  implements:
  - WaveEngine.Common.Input.ITouchable.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.ReadGesture
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.ReadGesture
  id: ReadGesture
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: ReadGesture()
  nameWithType: TouchGestures.ReadGesture()
  fullName: WaveEngine.Components.Gestures.TouchGestures.ReadGesture()
  type: Method
  source:
    id: ReadGesture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 405
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nGets the current <xref href=\"WaveEngine.Components.Gestures.GestureSample\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public GestureSample ReadGesture()
    return:
      type: WaveEngine.Components.Gestures.GestureSample
      description: The current <xref href="WaveEngine.Components.Gestures.GestureSample" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ReadGesture As GestureSample
  overload: WaveEngine.Components.Gestures.TouchGestures.ReadGesture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
  id: UpdateTouchOrder
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: UpdateTouchOrder()
  nameWithType: TouchGestures.UpdateTouchOrder()
  fullName: WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder()
  type: Method
  source:
    id: UpdateTouchOrder
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 415
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nIf and only if <xref href=\"WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder\" data-throw-if-not-resolved=\"false\"></xref> is set to <code>false</code> (by default it is)\nthe touch order is calculated based on both <see pref=\"Transform2D.DrawOrder\"></see> and\nthe <xref href=\"WaveEngine.Framework.Graphics.RenderLayer\" data-throw-if-not-resolved=\"false\"></xref> used.\n"
  example: []
  syntax:
    content: public void UpdateTouchOrder()
    content.vb: Public Sub UpdateTouchOrder
  overload: WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder*
  implements:
  - WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies
  id: ResolveDependencies
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: ResolveDependencies()
  nameWithType: TouchGestures.ResolveDependencies()
  fullName: WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies()
  type: Method
  source:
    id: ResolveDependencies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 450
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nResolves the dependencies needed for this instance to work.\n"
  example: []
  syntax:
    content: protected override void ResolveDependencies()
    content.vb: Protected Overrides Sub ResolveDependencies
  overridden: WaveEngine.Framework.Component.ResolveDependencies
  overload: WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies
  id: DeleteDependencies
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: DeleteDependencies()
  nameWithType: TouchGestures.DeleteDependencies()
  fullName: WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies()
  type: Method
  source:
    id: DeleteDependencies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 466
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nDelete dependencies method\n"
  example: []
  syntax:
    content: protected override void DeleteDependencies()
    content.vb: Protected Overrides Sub DeleteDependencies
  overridden: WaveEngine.Framework.Component.DeleteDependencies
  overload: WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Components.Gestures.TouchGestures.Update(System.TimeSpan)
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Components.Gestures.TouchGestures
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: TouchGestures.Update(TimeSpan)
  fullName: WaveEngine.Components.Gestures.TouchGestures.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\Gestures\TouchGestures.cs
    startLine: 478
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.Gestures
  summary: "\nUpdates this behavior.\n"
  example: []
  syntax:
    content: protected override void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: The elapsed game time.
    content.vb: Protected Overrides Sub Update(gameTime As TimeSpan)
  overridden: WaveEngine.Framework.Behavior.Update(System.TimeSpan)
  overload: WaveEngine.Components.Gestures.TouchGestures.Update*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: WaveEngine.Framework.Physics2D.Collider2D
  commentId: T:WaveEngine.Framework.Physics2D.Collider2D
  parent: WaveEngine.Framework.Physics2D
  name: Collider2D
  nameWithType: Collider2D
  fullName: WaveEngine.Framework.Physics2D.Collider2D
- uid: WaveEngine.Framework.Physics2D.RectangleCollider2D
  commentId: T:WaveEngine.Framework.Physics2D.RectangleCollider2D
  name: RectangleCollider2D
  nameWithType: RectangleCollider2D
  fullName: WaveEngine.Framework.Physics2D.RectangleCollider2D
- uid: WaveEngine.Components.Gestures.TouchGestures.Transform2D
  commentId: F:WaveEngine.Components.Gestures.TouchGestures.Transform2D
  isExternal: true
- uid: WaveEngine.Components.Gestures
  commentId: N:WaveEngine.Components.Gestures
  name: WaveEngine.Components.Gestures
  nameWithType: WaveEngine.Components.Gestures
  fullName: WaveEngine.Components.Gestures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Framework.DependencyObject
  commentId: T:WaveEngine.Framework.DependencyObject
  parent: WaveEngine.Framework
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: WaveEngine.Framework.DependencyObject
- uid: WaveEngine.Framework.Component
  commentId: T:WaveEngine.Framework.Component
  parent: WaveEngine.Framework
  name: Component
  nameWithType: Component
  fullName: WaveEngine.Framework.Component
- uid: WaveEngine.Framework.Behavior
  commentId: T:WaveEngine.Framework.Behavior
  parent: WaveEngine.Framework
  name: Behavior
  nameWithType: Behavior
  fullName: WaveEngine.Framework.Behavior
- uid: WaveEngine.Common.Input.ITouchable
  commentId: T:WaveEngine.Common.Input.ITouchable
  parent: WaveEngine.Common.Input
  name: ITouchable
  nameWithType: ITouchable
  fullName: WaveEngine.Common.Input.ITouchable
- uid: WaveEngine.Framework.Behavior.Family
  commentId: P:WaveEngine.Framework.Behavior.Family
  parent: WaveEngine.Framework.Behavior
  name: Family
  nameWithType: Behavior.Family
  fullName: WaveEngine.Framework.Behavior.Family
- uid: WaveEngine.Framework.Behavior.IsActive
  commentId: P:WaveEngine.Framework.Behavior.IsActive
  parent: WaveEngine.Framework.Behavior
  name: IsActive
  nameWithType: Behavior.IsActive
  fullName: WaveEngine.Framework.Behavior.IsActive
- uid: WaveEngine.Framework.Behavior.UpdateOrder
  commentId: P:WaveEngine.Framework.Behavior.UpdateOrder
  parent: WaveEngine.Framework.Behavior
  name: UpdateOrder
  nameWithType: Behavior.UpdateOrder
  fullName: WaveEngine.Framework.Behavior.UpdateOrder
- uid: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  commentId: M:WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  parent: WaveEngine.Framework.Behavior
  isExternal: true
  name: BaseActiveNotification(Boolean)
  nameWithType: Behavior.BaseActiveNotification(Boolean)
  fullName: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
    name: BaseActiveNotification
    nameWithType: Behavior.BaseActiveNotification
    fullName: WaveEngine.Framework.Behavior.BaseActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
    name: BaseActiveNotification
    nameWithType: Behavior.BaseActiveNotification
    fullName: WaveEngine.Framework.Behavior.BaseActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Behavior.ActiveNotification(System.Boolean)
  commentId: M:WaveEngine.Framework.Behavior.ActiveNotification(System.Boolean)
  parent: WaveEngine.Framework.Behavior
  isExternal: true
  name: ActiveNotification(Boolean)
  nameWithType: Behavior.ActiveNotification(Boolean)
  fullName: WaveEngine.Framework.Behavior.ActiveNotification(System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Framework.Behavior.ActiveNotification(System.Boolean)
    name: ActiveNotification
    nameWithType: Behavior.ActiveNotification
    fullName: WaveEngine.Framework.Behavior.ActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Behavior.ActiveNotification(System.Boolean)
    name: ActiveNotification
    nameWithType: Behavior.ActiveNotification
    fullName: WaveEngine.Framework.Behavior.ActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.isInitialized
  commentId: F:WaveEngine.Framework.Component.isInitialized
  parent: WaveEngine.Framework.Component
  name: isInitialized
  nameWithType: Component.isInitialized
  fullName: WaveEngine.Framework.Component.isInitialized
- uid: WaveEngine.Framework.Component.OnComponentInitialized
  commentId: E:WaveEngine.Framework.Component.OnComponentInitialized
  parent: WaveEngine.Framework.Component
  name: OnComponentInitialized
  nameWithType: Component.OnComponentInitialized
  fullName: WaveEngine.Framework.Component.OnComponentInitialized
- uid: WaveEngine.Framework.Component.OnComponentRemoved
  commentId: E:WaveEngine.Framework.Component.OnComponentRemoved
  parent: WaveEngine.Framework.Component
  name: OnComponentRemoved
  nameWithType: Component.OnComponentRemoved
  fullName: WaveEngine.Framework.Component.OnComponentRemoved
- uid: WaveEngine.Framework.Component.Name
  commentId: P:WaveEngine.Framework.Component.Name
  parent: WaveEngine.Framework.Component
  name: Name
  nameWithType: Component.Name
  fullName: WaveEngine.Framework.Component.Name
- uid: WaveEngine.Framework.Component.Owner
  commentId: P:WaveEngine.Framework.Component.Owner
  parent: WaveEngine.Framework.Component
  name: Owner
  nameWithType: Component.Owner
  fullName: WaveEngine.Framework.Component.Owner
- uid: WaveEngine.Framework.Component.Assets
  commentId: P:WaveEngine.Framework.Component.Assets
  parent: WaveEngine.Framework.Component
  name: Assets
  nameWithType: Component.Assets
  fullName: WaveEngine.Framework.Component.Assets
- uid: WaveEngine.Framework.Component.EntityManager
  commentId: P:WaveEngine.Framework.Component.EntityManager
  parent: WaveEngine.Framework.Component
  name: EntityManager
  nameWithType: Component.EntityManager
  fullName: WaveEngine.Framework.Component.EntityManager
- uid: WaveEngine.Framework.Component.BehaviorManager
  commentId: P:WaveEngine.Framework.Component.BehaviorManager
  parent: WaveEngine.Framework.Component
  name: BehaviorManager
  nameWithType: Component.BehaviorManager
  fullName: WaveEngine.Framework.Component.BehaviorManager
- uid: WaveEngine.Framework.Component.RenderManager
  commentId: P:WaveEngine.Framework.Component.RenderManager
  parent: WaveEngine.Framework.Component
  name: RenderManager
  nameWithType: Component.RenderManager
  fullName: WaveEngine.Framework.Component.RenderManager
- uid: WaveEngine.Framework.Component.Clone
  commentId: M:WaveEngine.Framework.Component.Clone
  parent: WaveEngine.Framework.Component
  name: Clone()
  nameWithType: Component.Clone()
  fullName: WaveEngine.Framework.Component.Clone()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Clone
    name: Clone
    nameWithType: Component.Clone
    fullName: WaveEngine.Framework.Component.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Clone
    name: Clone
    nameWithType: Component.Clone
    fullName: WaveEngine.Framework.Component.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.ToString
  commentId: M:WaveEngine.Framework.Component.ToString
  parent: WaveEngine.Framework.Component
  name: ToString()
  nameWithType: Component.ToString()
  fullName: WaveEngine.Framework.Component.ToString()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.ToString
    name: ToString
    nameWithType: Component.ToString
    fullName: WaveEngine.Framework.Component.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.ToString
    name: ToString
    nameWithType: Component.ToString
    fullName: WaveEngine.Framework.Component.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.Initialize
  commentId: M:WaveEngine.Framework.Component.Initialize
  parent: WaveEngine.Framework.Component
  name: Initialize()
  nameWithType: Component.Initialize()
  fullName: WaveEngine.Framework.Component.Initialize()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Initialize
    name: Initialize
    nameWithType: Component.Initialize
    fullName: WaveEngine.Framework.Component.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Initialize
    name: Initialize
    nameWithType: Component.Initialize
    fullName: WaveEngine.Framework.Component.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.Removed
  commentId: M:WaveEngine.Framework.Component.Removed
  parent: WaveEngine.Framework.Component
  name: Removed()
  nameWithType: Component.Removed()
  fullName: WaveEngine.Framework.Component.Removed()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Removed
    name: Removed
    nameWithType: Component.Removed
    fullName: WaveEngine.Framework.Component.Removed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Removed
    name: Removed
    nameWithType: Component.Removed
    fullName: WaveEngine.Framework.Component.Removed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.PropertyChanged
  commentId: E:WaveEngine.Framework.DependencyObject.PropertyChanged
  parent: WaveEngine.Framework.DependencyObject
  name: PropertyChanged
  nameWithType: DependencyObject.PropertyChanged
  fullName: WaveEngine.Framework.DependencyObject.PropertyChanged
- uid: WaveEngine.Framework.DependencyObject.ParentDependencyObject
  commentId: P:WaveEngine.Framework.DependencyObject.ParentDependencyObject
  parent: WaveEngine.Framework.DependencyObject
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: WaveEngine.Framework.DependencyObject.ParentDependencyObject
- uid: WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  commentId: P:WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  parent: WaveEngine.Framework.DependencyObject
  name: EnableDiagnosticCallback
  nameWithType: DependencyObject.EnableDiagnosticCallback
  fullName: WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
- uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  commentId: M:WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  parent: WaveEngine.Framework.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty, System.Object)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: WaveEngine.Framework.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: WaveEngine.Framework.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: WaveEngine.Framework.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: WaveEngine.Framework.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: GetAbsoluteValue<T>(DependencyProperty)
  nameWithType: DependencyObject.GetAbsoluteValue<T>(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue<T>(WaveEngine.Framework.DependencyProperty)
  nameWithType.vb: DependencyObject.GetAbsoluteValue(Of T)(DependencyProperty)
  fullName.vb: WaveEngine.Framework.DependencyObject.GetAbsoluteValue(Of T)(WaveEngine.Framework.DependencyProperty)
  name.vb: GetAbsoluteValue(Of T)(DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
    name: GetAbsoluteValue<T>
    nameWithType: DependencyObject.GetAbsoluteValue<T>
    fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
    name: GetAbsoluteValue(Of T)
    nameWithType: DependencyObject.GetAbsoluteValue(Of T)
    fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: WaveEngine.Framework.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: WaveEngine.Framework.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: IsValueSet(DependencyProperty)
  nameWithType: DependencyObject.IsValueSet(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
    name: IsValueSet
    nameWithType: DependencyObject.IsValueSet
    fullName: WaveEngine.Framework.DependencyObject.IsValueSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
    name: IsValueSet
    nameWithType: DependencyObject.IsValueSet
    fullName: WaveEngine.Framework.DependencyObject.IsValueSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: WaveEngine.Framework.Physics2D
  commentId: N:WaveEngine.Framework.Physics2D
  name: WaveEngine.Framework.Physics2D
  nameWithType: WaveEngine.Framework.Physics2D
  fullName: WaveEngine.Framework.Physics2D
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common.Input
  commentId: N:WaveEngine.Common.Input
  name: WaveEngine.Common.Input
  nameWithType: WaveEngine.Common.Input
  fullName: WaveEngine.Common.Input
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Graphics.Transform2D
  commentId: T:WaveEngine.Framework.Graphics.Transform2D
  parent: WaveEngine.Framework.Graphics
  name: Transform2D
  nameWithType: Transform2D
  fullName: WaveEngine.Framework.Graphics.Transform2D
- uid: WaveEngine.Framework.Graphics
  commentId: N:WaveEngine.Framework.Graphics
  name: WaveEngine.Framework.Graphics
  nameWithType: WaveEngine.Framework.Graphics
  fullName: WaveEngine.Framework.Graphics
- uid: System.EventHandler{WaveEngine.Components.Gestures.GestureEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Components.Gestures.GestureEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<GestureEventArgs>
  nameWithType: EventHandler<GestureEventArgs>
  fullName: System.EventHandler<WaveEngine.Components.Gestures.GestureEventArgs>
  nameWithType.vb: EventHandler(Of GestureEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Components.Gestures.GestureEventArgs)
  name.vb: EventHandler(Of GestureEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Components.Gestures.GestureEventArgs
    name: GestureEventArgs
    nameWithType: GestureEventArgs
    fullName: WaveEngine.Components.Gestures.GestureEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Components.Gestures.GestureEventArgs
    name: GestureEventArgs
    nameWithType: GestureEventArgs
    fullName: WaveEngine.Components.Gestures.GestureEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.ITouchable.TouchOrderChanged
  commentId: E:WaveEngine.Common.Input.ITouchable.TouchOrderChanged
  parent: WaveEngine.Common.Input.ITouchable
  name: TouchOrderChanged
  nameWithType: ITouchable.TouchOrderChanged
  fullName: WaveEngine.Common.Input.ITouchable.TouchOrderChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  isExternal: true
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchOrder*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  name: TouchOrder
  nameWithType: TouchGestures.TouchOrder
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchOrder
- uid: WaveEngine.Common.Input.ITouchable.TouchOrder
  commentId: P:WaveEngine.Common.Input.ITouchable.TouchOrder
  parent: WaveEngine.Common.Input.ITouchable
  name: TouchOrder
  nameWithType: ITouchable.TouchOrder
  fullName: WaveEngine.Common.Input.ITouchable.TouchOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Components.Gestures.SupportedGesture.Scale
  commentId: F:WaveEngine.Components.Gestures.SupportedGesture.Scale
  isExternal: true
- uid: WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  isExternal: true
- uid: WaveEngine.Components.Gestures.TouchGestures.MinScale*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.MinScale
  name: MinScale
  nameWithType: TouchGestures.MinScale
  fullName: WaveEngine.Components.Gestures.TouchGestures.MinScale
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Components.Gestures.TouchGestures.MaxScale*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.MaxScale
  name: MaxScale
  nameWithType: TouchGestures.MaxScale
  fullName: WaveEngine.Components.Gestures.TouchGestures.MaxScale
- uid: WaveEngine.Components.Gestures.SupportedGesture
  commentId: T:WaveEngine.Components.Gestures.SupportedGesture
  parent: WaveEngine.Components.Gestures
  name: SupportedGesture
  nameWithType: SupportedGesture
  fullName: WaveEngine.Components.Gestures.SupportedGesture
- uid: WaveEngine.Components.Gestures.TouchGestures.EnabledGestures*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
  name: EnabledGestures
  nameWithType: TouchGestures.EnabledGestures
  fullName: WaveEngine.Components.Gestures.TouchGestures.EnabledGestures
- uid: WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  commentId: P:WaveEngine.Components.Gestures.TouchGestures.TouchOrder
  isExternal: true
- uid: WaveEngine.Framework.Graphics.RenderLayer
  commentId: T:WaveEngine.Framework.Graphics.RenderLayer
  parent: WaveEngine.Framework.Graphics
  name: RenderLayer
  nameWithType: RenderLayer
  fullName: WaveEngine.Framework.Graphics.RenderLayer
- uid: WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
  commentId: M:WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
  isExternal: true
- uid: WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
  name: ManualTouchOrder
  nameWithType: TouchGestures.ManualTouchOrder
  fullName: WaveEngine.Components.Gestures.TouchGestures.ManualTouchOrder
- uid: WaveEngine.Common.Input.ITouchable.ManualTouchOrder
  commentId: P:WaveEngine.Common.Input.ITouchable.ManualTouchOrder
  parent: WaveEngine.Common.Input.ITouchable
  name: ManualTouchOrder
  nameWithType: ITouchable.ManualTouchOrder
  fullName: WaveEngine.Common.Input.ITouchable.ManualTouchOrder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Components.Gestures.TouchGestures.ProjectCamera*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.ProjectCamera
  name: ProjectCamera
  nameWithType: TouchGestures.ProjectCamera
  fullName: WaveEngine.Components.Gestures.TouchGestures.ProjectCamera
- uid: WaveEngine.Components.Gestures.TouchGestures
  commentId: T:WaveEngine.Components.Gestures.TouchGestures
  parent: WaveEngine.Components.Gestures
  name: TouchGestures
  nameWithType: TouchGestures
  fullName: WaveEngine.Components.Gestures.TouchGestures
- uid: WaveEngine.Components.Gestures.TouchGestures.#ctor*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.#ctor
  name: TouchGestures
  nameWithType: TouchGestures.TouchGestures
  fullName: WaveEngine.Components.Gestures.TouchGestures.TouchGestures
- uid: WaveEngine.Framework.Behavior.DefaultValues
  commentId: M:WaveEngine.Framework.Behavior.DefaultValues
  parent: WaveEngine.Framework.Behavior
  name: DefaultValues()
  nameWithType: Behavior.DefaultValues()
  fullName: WaveEngine.Framework.Behavior.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Framework.Behavior.DefaultValues
    name: DefaultValues
    nameWithType: Behavior.DefaultValues
    fullName: WaveEngine.Framework.Behavior.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Behavior.DefaultValues
    name: DefaultValues
    nameWithType: Behavior.DefaultValues
    fullName: WaveEngine.Framework.Behavior.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.Gestures.TouchGestures.DefaultValues*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.DefaultValues
  name: DefaultValues
  nameWithType: TouchGestures.DefaultValues
  fullName: WaveEngine.Components.Gestures.TouchGestures.DefaultValues
- uid: WaveEngine.Components.Gestures.TouchGestures.Contains*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.Contains
  name: Contains
  nameWithType: TouchGestures.Contains
  fullName: WaveEngine.Components.Gestures.TouchGestures.Contains
- uid: WaveEngine.Common.Input.ITouchable.Contains(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Input.ITouchable.Contains(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Input.ITouchable
  name: Contains(Vector2)
  nameWithType: ITouchable.Contains(Vector2)
  fullName: WaveEngine.Common.Input.ITouchable.Contains(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Input.ITouchable.Contains(WaveEngine.Common.Math.Vector2)
    name: Contains
    nameWithType: ITouchable.Contains
    fullName: WaveEngine.Common.Input.ITouchable.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Input.ITouchable.Contains(WaveEngine.Common.Math.Vector2)
    name: Contains
    nameWithType: ITouchable.Contains
    fullName: WaveEngine.Common.Input.ITouchable.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Common.Input.TouchLocation
  commentId: T:WaveEngine.Common.Input.TouchLocation
  parent: WaveEngine.Common.Input
  name: TouchLocation
  nameWithType: TouchLocation
  fullName: WaveEngine.Common.Input.TouchLocation
- uid: WaveEngine.Components.Gestures.TouchGestures.AddTouch*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.AddTouch
  name: AddTouch
  nameWithType: TouchGestures.AddTouch
  fullName: WaveEngine.Components.Gestures.TouchGestures.AddTouch
- uid: WaveEngine.Common.Input.ITouchable.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  commentId: M:WaveEngine.Common.Input.ITouchable.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
  parent: WaveEngine.Common.Input.ITouchable
  isExternal: true
  name: AddTouch(TouchLocation, Boolean)
  nameWithType: ITouchable.AddTouch(TouchLocation, Boolean)
  fullName: WaveEngine.Common.Input.ITouchable.AddTouch(WaveEngine.Common.Input.TouchLocation, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Common.Input.ITouchable.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
    name: AddTouch
    nameWithType: ITouchable.AddTouch
    fullName: WaveEngine.Common.Input.ITouchable.AddTouch
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Input.ITouchable.AddTouch(WaveEngine.Common.Input.TouchLocation,System.Boolean)
    name: AddTouch
    nameWithType: ITouchable.AddTouch
    fullName: WaveEngine.Common.Input.ITouchable.AddTouch
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.Gestures.GestureSample
  commentId: T:WaveEngine.Components.Gestures.GestureSample
  parent: WaveEngine.Components.Gestures
  name: GestureSample
  nameWithType: GestureSample
  fullName: WaveEngine.Components.Gestures.GestureSample
- uid: WaveEngine.Components.Gestures.TouchGestures.ReadGesture*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.ReadGesture
  name: ReadGesture
  nameWithType: TouchGestures.ReadGesture
  fullName: WaveEngine.Components.Gestures.TouchGestures.ReadGesture
- uid: WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
  name: UpdateTouchOrder
  nameWithType: TouchGestures.UpdateTouchOrder
  fullName: WaveEngine.Components.Gestures.TouchGestures.UpdateTouchOrder
- uid: WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
  commentId: M:WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
  parent: WaveEngine.Common.Input.ITouchable
  name: UpdateTouchOrder()
  nameWithType: ITouchable.UpdateTouchOrder()
  fullName: WaveEngine.Common.Input.ITouchable.UpdateTouchOrder()
  spec.csharp:
  - uid: WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
    name: UpdateTouchOrder
    nameWithType: ITouchable.UpdateTouchOrder
    fullName: WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
    name: UpdateTouchOrder
    nameWithType: ITouchable.UpdateTouchOrder
    fullName: WaveEngine.Common.Input.ITouchable.UpdateTouchOrder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.ResolveDependencies
  commentId: M:WaveEngine.Framework.Component.ResolveDependencies
  parent: WaveEngine.Framework.Component
  name: ResolveDependencies()
  nameWithType: Component.ResolveDependencies()
  fullName: WaveEngine.Framework.Component.ResolveDependencies()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.ResolveDependencies
    name: ResolveDependencies
    nameWithType: Component.ResolveDependencies
    fullName: WaveEngine.Framework.Component.ResolveDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.ResolveDependencies
    name: ResolveDependencies
    nameWithType: Component.ResolveDependencies
    fullName: WaveEngine.Framework.Component.ResolveDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies
  name: ResolveDependencies
  nameWithType: TouchGestures.ResolveDependencies
  fullName: WaveEngine.Components.Gestures.TouchGestures.ResolveDependencies
- uid: WaveEngine.Framework.Component.DeleteDependencies
  commentId: M:WaveEngine.Framework.Component.DeleteDependencies
  parent: WaveEngine.Framework.Component
  name: DeleteDependencies()
  nameWithType: Component.DeleteDependencies()
  fullName: WaveEngine.Framework.Component.DeleteDependencies()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.DeleteDependencies
    name: DeleteDependencies
    nameWithType: Component.DeleteDependencies
    fullName: WaveEngine.Framework.Component.DeleteDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.DeleteDependencies
    name: DeleteDependencies
    nameWithType: Component.DeleteDependencies
    fullName: WaveEngine.Framework.Component.DeleteDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies
  name: DeleteDependencies
  nameWithType: TouchGestures.DeleteDependencies
  fullName: WaveEngine.Components.Gestures.TouchGestures.DeleteDependencies
- uid: WaveEngine.Framework.Behavior.Update(System.TimeSpan)
  commentId: M:WaveEngine.Framework.Behavior.Update(System.TimeSpan)
  parent: WaveEngine.Framework.Behavior
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: Behavior.Update(TimeSpan)
  fullName: WaveEngine.Framework.Behavior.Update(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Framework.Behavior.Update(System.TimeSpan)
    name: Update
    nameWithType: Behavior.Update
    fullName: WaveEngine.Framework.Behavior.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Behavior.Update(System.TimeSpan)
    name: Update
    nameWithType: Behavior.Update
    fullName: WaveEngine.Framework.Behavior.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.Gestures.TouchGestures.Update*
  commentId: Overload:WaveEngine.Components.Gestures.TouchGestures.Update
  name: Update
  nameWithType: TouchGestures.Update
  fullName: WaveEngine.Components.Gestures.TouchGestures.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
