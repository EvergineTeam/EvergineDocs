### YamlMime:ManagedReference
items:
- uid: WaveEngine.Box2D.Utils.LineTools
  commentId: T:WaveEngine.Box2D.Utils.LineTools
  id: LineTools
  parent: WaveEngine.Box2D.Utils
  children:
  - WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.LineIntersect2(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Box2D.Utils.Vertices,System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}@)
  langs:
  - csharp
  - vb
  name: LineTools
  nameWithType: LineTools
  fullName: WaveEngine.Box2D.Utils.LineTools
  type: Class
  source:
    id: LineTools
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 14
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nCollection of helper methods for misc collisions.\nDoes float tolerance and line collisions with lines and AABBs.\n"
  example: []
  syntax:
    content: public static class LineTools
    content.vb: Public Module LineTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: DistanceBetweenPointAndPoint(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: DistanceBetweenPointAndPoint(ref Vector2, ref Vector2)
  nameWithType: LineTools.DistanceBetweenPointAndPoint(ref Vector2, ref Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: DistanceBetweenPointAndPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 22
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nDistance between point and line segment\n"
  example: []
  syntax:
    content: public static float DistanceBetweenPointAndPoint(ref Vector2 point1, ref Vector2 point2)
    parameters:
    - id: point1
      type: WaveEngine.Common.Math.Vector2
      description: The point 1
    - id: point2
      type: WaveEngine.Common.Math.Vector2
      description: The point 2
    return:
      type: System.Single
      description: The distance
    content.vb: Public Shared Function DistanceBetweenPointAndPoint(ByRef point1 As Vector2, ByRef point2 As Vector2) As Single
  overload: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint*
  nameWithType.vb: LineTools.DistanceBetweenPointAndPoint(ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: DistanceBetweenPointAndPoint(ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: DistanceBetweenPointAndLineSegment(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: DistanceBetweenPointAndLineSegment(ref Vector2, ref Vector2, ref Vector2)
  nameWithType: LineTools.DistanceBetweenPointAndLineSegment(ref Vector2, ref Vector2, ref Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: DistanceBetweenPointAndLineSegment
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 36
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nDistance between point and segment\n"
  example: []
  syntax:
    content: public static float DistanceBetweenPointAndLineSegment(ref Vector2 point, ref Vector2 lineEndPoint1, ref Vector2 lineEndPoint2)
    parameters:
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: The point
    - id: lineEndPoint1
      type: WaveEngine.Common.Math.Vector2
      description: The start of the segment
    - id: lineEndPoint2
      type: WaveEngine.Common.Math.Vector2
      description: The end of the segment
    return:
      type: System.Single
      description: The distance
    content.vb: Public Shared Function DistanceBetweenPointAndLineSegment(ByRef point As Vector2, ByRef lineEndPoint1 As Vector2, ByRef lineEndPoint2 As Vector2) As Single
  overload: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment*
  nameWithType.vb: LineTools.DistanceBetweenPointAndLineSegment(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: DistanceBetweenPointAndLineSegment(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect2(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineIntersect2(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  id: LineIntersect2(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineIntersect2(Vector2, Vector2, Vector2, Vector2, out Vector2)
  nameWithType: LineTools.LineIntersect2(Vector2, Vector2, Vector2, Vector2, out Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect2(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: LineIntersect2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 72
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nCheck if the lines a0->a1 and b0->b1 cross.\nIf they do, intersectionPoint will be filled\nwith the point of crossing.\nGrazing lines should not return true.\n"
  example: []
  syntax:
    content: public static bool LineIntersect2(Vector2 a0, Vector2 a1, Vector2 b0, Vector2 b1, out Vector2 intersectionPoint)
    parameters:
    - id: a0
      type: WaveEngine.Common.Math.Vector2
      description: The a0
    - id: a1
      type: WaveEngine.Common.Math.Vector2
      description: The a1
    - id: b0
      type: WaveEngine.Common.Math.Vector2
      description: The b0
    - id: b1
      type: WaveEngine.Common.Math.Vector2
      description: The b1
    - id: intersectionPoint
      type: WaveEngine.Common.Math.Vector2
      description: The intersection point
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Shared Function LineIntersect2(a0 As Vector2, a1 As Vector2, b0 As Vector2, b1 As Vector2, ByRef intersectionPoint As Vector2) As Boolean
  overload: WaveEngine.Box2D.Utils.LineTools.LineIntersect2*
  nameWithType.vb: LineTools.LineIntersect2(Vector2, Vector2, Vector2, Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.LineIntersect2(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: LineIntersect2(Vector2, Vector2, Vector2, Vector2, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineIntersect(Vector2, Vector2, Vector2, Vector2)
  nameWithType: LineTools.LineIntersect(Vector2, Vector2, Vector2, Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: LineIntersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 131
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nLine intersect. From Mark Bayazit&apos;s convex decomposition algorithm\n"
  example: []
  syntax:
    content: public static Vector2 LineIntersect(Vector2 p1, Vector2 p2, Vector2 q1, Vector2 q2)
    parameters:
    - id: p1
      type: WaveEngine.Common.Math.Vector2
      description: The p1
    - id: p2
      type: WaveEngine.Common.Math.Vector2
      description: The p2
    - id: q1
      type: WaveEngine.Common.Math.Vector2
      description: The q1
    - id: q2
      type: WaveEngine.Common.Math.Vector2
      description: The q2
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The distance
    content.vb: Public Shared Function LineIntersect(p1 As Vector2, p2 As Vector2, q1 As Vector2, q2 As Vector2) As Vector2
  overload: WaveEngine.Box2D.Utils.LineTools.LineIntersect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  id: LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, Boolean, Boolean, out Vector2)
  nameWithType: LineTools.LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, Boolean, Boolean, out Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Boolean, System.Boolean, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: LineIntersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 176
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nThis method detects if two line segments (or lines) intersect,\nand, if so, the point of intersection. Use the <code data-dev-comment-type=\"paramref\" class=\"paramref\">firstIsSegment</code> and\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">secondIsSegment</code> parameters to set whether the intersection point\nmust be on the first and second line segments. Setting these\nboth to true means you are doing a line-segment to line-segment\nintersection. Setting one of them to true means you are doing a\nline to line-segment intersection test, and so on.\nNote: If two line segments are coincident, then\nno intersection is detected (there are actually\ninfinite intersection points).\nAuthor: Jeremy Bell\n"
  example: []
  syntax:
    content: public static bool LineIntersect(ref Vector2 point1, ref Vector2 point2, ref Vector2 point3, ref Vector2 point4, bool firstIsSegment, bool secondIsSegment, out Vector2 point)
    parameters:
    - id: point1
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the first line segment.
    - id: point2
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the first line segment.
    - id: point3
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the second line segment.
    - id: point4
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the second line segment.
    - id: firstIsSegment
      type: System.Boolean
      description: >-
        Set this to true to require that the

        intersection point be on the first line segment.
    - id: secondIsSegment
      type: System.Boolean
      description: >-
        Set this to true to require that the

        intersection point be on the second line segment.
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: >-
        This is set to the intersection

        point if an intersection is detected.
    return:
      type: System.Boolean
      description: True if an intersection is detected, false otherwise.
    content.vb: Public Shared Function LineIntersect(ByRef point1 As Vector2, ByRef point2 As Vector2, ByRef point3 As Vector2, ByRef point4 As Vector2, firstIsSegment As Boolean, secondIsSegment As Boolean, ByRef point As Vector2) As Boolean
  overload: WaveEngine.Box2D.Utils.LineTools.LineIntersect*
  nameWithType.vb: LineTools.LineIntersect(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, Boolean, Boolean, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.LineIntersect(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Boolean, System.Boolean, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: LineIntersect(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, Boolean, Boolean, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  id: LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean,System.Boolean,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, out Vector2)
  nameWithType: LineTools.LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, out Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean, System.Boolean, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: LineIntersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 260
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nThis method detects if two line segments (or lines) intersect,\nand, if so, the point of intersection. Use the <code data-dev-comment-type=\"paramref\" class=\"paramref\">firstIsSegment</code> and\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">secondIsSegment</code> parameters to set whether the intersection point\nmust be on the first and second line segments. Setting these\nboth to true means you are doing a line-segment to line-segment\nintersection. Setting one of them to true means you are doing a\nline to line-segment intersection test, and so on.\nNote: If two line segments are coincident, then\nno intersection is detected (there are actually\ninfinite intersection points).\nAuthor: Jeremy Bell\n"
  example: []
  syntax:
    content: public static bool LineIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, bool firstIsSegment, bool secondIsSegment, out Vector2 intersectionPoint)
    parameters:
    - id: point1
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the first line segment.
    - id: point2
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the first line segment.
    - id: point3
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the second line segment.
    - id: point4
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the second line segment.
    - id: firstIsSegment
      type: System.Boolean
      description: >-
        Set this to true to require that the

        intersection point be on the first line segment.
    - id: secondIsSegment
      type: System.Boolean
      description: >-
        Set this to true to require that the

        intersection point be on the second line segment.
    - id: intersectionPoint
      type: WaveEngine.Common.Math.Vector2
      description: >-
        This is set to the intersection

        point if an intersection is detected.
    return:
      type: System.Boolean
      description: True if an intersection is detected, false otherwise.
    content.vb: Public Shared Function LineIntersect(point1 As Vector2, point2 As Vector2, point3 As Vector2, point4 As Vector2, firstIsSegment As Boolean, secondIsSegment As Boolean, ByRef intersectionPoint As Vector2) As Boolean
  overload: WaveEngine.Box2D.Utils.LineTools.LineIntersect*
  nameWithType.vb: LineTools.LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean, System.Boolean, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: LineIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, out Vector2)
  nameWithType: LineTools.LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: LineIntersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 293
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nThis method detects if two line segments intersect,\nand, if so, the point of intersection.\nNote: If two line segments are coincident, then\nno intersection is detected (there are actually\ninfinite intersection points).\n"
  example: []
  syntax:
    content: public static bool LineIntersect(ref Vector2 point1, ref Vector2 point2, ref Vector2 point3, ref Vector2 point4, out Vector2 intersectionPoint)
    parameters:
    - id: point1
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the first line segment.
    - id: point2
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the first line segment.
    - id: point3
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the second line segment.
    - id: point4
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the second line segment.
    - id: intersectionPoint
      type: WaveEngine.Common.Math.Vector2
      description: >-
        This is set to the intersection

        point if an intersection is detected.
    return:
      type: System.Boolean
      description: True if an intersection is detected, false otherwise.
    content.vb: Public Shared Function LineIntersect(ByRef point1 As Vector2, ByRef point2 As Vector2, ByRef point3 As Vector2, ByRef point4 As Vector2, ByRef intersectionPoint As Vector2) As Boolean
  overload: WaveEngine.Box2D.Utils.LineTools.LineIntersect*
  nameWithType.vb: LineTools.LineIntersect(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.LineIntersect(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: LineIntersect(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  id: LineIntersect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineIntersect(Vector2, Vector2, Vector2, Vector2, out Vector2)
  nameWithType: LineTools.LineIntersect(Vector2, Vector2, Vector2, Vector2, out Vector2)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: LineIntersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 317
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nThis method detects if two line segments intersect,\nand, if so, the point of intersection.\nNote: If two line segments are coincident, then\nno intersection is detected (there are actually\ninfinite intersection points).\n"
  example: []
  syntax:
    content: public static bool LineIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, out Vector2 intersectionPoint)
    parameters:
    - id: point1
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the first line segment.
    - id: point2
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the first line segment.
    - id: point3
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the second line segment.
    - id: point4
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the second line segment.
    - id: intersectionPoint
      type: WaveEngine.Common.Math.Vector2
      description: >-
        This is set to the intersection

        point if an intersection is detected.
    return:
      type: System.Boolean
      description: True if an intersection is detected, false otherwise.
    content.vb: Public Shared Function LineIntersect(point1 As Vector2, point2 As Vector2, point3 As Vector2, point4 As Vector2, ByRef intersectionPoint As Vector2) As Boolean
  overload: WaveEngine.Box2D.Utils.LineTools.LineIntersect*
  nameWithType.vb: LineTools.LineIntersect(Vector2, Vector2, Vector2, Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.LineIntersect(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: LineIntersect(Vector2, Vector2, Vector2, Vector2, ByRef Vector2)
- uid: WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Box2D.Utils.Vertices,System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}@)
  commentId: M:WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Box2D.Utils.Vertices,System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}@)
  id: LineSegmentVerticesIntersect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Box2D.Utils.Vertices,System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}@)
  parent: WaveEngine.Box2D.Utils.LineTools
  langs:
  - csharp
  - vb
  name: LineSegmentVerticesIntersect(ref Vector2, ref Vector2, Vertices, ref List<Vector2>)
  nameWithType: LineTools.LineSegmentVerticesIntersect(ref Vector2, ref Vector2, Vertices, ref List<Vector2>)
  fullName: WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, WaveEngine.Box2D.Utils.Vertices, ref System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>)
  type: Method
  source:
    id: LineSegmentVerticesIntersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\LineTools.cs
    startLine: 339
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.Utils
  summary: "\nGet all intersections between a line segment and a list of vertices\nrepresenting a polygon. The vertices reuse adjacent points, so for example\nedges one and two are between the first and second vertices and between the\nsecond and third vertices. The last edge is between vertex vertices.Count - 1\nand verts0. (ie, vertices from a Geometry or AABB)\n"
  example: []
  syntax:
    content: public static void LineSegmentVerticesIntersect(ref Vector2 point1, ref Vector2 point2, Vertices vertices, ref List<Vector2> intersectionPoints)
    parameters:
    - id: point1
      type: WaveEngine.Common.Math.Vector2
      description: The first point of the line segment to test
    - id: point2
      type: WaveEngine.Common.Math.Vector2
      description: The second point of the line segment to test.
    - id: vertices
      type: WaveEngine.Box2D.Utils.Vertices
      description: The vertices, as described above
    - id: intersectionPoints
      type: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
      description: >-
        An list of intersection points. Any intersection points

        found will be added to this list.
    content.vb: Public Shared Sub LineSegmentVerticesIntersect(ByRef point1 As Vector2, ByRef point2 As Vector2, vertices As Vertices, ByRef intersectionPoints As List(Of Vector2))
  overload: WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect*
  nameWithType.vb: LineTools.LineSegmentVerticesIntersect(ByRef Vector2, ByRef Vector2, Vertices, ByRef List(Of Vector2))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, WaveEngine.Box2D.Utils.Vertices, ByRef System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2))
  name.vb: LineSegmentVerticesIntersect(ByRef Vector2, ByRef Vector2, Vertices, ByRef List(Of Vector2))
references:
- uid: WaveEngine.Box2D.Utils
  commentId: N:WaveEngine.Box2D.Utils
  name: WaveEngine.Box2D.Utils
  nameWithType: WaveEngine.Box2D.Utils
  fullName: WaveEngine.Box2D.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint*
  commentId: Overload:WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint
  name: DistanceBetweenPointAndPoint
  nameWithType: LineTools.DistanceBetweenPointAndPoint
  fullName: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndPoint
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment*
  commentId: Overload:WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment
  name: DistanceBetweenPointAndLineSegment
  nameWithType: LineTools.DistanceBetweenPointAndLineSegment
  fullName: WaveEngine.Box2D.Utils.LineTools.DistanceBetweenPointAndLineSegment
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect2*
  commentId: Overload:WaveEngine.Box2D.Utils.LineTools.LineIntersect2
  name: LineIntersect2
  nameWithType: LineTools.LineIntersect2
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Box2D.Utils.LineTools.LineIntersect*
  commentId: Overload:WaveEngine.Box2D.Utils.LineTools.LineIntersect
  name: LineIntersect
  nameWithType: LineTools.LineIntersect
  fullName: WaveEngine.Box2D.Utils.LineTools.LineIntersect
- uid: WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect*
  commentId: Overload:WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect
  name: LineSegmentVerticesIntersect
  nameWithType: LineTools.LineSegmentVerticesIntersect
  fullName: WaveEngine.Box2D.Utils.LineTools.LineSegmentVerticesIntersect
- uid: WaveEngine.Box2D.Utils.Vertices
  commentId: T:WaveEngine.Box2D.Utils.Vertices
  parent: WaveEngine.Box2D.Utils
  name: Vertices
  nameWithType: Vertices
  fullName: WaveEngine.Box2D.Utils.Vertices
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
