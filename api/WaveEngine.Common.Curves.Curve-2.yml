### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Curves.Curve`2
  commentId: T:WaveEngine.Common.Curves.Curve`2
  id: Curve`2
  parent: WaveEngine.Common.Curves
  children:
  - WaveEngine.Common.Curves.Curve`2.AddKey(System.Single,`0)
  - WaveEngine.Common.Curves.Curve`2.CacheSize
  - WaveEngine.Common.Curves.Curve`2.CreateKey(System.Single,`0)
  - WaveEngine.Common.Curves.Curve`2.DefaultValues
  - WaveEngine.Common.Curves.Curve`2.GetValue(System.Single)
  - WaveEngine.Common.Curves.Curve`2.HasValues
  - WaveEngine.Common.Curves.Curve`2.IsCached
  - WaveEngine.Common.Curves.Curve`2.Keyframes
  - WaveEngine.Common.Curves.Curve`2.Lerp(`0,`0,System.Single)
  - WaveEngine.Common.Curves.Curve`2.RemoveKey(`1)
  langs:
  - csharp
  - vb
  name: Curve<T, K>
  nameWithType: Curve<T, K>
  fullName: WaveEngine.Common.Curves.Curve<T, K>
  type: Class
  source:
    id: Curve
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 19
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nThe curve class\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public abstract class Curve<T, K> : SerializableObject where K : CurveKeyframe<T>
    typeParameters:
    - id: T
      description: The type of the curve
    - id: K
      description: The type of the keyframe
    content.vb: >-
      <DataContract>

      Public MustInherit Class Curve(Of T, K As CurveKeyframe(Of T))

          Inherits SerializableObject
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  derivedClasses:
  - WaveEngine.Common.Curves.ColorCurve
  - WaveEngine.Common.Curves.FloatCurve
  inheritedMembers:
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  nameWithType.vb: Curve(Of T, K)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K)
  name.vb: Curve(Of T, K)
- uid: WaveEngine.Common.Curves.Curve`2.Keyframes
  commentId: P:WaveEngine.Common.Curves.Curve`2.Keyframes
  id: Keyframes
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: Keyframes
  nameWithType: Curve<T, K>.Keyframes
  fullName: WaveEngine.Common.Curves.Curve<T, K>.Keyframes
  type: Property
  source:
    id: Keyframes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 69
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nGets the key frames\n"
  example: []
  syntax:
    content: public List<K> Keyframes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{{K}}
    content.vb: Public ReadOnly Property Keyframes As List(Of K)
  overload: WaveEngine.Common.Curves.Curve`2.Keyframes*
  nameWithType.vb: Curve(Of T, K).Keyframes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).Keyframes
- uid: WaveEngine.Common.Curves.Curve`2.HasValues
  commentId: P:WaveEngine.Common.Curves.Curve`2.HasValues
  id: HasValues
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: HasValues
  nameWithType: Curve<T, K>.HasValues
  fullName: WaveEngine.Common.Curves.Curve<T, K>.HasValues
  type: Property
  source:
    id: HasValues
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 80
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nGets a value indicating whether the curve has values\n"
  example: []
  syntax:
    content: public bool HasValues { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasValues As Boolean
  overload: WaveEngine.Common.Curves.Curve`2.HasValues*
  nameWithType.vb: Curve(Of T, K).HasValues
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).HasValues
- uid: WaveEngine.Common.Curves.Curve`2.DefaultValues
  commentId: M:WaveEngine.Common.Curves.Curve`2.DefaultValues
  id: DefaultValues
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: DefaultValues()
  nameWithType: Curve<T, K>.DefaultValues()
  fullName: WaveEngine.Common.Curves.Curve<T, K>.DefaultValues()
  type: Method
  source:
    id: DefaultValues
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 91
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nSets the default values\n"
  example: []
  syntax:
    content: protected override void DefaultValues()
    content.vb: Protected Overrides Sub DefaultValues
  overridden: WaveEngine.Common.IO.SerializableObject.DefaultValues
  overload: WaveEngine.Common.Curves.Curve`2.DefaultValues*
  nameWithType.vb: Curve(Of T, K).DefaultValues()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).DefaultValues()
- uid: WaveEngine.Common.Curves.Curve`2.IsCached
  commentId: P:WaveEngine.Common.Curves.Curve`2.IsCached
  id: IsCached
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: IsCached
  nameWithType: Curve<T, K>.IsCached
  fullName: WaveEngine.Common.Curves.Curve<T, K>.IsCached
  type: Property
  source:
    id: IsCached
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 104
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nGets or sets a value indicating whether the curve is cached or not.\n"
  example: []
  syntax:
    content: public bool IsCached { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCached As Boolean
  overload: WaveEngine.Common.Curves.Curve`2.IsCached*
  nameWithType.vb: Curve(Of T, K).IsCached
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).IsCached
- uid: WaveEngine.Common.Curves.Curve`2.CacheSize
  commentId: P:WaveEngine.Common.Curves.Curve`2.CacheSize
  id: CacheSize
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: CacheSize
  nameWithType: Curve<T, K>.CacheSize
  fullName: WaveEngine.Common.Curves.Curve<T, K>.CacheSize
  type: Property
  source:
    id: CacheSize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 121
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nGets or sets the cache size\n"
  example: []
  syntax:
    content: public int CacheSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CacheSize As Integer
  overload: WaveEngine.Common.Curves.Curve`2.CacheSize*
  nameWithType.vb: Curve(Of T, K).CacheSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).CacheSize
- uid: WaveEngine.Common.Curves.Curve`2.AddKey(System.Single,`0)
  commentId: M:WaveEngine.Common.Curves.Curve`2.AddKey(System.Single,`0)
  id: AddKey(System.Single,`0)
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: AddKey(Single, T)
  nameWithType: Curve<T, K>.AddKey(Single, T)
  fullName: WaveEngine.Common.Curves.Curve<T, K>.AddKey(System.Single, T)
  type: Method
  source:
    id: AddKey
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 146
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nAdds a key to the curve\n"
  example: []
  syntax:
    content: public void AddKey(float lerp, T value)
    parameters:
    - id: lerp
      type: System.Single
      description: The lerp
    - id: value
      type: '{T}'
      description: The key value
    content.vb: Public Sub AddKey(lerp As Single, value As T)
  overload: WaveEngine.Common.Curves.Curve`2.AddKey*
  nameWithType.vb: Curve(Of T, K).AddKey(Single, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).AddKey(System.Single, T)
- uid: WaveEngine.Common.Curves.Curve`2.RemoveKey(`1)
  commentId: M:WaveEngine.Common.Curves.Curve`2.RemoveKey(`1)
  id: RemoveKey(`1)
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: RemoveKey(K)
  nameWithType: Curve<T, K>.RemoveKey(K)
  fullName: WaveEngine.Common.Curves.Curve<T, K>.RemoveKey(K)
  type: Method
  source:
    id: RemoveKey
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 169
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nRemoves a key\n"
  example: []
  syntax:
    content: public void RemoveKey(K key)
    parameters:
    - id: key
      type: '{K}'
      description: The key
    content.vb: Public Sub RemoveKey(key As K)
  overload: WaveEngine.Common.Curves.Curve`2.RemoveKey*
  nameWithType.vb: Curve(Of T, K).RemoveKey(K)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).RemoveKey(K)
- uid: WaveEngine.Common.Curves.Curve`2.GetValue(System.Single)
  commentId: M:WaveEngine.Common.Curves.Curve`2.GetValue(System.Single)
  id: GetValue(System.Single)
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: GetValue(Single)
  nameWithType: Curve<T, K>.GetValue(Single)
  fullName: WaveEngine.Common.Curves.Curve<T, K>.GetValue(System.Single)
  type: Method
  source:
    id: GetValue
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 180
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nGets the value of the curve in a specific lerp.\n"
  example: []
  syntax:
    content: public T GetValue(float lerp)
    parameters:
    - id: lerp
      type: System.Single
      description: The lerp
    return:
      type: '{T}'
      description: The value
    content.vb: Public Function GetValue(lerp As Single) As T
  overload: WaveEngine.Common.Curves.Curve`2.GetValue*
  nameWithType.vb: Curve(Of T, K).GetValue(Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).GetValue(System.Single)
- uid: WaveEngine.Common.Curves.Curve`2.Lerp(`0,`0,System.Single)
  commentId: M:WaveEngine.Common.Curves.Curve`2.Lerp(`0,`0,System.Single)
  id: Lerp(`0,`0,System.Single)
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: Lerp(T, T, Single)
  nameWithType: Curve<T, K>.Lerp(T, T, Single)
  fullName: WaveEngine.Common.Curves.Curve<T, K>.Lerp(T, T, System.Single)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 268
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nObtains an interpolated value between 2 curves\n"
  example: []
  syntax:
    content: protected abstract T Lerp(T value1, T value2, float amount)
    parameters:
    - id: value1
      type: '{T}'
      description: The value 1
    - id: value2
      type: '{T}'
      description: The value 2
    - id: amount
      type: System.Single
      description: The lerp amount
    return:
      type: '{T}'
      description: The interpolated value
    content.vb: Protected MustOverride Function Lerp(value1 As T, value2 As T, amount As Single) As T
  overload: WaveEngine.Common.Curves.Curve`2.Lerp*
  nameWithType.vb: Curve(Of T, K).Lerp(T, T, Single)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).Lerp(T, T, System.Single)
- uid: WaveEngine.Common.Curves.Curve`2.CreateKey(System.Single,`0)
  commentId: M:WaveEngine.Common.Curves.Curve`2.CreateKey(System.Single,`0)
  id: CreateKey(System.Single,`0)
  parent: WaveEngine.Common.Curves.Curve`2
  langs:
  - csharp
  - vb
  name: CreateKey(Single, T)
  nameWithType: Curve<T, K>.CreateKey(Single, T)
  fullName: WaveEngine.Common.Curves.Curve<T, K>.CreateKey(System.Single, T)
  type: Method
  source:
    id: CreateKey
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Curves\Curve`2.cs
    startLine: 276
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Curves
  summary: "\nCretes a new key element\n"
  example: []
  syntax:
    content: protected abstract K CreateKey(float lerp, T value)
    parameters:
    - id: lerp
      type: System.Single
      description: The lerp
    - id: value
      type: '{T}'
      description: The value
    return:
      type: '{K}'
      description: The keyframe
    content.vb: Protected MustOverride Function CreateKey(lerp As Single, value As T) As K
  overload: WaveEngine.Common.Curves.Curve`2.CreateKey*
  nameWithType.vb: Curve(Of T, K).CreateKey(Single, T)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).CreateKey(System.Single, T)
references:
- uid: WaveEngine.Common.Curves
  commentId: N:WaveEngine.Common.Curves
  name: WaveEngine.Common.Curves
  nameWithType: WaveEngine.Common.Curves
  fullName: WaveEngine.Common.Curves
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Curves.Curve`2.Keyframes*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.Keyframes
  name: Keyframes
  nameWithType: Curve<T, K>.Keyframes
  fullName: WaveEngine.Common.Curves.Curve<T, K>.Keyframes
  nameWithType.vb: Curve(Of T, K).Keyframes
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).Keyframes
- uid: System.Collections.Generic.List{{K}}
  commentId: T:System.Collections.Generic.List{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<K>
  nameWithType: List<K>
  fullName: System.Collections.Generic.List<K>
  nameWithType.vb: List(Of K)
  fullName.vb: System.Collections.Generic.List(Of K)
  name.vb: List(Of K)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Common.Curves.Curve`2.HasValues*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.HasValues
  name: HasValues
  nameWithType: Curve<T, K>.HasValues
  fullName: WaveEngine.Common.Curves.Curve<T, K>.HasValues
  nameWithType.vb: Curve(Of T, K).HasValues
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).HasValues
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Curves.Curve`2.DefaultValues*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.DefaultValues
  name: DefaultValues
  nameWithType: Curve<T, K>.DefaultValues
  fullName: WaveEngine.Common.Curves.Curve<T, K>.DefaultValues
  nameWithType.vb: Curve(Of T, K).DefaultValues
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).DefaultValues
- uid: WaveEngine.Common.Curves.Curve`2.IsCached*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.IsCached
  name: IsCached
  nameWithType: Curve<T, K>.IsCached
  fullName: WaveEngine.Common.Curves.Curve<T, K>.IsCached
  nameWithType.vb: Curve(Of T, K).IsCached
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).IsCached
- uid: WaveEngine.Common.Curves.Curve`2.CacheSize*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.CacheSize
  name: CacheSize
  nameWithType: Curve<T, K>.CacheSize
  fullName: WaveEngine.Common.Curves.Curve<T, K>.CacheSize
  nameWithType.vb: Curve(Of T, K).CacheSize
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).CacheSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Curves.Curve`2.AddKey*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.AddKey
  name: AddKey
  nameWithType: Curve<T, K>.AddKey
  fullName: WaveEngine.Common.Curves.Curve<T, K>.AddKey
  nameWithType.vb: Curve(Of T, K).AddKey
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).AddKey
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Common.Curves.Curve`2.RemoveKey*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.RemoveKey
  name: RemoveKey
  nameWithType: Curve<T, K>.RemoveKey
  fullName: WaveEngine.Common.Curves.Curve<T, K>.RemoveKey
  nameWithType.vb: Curve(Of T, K).RemoveKey
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).RemoveKey
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: WaveEngine.Common.Curves.Curve`2.GetValue*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.GetValue
  name: GetValue
  nameWithType: Curve<T, K>.GetValue
  fullName: WaveEngine.Common.Curves.Curve<T, K>.GetValue
  nameWithType.vb: Curve(Of T, K).GetValue
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).GetValue
- uid: WaveEngine.Common.Curves.Curve`2.Lerp*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.Lerp
  name: Lerp
  nameWithType: Curve<T, K>.Lerp
  fullName: WaveEngine.Common.Curves.Curve<T, K>.Lerp
  nameWithType.vb: Curve(Of T, K).Lerp
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).Lerp
- uid: WaveEngine.Common.Curves.Curve`2.CreateKey*
  commentId: Overload:WaveEngine.Common.Curves.Curve`2.CreateKey
  name: CreateKey
  nameWithType: Curve<T, K>.CreateKey
  fullName: WaveEngine.Common.Curves.Curve<T, K>.CreateKey
  nameWithType.vb: Curve(Of T, K).CreateKey
  fullName.vb: WaveEngine.Common.Curves.Curve(Of T, K).CreateKey
