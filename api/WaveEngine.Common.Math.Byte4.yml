### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.Byte4
  commentId: T:WaveEngine.Common.Math.Byte4
  id: Byte4
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  - WaveEngine.Common.Math.Byte4.Equals(System.Object)
  - WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4)
  - WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4@)
  - WaveEngine.Common.Math.Byte4.GetHashCode
  - WaveEngine.Common.Math.Byte4.ToString
  - WaveEngine.Common.Math.Byte4.W
  - WaveEngine.Common.Math.Byte4.X
  - WaveEngine.Common.Math.Byte4.Y
  - WaveEngine.Common.Math.Byte4.Z
  langs:
  - csharp
  - vb
  name: Byte4
  nameWithType: Byte4
  fullName: WaveEngine.Common.Math.Byte4
  type: Struct
  source:
    id: Byte4
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nStores a vector of 4 bytes.\n"
  example: []
  syntax:
    content: 'public struct Byte4 : IEquatable<Byte4>'
    content.vb: >-
      Public Structure Byte4

          Implements IEquatable(Of Byte4)
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Byte4}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.Byte4.X
  commentId: F:WaveEngine.Common.Math.Byte4.X
  id: X
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Byte4.X
  fullName: WaveEngine.Common.Math.Byte4.X
  type: Field
  source:
    id: X
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 21
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nX value.\n"
  example: []
  syntax:
    content: public byte X
    return:
      type: System.Byte
    content.vb: Public X As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Byte4.Y
  commentId: F:WaveEngine.Common.Math.Byte4.Y
  id: Y
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Byte4.Y
  fullName: WaveEngine.Common.Math.Byte4.Y
  type: Field
  source:
    id: Y
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 27
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nY value.\n"
  example: []
  syntax:
    content: public byte Y
    return:
      type: System.Byte
    content.vb: Public Y As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Byte4.Z
  commentId: F:WaveEngine.Common.Math.Byte4.Z
  id: Z
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Byte4.Z
  fullName: WaveEngine.Common.Math.Byte4.Z
  type: Field
  source:
    id: Z
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 33
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nZ value.\n"
  example: []
  syntax:
    content: public byte Z
    return:
      type: System.Byte
    content.vb: Public Z As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Byte4.W
  commentId: F:WaveEngine.Common.Math.Byte4.W
  id: W
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Byte4.W
  fullName: WaveEngine.Common.Math.Byte4.W
  type: Field
  source:
    id: W
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 39
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nW value.\n"
  example: []
  syntax:
    content: public byte W
    return:
      type: System.Byte
    content.vb: Public W As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:WaveEngine.Common.Math.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: Byte4(Byte, Byte, Byte, Byte)
  nameWithType: Byte4.Byte4(Byte, Byte, Byte, Byte)
  fullName: WaveEngine.Common.Math.Byte4.Byte4(System.Byte, System.Byte, System.Byte, System.Byte)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 50
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Byte4\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Byte4(byte x, byte y, byte z, byte w)
    parameters:
    - id: x
      type: System.Byte
      description: The x.
    - id: y
      type: System.Byte
      description: The y.
    - id: z
      type: System.Byte
      description: The z.
    - id: w
      type: System.Byte
      description: The w.
    content.vb: Public Sub New(x As Byte, y As Byte, z As Byte, w As Byte)
  overload: WaveEngine.Common.Math.Byte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Byte4.ToString
  commentId: M:WaveEngine.Common.Math.Byte4.ToString
  id: ToString
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Byte4.ToString()
  fullName: WaveEngine.Common.Math.Byte4.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 67
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: WaveEngine.Common.Math.Byte4.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4)
  commentId: M:WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4)
  id: Equals(WaveEngine.Common.Math.Byte4)
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: Equals(Byte4)
  nameWithType: Byte4.Equals(Byte4)
  fullName: WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 81
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(Byte4 other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Byte4
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(other As Byte4) As Boolean
  overload: WaveEngine.Common.Math.Byte4.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Byte4}.Equals(WaveEngine.Common.Math.Byte4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4@)
  commentId: M:WaveEngine.Common.Math.Byte4.Equals(WaveEngine.Common.Math.Byte4@)
  id: Equals(WaveEngine.Common.Math.Byte4@)
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: Equals(ref Byte4)
  nameWithType: Byte4.Equals(ref Byte4)
  fullName: WaveEngine.Common.Math.Byte4.Equals(ref WaveEngine.Common.Math.Byte4)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 91
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(ref Byte4 other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Byte4
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(ByRef other As Byte4) As Boolean
  overload: WaveEngine.Common.Math.Byte4.Equals*
  nameWithType.vb: Byte4.Equals(ByRef Byte4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Byte4.Equals(ByRef WaveEngine.Common.Math.Byte4)
  name.vb: Equals(ByRef Byte4)
- uid: WaveEngine.Common.Math.Byte4.Equals(System.Object)
  commentId: M:WaveEngine.Common.Math.Byte4.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Byte4.Equals(Object)
  fullName: WaveEngine.Common.Math.Byte4.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 103
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Math.Byte4.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Byte4.GetHashCode
  commentId: M:WaveEngine.Common.Math.Byte4.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Math.Byte4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Byte4.GetHashCode()
  fullName: WaveEngine.Common.Math.Byte4.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Byte4.cs
    startLine: 120
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Math.Byte4.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.IEquatable{WaveEngine.Common.Math.Byte4}
  commentId: T:System.IEquatable{WaveEngine.Common.Math.Byte4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Byte4>
  nameWithType: IEquatable<Byte4>
  fullName: System.IEquatable<WaveEngine.Common.Math.Byte4>
  nameWithType.vb: IEquatable(Of Byte4)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Byte4)
  name.vb: IEquatable(Of Byte4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: WaveEngine.Common.Math.Byte4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: WaveEngine.Common.Math.Byte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: WaveEngine.Common.Math.Byte4
  commentId: T:WaveEngine.Common.Math.Byte4
  parent: WaveEngine.Common.Math
  name: Byte4
  nameWithType: Byte4
  fullName: WaveEngine.Common.Math.Byte4
- uid: WaveEngine.Common.Math.Byte4.#ctor*
  commentId: Overload:WaveEngine.Common.Math.Byte4.#ctor
  name: Byte4
  nameWithType: Byte4.Byte4
  fullName: WaveEngine.Common.Math.Byte4.Byte4
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Byte4.ToString*
  commentId: Overload:WaveEngine.Common.Math.Byte4.ToString
  name: ToString
  nameWithType: Byte4.ToString
  fullName: WaveEngine.Common.Math.Byte4.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: WaveEngine.Common.Math.Byte4.Equals*
  commentId: Overload:WaveEngine.Common.Math.Byte4.Equals
  name: Equals
  nameWithType: Byte4.Equals
  fullName: WaveEngine.Common.Math.Byte4.Equals
- uid: System.IEquatable{WaveEngine.Common.Math.Byte4}.Equals(WaveEngine.Common.Math.Byte4)
  commentId: M:System.IEquatable{WaveEngine.Common.Math.Byte4}.Equals(WaveEngine.Common.Math.Byte4)
  parent: System.IEquatable{WaveEngine.Common.Math.Byte4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Byte4)
  nameWithType: IEquatable<Byte4>.Equals(Byte4)
  fullName: System.IEquatable<WaveEngine.Common.Math.Byte4>.Equals(WaveEngine.Common.Math.Byte4)
  nameWithType.vb: IEquatable(Of Byte4).Equals(Byte4)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Byte4).Equals(WaveEngine.Common.Math.Byte4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Byte4>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Math.Byte4>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: WaveEngine.Common.Math.Byte4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Byte4).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Math.Byte4).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: WaveEngine.Common.Math.Byte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Byte4.GetHashCode*
  commentId: Overload:WaveEngine.Common.Math.Byte4.GetHashCode
  name: GetHashCode
  nameWithType: Byte4.GetHashCode
  fullName: WaveEngine.Common.Math.Byte4.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
