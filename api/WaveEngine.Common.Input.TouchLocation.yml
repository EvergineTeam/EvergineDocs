### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Input.TouchLocation
  commentId: T:WaveEngine.Common.Input.TouchLocation
  id: TouchLocation
  parent: WaveEngine.Common.Input
  children:
  - WaveEngine.Common.Input.TouchLocation.#ctor(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single,System.Boolean)
  - WaveEngine.Common.Input.TouchLocation.Equals(System.Object)
  - WaveEngine.Common.Input.TouchLocation.Equals(WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchLocation.GetHashCode
  - WaveEngine.Common.Input.TouchLocation.Id
  - WaveEngine.Common.Input.TouchLocation.IsNew
  - WaveEngine.Common.Input.TouchLocation.op_Equality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchLocation.op_Inequality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  - WaveEngine.Common.Input.TouchLocation.Position
  - WaveEngine.Common.Input.TouchLocation.State
  langs:
  - csharp
  - vb
  name: TouchLocation
  nameWithType: TouchLocation
  fullName: WaveEngine.Common.Input.TouchLocation
  type: Struct
  source:
    id: TouchLocation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nRepresents a touch location.\n"
  example: []
  syntax:
    content: 'public struct TouchLocation : IEquatable<TouchLocation>'
    content.vb: >-
      Public Structure TouchLocation

          Implements IEquatable(Of TouchLocation)
  implements:
  - System.IEquatable{WaveEngine.Common.Input.TouchLocation}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Input.TouchLocation.Id
  commentId: F:WaveEngine.Common.Input.TouchLocation.Id
  id: Id
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TouchLocation.Id
  fullName: WaveEngine.Common.Input.TouchLocation.Id
  type: Field
  source:
    id: Id
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 20
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nTouch ID.\n"
  example: []
  syntax:
    content: public int Id
    return:
      type: System.Int32
    content.vb: Public Id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchLocation.State
  commentId: F:WaveEngine.Common.Input.TouchLocation.State
  id: State
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: State
  nameWithType: TouchLocation.State
  fullName: WaveEngine.Common.Input.TouchLocation.State
  type: Field
  source:
    id: State
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 25
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nTouch state.\n"
  example: []
  syntax:
    content: public TouchLocationState State
    return:
      type: WaveEngine.Common.Input.TouchLocationState
    content.vb: Public State As TouchLocationState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchLocation.Position
  commentId: F:WaveEngine.Common.Input.TouchLocation.Position
  id: Position
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: TouchLocation.Position
  fullName: WaveEngine.Common.Input.TouchLocation.Position
  type: Field
  source:
    id: Position
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 30
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nTouch position.\n"
  example: []
  syntax:
    content: public Vector2 Position
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Position As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchLocation.IsNew
  commentId: F:WaveEngine.Common.Input.TouchLocation.IsNew
  id: IsNew
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: TouchLocation.IsNew
  fullName: WaveEngine.Common.Input.TouchLocation.IsNew
  type: Field
  source:
    id: IsNew
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 35
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nIf the point is new or it previously existing\n"
  example: []
  syntax:
    content: public bool IsNew
    return:
      type: System.Boolean
    content.vb: Public IsNew As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchLocation.#ctor(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single,System.Boolean)
  commentId: M:WaveEngine.Common.Input.TouchLocation.#ctor(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single,System.Boolean)
  id: '#ctor(System.Int32,WaveEngine.Common.Input.TouchLocationState,System.Single,System.Single,System.Boolean)'
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: TouchLocation(Int32, TouchLocationState, Single, Single, Boolean)
  nameWithType: TouchLocation.TouchLocation(Int32, TouchLocationState, Single, Single, Boolean)
  fullName: WaveEngine.Common.Input.TouchLocation.TouchLocation(System.Int32, WaveEngine.Common.Input.TouchLocationState, System.Single, System.Single, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 47
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Input.TouchLocation\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public TouchLocation(int id, TouchLocationState state, float x, float y, bool isNew)
    parameters:
    - id: id
      type: System.Int32
      description: The id.
    - id: state
      type: WaveEngine.Common.Input.TouchLocationState
      description: The state.
    - id: x
      type: System.Single
      description: The x.
    - id: y
      type: System.Single
      description: The y.
    - id: isNew
      type: System.Boolean
      description: if set to <code>true</code> [is new].
    content.vb: Public Sub New(id As Integer, state As TouchLocationState, x As Single, y As Single, isNew As Boolean)
  overload: WaveEngine.Common.Input.TouchLocation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchLocation.Equals(WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchLocation.Equals(WaveEngine.Common.Input.TouchLocation)
  id: Equals(WaveEngine.Common.Input.TouchLocation)
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: Equals(TouchLocation)
  nameWithType: TouchLocation.Equals(TouchLocation)
  fullName: WaveEngine.Common.Input.TouchLocation.Equals(WaveEngine.Common.Input.TouchLocation)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 63
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(TouchLocation other)
    parameters:
    - id: other
      type: WaveEngine.Common.Input.TouchLocation
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(other As TouchLocation) As Boolean
  overload: WaveEngine.Common.Input.TouchLocation.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Input.TouchLocation}.Equals(WaveEngine.Common.Input.TouchLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Input.TouchLocation.op_Equality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchLocation.op_Equality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  id: op_Equality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: Equality(TouchLocation, TouchLocation)
  nameWithType: TouchLocation.Equality(TouchLocation, TouchLocation)
  fullName: WaveEngine.Common.Input.TouchLocation.Equality(WaveEngine.Common.Input.TouchLocation, WaveEngine.Common.Input.TouchLocation)
  type: Operator
  source:
    id: op_Equality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 76
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nImplements the operator ==.\n"
  example: []
  syntax:
    content: public static bool operator ==(TouchLocation t1, TouchLocation t2)
    parameters:
    - id: t1
      type: WaveEngine.Common.Input.TouchLocation
      description: The t1.
    - id: t2
      type: WaveEngine.Common.Input.TouchLocation
      description: The t2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator =(t1 As TouchLocation, t2 As TouchLocation) As Boolean
  overload: WaveEngine.Common.Input.TouchLocation.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Input.TouchLocation.op_Inequality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  commentId: M:WaveEngine.Common.Input.TouchLocation.op_Inequality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  id: op_Inequality(WaveEngine.Common.Input.TouchLocation,WaveEngine.Common.Input.TouchLocation)
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: Inequality(TouchLocation, TouchLocation)
  nameWithType: TouchLocation.Inequality(TouchLocation, TouchLocation)
  fullName: WaveEngine.Common.Input.TouchLocation.Inequality(WaveEngine.Common.Input.TouchLocation, WaveEngine.Common.Input.TouchLocation)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 89
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nImplements the operator !=.\n"
  example: []
  syntax:
    content: public static bool operator !=(TouchLocation t1, TouchLocation t2)
    parameters:
    - id: t1
      type: WaveEngine.Common.Input.TouchLocation
      description: The t1.
    - id: t2
      type: WaveEngine.Common.Input.TouchLocation
      description: The t2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator <>(t1 As TouchLocation, t2 As TouchLocation) As Boolean
  overload: WaveEngine.Common.Input.TouchLocation.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Input.TouchLocation.Equals(System.Object)
  commentId: M:WaveEngine.Common.Input.TouchLocation.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TouchLocation.Equals(Object)
  fullName: WaveEngine.Common.Input.TouchLocation.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 101
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Input.TouchLocation.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Input.TouchLocation.GetHashCode
  commentId: M:WaveEngine.Common.Input.TouchLocation.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Input.TouchLocation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TouchLocation.GetHashCode()
  fullName: WaveEngine.Common.Input.TouchLocation.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\TouchLocation.cs
    startLine: 118
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Input.TouchLocation.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: WaveEngine.Common.Input
  commentId: N:WaveEngine.Common.Input
  name: WaveEngine.Common.Input
  nameWithType: WaveEngine.Common.Input
  fullName: WaveEngine.Common.Input
- uid: System.IEquatable{WaveEngine.Common.Input.TouchLocation}
  commentId: T:System.IEquatable{WaveEngine.Common.Input.TouchLocation}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TouchLocation>
  nameWithType: IEquatable<TouchLocation>
  fullName: System.IEquatable<WaveEngine.Common.Input.TouchLocation>
  nameWithType.vb: IEquatable(Of TouchLocation)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Input.TouchLocation)
  name.vb: IEquatable(Of TouchLocation)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Input.TouchLocationState
  commentId: T:WaveEngine.Common.Input.TouchLocationState
  parent: WaveEngine.Common.Input
  name: TouchLocationState
  nameWithType: TouchLocationState
  fullName: WaveEngine.Common.Input.TouchLocationState
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Input.TouchLocation
  commentId: T:WaveEngine.Common.Input.TouchLocation
  parent: WaveEngine.Common.Input
  name: TouchLocation
  nameWithType: TouchLocation
  fullName: WaveEngine.Common.Input.TouchLocation
- uid: WaveEngine.Common.Input.TouchLocation.#ctor*
  commentId: Overload:WaveEngine.Common.Input.TouchLocation.#ctor
  name: TouchLocation
  nameWithType: TouchLocation.TouchLocation
  fullName: WaveEngine.Common.Input.TouchLocation.TouchLocation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Input.TouchLocation.Equals*
  commentId: Overload:WaveEngine.Common.Input.TouchLocation.Equals
  name: Equals
  nameWithType: TouchLocation.Equals
  fullName: WaveEngine.Common.Input.TouchLocation.Equals
- uid: System.IEquatable{WaveEngine.Common.Input.TouchLocation}.Equals(WaveEngine.Common.Input.TouchLocation)
  commentId: M:System.IEquatable{WaveEngine.Common.Input.TouchLocation}.Equals(WaveEngine.Common.Input.TouchLocation)
  parent: System.IEquatable{WaveEngine.Common.Input.TouchLocation}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(TouchLocation)
  nameWithType: IEquatable<TouchLocation>.Equals(TouchLocation)
  fullName: System.IEquatable<WaveEngine.Common.Input.TouchLocation>.Equals(WaveEngine.Common.Input.TouchLocation)
  nameWithType.vb: IEquatable(Of TouchLocation).Equals(TouchLocation)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Input.TouchLocation).Equals(WaveEngine.Common.Input.TouchLocation)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<TouchLocation>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Input.TouchLocation>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of TouchLocation).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Input.TouchLocation).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Input.TouchLocation
    name: TouchLocation
    nameWithType: TouchLocation
    fullName: WaveEngine.Common.Input.TouchLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchLocation.op_Equality*
  commentId: Overload:WaveEngine.Common.Input.TouchLocation.op_Equality
  name: Equality
  nameWithType: TouchLocation.Equality
  fullName: WaveEngine.Common.Input.TouchLocation.Equality
- uid: WaveEngine.Common.Input.TouchLocation.op_Inequality*
  commentId: Overload:WaveEngine.Common.Input.TouchLocation.op_Inequality
  name: Inequality
  nameWithType: TouchLocation.Inequality
  fullName: WaveEngine.Common.Input.TouchLocation.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Input.TouchLocation.GetHashCode*
  commentId: Overload:WaveEngine.Common.Input.TouchLocation.GetHashCode
  name: GetHashCode
  nameWithType: TouchLocation.GetHashCode
  fullName: WaveEngine.Common.Input.TouchLocation.GetHashCode
