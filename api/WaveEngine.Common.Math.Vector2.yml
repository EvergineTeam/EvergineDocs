### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  id: Vector2
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.Vector2.#ctor(System.Single)
  - WaveEngine.Common.Math.Vector2.#ctor(System.Single,System.Single)
  - WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Center
  - WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.ClampMagnitude(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single)
  - WaveEngine.Common.Math.Vector2.Cross(System.Single)
  - WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  - WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  - WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  - WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  - WaveEngine.Common.Math.Vector2.Equals(System.Object)
  - WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.GetHashCode
  - WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Length
  - WaveEngine.Common.Math.Vector2.LengthSquared
  - WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Normalize
  - WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.One
  - WaveEngine.Common.Math.Vector2.op_Addition(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_Division(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.op_Division(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_Equality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_Inequality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_Multiply(System.Single,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.op_Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_Subtraction(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.op_UnaryNegation(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.ToString
  - WaveEngine.Common.Math.Vector2.ToVector3(System.Single)
  - WaveEngine.Common.Math.Vector2.ToVector3(System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[],System.Int32,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  - WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[])
  - WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector2.UnitX
  - WaveEngine.Common.Math.Vector2.UnitY
  - WaveEngine.Common.Math.Vector2.X
  - WaveEngine.Common.Math.Vector2.Y
  - WaveEngine.Common.Math.Vector2.Zero
  langs:
  - csharp
  - vb
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
  type: Struct
  source:
    id: Vector2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents a 2D vector.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct Vector2 : IEquatable<Vector2>
    content.vb: >-
      <DataContract>

      Public Structure Vector2

          Implements IEquatable(Of Vector2)
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Vector2}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single)
  - WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D
  - WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single,Box2D.b2Vec2@)
  - WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D(Box2D.b2Vec2@)
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.Vector2.X
  commentId: F:WaveEngine.Common.Math.Vector2.X
  id: X
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector2.X
  fullName: WaveEngine.Common.Math.Vector2.X
  type: Field
  source:
    id: X
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 50
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nX position.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float X
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public X As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.Y
  commentId: F:WaveEngine.Common.Math.Vector2.Y
  id: Y
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector2.Y
  fullName: WaveEngine.Common.Math.Vector2.Y
  type: Field
  source:
    id: Y
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 57
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nY position.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Y
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Y As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.Zero
  commentId: P:WaveEngine.Common.Math.Vector2.Zero
  id: Zero
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector2.Zero
  fullName: WaveEngine.Common.Math.Vector2.Zero
  type: Property
  source:
    id: Zero
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the zero.\n"
  example: []
  syntax:
    content: public static Vector2 Zero { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Shared ReadOnly Property Zero As Vector2
  overload: WaveEngine.Common.Math.Vector2.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector2.One
  commentId: P:WaveEngine.Common.Math.Vector2.One
  id: One
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector2.One
  fullName: WaveEngine.Common.Math.Vector2.One
  type: Property
  source:
    id: One
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 75
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the one.\n"
  example: []
  syntax:
    content: public static Vector2 One { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Shared ReadOnly Property One As Vector2
  overload: WaveEngine.Common.Math.Vector2.One*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector2.UnitX
  commentId: P:WaveEngine.Common.Math.Vector2.UnitX
  id: UnitX
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: WaveEngine.Common.Math.Vector2.UnitX
  type: Property
  source:
    id: UnitX
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 86
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the unit X.\n"
  example: []
  syntax:
    content: public static Vector2 UnitX { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Shared ReadOnly Property UnitX As Vector2
  overload: WaveEngine.Common.Math.Vector2.UnitX*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector2.UnitY
  commentId: P:WaveEngine.Common.Math.Vector2.UnitY
  id: UnitY
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: WaveEngine.Common.Math.Vector2.UnitY
  type: Property
  source:
    id: UnitY
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 97
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the unit Y.\n"
  example: []
  syntax:
    content: public static Vector2 UnitY { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Shared ReadOnly Property UnitY As Vector2
  overload: WaveEngine.Common.Math.Vector2.UnitY*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector2.Center
  commentId: P:WaveEngine.Common.Math.Vector2.Center
  id: Center
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Vector2.Center
  fullName: WaveEngine.Common.Math.Vector2.Center
  type: Property
  source:
    id: Center
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 108
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the vector (0.5f, 0.5f).\n"
  example: []
  syntax:
    content: public static Vector2 Center { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Shared ReadOnly Property Center As Vector2
  overload: WaveEngine.Common.Math.Vector2.Center*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector2.#ctor(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Vector2(Single, Single)
  nameWithType: Vector2.Vector2(Single, Single)
  fullName: WaveEngine.Common.Math.Vector2.Vector2(System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 136
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Vector2(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The x.
    - id: y
      type: System.Single
      description: The y.
    content.vb: Public Sub New(x As Single, y As Single)
  overload: WaveEngine.Common.Math.Vector2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.#ctor(System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Vector2(Single)
  nameWithType: Vector2.Vector2(Single)
  fullName: WaveEngine.Common.Math.Vector2.Vector2(System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 146
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Vector2(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value.
    content.vb: Public Sub New(value As Single)
  overload: WaveEngine.Common.Math.Vector2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.ToString
  commentId: M:WaveEngine.Common.Math.Vector2.ToString
  id: ToString
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2.ToString()
  fullName: WaveEngine.Common.Math.Vector2.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 161
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: WaveEngine.Common.Math.Vector2.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2)
  id: Equals(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Equals(Vector2)
  nameWithType: Vector2.Equals(Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 176
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(Vector2 other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Vector2
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(other As Vector2) As Boolean
  overload: WaveEngine.Common.Math.Vector2.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Vector2}.Equals(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Equals(WaveEngine.Common.Math.Vector2@)
  id: Equals(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Equals(ref Vector2)
  nameWithType: Vector2.Equals(ref Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Equals(ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 186
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(ref Vector2 other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Vector2
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(ByRef other As Vector2) As Boolean
  overload: WaveEngine.Common.Math.Vector2.Equals*
  nameWithType.vb: Vector2.Equals(ByRef Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector2.Equals(ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Equals(ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Equals(System.Object)
  commentId: M:WaveEngine.Common.Math.Vector2.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector2.Equals(Object)
  fullName: WaveEngine.Common.Math.Vector2.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 198
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Math.Vector2.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Vector2.GetHashCode
  commentId: M:WaveEngine.Common.Math.Vector2.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2.GetHashCode()
  fullName: WaveEngine.Common.Math.Vector2.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 215
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Math.Vector2.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Vector2.Length
  commentId: M:WaveEngine.Common.Math.Vector2.Length
  id: Length
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Vector2.Length()
  fullName: WaveEngine.Common.Math.Vector2.Length()
  type: Method
  source:
    id: Length
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 227
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLengthes this instance.\n"
  example: []
  syntax:
    content: public float Length()
    return:
      type: System.Single
      description: The result.
    content.vb: Public Function Length As Single
  overload: WaveEngine.Common.Math.Vector2.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.LengthSquared
  commentId: M:WaveEngine.Common.Math.Vector2.LengthSquared
  id: LengthSquared
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Vector2.LengthSquared()
  fullName: WaveEngine.Common.Math.Vector2.LengthSquared()
  type: Method
  source:
    id: LengthSquared
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 236
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLengthes the squared.\n"
  example: []
  syntax:
    content: public float LengthSquared()
    return:
      type: System.Single
      description: The result.
    content.vb: Public Function LengthSquared As Single
  overload: WaveEngine.Common.Math.Vector2.LengthSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.ToVector3(System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.ToVector3(System.Single)
  id: ToVector3(System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToVector3(Single)
  nameWithType: Vector2.ToVector3(Single)
  fullName: WaveEngine.Common.Math.Vector2.ToVector3(System.Single)
  type: Method
  source:
    id: ToVector3
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 246
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConvert a Vector2 to Vector3.\n"
  example: []
  syntax:
    content: public Vector3 ToVector3(float z)
    parameters:
    - id: z
      type: System.Single
      description: The Z value.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The vector3.
    content.vb: Public Function ToVector3(z As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector2.ToVector3*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.ToVector3(System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector2.ToVector3(System.Single,WaveEngine.Common.Math.Vector3@)
  id: ToVector3(System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToVector3(Single, out Vector3)
  nameWithType: Vector2.ToVector3(Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector2.ToVector3(System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ToVector3
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 256
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConvert a Vector2 to Vector3.\n"
  example: []
  syntax:
    content: public void ToVector3(float z, out Vector3 result)
    parameters:
    - id: z
      type: System.Single
      description: The Z value.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The vector3.
    content.vb: Public Sub ToVector3(z As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector2.ToVector3*
  nameWithType.vb: Vector2.ToVector3(Single, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector2.ToVector3(System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: ToVector3(Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Distance(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Distance(Vector2, Vector2)
  nameWithType: Vector2.Distance(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Distance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 269
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the specified value1.\n"
  example: []
  syntax:
    content: public static float Distance(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Distance(value1 As Vector2, value2 As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector2.Distance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  id: Distance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Distance(ref Vector2, ref Vector2, out Single)
  nameWithType: Vector2.Distance(ref Vector2, ref Vector2, out Single)
  fullName: WaveEngine.Common.Math.Vector2.Distance(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out System.Single)
  type: Method
  source:
    id: Distance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 283
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the specified value1.\n"
  example: []
  syntax:
    content: public static void Distance(ref Vector2 value1, ref Vector2 value2, out float result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub Distance(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector2.Distance*
  nameWithType.vb: Vector2.Distance(ByRef Vector2, ByRef Vector2, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Distance(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef System.Single)
  name.vb: Distance(ByRef Vector2, ByRef Vector2, ByRef Single)
- uid: WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: DistanceSquared(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2, Vector2)
  nameWithType: Vector2.DistanceSquared(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: DistanceSquared
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 297
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the squared.\n"
  example: []
  syntax:
    content: public static float DistanceSquared(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function DistanceSquared(value1 As Vector2, value2 As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector2.DistanceSquared(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  id: DistanceSquared(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: DistanceSquared(ref Vector2, ref Vector2, out Single)
  nameWithType: Vector2.DistanceSquared(ref Vector2, ref Vector2, out Single)
  fullName: WaveEngine.Common.Math.Vector2.DistanceSquared(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out System.Single)
  type: Method
  source:
    id: DistanceSquared
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 311
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the squared.\n"
  example: []
  syntax:
    content: public static void DistanceSquared(ref Vector2 value1, ref Vector2 value2, out float result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub DistanceSquared(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector2.DistanceSquared*
  nameWithType.vb: Vector2.DistanceSquared(ByRef Vector2, ByRef Vector2, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.DistanceSquared(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef System.Single)
  name.vb: DistanceSquared(ByRef Vector2, ByRef Vector2, ByRef Single)
- uid: WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Dot(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Dot(Vector2, Vector2)
  nameWithType: Vector2.Dot(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 325
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDots the specified value1.\n"
  example: []
  syntax:
    content: public static float Dot(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Dot(value1 As Vector2, value2 As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector2.Dot(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  id: Dot(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Dot(ref Vector2, ref Vector2, out Single)
  nameWithType: Vector2.Dot(ref Vector2, ref Vector2, out Single)
  fullName: WaveEngine.Common.Math.Vector2.Dot(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out System.Single)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 336
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDots the specified value1.\n"
  example: []
  syntax:
    content: public static void Dot(ref Vector2 value1, ref Vector2 value2, out float result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub Dot(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector2.Dot*
  nameWithType.vb: Vector2.Dot(ByRef Vector2, ByRef Vector2, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Dot(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef System.Single)
  name.vb: Dot(ByRef Vector2, ByRef Vector2, ByRef Single)
- uid: WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Cross(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Cross(Vector2, Vector2)
  nameWithType: Vector2.Cross(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 347
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCrosses the specified value1.\n"
  example: []
  syntax:
    content: public static float Cross(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Cross(value1 As Vector2, value2 As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector2.Cross(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  id: Cross(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Cross(ref Vector2, ref Vector2, out Single)
  nameWithType: Vector2.Cross(ref Vector2, ref Vector2, out Single)
  fullName: WaveEngine.Common.Math.Vector2.Cross(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out System.Single)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 358
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCrosses the specified value1.\n"
  example: []
  syntax:
    content: public static void Cross(ref Vector2 value1, ref Vector2 value2, out float result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub Cross(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector2.Cross*
  nameWithType.vb: Vector2.Cross(ByRef Vector2, ByRef Vector2, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Cross(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef System.Single)
  name.vb: Cross(ByRef Vector2, ByRef Vector2, ByRef Single)
- uid: WaveEngine.Common.Math.Vector2.Cross(System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Cross(System.Single)
  id: Cross(System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Cross(Single)
  nameWithType: Vector2.Cross(Single)
  fullName: WaveEngine.Common.Math.Vector2.Cross(System.Single)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 368
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCrosses the float value\n"
  example: []
  syntax:
    content: public Vector2 Cross(float s)
    parameters:
    - id: s
      type: System.Single
      description: The value
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result
    content.vb: Public Function Cross(s As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Cross*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.Normalize
  commentId: M:WaveEngine.Common.Math.Vector2.Normalize
  id: Normalize
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector2.Normalize()
  fullName: WaveEngine.Common.Math.Vector2.Normalize()
  type: Method
  source:
    id: Normalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 377
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNormalizes this instance.\n"
  example: []
  syntax:
    content: public float Normalize()
    return:
      type: System.Single
      description: The previous vector length
    content.vb: Public Function Normalize As Single
  overload: WaveEngine.Common.Math.Vector2.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2)
  id: Normalize(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Normalize(Vector2)
  nameWithType: Vector2.Normalize(Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Normalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 395
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNormalizes the specified value.\n"
  example: []
  syntax:
    content: public static Vector2 Normalize(Vector2 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Normalize(value As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Normalize(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Normalize(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Normalize(ref Vector2, out Vector2)
  nameWithType: Vector2.Normalize(ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Normalize(ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Normalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 420
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNormalizes the specified value.\n"
  example: []
  syntax:
    content: public static float Normalize(ref Vector2 value, out Vector2 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    return:
      type: System.Single
      description: The previous vector length
    content.vb: Public Shared Function Normalize(ByRef value As Vector2, ByRef result As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.Normalize*
  nameWithType.vb: Vector2.Normalize(ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Normalize(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Normalize(ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Reflect(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Reflect(Vector2, Vector2)
  nameWithType: Vector2.Reflect(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Reflect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 444
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReflects the specified vector.\n"
  example: []
  syntax:
    content: public static Vector2 Reflect(Vector2 vector, Vector2 normal)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector2
      description: The vector.
    - id: normal
      type: WaveEngine.Common.Math.Vector2
      description: The normal.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Reflect(vector As Vector2, normal As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Reflect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Reflect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Reflect(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Reflect(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Reflect(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Reflect(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Reflect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 461
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReflects the specified vector.\n"
  example: []
  syntax:
    content: public static void Reflect(ref Vector2 vector, ref Vector2 normal, out Vector2 result)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector2
      description: The vector.
    - id: normal
      type: WaveEngine.Common.Math.Vector2
      description: The normal.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Reflect(ByRef vector As Vector2, ByRef normal As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Reflect*
  nameWithType.vb: Vector2.Reflect(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Reflect(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Reflect(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2,System.Single)
  id: Rotate(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Rotate(Vector2, Single)
  nameWithType: Vector2.Rotate(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: Rotate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 475
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRotate a vector\n"
  example: []
  syntax:
    content: public static Vector2 Rotate(Vector2 vector, float angle)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector2
      description: The vector
    - id: angle
      type: System.Single
      description: The angle to rotate
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The rotated vector
    content.vb: Public Shared Function Rotate(vector As Vector2, angle As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Rotate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Rotate(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: Rotate(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Rotate(ref Vector2, Single, out Vector2)
  nameWithType: Vector2.Rotate(ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Rotate(ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Rotate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 504
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRotate a vector\n"
  example: []
  syntax:
    content: public static void Rotate(ref Vector2 vector, float angle, out Vector2 result)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector2
      description: The vector
    - id: angle
      type: System.Single
      description: The angle to rotate
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The rotated vector
    content.vb: Public Shared Sub Rotate(ByRef vector As Vector2, angle As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Rotate*
  nameWithType.vb: Vector2.Rotate(ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Rotate(ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Rotate(ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Min(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Min(Vector2, Vector2)
  nameWithType: Vector2.Min(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 529
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMins the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Min(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Min(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Min(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Min(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Min(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Min(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Min(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 544
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMins the specified value1.\n"
  example: []
  syntax:
    content: public static void Min(ref Vector2 value1, ref Vector2 value2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Min(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Min*
  nameWithType.vb: Vector2.Min(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Min(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Min(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Max(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Max(Vector2, Vector2)
  nameWithType: Vector2.Max(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 556
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMaxes the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Max(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Max(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Max(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Max(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Max(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Max(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Max(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 570
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMaxes the specified value1.\n"
  example: []
  syntax:
    content: public static void Max(ref Vector2 value1, ref Vector2 value2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Max(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Max*
  nameWithType.vb: Vector2.Max(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Max(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Max(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2)
  id: Abs(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Abs(Vector2)
  nameWithType: Vector2.Abs(Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Abs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 581
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a vector whose elements are the absolute values of each of the specified vector&apos;s elements.\n"
  example: []
  syntax:
    content: public static Vector2 Abs(Vector2 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: A vector.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The absolute value vector.
    content.vb: Public Shared Function Abs(value As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Abs(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Abs(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Abs(ref Vector2, out Vector2)
  nameWithType: Vector2.Abs(ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Abs(ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Abs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 594
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a vector whose elements are the absolute values of each of the specified vector&apos;s elements.\n"
  example: []
  syntax:
    content: public static void Abs(ref Vector2 value, out Vector2 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: A vector.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: When this method returns, contains the absolute value vector.
    content.vb: Public Shared Sub Abs(ByRef value As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Abs*
  nameWithType.vb: Vector2.Abs(ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Abs(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Abs(ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Clamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Clamp(Vector2, Vector2, Vector2)
  nameWithType: Vector2.Clamp(Vector2, Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Clamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 607
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClamps the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Clamp(Vector2 value1, Vector2 min, Vector2 max)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: min
      type: WaveEngine.Common.Math.Vector2
      description: The min.
    - id: max
      type: WaveEngine.Common.Math.Vector2
      description: The max.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Clamp(value1 As Vector2, min As Vector2, max As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Clamp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Clamp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Clamp(ref Vector2, ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Clamp(ref Vector2, ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Clamp(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Clamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 631
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClamps the specified value1.\n"
  example: []
  syntax:
    content: public static void Clamp(ref Vector2 value1, ref Vector2 min, ref Vector2 max, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: min
      type: WaveEngine.Common.Math.Vector2
      description: The min.
    - id: max
      type: WaveEngine.Common.Math.Vector2
      description: The max.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Clamp(ByRef value1 As Vector2, ByRef min As Vector2, ByRef max As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Clamp*
  nameWithType.vb: Vector2.Clamp(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Clamp(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Clamp(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  id: Lerp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Lerp(Vector2, Vector2, Single)
  nameWithType: Vector2.Lerp(Vector2, Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 652
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Lerp(Vector2 value1, Vector2 value2, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Lerp(value1 As Vector2, value2 As Vector2, amount As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Lerp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: Lerp(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Lerp(ref Vector2, ref Vector2, Single, out Vector2)
  nameWithType: Vector2.Lerp(ref Vector2, ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Lerp(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 668
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public static void Lerp(ref Vector2 value1, ref Vector2 value2, float amount, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Lerp(ByRef value1 As Vector2, ByRef value2 As Vector2, amount As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Lerp*
  nameWithType.vb: Vector2.Lerp(ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Lerp(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Lerp(ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single,System.Single)
  id: Barycentric(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Barycentric(Vector2, Vector2, Vector2, Single, Single)
  nameWithType: Vector2.Barycentric(Vector2, Vector2, Vector2, Single, Single)
  fullName: WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Single, System.Single)
  type: Method
  source:
    id: Barycentric
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 683
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBarycentrics the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Barycentric(Vector2 value1, Vector2 value2, Vector2 value3, float amount1, float amount2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector2
      description: The value3.
    - id: amount1
      type: System.Single
      description: The amount1.
    - id: amount2
      type: System.Single
      description: The amount2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Barycentric(value1 As Vector2, value2 As Vector2, value3 As Vector2, amount1 As Single, amount2 As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Barycentric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Barycentric(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,WaveEngine.Common.Math.Vector2@)
  id: Barycentric(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Barycentric(ref Vector2, ref Vector2, ref Vector2, Single, Single, out Vector2)
  nameWithType: Vector2.Barycentric(ref Vector2, ref Vector2, ref Vector2, Single, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Barycentric(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Barycentric
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 701
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBarycentrics the specified value1.\n"
  example: []
  syntax:
    content: public static void Barycentric(ref Vector2 value1, ref Vector2 value2, ref Vector2 value3, float amount1, float amount2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector2
      description: The value3.
    - id: amount1
      type: System.Single
      description: The amount1.
    - id: amount2
      type: System.Single
      description: The amount2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Barycentric(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef value3 As Vector2, amount1 As Single, amount2 As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Barycentric*
  nameWithType.vb: Vector2.Barycentric(ByRef Vector2, ByRef Vector2, ByRef Vector2, Single, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Barycentric(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Barycentric(ByRef Vector2, ByRef Vector2, ByRef Vector2, Single, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  id: SmoothStep(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: SmoothStep(Vector2, Vector2, Single)
  nameWithType: Vector2.SmoothStep(Vector2, Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: SmoothStep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 714
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSmoothes the step.\n"
  example: []
  syntax:
    content: public static Vector2 SmoothStep(Vector2 value1, Vector2 value2, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function SmoothStep(value1 As Vector2, value2 As Vector2, amount As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.SmoothStep(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: SmoothStep(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: SmoothStep(ref Vector2, ref Vector2, Single, out Vector2)
  nameWithType: Vector2.SmoothStep(ref Vector2, ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.SmoothStep(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: SmoothStep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 732
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSmoothes the step.\n"
  example: []
  syntax:
    content: public static void SmoothStep(ref Vector2 value1, ref Vector2 value2, float amount, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub SmoothStep(ByRef value1 As Vector2, ByRef value2 As Vector2, amount As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.SmoothStep*
  nameWithType.vb: Vector2.SmoothStep(ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.SmoothStep(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: SmoothStep(ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single)
  id: SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: SmoothDamp(Vector2, Vector2, ref Vector2, Single, Single)
  nameWithType: Vector2.SmoothDamp(Vector2, Vector2, ref Vector2, Single, Single)
  fullName: WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, System.Single)
  type: Method
  source:
    id: SmoothDamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 750
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChanges a vector towards a desired goal over time\n"
  example: []
  syntax:
    content: public static Vector2 SmoothDamp(Vector2 current, Vector2 target, ref Vector2 currentVelocity, float smoothTime, float gameTime)
    parameters:
    - id: current
      type: WaveEngine.Common.Math.Vector2
      description: The current position
    - id: target
      type: WaveEngine.Common.Math.Vector2
      description: The target position we are trying to reach
    - id: currentVelocity
      type: WaveEngine.Common.Math.Vector2
      description: The current velocity, modified by the function
    - id: smoothTime
      type: System.Single
      description: The time it will take to reach the target.
    - id: gameTime
      type: System.Single
      description: The current game time (time between last frame)
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The smooth vector
    content.vb: Public Shared Function SmoothDamp(current As Vector2, target As Vector2, ByRef currentVelocity As Vector2, smoothTime As Single, gameTime As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.SmoothDamp*
  nameWithType.vb: Vector2.SmoothDamp(Vector2, Vector2, ByRef Vector2, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, System.Single)
  name.vb: SmoothDamp(Vector2, Vector2, ByRef Vector2, Single, Single)
- uid: WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,System.Single)
  id: SmoothDamp(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2@,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: SmoothDamp(Vector2, Vector2, ref Vector2, Single, Single, Single)
  nameWithType: Vector2.SmoothDamp(Vector2, Vector2, ref Vector2, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: SmoothDamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 785
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChanges a vector towards a desired goal over time\n"
  example: []
  syntax:
    content: public static Vector2 SmoothDamp(Vector2 current, Vector2 target, ref Vector2 currentVelocity, float smoothTime, float maxSpeed, float gameTime)
    parameters:
    - id: current
      type: WaveEngine.Common.Math.Vector2
      description: The current position
    - id: target
      type: WaveEngine.Common.Math.Vector2
      description: The target position we are trying to reach
    - id: currentVelocity
      type: WaveEngine.Common.Math.Vector2
      description: The current velocity, modified by the function
    - id: smoothTime
      type: System.Single
      description: The time it will take to reach the target.
    - id: maxSpeed
      type: System.Single
      description: The maximum speed
    - id: gameTime
      type: System.Single
      description: The current game time (time between last frame)
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The smooth vector
    content.vb: Public Shared Function SmoothDamp(current As Vector2, target As Vector2, ByRef currentVelocity As Vector2, smoothTime As Single, maxSpeed As Single, gameTime As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.SmoothDamp*
  nameWithType.vb: Vector2.SmoothDamp(Vector2, Vector2, ByRef Vector2, Single, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.SmoothDamp(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, System.Single, System.Single)
  name.vb: SmoothDamp(Vector2, Vector2, ByRef Vector2, Single, Single, Single)
- uid: WaveEngine.Common.Math.Vector2.ClampMagnitude(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.ClampMagnitude(WaveEngine.Common.Math.Vector2,System.Single)
  id: ClampMagnitude(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: ClampMagnitude(Vector2, Single)
  nameWithType: Vector2.ClampMagnitude(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.ClampMagnitude(WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: ClampMagnitude
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 818
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a vector with its magnitude clamped to maxLength.\n"
  example: []
  syntax:
    content: public static Vector2 ClampMagnitude(Vector2 vector, float maxLength)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector2
      description: The vector
    - id: maxLength
      type: System.Single
      description: The max length
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The clamped vector
    content.vb: Public Shared Function ClampMagnitude(vector As Vector2, maxLength As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.ClampMagnitude*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  id: CatmullRom(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: CatmullRom(Vector2, Vector2, Vector2, Vector2, Single)
  nameWithType: Vector2.CatmullRom(Vector2, Vector2, Vector2, Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: CatmullRom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 838
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCatmulls the rom.\n"
  example: []
  syntax:
    content: public static Vector2 CatmullRom(Vector2 value1, Vector2 value2, Vector2 value3, Vector2 value4, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector2
      description: The value3.
    - id: value4
      type: WaveEngine.Common.Math.Vector2
      description: The value4.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function CatmullRom(value1 As Vector2, value2 As Vector2, value3 As Vector2, value4 As Vector2, amount As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.CatmullRom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.CatmullRom(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: CatmullRom(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: CatmullRom(ref Vector2, ref Vector2, ref Vector2, ref Vector2, Single, out Vector2)
  nameWithType: Vector2.CatmullRom(ref Vector2, ref Vector2, ref Vector2, ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.CatmullRom(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: CatmullRom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 858
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCatmulls the rom.\n"
  example: []
  syntax:
    content: public static void CatmullRom(ref Vector2 value1, ref Vector2 value2, ref Vector2 value3, ref Vector2 value4, float amount, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector2
      description: The value3.
    - id: value4
      type: WaveEngine.Common.Math.Vector2
      description: The value4.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub CatmullRom(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef value3 As Vector2, ByRef value4 As Vector2, amount As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.CatmullRom*
  nameWithType.vb: Vector2.CatmullRom(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.CatmullRom(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: CatmullRom(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  id: Hermite(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Hermite(Vector2, Vector2, Vector2, Vector2, Single)
  nameWithType: Vector2.Hermite(Vector2, Vector2, Vector2, Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: Hermite
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 876
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nHermites the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Hermite(Vector2 value1, Vector2 tangent1, Vector2 value2, Vector2 tangent2, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: tangent1
      type: WaveEngine.Common.Math.Vector2
      description: The tangent1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: tangent2
      type: WaveEngine.Common.Math.Vector2
      description: The tangent2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Hermite(value1 As Vector2, tangent1 As Vector2, value2 As Vector2, tangent2 As Vector2, amount As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Hermite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Hermite(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: Hermite(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Hermite(ref Vector2, ref Vector2, ref Vector2, ref Vector2, Single, out Vector2)
  nameWithType: Vector2.Hermite(ref Vector2, ref Vector2, ref Vector2, ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Hermite(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Hermite
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 900
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nHermites the specified value1.\n"
  example: []
  syntax:
    content: public static void Hermite(ref Vector2 value1, ref Vector2 tangent1, ref Vector2 value2, ref Vector2 tangent2, float amount, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: tangent1
      type: WaveEngine.Common.Math.Vector2
      description: The tangent1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: tangent2
      type: WaveEngine.Common.Math.Vector2
      description: The tangent2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Hermite(ByRef value1 As Vector2, ByRef tangent1 As Vector2, ByRef value2 As Vector2, ByRef tangent2 As Vector2, amount As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Hermite*
  nameWithType.vb: Vector2.Hermite(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Hermite(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Hermite(ByRef Vector2, ByRef Vector2, ByRef Vector2, ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  id: Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Transform(Vector2, Matrix)
  nameWithType: Vector2.Transform(Vector2, Matrix)
  fullName: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 919
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified position.\n"
  example: []
  syntax:
    content: public static Vector2 Transform(Vector2 position, Matrix matrix)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector2
      description: The position.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Transform(position As Vector2, matrix As Matrix) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  id: Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Transform(ref Vector2, ref Matrix, out Vector2)
  nameWithType: Vector2.Transform(ref Vector2, ref Matrix, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Transform(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 936
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified position.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector2 position, ref Matrix matrix, out Vector2 result)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector2
      description: The position.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Transform(ByRef position As Vector2, ByRef matrix As Matrix, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Transform*
  nameWithType.vb: Vector2.Transform(ByRef Vector2, ByRef Matrix, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Transform(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Transform(ByRef Vector2, ByRef Matrix, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[])
  commentId: M:WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[])
  id: Transform(WaveEngine.Common.Math.Vector2[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[])
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Transform(Vector2[], ref Matrix, Vector2[])
  nameWithType: Vector2.Transform(Vector2[], ref Matrix, Vector2[])
  fullName: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[], ref WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector2[])
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 951
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified source array.\n"
  example: []
  syntax:
    content: public static void Transform(Vector2[] sourceArray, ref Matrix matrix, Vector2[] destinationArray)
    parameters:
    - id: sourceArray
      type: WaveEngine.Common.Math.Vector2[]
      description: The source array.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: destinationArray
      type: WaveEngine.Common.Math.Vector2[]
      description: The destination array.
    content.vb: Public Shared Sub Transform(sourceArray As Vector2(), ByRef matrix As Matrix, destinationArray As Vector2())
  overload: WaveEngine.Common.Math.Vector2.Transform*
  nameWithType.vb: Vector2.Transform(Vector2(), ByRef Matrix, Vector2())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2(), ByRef WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector2())
  name.vb: Transform(Vector2(), ByRef Matrix, Vector2())
- uid: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[],System.Int32,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  commentId: M:WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[],System.Int32,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  id: Transform(WaveEngine.Common.Math.Vector2[],System.Int32,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Transform(Vector2[], Int32, ref Matrix, Vector2[], Int32, Int32)
  nameWithType: Vector2.Transform(Vector2[], Int32, ref Matrix, Vector2[], Int32, Int32)
  fullName: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2[], System.Int32, ref WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector2[], System.Int32, System.Int32)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 987
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified source array.\n"
  example: []
  syntax:
    content: public static void Transform(Vector2[] sourceArray, int sourceIndex, ref Matrix matrix, Vector2[] destinationArray, int destinationIndex, int length)
    parameters:
    - id: sourceArray
      type: WaveEngine.Common.Math.Vector2[]
      description: The source array.
    - id: sourceIndex
      type: System.Int32
      description: Index of the source.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: destinationArray
      type: WaveEngine.Common.Math.Vector2[]
      description: The destination array.
    - id: destinationIndex
      type: System.Int32
      description: Index of the destination.
    - id: length
      type: System.Int32
      description: The length.
    content.vb: Public Shared Sub Transform(sourceArray As Vector2(), sourceIndex As Integer, ByRef matrix As Matrix, destinationArray As Vector2(), destinationIndex As Integer, length As Integer)
  overload: WaveEngine.Common.Math.Vector2.Transform*
  nameWithType.vb: Vector2.Transform(Vector2(), Int32, ByRef Matrix, Vector2(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2(), System.Int32, ByRef WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector2(), System.Int32, System.Int32)
  name.vb: Transform(Vector2(), Int32, ByRef Matrix, Vector2(), Int32, Int32)
- uid: WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  id: TransformNormal(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: TransformNormal(Vector2, Matrix)
  nameWithType: Vector2.TransformNormal(Vector2, Matrix)
  fullName: WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: TransformNormal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1029
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the normal.\n"
  example: []
  syntax:
    content: public static Vector2 TransformNormal(Vector2 normal, Matrix matrix)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector2
      description: The normal.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function TransformNormal(normal As Vector2, matrix As Matrix) As Vector2
  overload: WaveEngine.Common.Math.Vector2.TransformNormal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.TransformNormal(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  id: TransformNormal(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: TransformNormal(ref Vector2, ref Matrix, out Vector2)
  nameWithType: Vector2.TransformNormal(ref Vector2, ref Matrix, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.TransformNormal(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: TransformNormal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1047
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the normal.\n"
  example: []
  syntax:
    content: public static void TransformNormal(ref Vector2 normal, ref Matrix matrix, out Vector2 result)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector2
      description: The normal.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub TransformNormal(ByRef normal As Vector2, ByRef matrix As Matrix, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.TransformNormal*
  nameWithType.vb: Vector2.TransformNormal(ByRef Vector2, ByRef Matrix, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.TransformNormal(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: TransformNormal(ByRef Vector2, ByRef Matrix, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Quaternion)
  id: Transform(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Quaternion)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Transform(Vector2, Quaternion)
  nameWithType: Vector2.Transform(Vector2, Quaternion)
  fullName: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1062
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified value.\n"
  example: []
  syntax:
    content: public static Vector2 Transform(Vector2 value, Quaternion rotation)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Transform(value As Vector2, rotation As Quaternion) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector2@)
  id: Transform(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Transform(ref Vector2, ref Quaternion, out Vector2)
  nameWithType: Vector2.Transform(ref Vector2, ref Quaternion, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Transform(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Quaternion, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1087
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified value.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector2 value, ref Quaternion rotation, out Vector2 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Transform(ByRef value As Vector2, ByRef rotation As Quaternion, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Transform*
  nameWithType.vb: Vector2.Transform(ByRef Vector2, ByRef Quaternion, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Transform(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Transform(ByRef Vector2, ByRef Quaternion, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2)
  id: Negate(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Negate(Vector2)
  nameWithType: Vector2.Negate(Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Negate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1109
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNegates the specified value.\n"
  example: []
  syntax:
    content: public static Vector2 Negate(Vector2 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Negate(value As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Negate(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Negate(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Negate(ref Vector2, out Vector2)
  nameWithType: Vector2.Negate(ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Negate(ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Negate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1123
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNegates the specified value.\n"
  example: []
  syntax:
    content: public static void Negate(ref Vector2 value, out Vector2 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Negate(ByRef value As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Negate*
  nameWithType.vb: Vector2.Negate(ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Negate(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Negate(ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Add(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Add(Vector2, Vector2)
  nameWithType: Vector2.Add(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1135
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Add(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Add(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Add(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Add(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Add(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Add(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Add(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1150
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified value1.\n"
  example: []
  syntax:
    content: public static void Add(ref Vector2 value1, ref Vector2 value2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Add(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Add*
  nameWithType.vb: Vector2.Add(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Add(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Add(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Subtract(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Subtract(Vector2, Vector2)
  nameWithType: Vector2.Subtract(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Subtract
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1162
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSubtracts the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Subtract(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Subtract(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Subtract(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Subtract(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Subtract(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Subtract(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Subtract(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Subtract
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1177
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSubtracts the specified value1.\n"
  example: []
  syntax:
    content: public static void Subtract(ref Vector2 value1, ref Vector2 value2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Subtract(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Subtract*
  nameWithType.vb: Vector2.Subtract(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Subtract(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Subtract(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Vector2, Vector2)
  nameWithType: Vector2.Multiply(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1189
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Multiply(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Multiply(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Multiply(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Multiply(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1204
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Vector2 value1, ref Vector2 value2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Multiply(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Multiply*
  nameWithType.vb: Vector2.Multiply(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Multiply(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Multiply(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  id: Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Vector2, Single)
  nameWithType: Vector2.Multiply(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1216
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Multiply(Vector2 value1, float scaleFactor)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Multiply(value1 As Vector2, scaleFactor As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: Multiply(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(ref Vector2, Single, out Vector2)
  nameWithType: Vector2.Multiply(ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1231
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Vector2 value1, float scaleFactor, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Multiply(ByRef value1 As Vector2, scaleFactor As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Multiply*
  nameWithType.vb: Vector2.Multiply(ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Multiply(ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Multiply(ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Divide(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Divide(Vector2, Vector2)
  nameWithType: Vector2.Divide(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1243
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Divide(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Divide(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Divide(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Divide(ref Vector2, ref Vector2, out Vector2)
  nameWithType: Vector2.Divide(ref Vector2, ref Vector2, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Divide(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1258
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static void Divide(ref Vector2 value1, ref Vector2 value2, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Divide(ByRef value1 As Vector2, ByRef value2 As Vector2, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Divide*
  nameWithType.vb: Vector2.Divide(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Divide(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Divide(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2,System.Single)
  id: Divide(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Divide(Vector2, Single)
  nameWithType: Vector2.Divide(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1270
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static Vector2 Divide(Vector2 value1, float divider)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: divider
      type: System.Single
      description: The divider.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Function Divide(value1 As Vector2, divider As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Divide(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  id: Divide(WaveEngine.Common.Math.Vector2@,System.Single,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Divide(ref Vector2, Single, out Vector2)
  nameWithType: Vector2.Divide(ref Vector2, Single, out Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Divide(ref WaveEngine.Common.Math.Vector2, System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1286
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static void Divide(ref Vector2 value1, float divider, out Vector2 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: divider
      type: System.Single
      description: The divider.
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The result.
    content.vb: Public Shared Sub Divide(ByRef value1 As Vector2, divider As Single, ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector2.Divide*
  nameWithType.vb: Vector2.Divide(ByRef Vector2, Single, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Divide(ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Divide(ByRef Vector2, Single, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: Angle(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Angle(Vector2, Vector2)
  nameWithType: Vector2.Angle(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1299
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturn the angle in radians between from and to.\n"
  example: []
  syntax:
    content: public static float Angle(Vector2 from, Vector2 to)
    parameters:
    - id: from
      type: WaveEngine.Common.Math.Vector2
      description: From vector.
    - id: to
      type: WaveEngine.Common.Math.Vector2
      description: To vector
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Angle(from As Vector2, to As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.Angle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Collinear(ref Vector2, ref Vector2, ref Vector2)
  nameWithType: Vector2.Collinear(ref Vector2, ref Vector2, ref Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Collinear(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Collinear
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1311
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if three vertices are collinear (ie. on a straight line)\n"
  example: []
  syntax:
    content: public static bool Collinear(ref Vector2 a, ref Vector2 b, ref Vector2 c)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.Vector2
      description: First vertex
    - id: b
      type: WaveEngine.Common.Math.Vector2
      description: Second vertex
    - id: c
      type: WaveEngine.Common.Math.Vector2
      description: Third vertex
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Shared Function Collinear(ByRef a As Vector2, ByRef b As Vector2, ByRef c As Vector2) As Boolean
  overload: WaveEngine.Common.Math.Vector2.Collinear*
  nameWithType.vb: Vector2.Collinear(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Collinear(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Collinear(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single)
  id: Collinear(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Collinear(ref Vector2, ref Vector2, ref Vector2, Single)
  nameWithType: Vector2.Collinear(ref Vector2, ref Vector2, ref Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Collinear(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: Collinear
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1324
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if three vertices are collinear (ie. on a straight line)\n"
  example: []
  syntax:
    content: public static bool Collinear(ref Vector2 a, ref Vector2 b, ref Vector2 c, float tolerance)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.Vector2
      description: First vertex
    - id: b
      type: WaveEngine.Common.Math.Vector2
      description: Second vertex
    - id: c
      type: WaveEngine.Common.Math.Vector2
      description: Third vertex
    - id: tolerance
      type: System.Single
      description: The tolerance
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Shared Function Collinear(ByRef a As Vector2, ByRef b As Vector2, ByRef c As Vector2, tolerance As Single) As Boolean
  overload: WaveEngine.Common.Math.Vector2.Collinear*
  nameWithType.vb: Vector2.Collinear(ByRef Vector2, ByRef Vector2, ByRef Vector2, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Collinear(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single)
  name.vb: Collinear(ByRef Vector2, ByRef Vector2, ByRef Vector2, Single)
- uid: WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector2.Angle(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Angle(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Angle(ref Vector2, ref Vector2)
  nameWithType: Vector2.Angle(ref Vector2, ref Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Angle(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1335
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturn the angle in radians between from and to.\n"
  example: []
  syntax:
    content: public static float Angle(ref Vector2 from, ref Vector2 to)
    parameters:
    - id: from
      type: WaveEngine.Common.Math.Vector2
      description: From vector.
    - id: to
      type: WaveEngine.Common.Math.Vector2
      description: To vector
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Angle(ByRef from As Vector2, ByRef to As Vector2) As Single
  overload: WaveEngine.Common.Math.Vector2.Angle*
  nameWithType.vb: Vector2.Angle(ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector2.Angle(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Angle(ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector2.op_UnaryNegation(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_UnaryNegation(WaveEngine.Common.Math.Vector2)
  id: op_UnaryNegation(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector2)
  nameWithType: Vector2.UnaryNegation(Vector2)
  fullName: WaveEngine.Common.Math.Vector2.UnaryNegation(WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_UnaryNegation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1370
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator -.\n"
  example: []
  syntax:
    content: public static Vector2 operator -(Vector2 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator -(value As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Equality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Equality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: op_Equality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Equality(Vector2, Vector2)
  nameWithType: Vector2.Equality(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Equality(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Equality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1387
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator ==.\n"
  example: []
  syntax:
    content: public static bool operator ==(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator =(value1 As Vector2, value2 As Vector2) As Boolean
  overload: WaveEngine.Common.Math.Vector2.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Inequality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Inequality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: op_Inequality(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Inequality(Vector2, Vector2)
  nameWithType: Vector2.Inequality(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Inequality(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1400
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator !=.\n"
  example: []
  syntax:
    content: public static bool operator !=(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator <>(value1 As Vector2, value2 As Vector2) As Boolean
  overload: WaveEngine.Common.Math.Vector2.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Addition(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Addition(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: op_Addition(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Addition(Vector2, Vector2)
  nameWithType: Vector2.Addition(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Addition(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Addition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1413
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator +.\n"
  example: []
  syntax:
    content: public static Vector2 operator +(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator +(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Subtraction(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Subtraction(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: op_Subtraction(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Subtraction(Vector2, Vector2)
  nameWithType: Vector2.Subtraction(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Subtraction(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Subtraction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1430
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator -.\n"
  example: []
  syntax:
    content: public static Vector2 operator -(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator -(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: op_Multiply(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Vector2, Vector2)
  nameWithType: Vector2.Multiply(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1447
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Vector2 operator *(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  id: op_Multiply(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Vector2, Single)
  nameWithType: Vector2.Multiply(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(WaveEngine.Common.Math.Vector2, System.Single)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1464
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Vector2 operator *(Vector2 value, float scaleFactor)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(value As Vector2, scaleFactor As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Multiply(System.Single,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Multiply(System.Single,WaveEngine.Common.Math.Vector2)
  id: op_Multiply(System.Single,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector2)
  nameWithType: Vector2.Multiply(Single, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Multiply(System.Single, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1480
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Vector2 operator *(float scaleFactor, Vector2 value)
    parameters:
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(scaleFactor As Single, value As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Division(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Division(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  id: op_Division(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Division(Vector2, Vector2)
  nameWithType: Vector2.Division(Vector2, Vector2)
  fullName: WaveEngine.Common.Math.Vector2.Division(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2)
  type: Operator
  source:
    id: op_Division
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1497
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator /.\n"
  example: []
  syntax:
    content: public static Vector2 operator /(Vector2 value1, Vector2 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector2
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator /(value1 As Vector2, value2 As Vector2) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector2.op_Division(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector2.op_Division(WaveEngine.Common.Math.Vector2,System.Single)
  id: op_Division(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Math.Vector2
  langs:
  - csharp
  - vb
  name: Division(Vector2, Single)
  nameWithType: Vector2.Division(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector2.Division(WaveEngine.Common.Math.Vector2, System.Single)
  type: Operator
  source:
    id: op_Division
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector2.cs
    startLine: 1514
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator /.\n"
  example: []
  syntax:
    content: public static Vector2 operator /(Vector2 value1, float divider)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector2
      description: The value1.
    - id: divider
      type: System.Single
      description: The divider.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator /(value1 As Vector2, divider As Single) As Vector2
  overload: WaveEngine.Common.Math.Vector2.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.IEquatable{WaveEngine.Common.Math.Vector2}
  commentId: T:System.IEquatable{WaveEngine.Common.Math.Vector2}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Vector2>
  nameWithType: IEquatable<Vector2>
  fullName: System.IEquatable<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: IEquatable(Of Vector2)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Vector2)
  name.vb: IEquatable(Of Vector2)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Box2D.Box2DConverters
  definition: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single)
  name: ToBox2D(Single)
  nameWithType: Box2DConverters.ToBox2D(Single)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DConverters
  definition: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
  name: ToBox2D()
  nameWithType: Box2DConverters.ToBox2D()
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D()
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single,Box2D.b2Vec2@)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single,Box2D.b2Vec2@)
  parent: WaveEngine.Box2D.Box2DConverters
  definition: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single,Box2D.b2Vec2@)
  name: ToBox2D(Single, b2Vec2)
  nameWithType: Box2DConverters.ToBox2D(Single, b2Vec2)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single, Box2D.b2Vec2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single,Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(System.Single,Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2.WaveEngine.Box2D.Box2DConverters.ToBox2D(Box2D.b2Vec2@)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,Box2D.b2Vec2@)
  parent: WaveEngine.Box2D.Box2DConverters
  definition: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,Box2D.b2Vec2@)
  name: ToBox2D(b2Vec2)
  nameWithType: Box2DConverters.ToBox2D(b2Vec2)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(Box2D.b2Vec2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single)
  isExternal: true
  name: ToBox2D(Vector2, Single)
  nameWithType: Box2DConverters.ToBox2D(Vector2, Single)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2, System.Single)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DConverters
  commentId: T:WaveEngine.Box2D.Box2DConverters
  parent: WaveEngine.Box2D
  name: Box2DConverters
  nameWithType: Box2DConverters
  fullName: WaveEngine.Box2D.Box2DConverters
- uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
  name: ToBox2D(Vector2)
  nameWithType: Box2DConverters.ToBox2D(Vector2)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single,Box2D.b2Vec2@)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single,Box2D.b2Vec2@)
  isExternal: true
  name: ToBox2D(Vector2, Single, b2Vec2)
  nameWithType: Box2DConverters.ToBox2D(Vector2, Single, b2Vec2)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2, System.Single, Box2D.b2Vec2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single,Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,System.Single,Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,Box2D.b2Vec2@)
  commentId: M:WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,Box2D.b2Vec2@)
  isExternal: true
  name: ToBox2D(Vector2, b2Vec2)
  nameWithType: Box2DConverters.ToBox2D(Vector2, b2Vec2)
  fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2, Box2D.b2Vec2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DConverters.ToBox2D(WaveEngine.Common.Math.Vector2,Box2D.b2Vec2@)
    name: ToBox2D
    nameWithType: Box2DConverters.ToBox2D
    fullName: WaveEngine.Box2D.Box2DConverters.ToBox2D
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Box2D.b2Vec2
    name: b2Vec2
    nameWithType: b2Vec2
    fullName: Box2D.b2Vec2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D
  commentId: N:WaveEngine.Box2D
  name: WaveEngine.Box2D
  nameWithType: WaveEngine.Box2D
  fullName: WaveEngine.Box2D
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.Vector2.Zero*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Zero
  name: Zero
  nameWithType: Vector2.Zero
  fullName: WaveEngine.Common.Math.Vector2.Zero
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math.Vector2.One*
  commentId: Overload:WaveEngine.Common.Math.Vector2.One
  name: One
  nameWithType: Vector2.One
  fullName: WaveEngine.Common.Math.Vector2.One
- uid: WaveEngine.Common.Math.Vector2.UnitX*
  commentId: Overload:WaveEngine.Common.Math.Vector2.UnitX
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: WaveEngine.Common.Math.Vector2.UnitX
- uid: WaveEngine.Common.Math.Vector2.UnitY*
  commentId: Overload:WaveEngine.Common.Math.Vector2.UnitY
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: WaveEngine.Common.Math.Vector2.UnitY
- uid: WaveEngine.Common.Math.Vector2.Center*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Center
  name: Center
  nameWithType: Vector2.Center
  fullName: WaveEngine.Common.Math.Vector2.Center
- uid: WaveEngine.Common.Math.Vector2.#ctor*
  commentId: Overload:WaveEngine.Common.Math.Vector2.#ctor
  name: Vector2
  nameWithType: Vector2.Vector2
  fullName: WaveEngine.Common.Math.Vector2.Vector2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2.ToString*
  commentId: Overload:WaveEngine.Common.Math.Vector2.ToString
  name: ToString
  nameWithType: Vector2.ToString
  fullName: WaveEngine.Common.Math.Vector2.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: WaveEngine.Common.Math.Vector2.Equals*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Equals
  name: Equals
  nameWithType: Vector2.Equals
  fullName: WaveEngine.Common.Math.Vector2.Equals
- uid: System.IEquatable{WaveEngine.Common.Math.Vector2}.Equals(WaveEngine.Common.Math.Vector2)
  commentId: M:System.IEquatable{WaveEngine.Common.Math.Vector2}.Equals(WaveEngine.Common.Math.Vector2)
  parent: System.IEquatable{WaveEngine.Common.Math.Vector2}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Vector2)
  nameWithType: IEquatable<Vector2>.Equals(Vector2)
  fullName: System.IEquatable<WaveEngine.Common.Math.Vector2>.Equals(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: IEquatable(Of Vector2).Equals(Vector2)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Vector2).Equals(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Vector2>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Math.Vector2>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Vector2).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Math.Vector2).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector2.GetHashCode*
  commentId: Overload:WaveEngine.Common.Math.Vector2.GetHashCode
  name: GetHashCode
  nameWithType: Vector2.GetHashCode
  fullName: WaveEngine.Common.Math.Vector2.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Math.Vector2.Length*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Length
  name: Length
  nameWithType: Vector2.Length
  fullName: WaveEngine.Common.Math.Vector2.Length
- uid: WaveEngine.Common.Math.Vector2.LengthSquared*
  commentId: Overload:WaveEngine.Common.Math.Vector2.LengthSquared
  name: LengthSquared
  nameWithType: Vector2.LengthSquared
  fullName: WaveEngine.Common.Math.Vector2.LengthSquared
- uid: WaveEngine.Common.Math.Vector2.ToVector3*
  commentId: Overload:WaveEngine.Common.Math.Vector2.ToVector3
  name: ToVector3
  nameWithType: Vector2.ToVector3
  fullName: WaveEngine.Common.Math.Vector2.ToVector3
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.Vector2.Distance*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Distance
  name: Distance
  nameWithType: Vector2.Distance
  fullName: WaveEngine.Common.Math.Vector2.Distance
- uid: WaveEngine.Common.Math.Vector2.DistanceSquared*
  commentId: Overload:WaveEngine.Common.Math.Vector2.DistanceSquared
  name: DistanceSquared
  nameWithType: Vector2.DistanceSquared
  fullName: WaveEngine.Common.Math.Vector2.DistanceSquared
- uid: WaveEngine.Common.Math.Vector2.Dot*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Dot
  name: Dot
  nameWithType: Vector2.Dot
  fullName: WaveEngine.Common.Math.Vector2.Dot
- uid: WaveEngine.Common.Math.Vector2.Cross*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Cross
  name: Cross
  nameWithType: Vector2.Cross
  fullName: WaveEngine.Common.Math.Vector2.Cross
- uid: WaveEngine.Common.Math.Vector2.Normalize*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Normalize
  name: Normalize
  nameWithType: Vector2.Normalize
  fullName: WaveEngine.Common.Math.Vector2.Normalize
- uid: WaveEngine.Common.Math.Vector2.Reflect*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Reflect
  name: Reflect
  nameWithType: Vector2.Reflect
  fullName: WaveEngine.Common.Math.Vector2.Reflect
- uid: WaveEngine.Common.Math.Vector2.Rotate*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Rotate
  name: Rotate
  nameWithType: Vector2.Rotate
  fullName: WaveEngine.Common.Math.Vector2.Rotate
- uid: WaveEngine.Common.Math.Vector2.Min*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Min
  name: Min
  nameWithType: Vector2.Min
  fullName: WaveEngine.Common.Math.Vector2.Min
- uid: WaveEngine.Common.Math.Vector2.Max*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Max
  name: Max
  nameWithType: Vector2.Max
  fullName: WaveEngine.Common.Math.Vector2.Max
- uid: WaveEngine.Common.Math.Vector2.Abs*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Abs
  name: Abs
  nameWithType: Vector2.Abs
  fullName: WaveEngine.Common.Math.Vector2.Abs
- uid: WaveEngine.Common.Math.Vector2.Clamp*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Clamp
  name: Clamp
  nameWithType: Vector2.Clamp
  fullName: WaveEngine.Common.Math.Vector2.Clamp
- uid: WaveEngine.Common.Math.Vector2.Lerp*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Lerp
  name: Lerp
  nameWithType: Vector2.Lerp
  fullName: WaveEngine.Common.Math.Vector2.Lerp
- uid: WaveEngine.Common.Math.Vector2.Barycentric*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Barycentric
  name: Barycentric
  nameWithType: Vector2.Barycentric
  fullName: WaveEngine.Common.Math.Vector2.Barycentric
- uid: WaveEngine.Common.Math.Vector2.SmoothStep*
  commentId: Overload:WaveEngine.Common.Math.Vector2.SmoothStep
  name: SmoothStep
  nameWithType: Vector2.SmoothStep
  fullName: WaveEngine.Common.Math.Vector2.SmoothStep
- uid: WaveEngine.Common.Math.Vector2.SmoothDamp*
  commentId: Overload:WaveEngine.Common.Math.Vector2.SmoothDamp
  name: SmoothDamp
  nameWithType: Vector2.SmoothDamp
  fullName: WaveEngine.Common.Math.Vector2.SmoothDamp
- uid: WaveEngine.Common.Math.Vector2.ClampMagnitude*
  commentId: Overload:WaveEngine.Common.Math.Vector2.ClampMagnitude
  name: ClampMagnitude
  nameWithType: Vector2.ClampMagnitude
  fullName: WaveEngine.Common.Math.Vector2.ClampMagnitude
- uid: WaveEngine.Common.Math.Vector2.CatmullRom*
  commentId: Overload:WaveEngine.Common.Math.Vector2.CatmullRom
  name: CatmullRom
  nameWithType: Vector2.CatmullRom
  fullName: WaveEngine.Common.Math.Vector2.CatmullRom
- uid: WaveEngine.Common.Math.Vector2.Hermite*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Hermite
  name: Hermite
  nameWithType: Vector2.Hermite
  fullName: WaveEngine.Common.Math.Vector2.Hermite
- uid: WaveEngine.Common.Math.Vector2.Transform*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Transform
  name: Transform
  nameWithType: Vector2.Transform
  fullName: WaveEngine.Common.Math.Vector2.Transform
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Math.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: WaveEngine.Common.Math.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: WaveEngine.Common.Math.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Math.Vector2.TransformNormal*
  commentId: Overload:WaveEngine.Common.Math.Vector2.TransformNormal
  name: TransformNormal
  nameWithType: Vector2.TransformNormal
  fullName: WaveEngine.Common.Math.Vector2.TransformNormal
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Common.Math.Vector2.Negate*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Negate
  name: Negate
  nameWithType: Vector2.Negate
  fullName: WaveEngine.Common.Math.Vector2.Negate
- uid: WaveEngine.Common.Math.Vector2.Add*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Add
  name: Add
  nameWithType: Vector2.Add
  fullName: WaveEngine.Common.Math.Vector2.Add
- uid: WaveEngine.Common.Math.Vector2.Subtract*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Subtract
  name: Subtract
  nameWithType: Vector2.Subtract
  fullName: WaveEngine.Common.Math.Vector2.Subtract
- uid: WaveEngine.Common.Math.Vector2.Multiply*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Multiply
  name: Multiply
  nameWithType: Vector2.Multiply
  fullName: WaveEngine.Common.Math.Vector2.Multiply
- uid: WaveEngine.Common.Math.Vector2.Divide*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Divide
  name: Divide
  nameWithType: Vector2.Divide
  fullName: WaveEngine.Common.Math.Vector2.Divide
- uid: WaveEngine.Common.Math.Vector2.Angle*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Angle
  name: Angle
  nameWithType: Vector2.Angle
  fullName: WaveEngine.Common.Math.Vector2.Angle
- uid: WaveEngine.Common.Math.Vector2.Collinear*
  commentId: Overload:WaveEngine.Common.Math.Vector2.Collinear
  name: Collinear
  nameWithType: Vector2.Collinear
  fullName: WaveEngine.Common.Math.Vector2.Collinear
- uid: WaveEngine.Common.Math.Vector2.op_UnaryNegation*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector2.UnaryNegation
  fullName: WaveEngine.Common.Math.Vector2.UnaryNegation
- uid: WaveEngine.Common.Math.Vector2.op_Equality*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_Equality
  name: Equality
  nameWithType: Vector2.Equality
  fullName: WaveEngine.Common.Math.Vector2.Equality
- uid: WaveEngine.Common.Math.Vector2.op_Inequality*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_Inequality
  name: Inequality
  nameWithType: Vector2.Inequality
  fullName: WaveEngine.Common.Math.Vector2.Inequality
- uid: WaveEngine.Common.Math.Vector2.op_Addition*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_Addition
  name: Addition
  nameWithType: Vector2.Addition
  fullName: WaveEngine.Common.Math.Vector2.Addition
- uid: WaveEngine.Common.Math.Vector2.op_Subtraction*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_Subtraction
  name: Subtraction
  nameWithType: Vector2.Subtraction
  fullName: WaveEngine.Common.Math.Vector2.Subtraction
- uid: WaveEngine.Common.Math.Vector2.op_Multiply*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_Multiply
  name: Multiply
  nameWithType: Vector2.Multiply
  fullName: WaveEngine.Common.Math.Vector2.Multiply
- uid: WaveEngine.Common.Math.Vector2.op_Division*
  commentId: Overload:WaveEngine.Common.Math.Vector2.op_Division
  name: Division
  nameWithType: Vector2.Division
  fullName: WaveEngine.Common.Math.Vector2.Division
