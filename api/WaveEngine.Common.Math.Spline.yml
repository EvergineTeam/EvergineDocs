### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.Spline
  commentId: T:WaveEngine.Common.Math.Spline
  id: Spline
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.Spline.#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32,WaveEngine.Common.Math.Vector3[])
  - WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32@,WaveEngine.Common.Math.Vector3[]@,WaveEngine.Common.Math.Spline[]@)
  - WaveEngine.Common.Math.Spline.GetPointOnSpline(System.Single)
  langs:
  - csharp
  - vb
  name: Spline
  nameWithType: Spline
  fullName: WaveEngine.Common.Math.Spline
  type: Struct
  source:
    id: Spline
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Spline.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresentes a spline.\n"
  example: []
  syntax:
    content: public struct Spline
    content.vb: Public Structure Spline
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.Spline.#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Spline.#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: '#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)'
  parent: WaveEngine.Common.Math.Spline
  langs:
  - csharp
  - vb
  name: Spline(Vector3, Vector3, Vector3, Vector3)
  nameWithType: Spline.Spline(Vector3, Vector3, Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Spline.Spline(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Spline.cs
    startLine: 45
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Spline\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Spline(Vector3 a, Vector3 b, Vector3 c, Vector3 d)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.Vector3
      description: A point.
    - id: b
      type: WaveEngine.Common.Math.Vector3
      description: B point.
    - id: c
      type: WaveEngine.Common.Math.Vector3
      description: C point.
    - id: d
      type: WaveEngine.Common.Math.Vector3
      description: D point.
    content.vb: Public Sub New(a As Vector3, b As Vector3, c As Vector3, d As Vector3)
  overload: WaveEngine.Common.Math.Spline.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Spline.GetPointOnSpline(System.Single)
  commentId: M:WaveEngine.Common.Math.Spline.GetPointOnSpline(System.Single)
  id: GetPointOnSpline(System.Single)
  parent: WaveEngine.Common.Math.Spline
  langs:
  - csharp
  - vb
  name: GetPointOnSpline(Single)
  nameWithType: Spline.GetPointOnSpline(Single)
  fullName: WaveEngine.Common.Math.Spline.GetPointOnSpline(System.Single)
  type: Method
  source:
    id: GetPointOnSpline
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Spline.cs
    startLine: 61
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEvaluate the point using a cubic equation\n"
  example: []
  syntax:
    content: public Vector3 GetPointOnSpline(float s)
    parameters:
    - id: s
      type: System.Single
      description: A distance.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The point.
    content.vb: Public Function GetPointOnSpline(s As Single) As Vector3
  overload: WaveEngine.Common.Math.Spline.GetPointOnSpline*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32,WaveEngine.Common.Math.Vector3[])
  commentId: M:WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32,WaveEngine.Common.Math.Vector3[])
  id: CalculateCubicSpline(System.Int32,WaveEngine.Common.Math.Vector3[])
  parent: WaveEngine.Common.Math.Spline
  langs:
  - csharp
  - vb
  name: CalculateCubicSpline(Int32, Vector3[])
  nameWithType: Spline.CalculateCubicSpline(Int32, Vector3[])
  fullName: WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32, WaveEngine.Common.Math.Vector3[])
  type: Method
  source:
    id: CalculateCubicSpline
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Spline.cs
    startLine: 74
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCalculates the natural cubic spline of the control points.\nThe segments are represented as: a + b*u + c*u^2 + d*u^3\nalgorithm adopted from: http://www.cse.unsw.edu.au/~lambert/splines/\n"
  example: []
  syntax:
    content: public static Spline[] CalculateCubicSpline(int n, Vector3[] v)
    parameters:
    - id: n
      type: System.Int32
      description: the number of control points
    - id: v
      type: WaveEngine.Common.Math.Vector3[]
      description: the array of vectors
    return:
      type: WaveEngine.Common.Math.Spline[]
      description: The spline.
    content.vb: Public Shared Function CalculateCubicSpline(n As Integer, v As Vector3()) As Spline()
  overload: WaveEngine.Common.Math.Spline.CalculateCubicSpline*
  nameWithType.vb: Spline.CalculateCubicSpline(Int32, Vector3())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32, WaveEngine.Common.Math.Vector3())
  name.vb: CalculateCubicSpline(Int32, Vector3())
- uid: WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32@,WaveEngine.Common.Math.Vector3[]@,WaveEngine.Common.Math.Spline[]@)
  commentId: M:WaveEngine.Common.Math.Spline.CalculateCubicSpline(System.Int32@,WaveEngine.Common.Math.Vector3[]@,WaveEngine.Common.Math.Spline[]@)
  id: CalculateCubicSpline(System.Int32@,WaveEngine.Common.Math.Vector3[]@,WaveEngine.Common.Math.Spline[]@)
  parent: WaveEngine.Common.Math.Spline
  langs:
  - csharp
  - vb
  name: CalculateCubicSpline(ref Int32, ref Vector3[], out Spline[])
  nameWithType: Spline.CalculateCubicSpline(ref Int32, ref Vector3[], out Spline[])
  fullName: WaveEngine.Common.Math.Spline.CalculateCubicSpline(ref System.Int32, ref WaveEngine.Common.Math.Vector3[], out WaveEngine.Common.Math.Spline[])
  type: Method
  source:
    id: CalculateCubicSpline
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Spline.cs
    startLine: 89
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCalculates the natural cubic spline of the control points.\nThe segments are represented as: a + b*u + c*u^2 + d*u^3\nalgorithm adopted from: http://www.cse.unsw.edu.au/~lambert/splines/\n"
  example: []
  syntax:
    content: public static void CalculateCubicSpline(ref int n, ref Vector3[] v, out Spline[] c)
    parameters:
    - id: n
      type: System.Int32
      description: the number of control points
    - id: v
      type: WaveEngine.Common.Math.Vector3[]
      description: the array of vectors
    - id: c
      type: WaveEngine.Common.Math.Spline[]
      description: The c.
    content.vb: Public Shared Sub CalculateCubicSpline(ByRef n As Integer, ByRef v As Vector3(), ByRef c As Spline())
  overload: WaveEngine.Common.Math.Spline.CalculateCubicSpline*
  nameWithType.vb: Spline.CalculateCubicSpline(ByRef Int32, ByRef Vector3(), ByRef Spline())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Spline.CalculateCubicSpline(ByRef System.Int32, ByRef WaveEngine.Common.Math.Vector3(), ByRef WaveEngine.Common.Math.Spline())
  name.vb: CalculateCubicSpline(ByRef Int32, ByRef Vector3(), ByRef Spline())
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Math.Spline
  commentId: T:WaveEngine.Common.Math.Spline
  name: Spline
  nameWithType: Spline
  fullName: WaveEngine.Common.Math.Spline
- uid: WaveEngine.Common.Math.Spline.#ctor*
  commentId: Overload:WaveEngine.Common.Math.Spline.#ctor
  name: Spline
  nameWithType: Spline.Spline
  fullName: WaveEngine.Common.Math.Spline.Spline
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.Spline.GetPointOnSpline*
  commentId: Overload:WaveEngine.Common.Math.Spline.GetPointOnSpline
  name: GetPointOnSpline
  nameWithType: Spline.GetPointOnSpline
  fullName: WaveEngine.Common.Math.Spline.GetPointOnSpline
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.Spline.CalculateCubicSpline*
  commentId: Overload:WaveEngine.Common.Math.Spline.CalculateCubicSpline
  name: CalculateCubicSpline
  nameWithType: Spline.CalculateCubicSpline
  fullName: WaveEngine.Common.Math.Spline.CalculateCubicSpline
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Math.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: WaveEngine.Common.Math.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: WaveEngine.Common.Math.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Math.Spline[]
  isExternal: true
  name: Spline[]
  nameWithType: Spline[]
  fullName: WaveEngine.Common.Math.Spline[]
  nameWithType.vb: Spline()
  fullName.vb: WaveEngine.Common.Math.Spline()
  name.vb: Spline()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Spline
    name: Spline
    nameWithType: Spline
    fullName: WaveEngine.Common.Math.Spline
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Spline
    name: Spline
    nameWithType: Spline
    fullName: WaveEngine.Common.Math.Spline
  - name: ()
    nameWithType: ()
    fullName: ()
