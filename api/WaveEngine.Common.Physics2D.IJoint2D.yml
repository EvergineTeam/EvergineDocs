### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics2D.IJoint2D
  commentId: T:WaveEngine.Common.Physics2D.IJoint2D
  id: IJoint2D
  parent: WaveEngine.Common.Physics2D
  children:
  - WaveEngine.Common.Physics2D.IJoint2D.BodyA
  - WaveEngine.Common.Physics2D.IJoint2D.BodyB
  - WaveEngine.Common.Physics2D.IJoint2D.BreakPoint
  - WaveEngine.Common.Physics2D.IJoint2D.InternalJoint
  - WaveEngine.Common.Physics2D.IJoint2D.IsActive
  - WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA
  - WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB
  - WaveEngine.Common.Physics2D.IJoint2D.OnBroke
  - WaveEngine.Common.Physics2D.IJoint2D.ReactionForce
  - WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque
  langs:
  - csharp
  - vb
  name: IJoint2D
  nameWithType: IJoint2D
  fullName: WaveEngine.Common.Physics2D.IJoint2D
  type: Interface
  source:
    id: IJoint2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 20
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nInterface for a Joint 2D physics.\n"
  example: []
  syntax:
    content: public interface IJoint2D
    content.vb: Public Interface IJoint2D
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Physics2D.IJoint2D.InternalJoint
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.InternalJoint
  id: InternalJoint
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: InternalJoint
  nameWithType: IJoint2D.InternalJoint
  fullName: WaveEngine.Common.Physics2D.IJoint2D.InternalJoint
  type: Property
  source:
    id: InternalJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 27
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the Box2D internal joint\n"
  example: []
  syntax:
    content: object InternalJoint { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property InternalJoint As Object
  overload: WaveEngine.Common.Physics2D.IJoint2D.InternalJoint*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.BodyA
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.BodyA
  id: BodyA
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: BodyA
  nameWithType: IJoint2D.BodyA
  fullName: WaveEngine.Common.Physics2D.IJoint2D.BodyA
  type: Property
  source:
    id: BodyA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 32
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the first body attached to this joint\n"
  example: []
  syntax:
    content: IRigidBody2D BodyA { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.IRigidBody2D
    content.vb: ReadOnly Property BodyA As IRigidBody2D
  overload: WaveEngine.Common.Physics2D.IJoint2D.BodyA*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.BodyB
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.BodyB
  id: BodyB
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: BodyB
  nameWithType: IJoint2D.BodyB
  fullName: WaveEngine.Common.Physics2D.IJoint2D.BodyB
  type: Property
  source:
    id: BodyB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 37
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the second body attached to this joint\n"
  example: []
  syntax:
    content: IRigidBody2D BodyB { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.IRigidBody2D
    content.vb: ReadOnly Property BodyB As IRigidBody2D
  overload: WaveEngine.Common.Physics2D.IJoint2D.BodyB*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA
  id: LocalAnchorA
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: LocalAnchorA
  nameWithType: IJoint2D.LocalAnchorA
  fullName: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA
  type: Property
  source:
    id: LocalAnchorA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 42
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the local anchor point relative to bodyA&apos;s origin.\n"
  example: []
  syntax:
    content: Vector2 LocalAnchorA { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property LocalAnchorA As Vector2
  overload: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB
  id: LocalAnchorB
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: LocalAnchorB
  nameWithType: IJoint2D.LocalAnchorB
  fullName: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB
  type: Property
  source:
    id: LocalAnchorB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 47
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the local anchor point relative to bodyB&apos;s origin.\n"
  example: []
  syntax:
    content: Vector2 LocalAnchorB { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property LocalAnchorB As Vector2
  overload: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.ReactionForce
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.ReactionForce
  id: ReactionForce
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: ReactionForce
  nameWithType: IJoint2D.ReactionForce
  fullName: WaveEngine.Common.Physics2D.IJoint2D.ReactionForce
  type: Property
  source:
    id: ReactionForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 52
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the reaction force on bodyB at the joint anchor in Newtons.\n"
  example: []
  syntax:
    content: Vector2 ReactionForce { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property ReactionForce As Vector2
  overload: WaveEngine.Common.Physics2D.IJoint2D.ReactionForce*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque
  id: ReactionTorque
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: ReactionTorque
  nameWithType: IJoint2D.ReactionTorque
  fullName: WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque
  type: Property
  source:
    id: ReactionTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 57
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the reaction torque on bodyB in N*m.\n"
  example: []
  syntax:
    content: float ReactionTorque { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property ReactionTorque As Single
  overload: WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IJoint2D.IsActive
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.IsActive
  id: IsActive
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: IJoint2D.IsActive
  fullName: WaveEngine.Common.Physics2D.IJoint2D.IsActive
  type: Property
  source:
    id: IsActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 62
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this joint is active\n"
  example: []
  syntax:
    content: bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsActive As Boolean
  overload: WaveEngine.Common.Physics2D.IJoint2D.IsActive*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IJoint2D.BreakPoint
  commentId: P:WaveEngine.Common.Physics2D.IJoint2D.BreakPoint
  id: BreakPoint
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: BreakPoint
  nameWithType: IJoint2D.BreakPoint
  fullName: WaveEngine.Common.Physics2D.IJoint2D.BreakPoint
  type: Property
  source:
    id: BreakPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 67
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the amount offorce that a joint can take before break.\n"
  example: []
  syntax:
    content: float BreakPoint { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property BreakPoint As Single
  overload: WaveEngine.Common.Physics2D.IJoint2D.BreakPoint*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IJoint2D.OnBroke
  commentId: E:WaveEngine.Common.Physics2D.IJoint2D.OnBroke
  id: OnBroke
  parent: WaveEngine.Common.Physics2D.IJoint2D
  langs:
  - csharp
  - vb
  name: OnBroke
  nameWithType: IJoint2D.OnBroke
  fullName: WaveEngine.Common.Physics2D.IJoint2D.OnBroke
  type: Event
  source:
    id: OnBroke
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Joints\IJoint2D.cs
    startLine: 73
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nEvent fired when the joint is broken\n"
  example: []
  syntax:
    content: event OnBrokeEventHandler OnBroke
    return:
      type: WaveEngine.Common.Physics2D.OnBrokeEventHandler
    content.vb: Event OnBroke As OnBrokeEventHandler
references:
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Physics2D.IJoint2D.InternalJoint*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.InternalJoint
  name: InternalJoint
  nameWithType: IJoint2D.InternalJoint
  fullName: WaveEngine.Common.Physics2D.IJoint2D.InternalJoint
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics2D.IJoint2D.BodyA*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.BodyA
  name: BodyA
  nameWithType: IJoint2D.BodyA
  fullName: WaveEngine.Common.Physics2D.IJoint2D.BodyA
- uid: WaveEngine.Common.Physics2D.IRigidBody2D
  commentId: T:WaveEngine.Common.Physics2D.IRigidBody2D
  parent: WaveEngine.Common.Physics2D
  name: IRigidBody2D
  nameWithType: IRigidBody2D
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D
- uid: WaveEngine.Common.Physics2D.IJoint2D.BodyB*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.BodyB
  name: BodyB
  nameWithType: IJoint2D.BodyB
  fullName: WaveEngine.Common.Physics2D.IJoint2D.BodyB
- uid: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA
  name: LocalAnchorA
  nameWithType: IJoint2D.LocalAnchorA
  fullName: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorA
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB
  name: LocalAnchorB
  nameWithType: IJoint2D.LocalAnchorB
  fullName: WaveEngine.Common.Physics2D.IJoint2D.LocalAnchorB
- uid: WaveEngine.Common.Physics2D.IJoint2D.ReactionForce*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.ReactionForce
  name: ReactionForce
  nameWithType: IJoint2D.ReactionForce
  fullName: WaveEngine.Common.Physics2D.IJoint2D.ReactionForce
- uid: WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque
  name: ReactionTorque
  nameWithType: IJoint2D.ReactionTorque
  fullName: WaveEngine.Common.Physics2D.IJoint2D.ReactionTorque
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Physics2D.IJoint2D.IsActive*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.IsActive
  name: IsActive
  nameWithType: IJoint2D.IsActive
  fullName: WaveEngine.Common.Physics2D.IJoint2D.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Physics2D.IJoint2D.BreakPoint*
  commentId: Overload:WaveEngine.Common.Physics2D.IJoint2D.BreakPoint
  name: BreakPoint
  nameWithType: IJoint2D.BreakPoint
  fullName: WaveEngine.Common.Physics2D.IJoint2D.BreakPoint
- uid: WaveEngine.Common.Physics2D.OnBrokeEventHandler
  commentId: T:WaveEngine.Common.Physics2D.OnBrokeEventHandler
  parent: WaveEngine.Common.Physics2D
  name: OnBrokeEventHandler
  nameWithType: OnBrokeEventHandler
  fullName: WaveEngine.Common.Physics2D.OnBrokeEventHandler
