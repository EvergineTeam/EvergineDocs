### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel
  commentId: T:WaveEngine.Common.Serialization.ProtoSchemaModel
  id: ProtoSchemaModel
  parent: WaveEngine.Common.Serialization
  children:
  - WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor
  - WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  - WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Type})
  - WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName(System.String)
  - WaveEngine.Common.Serialization.ProtoSchemaModel.Save(System.IO.Stream)
  - WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels
  langs:
  - csharp
  - vb
  name: ProtoSchemaModel
  nameWithType: ProtoSchemaModel
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel
  type: Class
  source:
    id: ProtoSchemaModel
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nProto Schema Model\n"
  example: []
  syntax:
    content: public class ProtoSchemaModel
    content.vb: Public Class ProtoSchemaModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels
  commentId: P:WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels
  id: TypeModels
  parent: WaveEngine.Common.Serialization.ProtoSchemaModel
  langs:
  - csharp
  - vb
  name: TypeModels
  nameWithType: ProtoSchemaModel.TypeModels
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels
  type: Property
  source:
    id: TypeModels
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 26
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nGets or sets the TypeModels\n"
  example: []
  syntax:
    content: public List<ProtoTypeModel> TypeModels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Common.Serialization.ProtoTypeModel}
    content.vb: Public Property TypeModels As List(Of ProtoTypeModel)
  overload: WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor
  commentId: M:WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor
  id: '#ctor'
  parent: WaveEngine.Common.Serialization.ProtoSchemaModel
  langs:
  - csharp
  - vb
  name: ProtoSchemaModel()
  nameWithType: ProtoSchemaModel.ProtoSchemaModel()
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.ProtoSchemaModel()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 31
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Serialization.ProtoSchemaModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ProtoSchemaModel()
    content.vb: Public Sub New
  overload: WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Type})'
  parent: WaveEngine.Common.Serialization.ProtoSchemaModel
  langs:
  - csharp
  - vb
  name: ProtoSchemaModel(IEnumerable<Type>)
  nameWithType: ProtoSchemaModel.ProtoSchemaModel(IEnumerable<Type>)
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.ProtoSchemaModel(System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 40
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Serialization.ProtoSchemaModel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ProtoSchemaModel(IEnumerable<Type> knownTypes)
    parameters:
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: The known types.
    content.vb: Public Sub New(knownTypes As IEnumerable(Of Type))
  overload: WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor*
  nameWithType.vb: ProtoSchemaModel.ProtoSchemaModel(IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Serialization.ProtoSchemaModel.ProtoSchemaModel(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: ProtoSchemaModel(IEnumerable(Of Type))
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Type})
  id: FromStream(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Type})
  parent: WaveEngine.Common.Serialization.ProtoSchemaModel
  langs:
  - csharp
  - vb
  name: FromStream(Stream, IEnumerable<Type>)
  nameWithType: ProtoSchemaModel.FromStream(Stream, IEnumerable<Type>)
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream(System.IO.Stream, System.Collections.Generic.IEnumerable<System.Type>)
  type: Method
  source:
    id: FromStream
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 51
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nDeserialize the ProtoSchemaModel from the stream source\n"
  example: []
  syntax:
    content: public static ProtoSchemaModel FromStream(Stream source, IEnumerable<Type> knownTypes)
    parameters:
    - id: source
      type: System.IO.Stream
      description: The source stream
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: The known types.
    return:
      type: WaveEngine.Common.Serialization.ProtoSchemaModel
      description: The ProtoSchemaModel
    content.vb: Public Shared Function FromStream(source As Stream, knownTypes As IEnumerable(Of Type)) As ProtoSchemaModel
  overload: WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream*
  nameWithType.vb: ProtoSchemaModel.FromStream(Stream, IEnumerable(Of Type))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream(System.IO.Stream, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: FromStream(Stream, IEnumerable(Of Type))
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName(System.String)
  commentId: M:WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName(System.String)
  id: GetTypeByName(System.String)
  parent: WaveEngine.Common.Serialization.ProtoSchemaModel
  langs:
  - csharp
  - vb
  name: GetTypeByName(String)
  nameWithType: ProtoSchemaModel.GetTypeByName(String)
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName(System.String)
  type: Method
  source:
    id: GetTypeByName
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nGet the type with the name indicated\n"
  example: []
  syntax:
    content: public Type GetTypeByName(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: The type name
    return:
      type: System.Type
      description: The type
    content.vb: Public Function GetTypeByName(typeName As String) As Type
  overload: WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.Save(System.IO.Stream)
  commentId: M:WaveEngine.Common.Serialization.ProtoSchemaModel.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: WaveEngine.Common.Serialization.ProtoSchemaModel
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: ProtoSchemaModel.Save(Stream)
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.Save(System.IO.Stream)
  type: Method
  source:
    id: Save
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Serialization\ProtoSchemaModel.cs
    startLine: 84
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Serialization
  summary: "\nSave the proto schema in the stream\n"
  example: []
  syntax:
    content: public void Save(Stream schemaStream)
    parameters:
    - id: schemaStream
      type: System.IO.Stream
      description: The schema stream
    content.vb: Public Sub Save(schemaStream As Stream)
  overload: WaveEngine.Common.Serialization.ProtoSchemaModel.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Common.Serialization
  commentId: N:WaveEngine.Common.Serialization
  name: WaveEngine.Common.Serialization
  nameWithType: WaveEngine.Common.Serialization
  fullName: WaveEngine.Common.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels*
  commentId: Overload:WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels
  name: TypeModels
  nameWithType: ProtoSchemaModel.TypeModels
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.TypeModels
- uid: System.Collections.Generic.List{WaveEngine.Common.Serialization.ProtoTypeModel}
  commentId: T:System.Collections.Generic.List{WaveEngine.Common.Serialization.ProtoTypeModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProtoTypeModel>
  nameWithType: List<ProtoTypeModel>
  fullName: System.Collections.Generic.List<WaveEngine.Common.Serialization.ProtoTypeModel>
  nameWithType.vb: List(Of ProtoTypeModel)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Serialization.ProtoTypeModel)
  name.vb: List(Of ProtoTypeModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Serialization.ProtoTypeModel
    name: ProtoTypeModel
    nameWithType: ProtoTypeModel
    fullName: WaveEngine.Common.Serialization.ProtoTypeModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Serialization.ProtoTypeModel
    name: ProtoTypeModel
    nameWithType: ProtoTypeModel
    fullName: WaveEngine.Common.Serialization.ProtoTypeModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel
  commentId: T:WaveEngine.Common.Serialization.ProtoSchemaModel
  parent: WaveEngine.Common.Serialization
  name: ProtoSchemaModel
  nameWithType: ProtoSchemaModel
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor*
  commentId: Overload:WaveEngine.Common.Serialization.ProtoSchemaModel.#ctor
  name: ProtoSchemaModel
  nameWithType: ProtoSchemaModel.ProtoSchemaModel
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.ProtoSchemaModel
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream*
  commentId: Overload:WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream
  name: FromStream
  nameWithType: ProtoSchemaModel.FromStream
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.FromStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName*
  commentId: Overload:WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName
  name: GetTypeByName
  nameWithType: ProtoSchemaModel.GetTypeByName
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.GetTypeByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: WaveEngine.Common.Serialization.ProtoSchemaModel.Save*
  commentId: Overload:WaveEngine.Common.Serialization.ProtoSchemaModel.Save
  name: Save
  nameWithType: ProtoSchemaModel.Save
  fullName: WaveEngine.Common.Serialization.ProtoSchemaModel.Save
