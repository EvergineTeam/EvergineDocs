### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Helpers.EntityPathHelper
  commentId: T:WaveEngine.Framework.Helpers.EntityPathHelper
  id: EntityPathHelper
  parent: WaveEngine.Framework.Helpers
  children:
  - WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity(WaveEngine.Framework.Entity)
  - WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity(WaveEngine.Framework.Entity,WaveEngine.Framework.Entity)
  - WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.String,System.String)
  langs:
  - csharp
  - vb
  name: EntityPathHelper
  nameWithType: EntityPathHelper
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper
  type: Class
  source:
    id: EntityPathHelper
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Helpers\EntityPathHelper.cs
    startLine: 15
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Helpers
  summary: "\nSet of entity path utils\n"
  example: []
  syntax:
    content: public class EntityPathHelper
    content.vb: Public Class EntityPathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity(WaveEngine.Framework.Entity)
  commentId: M:WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity(WaveEngine.Framework.Entity)
  id: PathFromEntity(WaveEngine.Framework.Entity)
  parent: WaveEngine.Framework.Helpers.EntityPathHelper
  langs:
  - csharp
  - vb
  name: PathFromEntity(Entity)
  nameWithType: EntityPathHelper.PathFromEntity(Entity)
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity(WaveEngine.Framework.Entity)
  type: Method
  source:
    id: PathFromEntity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Helpers\EntityPathHelper.cs
    startLine: 22
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Helpers
  summary: "\nGets the (absolute) entity path of a desired entity\n"
  example: []
  syntax:
    content: public static string PathFromEntity(Entity entity)
    parameters:
    - id: entity
      type: WaveEngine.Framework.Entity
      description: The entity
    return:
      type: System.String
      description: The path
    content.vb: Public Shared Function PathFromEntity(entity As Entity) As String
  overload: WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity(WaveEngine.Framework.Entity,WaveEngine.Framework.Entity)
  commentId: M:WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity(WaveEngine.Framework.Entity,WaveEngine.Framework.Entity)
  id: RelativePathFromEntity(WaveEngine.Framework.Entity,WaveEngine.Framework.Entity)
  parent: WaveEngine.Framework.Helpers.EntityPathHelper
  langs:
  - csharp
  - vb
  name: RelativePathFromEntity(Entity, Entity)
  nameWithType: EntityPathHelper.RelativePathFromEntity(Entity, Entity)
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity(WaveEngine.Framework.Entity, WaveEngine.Framework.Entity)
  type: Method
  source:
    id: RelativePathFromEntity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Helpers\EntityPathHelper.cs
    startLine: 48
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Helpers
  summary: "\nGets the relative path from the source entity to the target entity\n"
  example: []
  syntax:
    content: public static string RelativePathFromEntity(Entity target, Entity source)
    parameters:
    - id: target
      type: WaveEngine.Framework.Entity
      description: The target entity
    - id: source
      type: WaveEngine.Framework.Entity
      description: The source entity
    return:
      type: System.String
      description: The relative path.
    content.vb: Public Shared Function RelativePathFromEntity(target As Entity, source As Entity) As String
  overload: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.String,System.String)
  commentId: M:WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.String,System.String)
  id: RelativePathFromEntityPath(System.String,System.String)
  parent: WaveEngine.Framework.Helpers.EntityPathHelper
  langs:
  - csharp
  - vb
  name: RelativePathFromEntityPath(String, String)
  nameWithType: EntityPathHelper.RelativePathFromEntityPath(String, String)
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.String, System.String)
  type: Method
  source:
    id: RelativePathFromEntityPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Helpers\EntityPathHelper.cs
    startLine: 113
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Helpers
  summary: "\nGets the relative path from the source entity to the target entity\n"
  example: []
  syntax:
    content: public static string RelativePathFromEntityPath(string target, string source)
    parameters:
    - id: target
      type: System.String
      description: The target entity
    - id: source
      type: System.String
      description: The source entity
    return:
      type: System.String
      description: The relative path.
    content.vb: Public Shared Function RelativePathFromEntityPath(target As String, source As String) As String
  overload: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  id: RelativePathFromEntityPath(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  parent: WaveEngine.Framework.Helpers.EntityPathHelper
  langs:
  - csharp
  - vb
  name: RelativePathFromEntityPath(List<String>, List<String>)
  nameWithType: EntityPathHelper.RelativePathFromEntityPath(List<String>, List<String>)
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    id: RelativePathFromEntityPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Helpers\EntityPathHelper.cs
    startLine: 140
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Helpers
  summary: "\nGets the relative path from the source entity to the target entity\n"
  example: []
  syntax:
    content: public static string RelativePathFromEntityPath(List<string> targetBreadcrumbs, List<string> sourceBreadcrumbs)
    parameters:
    - id: targetBreadcrumbs
      type: System.Collections.Generic.List{System.String}
      description: The target entity
    - id: sourceBreadcrumbs
      type: System.Collections.Generic.List{System.String}
      description: The source entity
    return:
      type: System.String
      description: The relative path.
    content.vb: Public Shared Function RelativePathFromEntityPath(targetBreadcrumbs As List(Of String), sourceBreadcrumbs As List(Of String)) As String
  overload: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath*
  nameWithType.vb: EntityPathHelper.RelativePathFromEntityPath(List(Of String), List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath(System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of System.String))
  name.vb: RelativePathFromEntityPath(List(Of String), List(Of String))
references:
- uid: WaveEngine.Framework.Helpers
  commentId: N:WaveEngine.Framework.Helpers
  name: WaveEngine.Framework.Helpers
  nameWithType: WaveEngine.Framework.Helpers
  fullName: WaveEngine.Framework.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity*
  commentId: Overload:WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity
  name: PathFromEntity
  nameWithType: EntityPathHelper.PathFromEntity
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.PathFromEntity
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity*
  commentId: Overload:WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity
  name: RelativePathFromEntity
  nameWithType: EntityPathHelper.RelativePathFromEntity
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntity
- uid: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath*
  commentId: Overload:WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath
  name: RelativePathFromEntityPath
  nameWithType: EntityPathHelper.RelativePathFromEntityPath
  fullName: WaveEngine.Framework.Helpers.EntityPathHelper.RelativePathFromEntityPath
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
