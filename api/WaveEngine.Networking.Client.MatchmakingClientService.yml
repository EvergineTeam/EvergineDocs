### YamlMime:ManagedReference
items:
- uid: WaveEngine.Networking.Client.MatchmakingClientService
  commentId: T:WaveEngine.Networking.Client.MatchmakingClientService
  id: MatchmakingClientService
  parent: WaveEngine.Networking.Client
  children:
  - WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  - WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  - WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync(WaveEngine.Networking.NetworkEndpoint)
  - WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout
  - WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage
  - WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync(WaveEngine.Networking.RoomOptions)
  - WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  - WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoomSynchronized
  - WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues
  - WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
  - WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers(System.Int32)
  - WaveEngine.Networking.Client.MatchmakingClientService.IsConnected
  - WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  - WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  - WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)
  - WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom
  - WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer
  - WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromCurrentRoom
  - WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromPlayer
  - WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromServer
  - WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory
  - WaveEngine.Networking.Client.MatchmakingClientService.PingInterval
  - WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby
  - WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobbySynchronized
  - WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  - WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Client.Players.RemoteNetworkPlayer,WaveEngine.Networking.Messages.DeliveryMethod)
  - WaveEngine.Networking.Client.MatchmakingClientService.SendToServer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  - WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered
  - WaveEngine.Networking.Client.MatchmakingClientService.State
  - WaveEngine.Networking.Client.MatchmakingClientService.StateChanged
  - WaveEngine.Networking.Client.MatchmakingClientService.Terminate
  - WaveEngine.Networking.Client.MatchmakingClientService.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: MatchmakingClientService
  nameWithType: MatchmakingClientService
  fullName: WaveEngine.Networking.Client.MatchmakingClientService
  type: Class
  source:
    id: MatchmakingClientService
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 23
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nThe client service for matchmaking\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class MatchmakingClientService : UpdatableService
    content.vb: >-
      <DataContract>

      Public Class MatchmakingClientService

          Inherits UpdatableService
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Common.Service
  - WaveEngine.Common.UpdatableService
  inheritedMembers:
  - WaveEngine.Common.Service.IsInitialized
  - WaveEngine.Common.Service.IsTerminated
  - WaveEngine.Common.Service.BaseInitialize
  - WaveEngine.Common.Service.BaseTerminate
  - WaveEngine.Common.Service.Initialize
  - WaveEngine.Common.Service.OnActivated
  - WaveEngine.Common.Service.OnDeactivated
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory
  id: NetworkFactory
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: NetworkFactory
  nameWithType: MatchmakingClientService.NetworkFactory
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory
  type: Property
  source:
    id: NetworkFactory
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 82
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets or sets the factory used to create the <xref href=\"WaveEngine.Networking.Connection.INetworkClient\" data-throw-if-not-resolved=\"false\"></xref> peer.\n"
  example: []
  syntax:
    content: public INetworkFactory NetworkFactory { get; set; }
    parameters: []
    return:
      type: WaveEngine.Networking.Connection.INetworkFactory
    content.vb: Public Property NetworkFactory As INetworkFactory
  overload: WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  id: ApplicationIdentifier
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: ApplicationIdentifier
  nameWithType: MatchmakingClientService.ApplicationIdentifier
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  type: Property
  source:
    id: ApplicationIdentifier
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 103
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets or sets the application Identifier. Used by the matchmaking server to separate players by different game.\n"
  example: []
  syntax:
    content: public string ApplicationIdentifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationIdentifier As String
  overload: WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  id: ClientApplicationVersion
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: ClientApplicationVersion
  nameWithType: MatchmakingClientService.ClientApplicationVersion
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  type: Property
  source:
    id: ClientApplicationVersion
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 121
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets or sets the version of your client. A new version also creates a new &quot;virtual app&quot; to separate players from older\nclient versions.\n"
  example: []
  syntax:
    content: public string ClientApplicationVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientApplicationVersion As String
  overload: WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.State
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.State
  id: State
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: State
  nameWithType: MatchmakingClientService.State
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.State
  type: Property
  source:
    id: State
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 138
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets the current state this client is in. Careful: several states are &quot;transitions&quot; that lead to other states.\n"
  example: []
  syntax:
    content: public ClientStates State { get; }
    parameters: []
    return:
      type: WaveEngine.Networking.Client.ClientStates
    content.vb: Public ReadOnly Property State As ClientStates
  overload: WaveEngine.Networking.Client.MatchmakingClientService.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Client.MatchmakingClientService.PingInterval
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.PingInterval
  id: PingInterval
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: PingInterval
  nameWithType: MatchmakingClientService.PingInterval
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.PingInterval
  type: Property
  source:
    id: PingInterval
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 172
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets or sets the ping interval. Default value is 4 seconds.\n"
  example: []
  syntax:
    content: public TimeSpan PingInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property PingInterval As TimeSpan
  overload: WaveEngine.Networking.Client.MatchmakingClientService.PingInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout
  id: ConnectionTimeout
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  nameWithType: MatchmakingClientService.ConnectionTimeout
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout
  type: Property
  source:
    id: ConnectionTimeout
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 189
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets or sets the connection timeout. Default value is 25 seconds.\n"
  example: []
  syntax:
    content: public TimeSpan ConnectionTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ConnectionTimeout As TimeSpan
  overload: WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.IsConnected
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.IsConnected
  id: IsConnected
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: MatchmakingClientService.IsConnected
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 210
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets a value indicating whether this client is currently connected or connecting to the matchmaking server.\n"
  remarks: "\nThis is even true while switching servers. Use <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady\" data-throw-if-not-resolved=\"false\"></xref> to check only for those states\nthat enable you to send Operations.\n"
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: WaveEngine.Networking.Client.MatchmakingClientService.IsConnected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  id: IsConnectedAndReady
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: IsConnectedAndReady
  nameWithType: MatchmakingClientService.IsConnectedAndReady
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  type: Property
  source:
    id: IsConnectedAndReady
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 224
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets a value indicating whether your connection to the matchmaking server is ready to accept operations.\n"
  example: []
  syntax:
    content: public bool IsConnectedAndReady { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnectedAndReady As Boolean
  overload: WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer
  id: LocalPlayer
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: LocalPlayer
  nameWithType: MatchmakingClientService.LocalPlayer
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer
  type: Property
  source:
    id: LocalPlayer
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 250
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets the local player is never null but not valid unless the client is in a room, too.\nThe ID will be -1 outside of rooms.\n"
  example: []
  syntax:
    content: public LocalNetworkPlayer LocalPlayer { get; }
    parameters: []
    return:
      type: WaveEngine.Networking.Client.Players.LocalNetworkPlayer
    content.vb: Public ReadOnly Property LocalPlayer As LocalNetworkPlayer
  overload: WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby
  id: RoomsInLobby
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: RoomsInLobby
  nameWithType: MatchmakingClientService.RoomsInLobby
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby
  type: Property
  source:
    id: RoomsInLobby
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 256
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets a &quot;list&quot; that is populated while being in the lobby.\n"
  example: []
  syntax:
    content: public IEnumerable<RoomInfo> RoomsInLobby { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{WaveEngine.Networking.Rooms.RoomInfo}
    content.vb: Public ReadOnly Property RoomsInLobby As IEnumerable(Of RoomInfo)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  id: CurrentRoom
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: CurrentRoom
  nameWithType: MatchmakingClientService.CurrentRoom
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  type: Property
  source:
    id: CurrentRoom
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 268
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nGets the current room this client is connected to (null if none available).\n"
  example: []
  syntax:
    content: public LocalNetworkRoom CurrentRoom { get; }
    parameters: []
    return:
      type: WaveEngine.Networking.Rooms.LocalNetworkRoom
    content.vb: Public ReadOnly Property CurrentRoom As LocalNetworkRoom
  overload: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Client.MatchmakingClientService.StateChanged
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.StateChanged
  id: StateChanged
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: StateChanged
  nameWithType: MatchmakingClientService.StateChanged
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.StateChanged
  type: Event
  source:
    id: StateChanged
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 281
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when this client&apos;s State is changed.\n"
  remarks: "\nThis can be useful to react to being connected, joined into a room, etc.\n"
  example: []
  syntax:
    content: public event EventHandler<ClientStates> StateChanged
    return:
      type: System.EventHandler{WaveEngine.Networking.Client.ClientStates}
    content.vb: Public Event StateChanged As EventHandler(Of ClientStates)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobbySynchronized
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobbySynchronized
  id: RoomsInLobbySynchronized
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: RoomsInLobbySynchronized
  nameWithType: MatchmakingClientService.RoomsInLobbySynchronized
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobbySynchronized
  type: Event
  source:
    id: RoomsInLobbySynchronized
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 290
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when a the Room Info list is refreshed.\n"
  remarks: "\nThis occurs only when the client is in the lobby. This can be useful to\nrefresh a list of available rooms.\n"
  example: []
  syntax:
    content: public event EventHandler RoomsInLobbySynchronized
    return:
      type: System.EventHandler
    content.vb: Public Event RoomsInLobbySynchronized As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoomSynchronized
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoomSynchronized
  id: CurrentRoomSynchronized
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: CurrentRoomSynchronized
  nameWithType: MatchmakingClientService.CurrentRoomSynchronized
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoomSynchronized
  type: Event
  source:
    id: CurrentRoomSynchronized
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 298
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when a the current room is refreshed.\n"
  remarks: "\nThis occurs only when the client is in the room.\n"
  example: []
  syntax:
    content: public event EventHandler CurrentRoomSynchronized
    return:
      type: System.EventHandler
    content.vb: Public Event CurrentRoomSynchronized As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered
  id: ServerDiscovered
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: ServerDiscovered
  nameWithType: MatchmakingClientService.ServerDiscovered
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered
  type: Event
  source:
    id: ServerDiscovered
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 304
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when a new matchmaking server with the same <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion\" data-throw-if-not-resolved=\"false\"></xref> is discovered.\nOccurs when a new matchmaking server is discovered\n"
  example: []
  syntax:
    content: public event EventHandler<HostDiscoveredEventArgs> ServerDiscovered
    return:
      type: System.EventHandler{WaveEngine.Networking.Connection.HostDiscoveredEventArgs}
    content.vb: Public Event ServerDiscovered As EventHandler(Of HostDiscoveredEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromServer
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromServer
  id: MessageReceivedFromServer
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: MessageReceivedFromServer
  nameWithType: MatchmakingClientService.MessageReceivedFromServer
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromServer
  type: Event
  source:
    id: MessageReceivedFromServer
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 309
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when a user data message from the matchmaking server is received by the client.\n"
  example: []
  syntax:
    content: public event EventHandler<MessageReceivedEventArgs> MessageReceivedFromServer
    return:
      type: System.EventHandler{WaveEngine.Networking.Connection.MessageReceivedEventArgs}
    content.vb: Public Event MessageReceivedFromServer As EventHandler(Of MessageReceivedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromCurrentRoom
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromCurrentRoom
  id: MessageReceivedFromCurrentRoom
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: MessageReceivedFromCurrentRoom
  nameWithType: MatchmakingClientService.MessageReceivedFromCurrentRoom
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromCurrentRoom
  type: Event
  source:
    id: MessageReceivedFromCurrentRoom
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 317
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when a user data message from the current room is received by the client.\n"
  remarks: "\nThis occurs only when the client is in a room.\n"
  example: []
  syntax:
    content: public event EventHandler<MessageFromPlayerEventArgs> MessageReceivedFromCurrentRoom
    return:
      type: System.EventHandler{WaveEngine.Networking.Client.MessageFromPlayerEventArgs}
    content.vb: Public Event MessageReceivedFromCurrentRoom As EventHandler(Of MessageFromPlayerEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromPlayer
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromPlayer
  id: MessageReceivedFromPlayer
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: MessageReceivedFromPlayer
  nameWithType: MatchmakingClientService.MessageReceivedFromPlayer
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.MessageReceivedFromPlayer
  type: Event
  source:
    id: MessageReceivedFromPlayer
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 325
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nOccurs when a user data message from a player in the same room is received by the client.\n"
  remarks: "\nThis occurs only when the client is in a room.\n"
  example: []
  syntax:
    content: public event EventHandler<MessageFromPlayerEventArgs> MessageReceivedFromPlayer
    return:
      type: System.EventHandler{WaveEngine.Networking.Client.MessageFromPlayerEventArgs}
    content.vb: Public Event MessageReceivedFromPlayer As EventHandler(Of MessageFromPlayerEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues
  id: DefaultValues
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: DefaultValues()
  nameWithType: MatchmakingClientService.DefaultValues()
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues()
  type: Method
  source:
    id: DefaultValues
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 332
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  example: []
  syntax:
    content: protected override void DefaultValues()
    content.vb: Protected Overrides Sub DefaultValues
  overridden: WaveEngine.Common.IO.SerializableObject.DefaultValues
  overload: WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Update(System.TimeSpan)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: MatchmakingClientService.Update(TimeSpan)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 347
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  example: []
  syntax:
    content: public override void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
    content.vb: Public Overrides Sub Update(gameTime As TimeSpan)
  overridden: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers(System.Int32)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers(System.Int32)
  id: DiscoverServers(System.Int32)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: DiscoverServers(Int32)
  nameWithType: MatchmakingClientService.DiscoverServers(Int32)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers(System.Int32)
  type: Method
  source:
    id: DiscoverServers
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 375
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nStarts the process to discover servers in the local network with the same <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion\" data-throw-if-not-resolved=\"false\"></xref> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">port</code>.\nRegister to <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered\" data-throw-if-not-resolved=\"false\"></xref> event to be know about discovered servers.\n"
  example: []
  syntax:
    content: public void DiscoverServers(int port)
    parameters:
    - id: port
      type: System.Int32
      description: The port.
    content.vb: Public Sub DiscoverServers(port As Integer)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier\" data-throw-if-not-resolved=\"false\"></xref> must have a valid value before trying to connect.\nor\nYou can&apos;t call discovery method while is connected to a matchmaking server. Call before to <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.Disconnect\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync(WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync(WaveEngine.Networking.NetworkEndpoint)
  id: ConnectAsync(WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: ConnectAsync(NetworkEndpoint)
  nameWithType: MatchmakingClientService.ConnectAsync(NetworkEndpoint)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync(WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: ConnectAsync
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 403
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nConnects the client to the specified matchmaking server asynchronously.\n"
  example: []
  syntax:
    content: public Task<bool> ConnectAsync(NetworkEndpoint serverEndpoint)
    parameters:
    - id: serverEndpoint
      type: WaveEngine.Networking.NetworkEndpoint
      description: The matchmaking server endpoint.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: An a value indicating whether the connection was succeed or not
    content.vb: Public Function ConnectAsync(serverEndpoint As NetworkEndpoint) As Task(Of Boolean)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nYou can&apos;t call Connect method while is connected to a matchmaking server. Call before to <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.Disconnect\" data-throw-if-not-resolved=\"false\"></xref> method.\nor\n<xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier\" data-throw-if-not-resolved=\"false\"></xref> must have a valid value before trying to connect.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
  id: Disconnect
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: MatchmakingClientService.Disconnect()
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.Disconnect()
  type: Method
  source:
    id: Disconnect
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 429
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nDisconnects this client from any matchmaking server and sets the <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.State\" data-throw-if-not-resolved=\"false\"></xref> if the connection\nis successfully closed.\n"
  example: []
  syntax:
    content: public void Disconnect()
    content.vb: Public Sub Disconnect
  overload: WaveEngine.Networking.Client.MatchmakingClientService.Disconnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync(WaveEngine.Networking.RoomOptions)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync(WaveEngine.Networking.RoomOptions)
  id: CreateRoomAsync(WaveEngine.Networking.RoomOptions)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: CreateRoomAsync(RoomOptions)
  nameWithType: MatchmakingClientService.CreateRoomAsync(RoomOptions)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync(WaveEngine.Networking.RoomOptions)
  type: Method
  source:
    id: CreateRoomAsync
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 483
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nCreates a new room on the server (or fails if the name is already in use).\n"
  remarks: "\nIf you don&apos;t want to create a unique room-name, pass null or &quot;&quot; as name and the server will assign a\nroomName (a GUID as string). Room names are unique.\n\nThis method can only be called while the client is connected to a matchmaking server.\nYou should check <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady\" data-throw-if-not-resolved=\"false\"></xref> before calling this method.\nAlternatively, check the returned boolean value.\n\nEven when sent, the Operation will fail (on the server) if the roomName is in use.\n\n\nWhile the matchmaking server is creating the game, the State will be <xref href=\"WaveEngine.Networking.Client.ClientStates.Joining\" data-throw-if-not-resolved=\"false\"></xref>.\nThe state Joining is used because the client is on the way to enter a room (no matter if joining or creating).\nIt&apos;s set immediately when this method sends the Operation.\n\nIf successful, the client will enter the room. When you&apos;re in the room, this client&apos;s State will\nbecome <xref href=\"WaveEngine.Networking.Client.ClientStates.Joined\" data-throw-if-not-resolved=\"false\"></xref> (both, for joining or creating it).\nSubscribe to <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.StateChanged\" data-throw-if-not-resolved=\"false\"></xref> event to check for states.\n\nWhen entering the room, this client&apos;s Player Custom Properties will be sent to the room.\nUse <xref href=\"WaveEngine.Networking.Players.INetworkPlayer.CustomProperties\" data-throw-if-not-resolved=\"false\"></xref> to set them, even while not yet in the room.\nNote that the player properties will be cached locally and sent to any next room you would join, too.\n"
  example: []
  syntax:
    content: public Task<EnterRoomResultCodes> CreateRoomAsync(RoomOptions options)
    parameters:
    - id: options
      type: WaveEngine.Networking.RoomOptions
      description: Contains the parameters and properties of the new room. See <xref href="WaveEngine.Networking.RoomOptions" data-throw-if-not-resolved="false"></xref> class for a description of each.
    return:
      type: System.Threading.Tasks.Task{WaveEngine.Networking.Messages.EnterRoomResultCodes}
      description: A value indicating if the operation was successful (requires connection to matchmaking server).
    content.vb: Public Function CreateRoomAsync(options As RoomOptions) As Task(Of EnterRoomResultCodes)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)
  id: JoinRoomAsync(System.String)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: JoinRoomAsync(String)
  nameWithType: MatchmakingClientService.JoinRoomAsync(String)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)
  type: Method
  source:
    id: JoinRoomAsync
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 527
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nJoins a room by roomName. Useful when using room lists in lobby or when you know the name otherwise.\n"
  remarks: "\nThis method is useful when you are using a lobby to list rooms and know their names.\nA room&apos;s name has to be unique (per game version).\n\nIf the room is full, closed or not existing, this will fail.\n\nThis method can only be called while the client is connected to a matchmaking server.\nYou should check <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady\" data-throw-if-not-resolved=\"false\"></xref> before calling this method.\nAlternatively, check the returned boolean value.\n\nWhile the matchmaking server is creating the game, the State will be <xref href=\"WaveEngine.Networking.Client.ClientStates.Joining\" data-throw-if-not-resolved=\"false\"></xref>.\nThe state <xref href=\"WaveEngine.Networking.Client.ClientStates.Joining\" data-throw-if-not-resolved=\"false\"></xref> is used because the client is on the way to enter a room (no matter if joining or creating).\nIt&apos;s set immediately when this method sends the Operation.\n\nIf successful, the client will enter the room. When you&apos;re in the room, this client&apos;s State will\nbecome <xref href=\"WaveEngine.Networking.Client.ClientStates.Joined\" data-throw-if-not-resolved=\"false\"></xref> (both, for joining or creating it).\nSubscribe to <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.StateChanged\" data-throw-if-not-resolved=\"false\"></xref> event to check for states.\n\nWhen joining a room, this client&apos;s Player Custom Properties will be sent to the room.\nUse <xref href=\"WaveEngine.Networking.Players.INetworkPlayer.CustomProperties\" data-throw-if-not-resolved=\"false\"></xref> to set them, even while not yet in the room.\nNote that the player properties will be cached locally and sent to any next room you would join, too.\n\nIt&apos;s usually better to use <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)\" data-throw-if-not-resolved=\"false\"></xref> for invitations.\nThen it does not matter if the room is already setup.\n"
  example: []
  syntax:
    content: public Task<EnterRoomResultCodes> JoinRoomAsync(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the room to join. Must be existing already, open and non-full or can&apos;t be joined.
    return:
      type: System.Threading.Tasks.Task{WaveEngine.Networking.Messages.EnterRoomResultCodes}
      description: A value indicating if the operation was successful (requires connection to matchmaking server).
    content.vb: Public Function JoinRoomAsync(name As String) As Task(Of EnterRoomResultCodes)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  id: JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: JoinOrCreateRoomAsync(RoomOptions)
  nameWithType: MatchmakingClientService.JoinOrCreateRoomAsync(RoomOptions)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  type: Method
  source:
    id: JoinOrCreateRoomAsync
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 573
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nJoins a specific room by name. If the room does not exist (yet), it will be created implicitly.\n"
  remarks: "\nUnlike <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, this operation does not fail if the room does not exist.\nThis can be useful when you send invitations to a room before actually creating it:\nAny invited player (whoever is first) can call this and on demand, the room gets created implicitly.\n\nIf you set room properties in RoomOptions, they get ignored when the room is existing already.\nThis avoids changing the room properties by late joining players. Only when the room gets created,\nthe RoomOptions are set in this case.\n\nIf the room is full or closed, this will fail.\n\nThis method can only be called while the client is connected to a server.\nYou should check <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady\" data-throw-if-not-resolved=\"false\"></xref> before\ncalling this method. Alternatively, check the returned boolean value.\n\nWhile the server is joining the game, the State will be <xref href=\"WaveEngine.Networking.Client.ClientStates.Joining\" data-throw-if-not-resolved=\"false\"></xref>.\nIt&apos;s set immediately when this method sends the Operation.\n\nIf successful, the client will enter the room. When you&apos;re in the room, this client&apos;s State will\nbecome <xref href=\"WaveEngine.Networking.Client.ClientStates.Joined\" data-throw-if-not-resolved=\"false\"></xref> (both, for joining or creating it).\nSubscribe to <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.StateChanged\" data-throw-if-not-resolved=\"false\"></xref> event to check for states.\n\nWhen entering the room, this client&apos;s Player Custom Properties will be sent to the room.\nUse <xref href=\"WaveEngine.Networking.Players.INetworkPlayer.CustomProperties\" data-throw-if-not-resolved=\"false\"></xref> to set them, even while not yet in the room.\nNote that the player properties will be cached locally and sent to any next room you would join, too.\n"
  example: []
  syntax:
    content: public Task<EnterRoomResultCodes> JoinOrCreateRoomAsync(RoomOptions options)
    parameters:
    - id: options
      type: WaveEngine.Networking.RoomOptions
      description: Contains the parameters and properties of the new room. See <xref href="WaveEngine.Networking.RoomOptions" data-throw-if-not-resolved="false"></xref> class for a description of each.
    return:
      type: System.Threading.Tasks.Task{WaveEngine.Networking.Messages.EnterRoomResultCodes}
      description: A value indicating if the operation was successful (requires connection to matchmaking server).
    content.vb: Public Function JoinOrCreateRoomAsync(options As RoomOptions) As Task(Of EnterRoomResultCodes)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom
  id: LeaveRoom
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: LeaveRoom()
  nameWithType: MatchmakingClientService.LeaveRoom()
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom()
  type: Method
  source:
    id: LeaveRoom
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 591
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nLeaves the <xref href=\"WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom\" data-throw-if-not-resolved=\"false\"></xref> and returns to the lobby.\n"
  example: []
  syntax:
    content: public bool LeaveRoom()
    return:
      type: System.Boolean
      description: If the current room could be left (impossible while not in a room).
    content.vb: Public Function LeaveRoom As Boolean
  overload: WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage
  id: CreateMessage
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: CreateMessage()
  nameWithType: MatchmakingClientService.CreateMessage()
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage()
  type: Method
  source:
    id: CreateMessage
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 614
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nCreates a new outgoing message.\n"
  example: []
  syntax:
    content: public OutgoingMessage CreateMessage()
    return:
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
      description: The create outgoing message.
    content.vb: Public Function CreateMessage As OutgoingMessage
  overload: WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.SendToServer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.SendToServer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  id: SendToServer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: SendToServer(OutgoingMessage, DeliveryMethod)
  nameWithType: MatchmakingClientService.SendToServer(OutgoingMessage, DeliveryMethod)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.SendToServer(WaveEngine.Networking.Connection.Messages.OutgoingMessage, WaveEngine.Networking.Messages.DeliveryMethod)
  type: Method
  source:
    id: SendToServer
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 626
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nSends a user data message to the matchmaking server.\n"
  example: []
  syntax:
    content: public void SendToServer(OutgoingMessage messageToSend, DeliveryMethod deliveryMethod)
    parameters:
    - id: messageToSend
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
      description: The message to be sent.
    - id: deliveryMethod
      type: WaveEngine.Networking.Messages.DeliveryMethod
      description: The delivery method.
    content.vb: Public Sub SendToServer(messageToSend As OutgoingMessage, deliveryMethod As DeliveryMethod)
  overload: WaveEngine.Networking.Client.MatchmakingClientService.SendToServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  id: SendToCurrentRoom(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: SendToCurrentRoom(OutgoingMessage, DeliveryMethod)
  nameWithType: MatchmakingClientService.SendToCurrentRoom(OutgoingMessage, DeliveryMethod)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom(WaveEngine.Networking.Connection.Messages.OutgoingMessage, WaveEngine.Networking.Messages.DeliveryMethod)
  type: Method
  source:
    id: SendToCurrentRoom
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 641
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nSends a user data message to the all remote players in the current room.\n"
  example: []
  syntax:
    content: public bool SendToCurrentRoom(OutgoingMessage messageToSend, DeliveryMethod deliveryMethod)
    parameters:
    - id: messageToSend
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
      description: The message to be sent.
    - id: deliveryMethod
      type: WaveEngine.Networking.Messages.DeliveryMethod
      description: The delivery method.
    return:
      type: System.Boolean
      description: If the message can be sent to the current room (impossible while not in a room).
    content.vb: Public Function SendToCurrentRoom(messageToSend As OutgoingMessage, deliveryMethod As DeliveryMethod) As Boolean
  overload: WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Client.Players.RemoteNetworkPlayer,WaveEngine.Networking.Messages.DeliveryMethod)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Client.Players.RemoteNetworkPlayer,WaveEngine.Networking.Messages.DeliveryMethod)
  id: SendToPlayer(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Client.Players.RemoteNetworkPlayer,WaveEngine.Networking.Messages.DeliveryMethod)
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: SendToPlayer(OutgoingMessage, RemoteNetworkPlayer, DeliveryMethod)
  nameWithType: MatchmakingClientService.SendToPlayer(OutgoingMessage, RemoteNetworkPlayer, DeliveryMethod)
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer(WaveEngine.Networking.Connection.Messages.OutgoingMessage, WaveEngine.Networking.Client.Players.RemoteNetworkPlayer, WaveEngine.Networking.Messages.DeliveryMethod)
  type: Method
  source:
    id: SendToPlayer
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 664
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  summary: "\nSends a user data message to the a remote player in the current room.\n"
  example: []
  syntax:
    content: public bool SendToPlayer(OutgoingMessage messageToSend, RemoteNetworkPlayer remotePlayer, DeliveryMethod deliveryMethod)
    parameters:
    - id: messageToSend
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
      description: The message to be sent.
    - id: remotePlayer
      type: WaveEngine.Networking.Client.Players.RemoteNetworkPlayer
      description: The remote player that should receive the message.
    - id: deliveryMethod
      type: WaveEngine.Networking.Messages.DeliveryMethod
      description: The delivery method.
    return:
      type: System.Boolean
      description: If the message can be sent to the current room (impossible while not in a room).
    content.vb: Public Function SendToPlayer(messageToSend As OutgoingMessage, remotePlayer As RemoteNetworkPlayer, deliveryMethod As DeliveryMethod) As Boolean
  overload: WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Terminate
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.Terminate
  id: Terminate
  parent: WaveEngine.Networking.Client.MatchmakingClientService
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: MatchmakingClientService.Terminate()
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.Terminate()
  type: Method
  source:
    id: Terminate
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\MatchmakingClientService.cs
    startLine: 686
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Client
  example: []
  syntax:
    content: protected override void Terminate()
    content.vb: Protected Overrides Sub Terminate
  overridden: WaveEngine.Common.Service.Terminate
  overload: WaveEngine.Networking.Client.MatchmakingClientService.Terminate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: WaveEngine.Networking.Client
  commentId: N:WaveEngine.Networking.Client
  name: WaveEngine.Networking.Client
  nameWithType: WaveEngine.Networking.Client
  fullName: WaveEngine.Networking.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: WaveEngine.Common.UpdatableService
  commentId: T:WaveEngine.Common.UpdatableService
  parent: WaveEngine.Common
  name: UpdatableService
  nameWithType: UpdatableService
  fullName: WaveEngine.Common.UpdatableService
- uid: WaveEngine.Common.Service.IsInitialized
  commentId: P:WaveEngine.Common.Service.IsInitialized
  parent: WaveEngine.Common.Service
  name: IsInitialized
  nameWithType: Service.IsInitialized
  fullName: WaveEngine.Common.Service.IsInitialized
- uid: WaveEngine.Common.Service.IsTerminated
  commentId: P:WaveEngine.Common.Service.IsTerminated
  parent: WaveEngine.Common.Service
  name: IsTerminated
  nameWithType: Service.IsTerminated
  fullName: WaveEngine.Common.Service.IsTerminated
- uid: WaveEngine.Common.Service.BaseInitialize
  commentId: M:WaveEngine.Common.Service.BaseInitialize
  parent: WaveEngine.Common.Service
  name: BaseInitialize()
  nameWithType: Service.BaseInitialize()
  fullName: WaveEngine.Common.Service.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.BaseTerminate
  commentId: M:WaveEngine.Common.Service.BaseTerminate
  parent: WaveEngine.Common.Service
  name: BaseTerminate()
  nameWithType: Service.BaseTerminate()
  fullName: WaveEngine.Common.Service.BaseTerminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.Initialize
  commentId: M:WaveEngine.Common.Service.Initialize
  parent: WaveEngine.Common.Service
  name: Initialize()
  nameWithType: Service.Initialize()
  fullName: WaveEngine.Common.Service.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnActivated
  commentId: M:WaveEngine.Common.Service.OnActivated
  parent: WaveEngine.Common.Service
  name: OnActivated()
  nameWithType: Service.OnActivated()
  fullName: WaveEngine.Common.Service.OnActivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnDeactivated
  commentId: M:WaveEngine.Common.Service.OnDeactivated
  parent: WaveEngine.Common.Service
  name: OnDeactivated()
  nameWithType: Service.OnDeactivated()
  fullName: WaveEngine.Common.Service.OnDeactivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Networking.Connection.INetworkClient
  commentId: T:WaveEngine.Networking.Connection.INetworkClient
  parent: WaveEngine.Networking.Connection
  name: INetworkClient
  nameWithType: INetworkClient
  fullName: WaveEngine.Networking.Connection.INetworkClient
- uid: WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory
  name: NetworkFactory
  nameWithType: MatchmakingClientService.NetworkFactory
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.NetworkFactory
- uid: WaveEngine.Networking.Connection.INetworkFactory
  commentId: T:WaveEngine.Networking.Connection.INetworkFactory
  parent: WaveEngine.Networking.Connection
  name: INetworkFactory
  nameWithType: INetworkFactory
  fullName: WaveEngine.Networking.Connection.INetworkFactory
- uid: WaveEngine.Networking.Connection
  commentId: N:WaveEngine.Networking.Connection
  name: WaveEngine.Networking.Connection
  nameWithType: WaveEngine.Networking.Connection
  fullName: WaveEngine.Networking.Connection
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  name: ApplicationIdentifier
  nameWithType: MatchmakingClientService.ApplicationIdentifier
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  name: ClientApplicationVersion
  nameWithType: MatchmakingClientService.ClientApplicationVersion
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
- uid: WaveEngine.Networking.Client.MatchmakingClientService.State*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.State
  name: State
  nameWithType: MatchmakingClientService.State
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.State
- uid: WaveEngine.Networking.Client.ClientStates
  commentId: T:WaveEngine.Networking.Client.ClientStates
  parent: WaveEngine.Networking.Client
  name: ClientStates
  nameWithType: ClientStates
  fullName: WaveEngine.Networking.Client.ClientStates
- uid: WaveEngine.Networking.Client.MatchmakingClientService.PingInterval*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.PingInterval
  name: PingInterval
  nameWithType: MatchmakingClientService.PingInterval
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.PingInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout
  name: ConnectionTimeout
  nameWithType: MatchmakingClientService.ConnectionTimeout
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ConnectionTimeout
- uid: WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.IsConnected*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.IsConnected
  name: IsConnected
  nameWithType: MatchmakingClientService.IsConnected
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
  name: IsConnectedAndReady
  nameWithType: MatchmakingClientService.IsConnectedAndReady
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.IsConnectedAndReady
- uid: WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer
  name: LocalPlayer
  nameWithType: MatchmakingClientService.LocalPlayer
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.LocalPlayer
- uid: WaveEngine.Networking.Client.Players.LocalNetworkPlayer
  commentId: T:WaveEngine.Networking.Client.Players.LocalNetworkPlayer
  parent: WaveEngine.Networking.Client.Players
  name: LocalNetworkPlayer
  nameWithType: LocalNetworkPlayer
  fullName: WaveEngine.Networking.Client.Players.LocalNetworkPlayer
- uid: WaveEngine.Networking.Client.Players
  commentId: N:WaveEngine.Networking.Client.Players
  name: WaveEngine.Networking.Client.Players
  nameWithType: WaveEngine.Networking.Client.Players
  fullName: WaveEngine.Networking.Client.Players
- uid: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby
  name: RoomsInLobby
  nameWithType: MatchmakingClientService.RoomsInLobby
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.RoomsInLobby
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Networking.Rooms.RoomInfo}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Networking.Rooms.RoomInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RoomInfo>
  nameWithType: IEnumerable<RoomInfo>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Networking.Rooms.RoomInfo>
  nameWithType.vb: IEnumerable(Of RoomInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Networking.Rooms.RoomInfo)
  name.vb: IEnumerable(Of RoomInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Rooms.RoomInfo
    name: RoomInfo
    nameWithType: RoomInfo
    fullName: WaveEngine.Networking.Rooms.RoomInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Rooms.RoomInfo
    name: RoomInfo
    nameWithType: RoomInfo
    fullName: WaveEngine.Networking.Rooms.RoomInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  name: CurrentRoom
  nameWithType: MatchmakingClientService.CurrentRoom
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
- uid: WaveEngine.Networking.Rooms.LocalNetworkRoom
  commentId: T:WaveEngine.Networking.Rooms.LocalNetworkRoom
  parent: WaveEngine.Networking.Rooms
  name: LocalNetworkRoom
  nameWithType: LocalNetworkRoom
  fullName: WaveEngine.Networking.Rooms.LocalNetworkRoom
- uid: WaveEngine.Networking.Rooms
  commentId: N:WaveEngine.Networking.Rooms
  name: WaveEngine.Networking.Rooms
  nameWithType: WaveEngine.Networking.Rooms
  fullName: WaveEngine.Networking.Rooms
- uid: System.EventHandler{WaveEngine.Networking.Client.ClientStates}
  commentId: T:System.EventHandler{WaveEngine.Networking.Client.ClientStates}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ClientStates>
  nameWithType: EventHandler<ClientStates>
  fullName: System.EventHandler<WaveEngine.Networking.Client.ClientStates>
  nameWithType.vb: EventHandler(Of ClientStates)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Client.ClientStates)
  name.vb: EventHandler(Of ClientStates)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Client.ClientStates
    name: ClientStates
    nameWithType: ClientStates
    fullName: WaveEngine.Networking.Client.ClientStates
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Client.ClientStates
    name: ClientStates
    nameWithType: ClientStates
    fullName: WaveEngine.Networking.Client.ClientStates
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.ApplicationIdentifier
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.ClientApplicationVersion
  isExternal: true
- uid: System.EventHandler{WaveEngine.Networking.Connection.HostDiscoveredEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Connection.HostDiscoveredEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<HostDiscoveredEventArgs>
  nameWithType: EventHandler<HostDiscoveredEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Connection.HostDiscoveredEventArgs>
  nameWithType.vb: EventHandler(Of HostDiscoveredEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Connection.HostDiscoveredEventArgs)
  name.vb: EventHandler(Of HostDiscoveredEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
    name: HostDiscoveredEventArgs
    nameWithType: HostDiscoveredEventArgs
    fullName: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
    name: HostDiscoveredEventArgs
    nameWithType: HostDiscoveredEventArgs
    fullName: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{WaveEngine.Networking.Connection.MessageReceivedEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Connection.MessageReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageReceivedEventArgs>
  nameWithType: EventHandler<MessageReceivedEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Connection.MessageReceivedEventArgs>
  nameWithType.vb: EventHandler(Of MessageReceivedEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Connection.MessageReceivedEventArgs)
  name.vb: EventHandler(Of MessageReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Connection.MessageReceivedEventArgs
    name: MessageReceivedEventArgs
    nameWithType: MessageReceivedEventArgs
    fullName: WaveEngine.Networking.Connection.MessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Connection.MessageReceivedEventArgs
    name: MessageReceivedEventArgs
    nameWithType: MessageReceivedEventArgs
    fullName: WaveEngine.Networking.Connection.MessageReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{WaveEngine.Networking.Client.MessageFromPlayerEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Client.MessageFromPlayerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageFromPlayerEventArgs>
  nameWithType: EventHandler<MessageFromPlayerEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Client.MessageFromPlayerEventArgs>
  nameWithType.vb: EventHandler(Of MessageFromPlayerEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Client.MessageFromPlayerEventArgs)
  name.vb: EventHandler(Of MessageFromPlayerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Client.MessageFromPlayerEventArgs
    name: MessageFromPlayerEventArgs
    nameWithType: MessageFromPlayerEventArgs
    fullName: WaveEngine.Networking.Client.MessageFromPlayerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Client.MessageFromPlayerEventArgs
    name: MessageFromPlayerEventArgs
    nameWithType: MessageFromPlayerEventArgs
    fullName: WaveEngine.Networking.Client.MessageFromPlayerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues
  name: DefaultValues
  nameWithType: MatchmakingClientService.DefaultValues
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.DefaultValues
- uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  commentId: M:WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  parent: WaveEngine.Common.UpdatableService
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: UpdatableService.Update(TimeSpan)
  fullName: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
    name: Update
    nameWithType: UpdatableService.Update
    fullName: WaveEngine.Common.UpdatableService.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
    name: Update
    nameWithType: UpdatableService.Update
    fullName: WaveEngine.Common.UpdatableService.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Update*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.Update
  name: Update
  nameWithType: MatchmakingClientService.Update
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.Update
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.ServerDiscovered
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers
  name: DiscoverServers
  nameWithType: MatchmakingClientService.DiscoverServers
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.DiscoverServers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync
  name: ConnectAsync
  nameWithType: MatchmakingClientService.ConnectAsync
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.ConnectAsync
- uid: WaveEngine.Networking.NetworkEndpoint
  commentId: T:WaveEngine.Networking.NetworkEndpoint
  parent: WaveEngine.Networking
  name: NetworkEndpoint
  nameWithType: NetworkEndpoint
  fullName: WaveEngine.Networking.NetworkEndpoint
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking
  commentId: N:WaveEngine.Networking
  name: WaveEngine.Networking
  nameWithType: WaveEngine.Networking
  fullName: WaveEngine.Networking
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: WaveEngine.Networking.Client.MatchmakingClientService.State
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.State
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Disconnect*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
  name: Disconnect
  nameWithType: MatchmakingClientService.Disconnect
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.Disconnect
- uid: WaveEngine.Networking.Client.ClientStates.Joining
  commentId: F:WaveEngine.Networking.Client.ClientStates.Joining
  isExternal: true
- uid: WaveEngine.Networking.Client.ClientStates.Joined
  commentId: F:WaveEngine.Networking.Client.ClientStates.Joined
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.StateChanged
  commentId: E:WaveEngine.Networking.Client.MatchmakingClientService.StateChanged
  isExternal: true
- uid: WaveEngine.Networking.Players.INetworkPlayer.CustomProperties
  commentId: P:WaveEngine.Networking.Players.INetworkPlayer.CustomProperties
  parent: WaveEngine.Networking.Players.INetworkPlayer
  name: CustomProperties
  nameWithType: INetworkPlayer.CustomProperties
  fullName: WaveEngine.Networking.Players.INetworkPlayer.CustomProperties
- uid: WaveEngine.Networking.RoomOptions
  commentId: T:WaveEngine.Networking.RoomOptions
  parent: WaveEngine.Networking
  name: RoomOptions
  nameWithType: RoomOptions
  fullName: WaveEngine.Networking.RoomOptions
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync
  name: CreateRoomAsync
  nameWithType: MatchmakingClientService.CreateRoomAsync
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CreateRoomAsync
- uid: System.Threading.Tasks.Task{WaveEngine.Networking.Messages.EnterRoomResultCodes}
  commentId: T:System.Threading.Tasks.Task{WaveEngine.Networking.Messages.EnterRoomResultCodes}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EnterRoomResultCodes>
  nameWithType: Task<EnterRoomResultCodes>
  fullName: System.Threading.Tasks.Task<WaveEngine.Networking.Messages.EnterRoomResultCodes>
  nameWithType.vb: Task(Of EnterRoomResultCodes)
  fullName.vb: System.Threading.Tasks.Task(Of WaveEngine.Networking.Messages.EnterRoomResultCodes)
  name.vb: Task(Of EnterRoomResultCodes)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Messages.EnterRoomResultCodes
    name: EnterRoomResultCodes
    nameWithType: EnterRoomResultCodes
    fullName: WaveEngine.Networking.Messages.EnterRoomResultCodes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Messages.EnterRoomResultCodes
    name: EnterRoomResultCodes
    nameWithType: EnterRoomResultCodes
    fullName: WaveEngine.Networking.Messages.EnterRoomResultCodes
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Players.INetworkPlayer
  commentId: T:WaveEngine.Networking.Players.INetworkPlayer
  parent: WaveEngine.Networking.Players
  name: INetworkPlayer
  nameWithType: INetworkPlayer
  fullName: WaveEngine.Networking.Players.INetworkPlayer
- uid: WaveEngine.Networking.Players
  commentId: N:WaveEngine.Networking.Players
  name: WaveEngine.Networking.Players
  nameWithType: WaveEngine.Networking.Players
  fullName: WaveEngine.Networking.Players
- uid: WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync(WaveEngine.Networking.RoomOptions)
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync
  name: JoinRoomAsync
  nameWithType: MatchmakingClientService.JoinRoomAsync
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync
- uid: WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)
  commentId: M:WaveEngine.Networking.Client.MatchmakingClientService.JoinRoomAsync(System.String)
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync
  name: JoinOrCreateRoomAsync
  nameWithType: MatchmakingClientService.JoinOrCreateRoomAsync
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.JoinOrCreateRoomAsync
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  commentId: P:WaveEngine.Networking.Client.MatchmakingClientService.CurrentRoom
  isExternal: true
- uid: WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom
  name: LeaveRoom
  nameWithType: MatchmakingClientService.LeaveRoom
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.LeaveRoom
- uid: WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage
  name: CreateMessage
  nameWithType: MatchmakingClientService.CreateMessage
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.CreateMessage
- uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  commentId: T:WaveEngine.Networking.Connection.Messages.OutgoingMessage
  parent: WaveEngine.Networking.Connection.Messages
  name: OutgoingMessage
  nameWithType: OutgoingMessage
  fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
- uid: WaveEngine.Networking.Connection.Messages
  commentId: N:WaveEngine.Networking.Connection.Messages
  name: WaveEngine.Networking.Connection.Messages
  nameWithType: WaveEngine.Networking.Connection.Messages
  fullName: WaveEngine.Networking.Connection.Messages
- uid: WaveEngine.Networking.Client.MatchmakingClientService.SendToServer*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.SendToServer
  name: SendToServer
  nameWithType: MatchmakingClientService.SendToServer
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.SendToServer
- uid: WaveEngine.Networking.Messages.DeliveryMethod
  commentId: T:WaveEngine.Networking.Messages.DeliveryMethod
  parent: WaveEngine.Networking.Messages
  name: DeliveryMethod
  nameWithType: DeliveryMethod
  fullName: WaveEngine.Networking.Messages.DeliveryMethod
- uid: WaveEngine.Networking.Messages
  commentId: N:WaveEngine.Networking.Messages
  name: WaveEngine.Networking.Messages
  nameWithType: WaveEngine.Networking.Messages
  fullName: WaveEngine.Networking.Messages
- uid: WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom
  name: SendToCurrentRoom
  nameWithType: MatchmakingClientService.SendToCurrentRoom
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.SendToCurrentRoom
- uid: WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer
  name: SendToPlayer
  nameWithType: MatchmakingClientService.SendToPlayer
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.SendToPlayer
- uid: WaveEngine.Networking.Client.Players.RemoteNetworkPlayer
  commentId: T:WaveEngine.Networking.Client.Players.RemoteNetworkPlayer
  parent: WaveEngine.Networking.Client.Players
  name: RemoteNetworkPlayer
  nameWithType: RemoteNetworkPlayer
  fullName: WaveEngine.Networking.Client.Players.RemoteNetworkPlayer
- uid: WaveEngine.Common.Service.Terminate
  commentId: M:WaveEngine.Common.Service.Terminate
  parent: WaveEngine.Common.Service
  name: Terminate()
  nameWithType: Service.Terminate()
  fullName: WaveEngine.Common.Service.Terminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Client.MatchmakingClientService.Terminate*
  commentId: Overload:WaveEngine.Networking.Client.MatchmakingClientService.Terminate
  name: Terminate
  nameWithType: MatchmakingClientService.Terminate
  fullName: WaveEngine.Networking.Client.MatchmakingClientService.Terminate
