### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Physics3D.RigidBody3D
  commentId: T:WaveEngine.Framework.Physics3D.RigidBody3D
  id: RigidBody3D
  parent: WaveEngine.Framework.Physics3D
  children:
  - WaveEngine.Framework.Physics3D.RigidBody3D.#ctor
  - WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping
  - WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor
  - WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity
  - WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces
  - WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues
  - WaveEngine.Framework.Physics3D.RigidBody3D.Gravity
  - WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping
  - WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor
  - WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity
  - WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia
  - WaveEngine.Framework.Physics3D.RigidBody3D.Mass
  - WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity
  - WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType
  - WaveEngine.Framework.Physics3D.RigidBody3D.Update(System.TimeSpan)
  - WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp
  langs:
  - csharp
  - vb
  name: RigidBody3D
  nameWithType: RigidBody3D
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D
  type: Class
  source:
    id: RigidBody3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 18
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nRigidBody3D enable your entities to act under the control of physics. The Rigidbody can receive forces and torque\nto make your objects move in a realistic way.\nAny entity must contain a Rigidbody to be influenced by gravity, act under added forces or interact with other objects\nthrough physics engine.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Framework.Physics3D")]

      public sealed class RigidBody3D : PhysicBody3D<IRigidBody3D, RigidBodyDef3D>, IDisposable
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Framework.Physics3D")>

      Public NotInheritable Class RigidBody3D

          Inherits PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D)

          Implements IDisposable
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Framework.DependencyObject
  - WaveEngine.Framework.Component
  - WaveEngine.Framework.Behavior
  - WaveEngine.Framework.Physics3D.PhysicBody3D
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  implements:
  - System.IDisposable
  inheritedMembers:
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.physicBody
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.bodyDefinition
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.InternalBody
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.BodyDef
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.DefaultValues
  - WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.Initialize
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Transform3D
  - WaveEngine.Framework.Physics3D.PhysicBody3D.collisionStore
  - WaveEngine.Framework.Physics3D.PhysicBody3D.BeginCollision
  - WaveEngine.Framework.Physics3D.PhysicBody3D.EndCollision
  - WaveEngine.Framework.Physics3D.PhysicBody3D.UpdateCollision
  - WaveEngine.Framework.Physics3D.PhysicBody3D.InternalBody
  - WaveEngine.Framework.Physics3D.PhysicBody3D.BodyDef
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Collisions
  - WaveEngine.Framework.Physics3D.PhysicBody3D.IsSensor
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Friction
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Restitution
  - WaveEngine.Framework.Physics3D.PhysicBody3D.RollingFriction
  - WaveEngine.Framework.Physics3D.PhysicBody3D.CcdMotionThreshold
  - WaveEngine.Framework.Physics3D.PhysicBody3D.CcdSweptSphereRadius
  - WaveEngine.Framework.Physics3D.PhysicBody3D.CollisionCategories
  - WaveEngine.Framework.Physics3D.PhysicBody3D.MaskBits
  - WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification(System.Boolean)
  - WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List{WaveEngine.Framework.Physics3D.CollisionInfo3D})
  - WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest(WaveEngine.Framework.Physics3D.PhysicBody3D)
  - WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
  - WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
  - WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
  - WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
  - WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged(System.Object,System.EventArgs)
  - WaveEngine.Framework.Behavior.Family
  - WaveEngine.Framework.Behavior.IsActive
  - WaveEngine.Framework.Behavior.UpdateOrder
  - WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  - WaveEngine.Framework.Component.isInitialized
  - WaveEngine.Framework.Component.OnComponentInitialized
  - WaveEngine.Framework.Component.OnComponentRemoved
  - WaveEngine.Framework.Component.Name
  - WaveEngine.Framework.Component.Owner
  - WaveEngine.Framework.Component.Assets
  - WaveEngine.Framework.Component.EntityManager
  - WaveEngine.Framework.Component.BehaviorManager
  - WaveEngine.Framework.Component.RenderManager
  - WaveEngine.Framework.Component.Clone
  - WaveEngine.Framework.Component.ToString
  - WaveEngine.Framework.DependencyObject.PropertyChanged
  - WaveEngine.Framework.DependencyObject.ParentDependencyObject
  - WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  - WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  - WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Framework.Physics3D
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity
  id: LinearVelocity
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: RigidBody3D.LinearVelocity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity
  type: Property
  source:
    id: LinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 34
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the linear velocity of the physics entity.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "The linear velocity of the body's origin in world co-ordinates.")]

      public Vector3 LinearVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe linear velocity.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="The linear velocity of the body's origin in world co-ordinates.")>

      Public Property LinearVelocity As Vector3
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: The linear velocity of the body's origin in world co-ordinates.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity
  id: AngularVelocity
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: RigidBody3D.AngularVelocity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity
  type: Property
  source:
    id: AngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 66
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the angular velocity of the physics entity.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "The angular velocity of the body.")]

      public Vector3 AngularVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe angular velocity.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="The angular velocity of the body.")>

      Public Property AngularVelocity As Vector3
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: The angular velocity of the body.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor
  id: LinearFactor
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: LinearFactor
  nameWithType: RigidBody3D.LinearFactor
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor
  type: Property
  source:
    id: LinearFactor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 98
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets a value indicating whether [fixed rotation].\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "Should this body be prevented from rotating? Useful for characters.")]

      public Vector3 LinearFactor { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\n<code>true</code> if [fixed rotation]; otherwise, <code>false</code>.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="Should this body be prevented from rotating? Useful for characters.")>

      Public Property LinearFactor As Vector3
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Should this body be prevented from rotating? Useful for characters.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor
  id: AngularFactor
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: AngularFactor
  nameWithType: RigidBody3D.AngularFactor
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor
  type: Property
  source:
    id: AngularFactor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 130
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets a value indicating whether [fixed rotation].\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "Should this body be prevented from rotating? Useful for characters.")]

      public Vector3 AngularFactor { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\n<code>true</code> if [fixed rotation]; otherwise, <code>false</code>.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="Should this body be prevented from rotating? Useful for characters.")>

      Public Property AngularFactor As Vector3
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Should this body be prevented from rotating? Useful for characters.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType
  id: PhysicBodyType
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: PhysicBodyType
  nameWithType: RigidBody3D.PhysicBodyType
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType
  type: Property
  source:
    id: PhysicBodyType
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 162
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the type of the physic body.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "The body type: static, kinematic, or dynamic. Note: if a dynamic body would have zero mass, the mass is set to one.")]

      public RigidBodyType3D PhysicBodyType { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics3D.RigidBodyType3D
      description: "\nThe type of the physic body.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="The body type: static, kinematic, or dynamic. Note: if a dynamic body would have zero mass, the mass is set to one.")>

      Public Property PhysicBodyType As RigidBodyType3D
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: 'The body type: static, kinematic, or dynamic. Note: if a dynamic body would have zero mass, the mass is set to one.'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.Mass
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.Mass
  id: Mass
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: RigidBody3D.Mass
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.Mass
  type: Property
  source:
    id: Mass
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 185
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the total mass of the body\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Mass { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property Mass As Single
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.Mass*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity
  id: OverrideGravity
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: OverrideGravity
  nameWithType: RigidBody3D.OverrideGravity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity
  type: Property
  source:
    id: OverrideGravity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 211
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets a value indicating whether the gravity is overrided.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tag = 1, Tooltip = "Scale the gravity applied to this body.")]

      public bool OverrideGravity { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      <RenderProperty(Tag:=1, Tooltip:="Scale the gravity applied to this body.")>

      Public Property OverrideGravity As Boolean
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tag
      type: System.Int32
      value: 1
    - name: Tooltip
      type: System.String
      value: Scale the gravity applied to this body.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.Gravity
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.Gravity
  id: Gravity
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: RigidBody3D.Gravity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.Gravity
  type: Property
  source:
    id: Gravity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 246
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the gravity applied to this body.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(AttatchToTag = 1, AttachToValue = true, Tooltip = "Scale the gravity applied to this body.")]

      public Vector3 Gravity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: >-
      <DataMember>

      <RenderProperty(AttatchToTag:=1, AttachToValue:=True, Tooltip:="Scale the gravity applied to this body.")>

      Public Property Gravity As Vector3
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.Gravity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: AttatchToTag
      type: System.Int32
      value: 1
    - name: AttachToValue
      type: System.Boolean
      value: true
    - name: Tooltip
      type: System.String
      value: Scale the gravity applied to this body.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia
  id: LocalInertia
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: LocalInertia
  nameWithType: RigidBody3D.LocalInertia
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia
  type: Property
  source:
    id: LocalInertia
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 296
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets the rotational inertia of the body about the local origin\n"
  example: []
  syntax:
    content: public Vector3 LocalInertia { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public ReadOnly Property LocalInertia As Vector3
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping
  id: LinearDamping
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: LinearDamping
  nameWithType: RigidBody3D.LinearDamping
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping
  type: Property
  source:
    id: LinearDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 318
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the linear damping.\n"
  remarks: "\nLinear damping is use to reduce the linear velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "Linear damping is use to reduce the linear velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.")]

      public float LinearDamping { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe linear damping.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="Linear damping is use to reduce the linear velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.")>

      Public Property LinearDamping As Single
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Linear damping is use to reduce the linear velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping
  commentId: P:WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping
  id: AngularDamping
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: AngularDamping
  nameWithType: RigidBody3D.AngularDamping
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping
  type: Property
  source:
    id: AngularDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 353
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nGets or sets the angular Damping.\n"
  remarks: "\nThe Angular damping is use to reduce the angular velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [RenderProperty(Tooltip = "Angular damping is use to reduce the angular velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.")]

      public float AngularDamping { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe angular damping.\n"
    content.vb: >-
      <DataMember>

      <RenderProperty(Tooltip:="Angular damping is use to reduce the angular velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.")>

      Public Property AngularDamping As Single
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Angular damping is use to reduce the angular velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.#ctor
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: RigidBody3D()
  nameWithType: RigidBody3D.RigidBody3D()
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.RigidBody3D()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 385
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Physics3D.RigidBody3D\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RigidBody3D()
    content.vb: Public Sub New
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues
  id: DefaultValues
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: DefaultValues()
  nameWithType: RigidBody3D.DefaultValues()
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues()
  type: Method
  source:
    id: DefaultValues
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 394
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nThis methods is used to set default values by the default constructor of our classes.\nThis is called too when an entity is deserializing.\n"
  example: []
  syntax:
    content: protected override void DefaultValues()
    content.vb: Protected Overrides Sub DefaultValues
  overridden: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.DefaultValues
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp
  id: WakeUp
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: WakeUp()
  nameWithType: RigidBody3D.WakeUp()
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp()
  type: Method
  source:
    id: WakeUp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 407
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nWake up the rigid body\n"
  example: []
  syntax:
    content: public void WakeUp()
    content.vb: Public Sub WakeUp
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3)
  id: ApplyForce(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyForce(Vector3)
  nameWithType: RigidBody3D.ApplyForce(Vector3)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 416
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nApply a central force to the rigid body\n"
  example: []
  syntax:
    content: public void ApplyForce(Vector3 force)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector3
      description: The force
    content.vb: Public Sub ApplyForce(force As Vector3)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  id: ApplyTorque(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyTorque(Vector3)
  nameWithType: RigidBody3D.ApplyTorque(Vector3)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 425
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nApply a torque force to the rigid body\n"
  example: []
  syntax:
    content: public void ApplyTorque(Vector3 torque)
    parameters:
    - id: torque
      type: WaveEngine.Common.Math.Vector3
      description: The torque
    content.vb: Public Sub ApplyTorque(torque As Vector3)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: ApplyForceAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyForceAtPosition(Vector3, Vector3)
  nameWithType: RigidBody3D.ApplyForceAtPosition(Vector3, Vector3)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyForceAtPosition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 435
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nApply a force to the rigid body\n"
  example: []
  syntax:
    content: public void ApplyForceAtPosition(Vector3 force, Vector3 position)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector3
      description: The force vector in world coordinates
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Position in world coordinates
    content.vb: Public Sub ApplyForceAtPosition(force As Vector3, position As Vector3)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3)
  id: ApplyImpulse(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyImpulse(Vector3)
  nameWithType: RigidBody3D.ApplyImpulse(Vector3)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 448
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nApply an impulse to the center of the rigid body\n"
  example: []
  syntax:
    content: public void ApplyImpulse(Vector3 impulse)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: The impulse in world coordinates
    content.vb: Public Sub ApplyImpulse(impulse As Vector3)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  id: ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyTorqueImpulse(Vector3)
  nameWithType: RigidBody3D.ApplyTorqueImpulse(Vector3)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyTorqueImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 457
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nApply torque impulse to the rigid body\n"
  example: []
  syntax:
    content: public void ApplyTorqueImpulse(Vector3 torque)
    parameters:
    - id: torque
      type: WaveEngine.Common.Math.Vector3
      description: The torque impulse
    content.vb: Public Sub ApplyTorqueImpulse(torque As Vector3)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: ApplyImpulseAtPosition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyImpulseAtPosition(Vector3, Vector3)
  nameWithType: RigidBody3D.ApplyImpulseAtPosition(Vector3, Vector3)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyImpulseAtPosition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 467
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nApply an impulse to the rigid body\n"
  example: []
  syntax:
    content: public void ApplyImpulseAtPosition(Vector3 impulse, Vector3 position)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: The impulse in world coordinates
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: Position in world coordinates
    content.vb: Public Sub ApplyImpulseAtPosition(impulse As Vector3, position As Vector3)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces
  id: ClearForces
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: ClearForces()
  nameWithType: RigidBody3D.ClearForces()
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces()
  type: Method
  source:
    id: ClearForces
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 479
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nClear all forces applied to the rigid body\n"
  example: []
  syntax:
    content: public void ClearForces()
    content.vb: Public Sub ClearForces
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.Update(System.TimeSpan)
  commentId: M:WaveEngine.Framework.Physics3D.RigidBody3D.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Framework.Physics3D.RigidBody3D
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: RigidBody3D.Update(TimeSpan)
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics3D\Body\RigidBody3D.cs
    startLine: 495
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics3D
  summary: "\nAllows this instance to execute custom logic during its <code>Update</code>.\n"
  remarks: "\nThis method will not be executed if the <xref href=\"WaveEngine.Framework.Component\" data-throw-if-not-resolved=\"false\"></xref>, or the <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>\nowning it are not <code>Active</code>.\n"
  example: []
  syntax:
    content: protected override void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: The game time.
    content.vb: Protected Overrides Sub Update(gameTime As TimeSpan)
  overridden: WaveEngine.Framework.Physics3D.PhysicBody3D.Update(System.TimeSpan)
  overload: WaveEngine.Framework.Physics3D.RigidBody3D.Update*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: WaveEngine.Framework.Physics3D
  commentId: N:WaveEngine.Framework.Physics3D
  name: WaveEngine.Framework.Physics3D
  nameWithType: WaveEngine.Framework.Physics3D
  fullName: WaveEngine.Framework.Physics3D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Framework.DependencyObject
  commentId: T:WaveEngine.Framework.DependencyObject
  parent: WaveEngine.Framework
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: WaveEngine.Framework.DependencyObject
- uid: WaveEngine.Framework.Component
  commentId: T:WaveEngine.Framework.Component
  parent: WaveEngine.Framework
  name: Component
  nameWithType: Component
  fullName: WaveEngine.Framework.Component
- uid: WaveEngine.Framework.Behavior
  commentId: T:WaveEngine.Framework.Behavior
  parent: WaveEngine.Framework
  name: Behavior
  nameWithType: Behavior
  fullName: WaveEngine.Framework.Behavior
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D
  commentId: T:WaveEngine.Framework.Physics3D.PhysicBody3D
  parent: WaveEngine.Framework.Physics3D
  name: PhysicBody3D
  nameWithType: PhysicBody3D
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  commentId: T:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  parent: WaveEngine.Framework.Physics3D
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2
  name: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D)
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D)
  name.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2
    name: PhysicBody3D
    nameWithType: PhysicBody3D
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Physics3D.IRigidBody3D
    name: IRigidBody3D
    nameWithType: IRigidBody3D
    fullName: WaveEngine.Common.Physics3D.IRigidBody3D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Physics3D.RigidBodyDef3D
    name: RigidBodyDef3D
    nameWithType: RigidBodyDef3D
    fullName: WaveEngine.Common.Physics3D.RigidBodyDef3D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2
    name: PhysicBody3D
    nameWithType: PhysicBody3D
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Physics3D.IRigidBody3D
    name: IRigidBody3D
    nameWithType: IRigidBody3D
    fullName: WaveEngine.Common.Physics3D.IRigidBody3D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Physics3D.RigidBodyDef3D
    name: RigidBodyDef3D
    nameWithType: RigidBodyDef3D
    fullName: WaveEngine.Common.Physics3D.RigidBodyDef3D
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.physicBody
  commentId: F:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.physicBody
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2.physicBody
  name: physicBody
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.physicBody
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.physicBody
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).physicBody
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).physicBody
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.bodyDefinition
  commentId: F:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.bodyDefinition
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2.bodyDefinition
  name: bodyDefinition
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.bodyDefinition
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.bodyDefinition
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).bodyDefinition
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).bodyDefinition
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.InternalBody
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.InternalBody
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2.InternalBody
  name: InternalBody
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.InternalBody
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.InternalBody
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).InternalBody
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).InternalBody
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.BodyDef
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.BodyDef
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2.BodyDef
  name: BodyDef
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.BodyDef
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.BodyDef
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).BodyDef
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).BodyDef
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.DefaultValues
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.DefaultValues
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
  name: DefaultValues()
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.DefaultValues()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.DefaultValues()
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).DefaultValues()
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
    name: DefaultValues
    nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.DefaultValues
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
    name: DefaultValues
    nameWithType: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).DefaultValues
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.Initialize
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}.Initialize
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D{WaveEngine.Common.Physics3D.IRigidBody3D,WaveEngine.Common.Physics3D.RigidBodyDef3D}
  definition: WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
  name: Initialize()
  nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.Initialize()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.Initialize()
  nameWithType.vb: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).Initialize()
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).Initialize()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
    name: Initialize
    nameWithType: PhysicBody3D<IRigidBody3D, RigidBodyDef3D>.Initialize
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
    name: Initialize
    nameWithType: PhysicBody3D(Of IRigidBody3D, RigidBodyDef3D).Initialize
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D(Of WaveEngine.Common.Physics3D.IRigidBody3D, WaveEngine.Common.Physics3D.RigidBodyDef3D).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Transform3D
  commentId: F:WaveEngine.Framework.Physics3D.PhysicBody3D.Transform3D
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Transform3D
  nameWithType: PhysicBody3D.Transform3D
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Transform3D
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.collisionStore
  commentId: F:WaveEngine.Framework.Physics3D.PhysicBody3D.collisionStore
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: collisionStore
  nameWithType: PhysicBody3D.collisionStore
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.collisionStore
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.BeginCollision
  commentId: E:WaveEngine.Framework.Physics3D.PhysicBody3D.BeginCollision
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: BeginCollision
  nameWithType: PhysicBody3D.BeginCollision
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.BeginCollision
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.EndCollision
  commentId: E:WaveEngine.Framework.Physics3D.PhysicBody3D.EndCollision
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: EndCollision
  nameWithType: PhysicBody3D.EndCollision
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.EndCollision
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.UpdateCollision
  commentId: E:WaveEngine.Framework.Physics3D.PhysicBody3D.UpdateCollision
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: UpdateCollision
  nameWithType: PhysicBody3D.UpdateCollision
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.UpdateCollision
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.InternalBody
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.InternalBody
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: InternalBody
  nameWithType: PhysicBody3D.InternalBody
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.InternalBody
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.BodyDef
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.BodyDef
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: BodyDef
  nameWithType: PhysicBody3D.BodyDef
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.BodyDef
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Collisions
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.Collisions
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Collisions
  nameWithType: PhysicBody3D.Collisions
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Collisions
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.IsSensor
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.IsSensor
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: IsSensor
  nameWithType: PhysicBody3D.IsSensor
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.IsSensor
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Friction
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.Friction
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Friction
  nameWithType: PhysicBody3D.Friction
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Friction
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Restitution
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.Restitution
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Restitution
  nameWithType: PhysicBody3D.Restitution
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Restitution
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.RollingFriction
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.RollingFriction
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: RollingFriction
  nameWithType: PhysicBody3D.RollingFriction
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.RollingFriction
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.CcdMotionThreshold
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.CcdMotionThreshold
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: CcdMotionThreshold
  nameWithType: PhysicBody3D.CcdMotionThreshold
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.CcdMotionThreshold
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.CcdSweptSphereRadius
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.CcdSweptSphereRadius
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: CcdSweptSphereRadius
  nameWithType: PhysicBody3D.CcdSweptSphereRadius
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.CcdSweptSphereRadius
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.CollisionCategories
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.CollisionCategories
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: CollisionCategories
  nameWithType: PhysicBody3D.CollisionCategories
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.CollisionCategories
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.MaskBits
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D.MaskBits
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: MaskBits
  nameWithType: PhysicBody3D.MaskBits
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.MaskBits
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification(System.Boolean)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification(System.Boolean)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  isExternal: true
  name: ActiveNotification(Boolean)
  nameWithType: PhysicBody3D.ActiveNotification(Boolean)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification(System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification(System.Boolean)
    name: ActiveNotification
    nameWithType: PhysicBody3D.ActiveNotification
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification(System.Boolean)
    name: ActiveNotification
    nameWithType: PhysicBody3D.ActiveNotification
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: WorldToLocalPosition(Vector3)
  nameWithType: PhysicBody3D.WorldToLocalPosition(Vector3)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3)
    name: WorldToLocalPosition
    nameWithType: PhysicBody3D.WorldToLocalPosition
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3)
    name: WorldToLocalPosition
    nameWithType: PhysicBody3D.WorldToLocalPosition
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: WorldToLocalPosition(Vector3, Vector3)
  nameWithType: PhysicBody3D.WorldToLocalPosition(Vector3, Vector3)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
    name: WorldToLocalPosition
    nameWithType: PhysicBody3D.WorldToLocalPosition
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
    name: WorldToLocalPosition
    nameWithType: PhysicBody3D.WorldToLocalPosition
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.WorldToLocalPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List{WaveEngine.Framework.Physics3D.CollisionInfo3D})
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List{WaveEngine.Framework.Physics3D.CollisionInfo3D})
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  isExternal: true
  name: ContactTest(List<CollisionInfo3D>)
  nameWithType: PhysicBody3D.ContactTest(List<CollisionInfo3D>)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List<WaveEngine.Framework.Physics3D.CollisionInfo3D>)
  nameWithType.vb: PhysicBody3D.ContactTest(List(Of CollisionInfo3D))
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List(Of WaveEngine.Framework.Physics3D.CollisionInfo3D))
  name.vb: ContactTest(List(Of CollisionInfo3D))
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List{WaveEngine.Framework.Physics3D.CollisionInfo3D})
    name: ContactTest
    nameWithType: PhysicBody3D.ContactTest
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Physics3D.CollisionInfo3D
    name: CollisionInfo3D
    nameWithType: CollisionInfo3D
    fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest(System.Collections.Generic.List{WaveEngine.Framework.Physics3D.CollisionInfo3D})
    name: ContactTest
    nameWithType: PhysicBody3D.ContactTest
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactTest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Physics3D.CollisionInfo3D
    name: CollisionInfo3D
    nameWithType: CollisionInfo3D
    fullName: WaveEngine.Framework.Physics3D.CollisionInfo3D
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest(WaveEngine.Framework.Physics3D.PhysicBody3D)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest(WaveEngine.Framework.Physics3D.PhysicBody3D)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: ContactPairTest(PhysicBody3D)
  nameWithType: PhysicBody3D.ContactPairTest(PhysicBody3D)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest(WaveEngine.Framework.Physics3D.PhysicBody3D)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest(WaveEngine.Framework.Physics3D.PhysicBody3D)
    name: ContactPairTest
    nameWithType: PhysicBody3D.ContactPairTest
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D
    name: PhysicBody3D
    nameWithType: PhysicBody3D
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest(WaveEngine.Framework.Physics3D.PhysicBody3D)
    name: ContactPairTest
    nameWithType: PhysicBody3D.ContactPairTest
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ContactPairTest
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D
    name: PhysicBody3D
    nameWithType: PhysicBody3D
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: PointTest(Vector3)
  nameWithType: PhysicBody3D.PointTest(Vector3)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest(WaveEngine.Common.Math.Vector3)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest(WaveEngine.Common.Math.Vector3)
    name: PointTest
    nameWithType: PhysicBody3D.PointTest
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest(WaveEngine.Common.Math.Vector3)
    name: PointTest
    nameWithType: PhysicBody3D.PointTest
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.PointTest
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Dispose()
  nameWithType: PhysicBody3D.Dispose()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
    name: Dispose
    nameWithType: PhysicBody3D.Dispose
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
    name: Dispose
    nameWithType: PhysicBody3D.Dispose
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: ResolveDependencies()
  nameWithType: PhysicBody3D.ResolveDependencies()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
    name: ResolveDependencies
    nameWithType: PhysicBody3D.ResolveDependencies
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
    name: ResolveDependencies
    nameWithType: PhysicBody3D.ResolveDependencies
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.ResolveDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: DeleteDependencies()
  nameWithType: PhysicBody3D.DeleteDependencies()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
    name: DeleteDependencies
    nameWithType: PhysicBody3D.DeleteDependencies
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
    name: DeleteDependencies
    nameWithType: PhysicBody3D.DeleteDependencies
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.DeleteDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Removed()
  nameWithType: PhysicBody3D.Removed()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Removed()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
    name: Removed
    nameWithType: PhysicBody3D.Removed
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
    name: Removed
    nameWithType: PhysicBody3D.Removed
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Removed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  name: Initialize()
  nameWithType: PhysicBody3D.Initialize()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
    name: Initialize
    nameWithType: PhysicBody3D.Initialize
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
    name: Initialize
    nameWithType: PhysicBody3D.Initialize
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged(System.Object,System.EventArgs)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged(System.Object,System.EventArgs)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  isExternal: true
  name: OnTransformChanged(Object, EventArgs)
  nameWithType: PhysicBody3D.OnTransformChanged(Object, EventArgs)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged(System.Object, System.EventArgs)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged(System.Object,System.EventArgs)
    name: OnTransformChanged
    nameWithType: PhysicBody3D.OnTransformChanged
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged(System.Object,System.EventArgs)
    name: OnTransformChanged
    nameWithType: PhysicBody3D.OnTransformChanged
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.OnTransformChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Behavior.Family
  commentId: P:WaveEngine.Framework.Behavior.Family
  parent: WaveEngine.Framework.Behavior
  name: Family
  nameWithType: Behavior.Family
  fullName: WaveEngine.Framework.Behavior.Family
- uid: WaveEngine.Framework.Behavior.IsActive
  commentId: P:WaveEngine.Framework.Behavior.IsActive
  parent: WaveEngine.Framework.Behavior
  name: IsActive
  nameWithType: Behavior.IsActive
  fullName: WaveEngine.Framework.Behavior.IsActive
- uid: WaveEngine.Framework.Behavior.UpdateOrder
  commentId: P:WaveEngine.Framework.Behavior.UpdateOrder
  parent: WaveEngine.Framework.Behavior
  name: UpdateOrder
  nameWithType: Behavior.UpdateOrder
  fullName: WaveEngine.Framework.Behavior.UpdateOrder
- uid: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  commentId: M:WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  parent: WaveEngine.Framework.Behavior
  isExternal: true
  name: BaseActiveNotification(Boolean)
  nameWithType: Behavior.BaseActiveNotification(Boolean)
  fullName: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
    name: BaseActiveNotification
    nameWithType: Behavior.BaseActiveNotification
    fullName: WaveEngine.Framework.Behavior.BaseActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Behavior.BaseActiveNotification(System.Boolean)
    name: BaseActiveNotification
    nameWithType: Behavior.BaseActiveNotification
    fullName: WaveEngine.Framework.Behavior.BaseActiveNotification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.isInitialized
  commentId: F:WaveEngine.Framework.Component.isInitialized
  parent: WaveEngine.Framework.Component
  name: isInitialized
  nameWithType: Component.isInitialized
  fullName: WaveEngine.Framework.Component.isInitialized
- uid: WaveEngine.Framework.Component.OnComponentInitialized
  commentId: E:WaveEngine.Framework.Component.OnComponentInitialized
  parent: WaveEngine.Framework.Component
  name: OnComponentInitialized
  nameWithType: Component.OnComponentInitialized
  fullName: WaveEngine.Framework.Component.OnComponentInitialized
- uid: WaveEngine.Framework.Component.OnComponentRemoved
  commentId: E:WaveEngine.Framework.Component.OnComponentRemoved
  parent: WaveEngine.Framework.Component
  name: OnComponentRemoved
  nameWithType: Component.OnComponentRemoved
  fullName: WaveEngine.Framework.Component.OnComponentRemoved
- uid: WaveEngine.Framework.Component.Name
  commentId: P:WaveEngine.Framework.Component.Name
  parent: WaveEngine.Framework.Component
  name: Name
  nameWithType: Component.Name
  fullName: WaveEngine.Framework.Component.Name
- uid: WaveEngine.Framework.Component.Owner
  commentId: P:WaveEngine.Framework.Component.Owner
  parent: WaveEngine.Framework.Component
  name: Owner
  nameWithType: Component.Owner
  fullName: WaveEngine.Framework.Component.Owner
- uid: WaveEngine.Framework.Component.Assets
  commentId: P:WaveEngine.Framework.Component.Assets
  parent: WaveEngine.Framework.Component
  name: Assets
  nameWithType: Component.Assets
  fullName: WaveEngine.Framework.Component.Assets
- uid: WaveEngine.Framework.Component.EntityManager
  commentId: P:WaveEngine.Framework.Component.EntityManager
  parent: WaveEngine.Framework.Component
  name: EntityManager
  nameWithType: Component.EntityManager
  fullName: WaveEngine.Framework.Component.EntityManager
- uid: WaveEngine.Framework.Component.BehaviorManager
  commentId: P:WaveEngine.Framework.Component.BehaviorManager
  parent: WaveEngine.Framework.Component
  name: BehaviorManager
  nameWithType: Component.BehaviorManager
  fullName: WaveEngine.Framework.Component.BehaviorManager
- uid: WaveEngine.Framework.Component.RenderManager
  commentId: P:WaveEngine.Framework.Component.RenderManager
  parent: WaveEngine.Framework.Component
  name: RenderManager
  nameWithType: Component.RenderManager
  fullName: WaveEngine.Framework.Component.RenderManager
- uid: WaveEngine.Framework.Component.Clone
  commentId: M:WaveEngine.Framework.Component.Clone
  parent: WaveEngine.Framework.Component
  name: Clone()
  nameWithType: Component.Clone()
  fullName: WaveEngine.Framework.Component.Clone()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Clone
    name: Clone
    nameWithType: Component.Clone
    fullName: WaveEngine.Framework.Component.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Clone
    name: Clone
    nameWithType: Component.Clone
    fullName: WaveEngine.Framework.Component.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.ToString
  commentId: M:WaveEngine.Framework.Component.ToString
  parent: WaveEngine.Framework.Component
  name: ToString()
  nameWithType: Component.ToString()
  fullName: WaveEngine.Framework.Component.ToString()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.ToString
    name: ToString
    nameWithType: Component.ToString
    fullName: WaveEngine.Framework.Component.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.ToString
    name: ToString
    nameWithType: Component.ToString
    fullName: WaveEngine.Framework.Component.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.PropertyChanged
  commentId: E:WaveEngine.Framework.DependencyObject.PropertyChanged
  parent: WaveEngine.Framework.DependencyObject
  name: PropertyChanged
  nameWithType: DependencyObject.PropertyChanged
  fullName: WaveEngine.Framework.DependencyObject.PropertyChanged
- uid: WaveEngine.Framework.DependencyObject.ParentDependencyObject
  commentId: P:WaveEngine.Framework.DependencyObject.ParentDependencyObject
  parent: WaveEngine.Framework.DependencyObject
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: WaveEngine.Framework.DependencyObject.ParentDependencyObject
- uid: WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  commentId: P:WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  parent: WaveEngine.Framework.DependencyObject
  name: EnableDiagnosticCallback
  nameWithType: DependencyObject.EnableDiagnosticCallback
  fullName: WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
- uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  commentId: M:WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  parent: WaveEngine.Framework.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty, System.Object)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: WaveEngine.Framework.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: WaveEngine.Framework.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: WaveEngine.Framework.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: WaveEngine.Framework.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: GetAbsoluteValue<T>(DependencyProperty)
  nameWithType: DependencyObject.GetAbsoluteValue<T>(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue<T>(WaveEngine.Framework.DependencyProperty)
  nameWithType.vb: DependencyObject.GetAbsoluteValue(Of T)(DependencyProperty)
  fullName.vb: WaveEngine.Framework.DependencyObject.GetAbsoluteValue(Of T)(WaveEngine.Framework.DependencyProperty)
  name.vb: GetAbsoluteValue(Of T)(DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
    name: GetAbsoluteValue<T>
    nameWithType: DependencyObject.GetAbsoluteValue<T>
    fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
    name: GetAbsoluteValue(Of T)
    nameWithType: DependencyObject.GetAbsoluteValue(Of T)
    fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: WaveEngine.Framework.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: WaveEngine.Framework.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: IsValueSet(DependencyProperty)
  nameWithType: DependencyObject.IsValueSet(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
    name: IsValueSet
    nameWithType: DependencyObject.IsValueSet
    fullName: WaveEngine.Framework.DependencyObject.IsValueSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
    name: IsValueSet
    nameWithType: DependencyObject.IsValueSet
    fullName: WaveEngine.Framework.DependencyObject.IsValueSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2
  commentId: T:WaveEngine.Framework.Physics3D.PhysicBody3D`2
  name: PhysicBody3D<T, K>
  nameWithType: PhysicBody3D<T, K>
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>
  nameWithType.vb: PhysicBody3D(Of T, K)
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K)
  name.vb: PhysicBody3D(Of T, K)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2
    name: PhysicBody3D
    nameWithType: PhysicBody3D
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2
    name: PhysicBody3D
    nameWithType: PhysicBody3D
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.physicBody
  commentId: F:WaveEngine.Framework.Physics3D.PhysicBody3D`2.physicBody
  name: physicBody
  nameWithType: PhysicBody3D<T, K>.physicBody
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.physicBody
  nameWithType.vb: PhysicBody3D(Of T, K).physicBody
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).physicBody
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.bodyDefinition
  commentId: F:WaveEngine.Framework.Physics3D.PhysicBody3D`2.bodyDefinition
  name: bodyDefinition
  nameWithType: PhysicBody3D<T, K>.bodyDefinition
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.bodyDefinition
  nameWithType.vb: PhysicBody3D(Of T, K).bodyDefinition
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).bodyDefinition
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.InternalBody
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D`2.InternalBody
  name: InternalBody
  nameWithType: PhysicBody3D<T, K>.InternalBody
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.InternalBody
  nameWithType.vb: PhysicBody3D(Of T, K).InternalBody
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).InternalBody
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.BodyDef
  commentId: P:WaveEngine.Framework.Physics3D.PhysicBody3D`2.BodyDef
  name: BodyDef
  nameWithType: PhysicBody3D<T, K>.BodyDef
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.BodyDef
  nameWithType.vb: PhysicBody3D(Of T, K).BodyDef
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).BodyDef
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
  name: DefaultValues()
  nameWithType: PhysicBody3D<T, K>.DefaultValues()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.DefaultValues()
  nameWithType.vb: PhysicBody3D(Of T, K).DefaultValues()
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
    name: DefaultValues
    nameWithType: PhysicBody3D<T, K>.DefaultValues
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.DefaultValues
    name: DefaultValues
    nameWithType: PhysicBody3D(Of T, K).DefaultValues
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
  name: Initialize()
  nameWithType: PhysicBody3D<T, K>.Initialize()
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.Initialize()
  nameWithType.vb: PhysicBody3D(Of T, K).Initialize()
  fullName.vb: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).Initialize()
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
    name: Initialize
    nameWithType: PhysicBody3D<T, K>.Initialize
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D<T, K>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D`2.Initialize
    name: Initialize
    nameWithType: PhysicBody3D(Of T, K).Initialize
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D(Of T, K).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity
  name: LinearVelocity
  nameWithType: RigidBody3D.LinearVelocity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LinearVelocity
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity
  name: AngularVelocity
  nameWithType: RigidBody3D.AngularVelocity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.AngularVelocity
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor
  name: LinearFactor
  nameWithType: RigidBody3D.LinearFactor
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LinearFactor
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor
  name: AngularFactor
  nameWithType: RigidBody3D.AngularFactor
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.AngularFactor
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType
  name: PhysicBodyType
  nameWithType: RigidBody3D.PhysicBodyType
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.PhysicBodyType
- uid: WaveEngine.Common.Physics3D.RigidBodyType3D
  commentId: T:WaveEngine.Common.Physics3D.RigidBodyType3D
  parent: WaveEngine.Common.Physics3D
  name: RigidBodyType3D
  nameWithType: RigidBodyType3D
  fullName: WaveEngine.Common.Physics3D.RigidBodyType3D
- uid: WaveEngine.Common.Physics3D
  commentId: N:WaveEngine.Common.Physics3D
  name: WaveEngine.Common.Physics3D
  nameWithType: WaveEngine.Common.Physics3D
  fullName: WaveEngine.Common.Physics3D
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.Mass*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.Mass
  name: Mass
  nameWithType: RigidBody3D.Mass
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.Mass
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity
  name: OverrideGravity
  nameWithType: RigidBody3D.OverrideGravity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.OverrideGravity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.Gravity*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.Gravity
  name: Gravity
  nameWithType: RigidBody3D.Gravity
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.Gravity
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia
  name: LocalInertia
  nameWithType: RigidBody3D.LocalInertia
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LocalInertia
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping
  name: LinearDamping
  nameWithType: RigidBody3D.LinearDamping
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.LinearDamping
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping
  name: AngularDamping
  nameWithType: RigidBody3D.AngularDamping
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.AngularDamping
- uid: WaveEngine.Framework.Physics3D.RigidBody3D
  commentId: T:WaveEngine.Framework.Physics3D.RigidBody3D
  parent: WaveEngine.Framework.Physics3D
  name: RigidBody3D
  nameWithType: RigidBody3D
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.#ctor*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.#ctor
  name: RigidBody3D
  nameWithType: RigidBody3D.RigidBody3D
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.RigidBody3D
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues
  name: DefaultValues
  nameWithType: RigidBody3D.DefaultValues
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.DefaultValues
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp
  name: WakeUp
  nameWithType: RigidBody3D.WakeUp
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.WakeUp
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce
  name: ApplyForce
  nameWithType: RigidBody3D.ApplyForce
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForce
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque
  name: ApplyTorque
  nameWithType: RigidBody3D.ApplyTorque
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorque
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition
  name: ApplyForceAtPosition
  nameWithType: RigidBody3D.ApplyForceAtPosition
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyForceAtPosition
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse
  name: ApplyImpulse
  nameWithType: RigidBody3D.ApplyImpulse
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulse
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse
  name: ApplyTorqueImpulse
  nameWithType: RigidBody3D.ApplyTorqueImpulse
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyTorqueImpulse
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition
  name: ApplyImpulseAtPosition
  nameWithType: RigidBody3D.ApplyImpulseAtPosition
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ApplyImpulseAtPosition
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces
  name: ClearForces
  nameWithType: RigidBody3D.ClearForces
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.ClearForces
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Update(System.TimeSpan)
  commentId: M:WaveEngine.Framework.Physics3D.PhysicBody3D.Update(System.TimeSpan)
  parent: WaveEngine.Framework.Physics3D.PhysicBody3D
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: PhysicBody3D.Update(TimeSpan)
  fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Update(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Update(System.TimeSpan)
    name: Update
    nameWithType: PhysicBody3D.Update
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Physics3D.PhysicBody3D.Update(System.TimeSpan)
    name: Update
    nameWithType: PhysicBody3D.Update
    fullName: WaveEngine.Framework.Physics3D.PhysicBody3D.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics3D.RigidBody3D.Update*
  commentId: Overload:WaveEngine.Framework.Physics3D.RigidBody3D.Update
  name: Update
  nameWithType: RigidBody3D.Update
  fullName: WaveEngine.Framework.Physics3D.RigidBody3D.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
