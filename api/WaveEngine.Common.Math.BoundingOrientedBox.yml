### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.BoundingOrientedBox
  commentId: T:WaveEngine.Common.Math.BoundingOrientedBox
  id: BoundingOrientedBox
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.BoundingOrientedBox.#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Common.Math.BoundingOrientedBox.Center
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingBox@,WaveEngine.Common.Math.BoundingOrientedBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum,WaveEngine.Common.Math.BoundingOrientedBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingOrientedBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingSphere@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingSphere@,WaveEngine.Common.Math.BoundingOrientedBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum
  - WaveEngine.Common.Math.BoundingOrientedBox.CornerCount
  - WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox(WaveEngine.Common.Math.BoundingBox)
  - WaveEngine.Common.Math.BoundingOrientedBox.Equals(System.Object)
  - WaveEngine.Common.Math.BoundingOrientedBox.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  - WaveEngine.Common.Math.BoundingOrientedBox.GetCorners
  - WaveEngine.Common.Math.BoundingOrientedBox.GetCorners(WaveEngine.Common.Math.Vector3[],System.Int32)
  - WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode
  - WaveEngine.Common.Math.BoundingOrientedBox.HalfExtent
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum)
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum@,System.Boolean@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingOrientedBox@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingSphere@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.Plane@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.Ray@)
  - WaveEngine.Common.Math.BoundingOrientedBox.Maximum
  - WaveEngine.Common.Math.BoundingOrientedBox.Minimum
  - WaveEngine.Common.Math.BoundingOrientedBox.op_Equality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  - WaveEngine.Common.Math.BoundingOrientedBox.op_Inequality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  - WaveEngine.Common.Math.BoundingOrientedBox.Orientation
  - WaveEngine.Common.Math.BoundingOrientedBox.ToString
  - WaveEngine.Common.Math.BoundingOrientedBox.Transform(System.Single,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  langs:
  - csharp
  - vb
  name: BoundingOrientedBox
  nameWithType: BoundingOrientedBox
  fullName: WaveEngine.Common.Math.BoundingOrientedBox
  type: Struct
  source:
    id: BoundingOrientedBox
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 15
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBounding volume using an oriented bounding box.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct BoundingOrientedBox : IEquatable<BoundingOrientedBox>
    content.vb: >-
      <DataContract>

      Public Structure BoundingOrientedBox

          Implements IEquatable(Of BoundingOrientedBox)
  implements:
  - System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.BoundingOrientedBox.CornerCount
  commentId: F:WaveEngine.Common.Math.BoundingOrientedBox.CornerCount
  id: CornerCount
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: CornerCount
  nameWithType: BoundingOrientedBox.CornerCount
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.CornerCount
  type: Field
  source:
    id: CornerCount
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 21
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCorner count.\n"
  example: []
  syntax:
    content: public const int CornerCount = 8
    return:
      type: System.Int32
    content.vb: Public Const CornerCount As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Center
  commentId: F:WaveEngine.Common.Math.BoundingOrientedBox.Center
  id: Center
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: BoundingOrientedBox.Center
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Center
  type: Field
  source:
    id: Center
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 32
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBounding box center.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector3 Center
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: >-
      <DataMember>

      Public Center As Vector3
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.HalfExtent
  commentId: F:WaveEngine.Common.Math.BoundingOrientedBox.HalfExtent
  id: HalfExtent
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: HalfExtent
  nameWithType: BoundingOrientedBox.HalfExtent
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.HalfExtent
  type: Field
  source:
    id: HalfExtent
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 38
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBounding box half extents.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vector3 HalfExtent
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: >-
      <DataMember>

      Public HalfExtent As Vector3
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Orientation
  commentId: F:WaveEngine.Common.Math.BoundingOrientedBox.Orientation
  id: Orientation
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: BoundingOrientedBox.Orientation
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Orientation
  type: Field
  source:
    id: Orientation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 44
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBounding box orientation.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Quaternion Orientation
    return:
      type: WaveEngine.Common.Math.Quaternion
    content.vb: >-
      <DataMember>

      Public Orientation As Quaternion
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Minimum
  commentId: P:WaveEngine.Common.Math.BoundingOrientedBox.Minimum
  id: Minimum
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Minimum
  nameWithType: BoundingOrientedBox.Minimum
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Minimum
  type: Property
  source:
    id: Minimum
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 52
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the minimum.\n"
  example: []
  syntax:
    content: public Vector3 Minimum { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The minimum.
    content.vb: Public ReadOnly Property Minimum As Vector3
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Minimum*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Maximum
  commentId: P:WaveEngine.Common.Math.BoundingOrientedBox.Maximum
  id: Maximum
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Maximum
  nameWithType: BoundingOrientedBox.Maximum
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Maximum
  type: Property
  source:
    id: Maximum
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the maximum.\n"
  example: []
  syntax:
    content: public Vector3 Maximum { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The maximum.
    content.vb: Public ReadOnly Property Maximum As Vector3
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Maximum*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.BoundingOrientedBox.#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  id: '#ctor(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)'
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: BoundingOrientedBox(Vector3, Vector3, Quaternion)
  nameWithType: BoundingOrientedBox.BoundingOrientedBox(Vector3, Vector3, Quaternion)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.BoundingOrientedBox(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 81
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.BoundingOrientedBox\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public BoundingOrientedBox(Vector3 center, Vector3 halfExtents, Quaternion orientation)
    parameters:
    - id: center
      type: WaveEngine.Common.Math.Vector3
      description: The center.
    - id: halfExtents
      type: WaveEngine.Common.Math.Vector3
      description: The half extents.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: The orientation.
    content.vb: Public Sub New(center As Vector3, halfExtents As Vector3, orientation As Quaternion)
  overload: WaveEngine.Common.Math.BoundingOrientedBox.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox(WaveEngine.Common.Math.BoundingBox)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox(WaveEngine.Common.Math.BoundingBox)
  id: CreateFromBoundingBox(WaveEngine.Common.Math.BoundingBox)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: CreateFromBoundingBox(BoundingBox)
  nameWithType: BoundingOrientedBox.CreateFromBoundingBox(BoundingBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox(WaveEngine.Common.Math.BoundingBox)
  type: Method
  source:
    id: CreateFromBoundingBox
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 95
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreate an oriented box from an axis-aligned box.\n"
  example: []
  syntax:
    content: public static BoundingOrientedBox CreateFromBoundingBox(BoundingBox box)
    parameters:
    - id: box
      type: WaveEngine.Common.Math.BoundingBox
      description: The box.
    return:
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: "\nThe result.\n"
    content.vb: Public Shared Function CreateFromBoundingBox(box As BoundingBox) As BoundingOrientedBox
  overload: WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: Transform(WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Transform(Quaternion, Vector3)
  nameWithType: BoundingOrientedBox.Transform(Quaternion, Vector3)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 112
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransform the given bounding box by a rotation around the origin followed by a translation\n"
  example: []
  syntax:
    content: public BoundingOrientedBox Transform(Quaternion rotation, Vector3 translation)
    parameters:
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: Rotation quaternion.
    - id: translation
      type: WaveEngine.Common.Math.Vector3
      description: Tranlation vector.
    return:
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: A new bounding box, transformed relative to this one
    content.vb: Public Function Transform(rotation As Quaternion, translation As Vector3) As BoundingOrientedBox
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Transform(System.Single,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Transform(System.Single,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: Transform(System.Single,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Transform(Single, Quaternion, Vector3)
  nameWithType: BoundingOrientedBox.Transform(Single, Quaternion, Vector3)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Transform(System.Single, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 130
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransform the given bounding box by a uniform scale and rotation around the origin followed\nby a translation\n"
  example: []
  syntax:
    content: public BoundingOrientedBox Transform(float scale, Quaternion rotation, Vector3 translation)
    parameters:
    - id: scale
      type: System.Single
      description: The scale.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    - id: translation
      type: WaveEngine.Common.Math.Vector3
      description: The translation.
    return:
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: "\nA new bounding box, transformed relative to this one\n"
    content.vb: Public Function Transform(scale As Single, rotation As Quaternion, translation As Vector3) As BoundingOrientedBox
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Quaternion, Vector3)
  nameWithType: BoundingOrientedBox.Transform(Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 148
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransform the given bounding box by a uniform scale and rotation around the origin followed\nby a translation\n"
  example: []
  syntax:
    content: public BoundingOrientedBox Transform(Vector3 scale, Quaternion rotation, Vector3 translation)
    parameters:
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: The scale.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    - id: translation
      type: WaveEngine.Common.Math.Vector3
      description: The translation.
    return:
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: "\nA new bounding box, transformed relative to this one\n"
    content.vb: Public Function Transform(scale As Vector3, rotation As Quaternion, translation As Vector3) As BoundingOrientedBox
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Matrix)
  id: Transform(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Transform(Matrix)
  nameWithType: BoundingOrientedBox.Transform(Matrix)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Transform(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 160
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransform this Bounding box\n"
  example: []
  syntax:
    content: public void Transform(Matrix world)
    parameters:
    - id: world
      type: WaveEngine.Common.Math.Matrix
      description: The world matrix
    content.vb: Public Sub Transform(world As Matrix)
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  id: Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Equals(BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Equals(BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 178
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(BoundingOrientedBox other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(other As BoundingOrientedBox) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Equals(System.Object)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BoundingOrientedBox.Equals(Object)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 190
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BoundingOrientedBox.GetHashCode()
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 209
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.BoundingOrientedBox.op_Equality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.op_Equality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  id: op_Equality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Equality(BoundingOrientedBox, BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Equality(BoundingOrientedBox, BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Equality(WaveEngine.Common.Math.BoundingOrientedBox, WaveEngine.Common.Math.BoundingOrientedBox)
  type: Operator
  source:
    id: op_Equality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 222
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator ==.\n"
  example: []
  syntax:
    content: public static bool operator ==(BoundingOrientedBox a, BoundingOrientedBox b)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The a.
    - id: b
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The b.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator =(a As BoundingOrientedBox, b As BoundingOrientedBox) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.BoundingOrientedBox.op_Inequality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.op_Inequality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  id: op_Inequality(WaveEngine.Common.Math.BoundingOrientedBox,WaveEngine.Common.Math.BoundingOrientedBox)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Inequality(BoundingOrientedBox, BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Inequality(BoundingOrientedBox, BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Inequality(WaveEngine.Common.Math.BoundingOrientedBox, WaveEngine.Common.Math.BoundingOrientedBox)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 235
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator !=.\n"
  example: []
  syntax:
    content: public static bool operator !=(BoundingOrientedBox a, BoundingOrientedBox b)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: First bounding box.
    - id: b
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: Second bounding box..
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator <>(a As BoundingOrientedBox, b As BoundingOrientedBox) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.BoundingOrientedBox.ToString
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.ToString
  id: ToString
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BoundingOrientedBox.ToString()
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 246
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: WaveEngine.Common.Math.BoundingOrientedBox.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingBox@)
  id: Intersects(WaveEngine.Common.Math.BoundingBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(ref BoundingBox)
  nameWithType: BoundingOrientedBox.Intersects(ref BoundingBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ref WaveEngine.Common.Math.BoundingBox)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 260
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine if box A intersects box B.\n"
  example: []
  syntax:
    content: public bool Intersects(ref BoundingBox box)
    parameters:
    - id: box
      type: WaveEngine.Common.Math.BoundingBox
      description: The box.
    return:
      type: System.Boolean
      description: "\nThe result.\n"
    content.vb: Public Function Intersects(ByRef box As BoundingBox) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  nameWithType.vb: BoundingOrientedBox.Intersects(ByRef BoundingBox)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ByRef WaveEngine.Common.Math.BoundingBox)
  name.vb: Intersects(ByRef BoundingBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingBox@)
  id: Contains(WaveEngine.Common.Math.BoundingBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingBox)
  nameWithType: BoundingOrientedBox.Contains(ref BoundingBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ref WaveEngine.Common.Math.BoundingBox)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 278
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine if this box contains, intersects, or is disjoint from the given BoundingBox.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(ref BoundingBox box)
    parameters:
    - id: box
      type: WaveEngine.Common.Math.BoundingBox
      description: The box.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Function Contains(ByRef box As BoundingBox) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(ByRef BoundingBox)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ByRef WaveEngine.Common.Math.BoundingBox)
  name.vb: Contains(ByRef BoundingBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingBox@,WaveEngine.Common.Math.BoundingOrientedBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingBox@,WaveEngine.Common.Math.BoundingOrientedBox@)
  id: Contains(WaveEngine.Common.Math.BoundingBox@,WaveEngine.Common.Math.BoundingOrientedBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingBox, ref BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Contains(ref BoundingBox, ref BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ref WaveEngine.Common.Math.BoundingBox, ref WaveEngine.Common.Math.BoundingOrientedBox)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 301
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine if box A contains, intersects, or is disjoint from box B.\n"
  example: []
  syntax:
    content: public static ContainmentType Contains(ref BoundingBox boxA, ref BoundingOrientedBox oboxB)
    parameters:
    - id: boxA
      type: WaveEngine.Common.Math.BoundingBox
      description: The box A.
    - id: oboxB
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The obox B.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Shared Function Contains(ByRef boxA As BoundingBox, ByRef oboxB As BoundingOrientedBox) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(ByRef BoundingBox, ByRef BoundingOrientedBox)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ByRef WaveEngine.Common.Math.BoundingBox, ByRef WaveEngine.Common.Math.BoundingOrientedBox)
  name.vb: Contains(ByRef BoundingBox, ByRef BoundingOrientedBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingOrientedBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingOrientedBox@)
  id: Intersects(WaveEngine.Common.Math.BoundingOrientedBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(ref BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Intersects(ref BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ref WaveEngine.Common.Math.BoundingOrientedBox)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 318
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns true if this box intersects the given other box.\n"
  example: []
  syntax:
    content: public bool Intersects(ref BoundingOrientedBox other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The other.
    return:
      type: System.Boolean
      description: "\nThe result.\n"
    content.vb: Public Function Intersects(ByRef other As BoundingOrientedBox) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  nameWithType.vb: BoundingOrientedBox.Intersects(ByRef BoundingOrientedBox)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ByRef WaveEngine.Common.Math.BoundingOrientedBox)
  name.vb: Intersects(ByRef BoundingOrientedBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingOrientedBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingOrientedBox@)
  id: Contains(WaveEngine.Common.Math.BoundingOrientedBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Contains(ref BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ref WaveEngine.Common.Math.BoundingOrientedBox)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 331
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine whether this box contains, intersects, or is disjoint from\nthe given other box.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(ref BoundingOrientedBox other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The other.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Function Contains(ByRef other As BoundingOrientedBox) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(ByRef BoundingOrientedBox)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ByRef WaveEngine.Common.Math.BoundingOrientedBox)
  name.vb: Contains(ByRef BoundingOrientedBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum)
  id: Contains(WaveEngine.Common.Math.BoundingFrustum)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(BoundingFrustum)
  nameWithType: BoundingOrientedBox.Contains(BoundingFrustum)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 353
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine whether this box contains, intersects, or is disjoint from\nthe given frustum.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(BoundingFrustum frustum)
    parameters:
    - id: frustum
      type: WaveEngine.Common.Math.BoundingFrustum
      description: The frustum.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Function Contains(frustum As BoundingFrustum) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum)
  id: Intersects(WaveEngine.Common.Math.BoundingFrustum)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(BoundingFrustum)
  nameWithType: BoundingOrientedBox.Intersects(BoundingFrustum)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 370
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns true if this box intersects the given frustum.\n"
  example: []
  syntax:
    content: public bool Intersects(BoundingFrustum frustum)
    parameters:
    - id: frustum
      type: WaveEngine.Common.Math.BoundingFrustum
      description: The frustum.
    return:
      type: System.Boolean
      description: "\nThe result.\n"
    content.vb: Public Function Intersects(frustum As BoundingFrustum) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum@,System.Boolean@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingFrustum@,System.Boolean@)
  id: Intersects(WaveEngine.Common.Math.BoundingFrustum@,System.Boolean@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(ref BoundingFrustum, out Boolean)
  nameWithType: BoundingOrientedBox.Intersects(ref BoundingFrustum, out Boolean)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ref WaveEngine.Common.Math.BoundingFrustum, out System.Boolean)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 380
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns true if this box intersects the given frustum.\n"
  example: []
  syntax:
    content: public void Intersects(ref BoundingFrustum frustum, out bool result)
    parameters:
    - id: frustum
      type: WaveEngine.Common.Math.BoundingFrustum
      description: The frustum.
    - id: result
      type: System.Boolean
      description: if set to <code>true</code> [result].
    content.vb: Public Sub Intersects(ByRef frustum As BoundingFrustum, ByRef result As Boolean)
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  nameWithType.vb: BoundingOrientedBox.Intersects(ByRef BoundingFrustum, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ByRef WaveEngine.Common.Math.BoundingFrustum, ByRef System.Boolean)
  name.vb: Intersects(ByRef BoundingFrustum, ByRef Boolean)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum,WaveEngine.Common.Math.BoundingOrientedBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum,WaveEngine.Common.Math.BoundingOrientedBox@)
  id: Contains(WaveEngine.Common.Math.BoundingFrustum,WaveEngine.Common.Math.BoundingOrientedBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(BoundingFrustum, ref BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Contains(BoundingFrustum, ref BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum, ref WaveEngine.Common.Math.BoundingOrientedBox)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 394
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine whether the given frustum contains, intersects, or is disjoint from\nthe given oriented box.\n"
  example: []
  syntax:
    content: public static ContainmentType Contains(BoundingFrustum frustum, ref BoundingOrientedBox obox)
    parameters:
    - id: frustum
      type: WaveEngine.Common.Math.BoundingFrustum
      description: The frustum.
    - id: obox
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The obox.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Shared Function Contains(frustum As BoundingFrustum, ByRef obox As BoundingOrientedBox) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(BoundingFrustum, ByRef BoundingOrientedBox)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingFrustum, ByRef WaveEngine.Common.Math.BoundingOrientedBox)
  name.vb: Contains(BoundingFrustum, ByRef BoundingOrientedBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingSphere@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingSphere@)
  id: Contains(WaveEngine.Common.Math.BoundingSphere@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingSphere)
  nameWithType: BoundingOrientedBox.Contains(ref BoundingSphere)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ref WaveEngine.Common.Math.BoundingSphere)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 406
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTest whether this box contains, intersects, or is disjoint from the given sphere\n"
  example: []
  syntax:
    content: public ContainmentType Contains(ref BoundingSphere sphere)
    parameters:
    - id: sphere
      type: WaveEngine.Common.Math.BoundingSphere
      description: The sphere.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Function Contains(ByRef sphere As BoundingSphere) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(ByRef BoundingSphere)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ByRef WaveEngine.Common.Math.BoundingSphere)
  name.vb: Contains(ByRef BoundingSphere)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingSphere@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.BoundingSphere@)
  id: Intersects(WaveEngine.Common.Math.BoundingSphere@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(ref BoundingSphere)
  nameWithType: BoundingOrientedBox.Intersects(ref BoundingSphere)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ref WaveEngine.Common.Math.BoundingSphere)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 444
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTest whether this box intersects the given sphere\n"
  example: []
  syntax:
    content: public bool Intersects(ref BoundingSphere sphere)
    parameters:
    - id: sphere
      type: WaveEngine.Common.Math.BoundingSphere
      description: The sphere.
    return:
      type: System.Boolean
      description: "\nThe result.\n"
    content.vb: Public Function Intersects(ByRef sphere As BoundingSphere) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  nameWithType.vb: BoundingOrientedBox.Intersects(ByRef BoundingSphere)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ByRef WaveEngine.Common.Math.BoundingSphere)
  name.vb: Intersects(ByRef BoundingSphere)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingSphere@,WaveEngine.Common.Math.BoundingOrientedBox@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.BoundingSphere@,WaveEngine.Common.Math.BoundingOrientedBox@)
  id: Contains(WaveEngine.Common.Math.BoundingSphere@,WaveEngine.Common.Math.BoundingOrientedBox@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingSphere, ref BoundingOrientedBox)
  nameWithType: BoundingOrientedBox.Contains(ref BoundingSphere, ref BoundingOrientedBox)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ref WaveEngine.Common.Math.BoundingSphere, ref WaveEngine.Common.Math.BoundingOrientedBox)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 472
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTest whether a BoundingSphere contains, intersects, or is disjoint from a BoundingOrientedBox\n"
  example: []
  syntax:
    content: public static ContainmentType Contains(ref BoundingSphere sphere, ref BoundingOrientedBox box)
    parameters:
    - id: sphere
      type: WaveEngine.Common.Math.BoundingSphere
      description: The sphere.
    - id: box
      type: WaveEngine.Common.Math.BoundingOrientedBox
      description: The box.
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nThe result.\n"
    content.vb: Public Shared Function Contains(ByRef sphere As BoundingSphere, ByRef box As BoundingOrientedBox) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(ByRef BoundingSphere, ByRef BoundingOrientedBox)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ByRef WaveEngine.Common.Math.BoundingSphere, ByRef WaveEngine.Common.Math.BoundingOrientedBox)
  name.vb: Contains(ByRef BoundingSphere, ByRef BoundingOrientedBox)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Contains(WaveEngine.Common.Math.Vector3@)
  id: Contains(WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Contains(ref Vector3)
  nameWithType: BoundingOrientedBox.Contains(ref Vector3)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 511
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns true if this box contains the given point.\n"
  example: []
  syntax:
    content: public bool Contains(ref Vector3 point)
    parameters:
    - id: point
      type: WaveEngine.Common.Math.Vector3
      description: The point.
    return:
      type: System.Boolean
      description: "\nThe result.\n"
    content.vb: Public Function Contains(ByRef point As Vector3) As Boolean
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  nameWithType.vb: BoundingOrientedBox.Contains(ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Contains(ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Contains(ByRef Vector3)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.Ray@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.Ray@)
  id: Intersects(WaveEngine.Common.Math.Ray@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(ref Ray)
  nameWithType: BoundingOrientedBox.Intersects(ref Ray)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ref WaveEngine.Common.Math.Ray)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 532
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine whether the given ray intersects this box. If so, returns\nthe parametric value of the point of first intersection; otherwise\nreturns null.\n"
  example: []
  syntax:
    content: public float? Intersects(ref Ray ray)
    parameters:
    - id: ray
      type: WaveEngine.Common.Math.Ray
      description: The ray.
    return:
      type: System.Nullable{System.Single}
      description: "\nThe result.\n"
    content.vb: Public Function Intersects(ByRef ray As Ray) As Single?
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  nameWithType.vb: BoundingOrientedBox.Intersects(ByRef Ray)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ByRef WaveEngine.Common.Math.Ray)
  name.vb: Intersects(ByRef Ray)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.Plane@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.Intersects(WaveEngine.Common.Math.Plane@)
  id: Intersects(WaveEngine.Common.Math.Plane@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: Intersects(ref Plane)
  nameWithType: BoundingOrientedBox.Intersects(ref Plane)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ref WaveEngine.Common.Math.Plane)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 645
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClassify this bounding box as entirely in front of, in back of, or\nintersecting the given plane.\n"
  example: []
  syntax:
    content: public PlaneIntersectionType Intersects(ref Plane plane)
    parameters:
    - id: plane
      type: WaveEngine.Common.Math.Plane
      description: The plane.
    return:
      type: WaveEngine.Common.Math.PlaneIntersectionType
      description: "\nThe result.\n"
    content.vb: Public Function Intersects(ByRef plane As Plane) As PlaneIntersectionType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  nameWithType.vb: BoundingOrientedBox.Intersects(ByRef Plane)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.Intersects(ByRef WaveEngine.Common.Math.Plane)
  name.vb: Intersects(ByRef Plane)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.GetCorners
  id: GetCorners
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: GetCorners()
  nameWithType: BoundingOrientedBox.GetCorners()
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners()
  type: Method
  source:
    id: GetCorners
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 687
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturn the 8 corner positions of this bounding box.\n<p>\n    ZMax    ZMin\n   0----1  4----5\n   |    |  |    |\n   |    |  |    |\n   3----2  7----6\n</p>\nThe ordering of indices is a little strange to match what BoundingBox.GetCorners() does.\n"
  example: []
  syntax:
    content: public Vector3[] GetCorners()
    return:
      type: WaveEngine.Common.Math.Vector3[]
      description: The result.
    content.vb: Public Function GetCorners As Vector3()
  overload: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners(WaveEngine.Common.Math.Vector3[],System.Int32)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.GetCorners(WaveEngine.Common.Math.Vector3[],System.Int32)
  id: GetCorners(WaveEngine.Common.Math.Vector3[],System.Int32)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: GetCorners(Vector3[], Int32)
  nameWithType: BoundingOrientedBox.GetCorners(Vector3[], Int32)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners(WaveEngine.Common.Math.Vector3[], System.Int32)
  type: Method
  source:
    id: GetCorners
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 707
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturn the 8 corner positions of this bounding box.\n<p>\n    ZMax    ZMin\n   0----1  4----5\n   |    |  |    |\n   |    |  |    |\n   3----2  7----6\n</p>\nThe ordering of indices is a little strange to match what BoundingBox.GetCorners() does.\n"
  example: []
  syntax:
    content: public void GetCorners(Vector3[] corners, int startIndex)
    parameters:
    - id: corners
      type: WaveEngine.Common.Math.Vector3[]
      description: Array to fill with the eight corner positions
    - id: startIndex
      type: System.Int32
      description: Index within corners array to start writing positions
    content.vb: Public Sub GetCorners(corners As Vector3(), startIndex As Integer)
  overload: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners*
  nameWithType.vb: BoundingOrientedBox.GetCorners(Vector3(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners(WaveEngine.Common.Math.Vector3(), System.Int32)
  name.vb: GetCorners(Vector3(), Int32)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: ContainsRelativeBox(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: ContainsRelativeBox(ref Vector3, ref Vector3, ref Matrix)
  nameWithType: BoundingOrientedBox.ContainsRelativeBox(ref Vector3, ref Vector3, ref Matrix)
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: ContainsRelativeBox
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 738
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermine whether the box described by half-extents hA, axis-aligned and centered at the origin, contains\nthe box described by half-extents hB, whose position and orientation are given by the transform matrix mB.\nThe matrix is assumed to contain only rigid motion; if it contains scaling or perpsective the result of\nthis method will be incorrect.\n"
  example: []
  syntax:
    content: public static ContainmentType ContainsRelativeBox(ref Vector3 hA, ref Vector3 hB, ref Matrix mB)
    parameters:
    - id: hA
      type: WaveEngine.Common.Math.Vector3
      description: Half-extents of first box
    - id: hB
      type: WaveEngine.Common.Math.Vector3
      description: Half-extents of second box
    - id: mB
      type: WaveEngine.Common.Math.Matrix
      description: Position and orientation of second box relative to first box
    return:
      type: WaveEngine.Common.Math.ContainmentType
      description: "\nContainmentType enum indicating whether the boxes are disjoin, intersecting, or\nwhether box A contains box B.\n"
    content.vb: Public Shared Function ContainsRelativeBox(ByRef hA As Vector3, ByRef hB As Vector3, ByRef mB As Matrix) As ContainmentType
  overload: WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox*
  nameWithType.vb: BoundingOrientedBox.ContainsRelativeBox(ByRef Vector3, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: ContainsRelativeBox(ByRef Vector3, ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum
  commentId: M:WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum
  id: ConvertToFrustum
  parent: WaveEngine.Common.Math.BoundingOrientedBox
  langs:
  - csharp
  - vb
  name: ConvertToFrustum()
  nameWithType: BoundingOrientedBox.ConvertToFrustum()
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum()
  type: Method
  source:
    id: ConvertToFrustum
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\BoundingOrientedBox.cs
    startLine: 894
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConvert this BoundingOrientedBox to a BoundingFrustum describing the same volume.\nA BoundingFrustum is defined by the matrix that carries its volume to the\nbox from (-1,-1,0) to (1,1,1), so we just need a matrix that carries our box there.\n"
  example: []
  syntax:
    content: public BoundingFrustum ConvertToFrustum()
    return:
      type: WaveEngine.Common.Math.BoundingFrustum
      description: "\nThe result.\n"
    content.vb: Public Function ConvertToFrustum As BoundingFrustum
  overload: WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}
  commentId: T:System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BoundingOrientedBox>
  nameWithType: IEquatable<BoundingOrientedBox>
  fullName: System.IEquatable<WaveEngine.Common.Math.BoundingOrientedBox>
  nameWithType.vb: IEquatable(Of BoundingOrientedBox)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.BoundingOrientedBox)
  name.vb: IEquatable(Of BoundingOrientedBox)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.BoundingOrientedBox
    name: BoundingOrientedBox
    nameWithType: BoundingOrientedBox
    fullName: WaveEngine.Common.Math.BoundingOrientedBox
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.BoundingOrientedBox
    name: BoundingOrientedBox
    nameWithType: BoundingOrientedBox
    fullName: WaveEngine.Common.Math.BoundingOrientedBox
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Minimum*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.Minimum
  name: Minimum
  nameWithType: BoundingOrientedBox.Minimum
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Minimum
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Maximum*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.Maximum
  name: Maximum
  nameWithType: BoundingOrientedBox.Maximum
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Maximum
- uid: WaveEngine.Common.Math.BoundingOrientedBox
  commentId: T:WaveEngine.Common.Math.BoundingOrientedBox
  parent: WaveEngine.Common.Math
  name: BoundingOrientedBox
  nameWithType: BoundingOrientedBox
  fullName: WaveEngine.Common.Math.BoundingOrientedBox
- uid: WaveEngine.Common.Math.BoundingOrientedBox.#ctor*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.#ctor
  name: BoundingOrientedBox
  nameWithType: BoundingOrientedBox.BoundingOrientedBox
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.BoundingOrientedBox
- uid: WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox
  name: CreateFromBoundingBox
  nameWithType: BoundingOrientedBox.CreateFromBoundingBox
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.CreateFromBoundingBox
- uid: WaveEngine.Common.Math.BoundingBox
  commentId: T:WaveEngine.Common.Math.BoundingBox
  parent: WaveEngine.Common.Math
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: WaveEngine.Common.Math.BoundingBox
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Transform*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.Transform
  name: Transform
  nameWithType: BoundingOrientedBox.Transform
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Transform
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Equals*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.Equals
  name: Equals
  nameWithType: BoundingOrientedBox.Equals
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Equals
- uid: System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  commentId: M:System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  parent: System.IEquatable{WaveEngine.Common.Math.BoundingOrientedBox}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BoundingOrientedBox)
  nameWithType: IEquatable<BoundingOrientedBox>.Equals(BoundingOrientedBox)
  fullName: System.IEquatable<WaveEngine.Common.Math.BoundingOrientedBox>.Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  nameWithType.vb: IEquatable(Of BoundingOrientedBox).Equals(BoundingOrientedBox)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.BoundingOrientedBox).Equals(WaveEngine.Common.Math.BoundingOrientedBox)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BoundingOrientedBox>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Math.BoundingOrientedBox>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.BoundingOrientedBox
    name: BoundingOrientedBox
    nameWithType: BoundingOrientedBox
    fullName: WaveEngine.Common.Math.BoundingOrientedBox
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BoundingOrientedBox).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Math.BoundingOrientedBox).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.BoundingOrientedBox
    name: BoundingOrientedBox
    nameWithType: BoundingOrientedBox
    fullName: WaveEngine.Common.Math.BoundingOrientedBox
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode
  name: GetHashCode
  nameWithType: BoundingOrientedBox.GetHashCode
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.GetHashCode
- uid: WaveEngine.Common.Math.BoundingOrientedBox.op_Equality*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.op_Equality
  name: Equality
  nameWithType: BoundingOrientedBox.Equality
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Equality
- uid: WaveEngine.Common.Math.BoundingOrientedBox.op_Inequality*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.op_Inequality
  name: Inequality
  nameWithType: BoundingOrientedBox.Inequality
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Inequality
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.BoundingOrientedBox.ToString*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.ToString
  name: ToString
  nameWithType: BoundingOrientedBox.ToString
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.ToString
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Intersects*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.Intersects
  name: Intersects
  nameWithType: BoundingOrientedBox.Intersects
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Intersects
- uid: WaveEngine.Common.Math.BoundingOrientedBox.Contains*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.Contains
  name: Contains
  nameWithType: BoundingOrientedBox.Contains
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.Contains
- uid: WaveEngine.Common.Math.ContainmentType
  commentId: T:WaveEngine.Common.Math.ContainmentType
  parent: WaveEngine.Common.Math
  name: ContainmentType
  nameWithType: ContainmentType
  fullName: WaveEngine.Common.Math.ContainmentType
- uid: WaveEngine.Common.Math.BoundingFrustum
  commentId: T:WaveEngine.Common.Math.BoundingFrustum
  parent: WaveEngine.Common.Math
  name: BoundingFrustum
  nameWithType: BoundingFrustum
  fullName: WaveEngine.Common.Math.BoundingFrustum
- uid: WaveEngine.Common.Math.BoundingSphere
  commentId: T:WaveEngine.Common.Math.BoundingSphere
  parent: WaveEngine.Common.Math
  name: BoundingSphere
  nameWithType: BoundingSphere
  fullName: WaveEngine.Common.Math.BoundingSphere
- uid: WaveEngine.Common.Math.Ray
  commentId: T:WaveEngine.Common.Math.Ray
  parent: WaveEngine.Common.Math
  name: Ray
  nameWithType: Ray
  fullName: WaveEngine.Common.Math.Ray
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Plane
  commentId: T:WaveEngine.Common.Math.Plane
  parent: WaveEngine.Common.Math
  name: Plane
  nameWithType: Plane
  fullName: WaveEngine.Common.Math.Plane
- uid: WaveEngine.Common.Math.PlaneIntersectionType
  commentId: T:WaveEngine.Common.Math.PlaneIntersectionType
  parent: WaveEngine.Common.Math
  name: PlaneIntersectionType
  nameWithType: PlaneIntersectionType
  fullName: WaveEngine.Common.Math.PlaneIntersectionType
- uid: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.GetCorners
  name: GetCorners
  nameWithType: BoundingOrientedBox.GetCorners
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.GetCorners
- uid: WaveEngine.Common.Math.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: WaveEngine.Common.Math.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: WaveEngine.Common.Math.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox
  name: ContainsRelativeBox
  nameWithType: BoundingOrientedBox.ContainsRelativeBox
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.ContainsRelativeBox
- uid: WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum*
  commentId: Overload:WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum
  name: ConvertToFrustum
  nameWithType: BoundingOrientedBox.ConvertToFrustum
  fullName: WaveEngine.Common.Math.BoundingOrientedBox.ConvertToFrustum
