### YamlMime:ManagedReference
items:
- uid: WaveEngine.Components.GameActions.GameActionSet
  commentId: T:WaveEngine.Components.GameActions.GameActionSet
  id: GameActionSet
  parent: WaveEngine.Components.GameActions
  children:
  - WaveEngine.Components.GameActions.GameActionSet.#ctor(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}},WaveEngine.Framework.Scene)
  - WaveEngine.Components.GameActions.GameActionSet.#ctor(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction},WaveEngine.Framework.Scene)
  - WaveEngine.Components.GameActions.GameActionSet.#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  - WaveEngine.Components.GameActions.GameActionSet.#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Components.GameActions.GameActionSet.WaitAll
  - WaveEngine.Components.GameActions.GameActionSet.WaitAny
  - WaveEngine.Components.GameActions.GameActionSet.WaitCount(System.Int32)
  - WaveEngine.Components.GameActions.GameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  langs:
  - csharp
  - vb
  name: GameActionSet
  nameWithType: GameActionSet
  fullName: WaveEngine.Components.GameActions.GameActionSet
  type: Class
  source:
    id: GameActionSet
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 20
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nRepresent a Set of Game Actions\n"
  example: []
  syntax:
    content: 'public class GameActionSet : IGameActionSet'
    content.vb: >-
      Public Class GameActionSet

          Implements IGameActionSet
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Components.GameActions.IGameActionSet
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Components.GameActions.GameActionSet.#ctor(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction},WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.#ctor(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction},WaveEngine.Framework.Scene)
  id: '#ctor(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction},WaveEngine.Framework.Scene)'
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: GameActionSet(IEnumerable<IGameAction>, Scene)
  nameWithType: GameActionSet.GameActionSet(IEnumerable<IGameAction>, Scene)
  fullName: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>, WaveEngine.Framework.Scene)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 49
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Components.GameActions.GameActionSet\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public GameActionSet(IEnumerable<IGameAction> actions, Scene scene = null)
    parameters:
    - id: actions
      type: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
      description: The action list.
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The associated scene.
    content.vb: Public Sub New(actions As IEnumerable(Of IGameAction), scene As Scene = Nothing)
  overload: WaveEngine.Components.GameActions.GameActionSet.#ctor*
  nameWithType.vb: GameActionSet.GameActionSet(IEnumerable(Of IGameAction), Scene)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction), WaveEngine.Framework.Scene)
  name.vb: GameActionSet(IEnumerable(Of IGameAction), Scene)
- uid: WaveEngine.Components.GameActions.GameActionSet.#ctor(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}},WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.#ctor(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}},WaveEngine.Framework.Scene)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}},WaveEngine.Framework.Scene)'
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: GameActionSet(IEnumerable<Func<IGameAction>>, Scene)
  nameWithType: GameActionSet.GameActionSet(IEnumerable<Func<IGameAction>>, Scene)
  fullName: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>, WaveEngine.Framework.Scene)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 60
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Components.GameActions.GameActionSet\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public GameActionSet(IEnumerable<Func<IGameAction>> actionGenerators, Scene scene = null)
    parameters:
    - id: actionGenerators
      type: System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
      description: The action list.
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The associated scene.
    content.vb: Public Sub New(actionGenerators As IEnumerable(Of Func(Of IGameAction)), scene As Scene = Nothing)
  overload: WaveEngine.Components.GameActions.GameActionSet.#ctor*
  nameWithType.vb: GameActionSet.GameActionSet(IEnumerable(Of Func(Of IGameAction)), Scene)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction)), WaveEngine.Framework.Scene)
  name.vb: GameActionSet(IEnumerable(Of Func(Of IGameAction)), Scene)
- uid: WaveEngine.Components.GameActions.GameActionSet.#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  id: '#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})'
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: GameActionSet(IGameAction, IEnumerable<IGameAction>)
  nameWithType: GameActionSet.GameActionSet(IGameAction, IEnumerable<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 71
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Components.GameActions.GameActionSet\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public GameActionSet(IGameAction parent, IEnumerable<IGameAction> actions)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: actions
      type: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
      description: The action list.
    content.vb: Public Sub New(parent As IGameAction, actions As IEnumerable(Of IGameAction))
  overload: WaveEngine.Components.GameActions.GameActionSet.#ctor*
  nameWithType.vb: GameActionSet.GameActionSet(IGameAction, IEnumerable(Of IGameAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: GameActionSet(IGameAction, IEnumerable(Of IGameAction))
- uid: WaveEngine.Components.GameActions.GameActionSet.#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  id: '#ctor(WaveEngine.Framework.Services.IGameAction,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})'
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: GameActionSet(IGameAction, IEnumerable<Func<IGameAction>>)
  nameWithType: GameActionSet.GameActionSet(IGameAction, IEnumerable<Func<IGameAction>>)
  fullName: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 82
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Components.GameActions.GameActionSet\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public GameActionSet(IGameAction parent, IEnumerable<Func<IGameAction>> actionGenerators)
    parameters:
    - id: parent
      type: WaveEngine.Framework.Services.IGameAction
      description: The parent action.
    - id: actionGenerators
      type: System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
      description: The action list.
    content.vb: Public Sub New(parent As IGameAction, actionGenerators As IEnumerable(Of Func(Of IGameAction)))
  overload: WaveEngine.Components.GameActions.GameActionSet.#ctor*
  nameWithType.vb: GameActionSet.GameActionSet(IGameAction, IEnumerable(Of Func(Of IGameAction)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Components.GameActions.GameActionSet.GameActionSet(WaveEngine.Framework.Services.IGameAction, System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction)))
  name.vb: GameActionSet(IGameAction, IEnumerable(Of Func(Of IGameAction)))
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitAll
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.WaitAll
  id: WaitAll
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: WaitAll()
  nameWithType: GameActionSet.WaitAll()
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitAll()
  type: Method
  source:
    id: WaitAll
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 95
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nReturn an action that will be completed when all actions has been completed.\n"
  example: []
  syntax:
    content: public IGameAction WaitAll()
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The task.
    content.vb: Public Function WaitAll As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionSet.WaitAll*
  implements:
  - WaveEngine.Components.GameActions.IGameActionSet.WaitAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitAny
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.WaitAny
  id: WaitAny
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: WaitAny()
  nameWithType: GameActionSet.WaitAny()
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitAny()
  type: Method
  source:
    id: WaitAny
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 105
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nReturn an action that will be completed when any actions has been completed.\n"
  example: []
  syntax:
    content: public IGameAction WaitAny()
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The task.
    content.vb: Public Function WaitAny As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionSet.WaitAny*
  implements:
  - WaveEngine.Components.GameActions.IGameActionSet.WaitAny
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitCount(System.Int32)
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.WaitCount(System.Int32)
  id: WaitCount(System.Int32)
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: WaitCount(Int32)
  nameWithType: GameActionSet.WaitCount(Int32)
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitCount(System.Int32)
  type: Method
  source:
    id: WaitCount
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 115
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nReturn an action that will be completed when all actions has been completed.\n"
  example: []
  syntax:
    content: public IGameAction WaitCount(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The count limit
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The task.
    content.vb: Public Function WaitCount(count As Integer) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionSet.WaitCount*
  implements:
  - WaveEngine.Components.GameActions.IGameActionSet.WaitCount(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  commentId: M:WaveEngine.Components.GameActions.GameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  id: WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  parent: WaveEngine.Components.GameActions.GameActionSet
  langs:
  - csharp
  - vb
  name: WaitPredicate(Func<Boolean, IGameAction[]>)
  nameWithType: GameActionSet.WaitPredicate(Func<Boolean, IGameAction[]>)
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitPredicate(System.Func<System.Boolean, WaveEngine.Framework.Services.IGameAction[]>)
  type: Method
  source:
    id: WaitPredicate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Components\Shared\GameActions\GameActionSet.cs
    startLine: 150
  assemblies:
  - WaveEngine.Components
  namespace: WaveEngine.Components.GameActions
  summary: "\nWaits the predicate.\n"
  example: []
  syntax:
    content: public IGameAction WaitPredicate(Func<bool, IGameAction[]> waitingTaskPredicate)
    parameters:
    - id: waitingTaskPredicate
      type: System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]}
      description: The waiting task predicate.
    return:
      type: WaveEngine.Framework.Services.IGameAction
      description: The task
    content.vb: Public Function WaitPredicate(waitingTaskPredicate As Func(Of Boolean, IGameAction())) As IGameAction
  overload: WaveEngine.Components.GameActions.GameActionSet.WaitPredicate*
  implements:
  - WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  nameWithType.vb: GameActionSet.WaitPredicate(Func(Of Boolean, IGameAction()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Components.GameActions.GameActionSet.WaitPredicate(System.Func(Of System.Boolean, WaveEngine.Framework.Services.IGameAction()))
  name.vb: WaitPredicate(Func(Of Boolean, IGameAction()))
references:
- uid: WaveEngine.Components.GameActions
  commentId: N:WaveEngine.Components.GameActions
  name: WaveEngine.Components.GameActions
  nameWithType: WaveEngine.Components.GameActions
  fullName: WaveEngine.Components.GameActions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Components.GameActions.IGameActionSet
  commentId: T:WaveEngine.Components.GameActions.IGameActionSet
  parent: WaveEngine.Components.GameActions
  name: IGameActionSet
  nameWithType: IGameActionSet
  fullName: WaveEngine.Components.GameActions.IGameActionSet
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Components.GameActions.GameActionSet
  commentId: T:WaveEngine.Components.GameActions.GameActionSet
  name: GameActionSet
  nameWithType: GameActionSet
  fullName: WaveEngine.Components.GameActions.GameActionSet
- uid: WaveEngine.Components.GameActions.GameActionSet.#ctor*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionSet.#ctor
  name: GameActionSet
  nameWithType: GameActionSet.GameActionSet
  fullName: WaveEngine.Components.GameActions.GameActionSet.GameActionSet
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGameAction>
  nameWithType: IEnumerable<IGameAction>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>
  nameWithType.vb: IEnumerable(Of IGameAction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction)
  name.vb: IEnumerable(Of IGameAction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene
  commentId: T:WaveEngine.Framework.Scene
  parent: WaveEngine.Framework
  name: Scene
  nameWithType: Scene
  fullName: WaveEngine.Framework.Scene
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Func<IGameAction>>
  nameWithType: IEnumerable<Func<IGameAction>>
  fullName: System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>
  nameWithType.vb: IEnumerable(Of Func(Of IGameAction))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: IEnumerable(Of Func(Of IGameAction))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.IGameAction
  commentId: T:WaveEngine.Framework.Services.IGameAction
  parent: WaveEngine.Framework.Services
  name: IGameAction
  nameWithType: IGameAction
  fullName: WaveEngine.Framework.Services.IGameAction
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitAll*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionSet.WaitAll
  name: WaitAll
  nameWithType: GameActionSet.WaitAll
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitAll
- uid: WaveEngine.Components.GameActions.IGameActionSet.WaitAll
  commentId: M:WaveEngine.Components.GameActions.IGameActionSet.WaitAll
  parent: WaveEngine.Components.GameActions.IGameActionSet
  name: WaitAll()
  nameWithType: IGameActionSet.WaitAll()
  fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitAll()
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitAll
    name: WaitAll
    nameWithType: IGameActionSet.WaitAll
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitAll
    name: WaitAll
    nameWithType: IGameActionSet.WaitAll
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitAny*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionSet.WaitAny
  name: WaitAny
  nameWithType: GameActionSet.WaitAny
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitAny
- uid: WaveEngine.Components.GameActions.IGameActionSet.WaitAny
  commentId: M:WaveEngine.Components.GameActions.IGameActionSet.WaitAny
  parent: WaveEngine.Components.GameActions.IGameActionSet
  name: WaitAny()
  nameWithType: IGameActionSet.WaitAny()
  fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitAny()
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitAny
    name: WaitAny
    nameWithType: IGameActionSet.WaitAny
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitAny
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitAny
    name: WaitAny
    nameWithType: IGameActionSet.WaitAny
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitAny
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitCount*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionSet.WaitCount
  name: WaitCount
  nameWithType: GameActionSet.WaitCount
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitCount
- uid: WaveEngine.Components.GameActions.IGameActionSet.WaitCount(System.Int32)
  commentId: M:WaveEngine.Components.GameActions.IGameActionSet.WaitCount(System.Int32)
  parent: WaveEngine.Components.GameActions.IGameActionSet
  isExternal: true
  name: WaitCount(Int32)
  nameWithType: IGameActionSet.WaitCount(Int32)
  fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitCount(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitCount(System.Int32)
    name: WaitCount
    nameWithType: IGameActionSet.WaitCount
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitCount(System.Int32)
    name: WaitCount
    nameWithType: IGameActionSet.WaitCount
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Components.GameActions.GameActionSet.WaitPredicate*
  commentId: Overload:WaveEngine.Components.GameActions.GameActionSet.WaitPredicate
  name: WaitPredicate
  nameWithType: GameActionSet.WaitPredicate
  fullName: WaveEngine.Components.GameActions.GameActionSet.WaitPredicate
- uid: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  commentId: M:WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
  parent: WaveEngine.Components.GameActions.IGameActionSet
  isExternal: true
  name: WaitPredicate(Func<Boolean, IGameAction[]>)
  nameWithType: IGameActionSet.WaitPredicate(Func<Boolean, IGameAction[]>)
  fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func<System.Boolean, WaveEngine.Framework.Services.IGameAction[]>)
  nameWithType.vb: IGameActionSet.WaitPredicate(Func(Of Boolean, IGameAction()))
  fullName.vb: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func(Of System.Boolean, WaveEngine.Framework.Services.IGameAction()))
  name.vb: WaitPredicate(Func(Of Boolean, IGameAction()))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
    name: WaitPredicate
    nameWithType: IGameActionSet.WaitPredicate
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate(System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]})
    name: WaitPredicate
    nameWithType: IGameActionSet.WaitPredicate
    fullName: WaveEngine.Components.GameActions.IGameActionSet.WaitPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]}
  commentId: T:System.Func{System.Boolean,WaveEngine.Framework.Services.IGameAction[]}
  parent: System
  definition: System.Func`2
  name: Func<Boolean, IGameAction[]>
  nameWithType: Func<Boolean, IGameAction[]>
  fullName: System.Func<System.Boolean, WaveEngine.Framework.Services.IGameAction[]>
  nameWithType.vb: Func(Of Boolean, IGameAction())
  fullName.vb: System.Func(Of System.Boolean, WaveEngine.Framework.Services.IGameAction())
  name.vb: Func(Of Boolean, IGameAction())
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
