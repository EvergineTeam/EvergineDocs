### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.Microphone
  commentId: T:WaveEngine.Framework.Services.Microphone
  id: Microphone
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.Microphone.DataAvailable
  - WaveEngine.Framework.Services.Microphone.Dispose
  - WaveEngine.Framework.Services.Microphone.Finalize
  - WaveEngine.Framework.Services.Microphone.GetRecordedPath
  - WaveEngine.Framework.Services.Microphone.GetRecordedSound
  - WaveEngine.Framework.Services.Microphone.Initialize
  - WaveEngine.Framework.Services.Microphone.IsConnected
  - WaveEngine.Framework.Services.Microphone.IsRecording
  - WaveEngine.Framework.Services.Microphone.Start
  - WaveEngine.Framework.Services.Microphone.Start(System.String)
  - WaveEngine.Framework.Services.Microphone.Stop
  - WaveEngine.Framework.Services.Microphone.Terminate
  langs:
  - csharp
  - vb
  name: Microphone
  nameWithType: Microphone
  fullName: WaveEngine.Framework.Services.Microphone
  type: Class
  source:
    id: Microphone
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 14
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nThis class represent the microphone service.\n"
  example: []
  syntax:
    content: 'public sealed class Microphone : Service, IDisposable'
    content.vb: >-
      Public NotInheritable Class Microphone

          Inherits Service

          Implements IDisposable
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Common.Service
  implements:
  - System.IDisposable
  inheritedMembers:
  - WaveEngine.Common.Service.IsInitialized
  - WaveEngine.Common.Service.IsTerminated
  - WaveEngine.Common.Service.BaseInitialize
  - WaveEngine.Common.Service.BaseTerminate
  - WaveEngine.Common.Service.OnActivated
  - WaveEngine.Common.Service.OnDeactivated
  - WaveEngine.Common.IO.SerializableObject.DefaultValues
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Framework.Services.Microphone.DataAvailable
  commentId: E:WaveEngine.Framework.Services.Microphone.DataAvailable
  id: DataAvailable
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: DataAvailable
  nameWithType: Microphone.DataAvailable
  fullName: WaveEngine.Framework.Services.Microphone.DataAvailable
  type: Event
  source:
    id: DataAvailable
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 26
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nEvent launched when there is recording data available.\n"
  example: []
  syntax:
    content: public event EventHandler<MicrophoneDataEventArgs> DataAvailable
    return:
      type: System.EventHandler{WaveEngine.Common.Media.MicrophoneDataEventArgs}
    content.vb: Public Event DataAvailable As EventHandler(Of MicrophoneDataEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Microphone.IsRecording
  commentId: P:WaveEngine.Framework.Services.Microphone.IsRecording
  id: IsRecording
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: IsRecording
  nameWithType: Microphone.IsRecording
  fullName: WaveEngine.Framework.Services.Microphone.IsRecording
  type: Property
  source:
    id: IsRecording
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 31
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets a value indicating whether the microphone is recording or not\n"
  example: []
  syntax:
    content: public bool IsRecording { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRecording As Boolean
  overload: WaveEngine.Framework.Services.Microphone.IsRecording*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Services.Microphone.IsConnected
  commentId: P:WaveEngine.Framework.Services.Microphone.IsConnected
  id: IsConnected
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: Microphone.IsConnected
  fullName: WaveEngine.Framework.Services.Microphone.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 47
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets a value indicating whether there is a microphone available.\n"
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: WaveEngine.Framework.Services.Microphone.IsConnected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Services.Microphone.Finalize
  commentId: M:WaveEngine.Framework.Services.Microphone.Finalize
  id: Finalize
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: Microphone.Finalize()
  fullName: WaveEngine.Framework.Services.Microphone.Finalize()
  type: Method
  source:
    id: Finalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 98
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nFinalizes an instance of the <xref href=\"WaveEngine.Framework.Services.Microphone\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: WaveEngine.Framework.Services.Microphone.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Services.Microphone.Initialize
  commentId: M:WaveEngine.Framework.Services.Microphone.Initialize
  id: Initialize
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: Microphone.Initialize()
  fullName: WaveEngine.Framework.Services.Microphone.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 106
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllows to execute custom logic during the initialization of this instance.\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Common.Service.Initialize
  overload: WaveEngine.Framework.Services.Microphone.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.Microphone.Terminate
  commentId: M:WaveEngine.Framework.Services.Microphone.Terminate
  id: Terminate
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: Microphone.Terminate()
  fullName: WaveEngine.Framework.Services.Microphone.Terminate()
  type: Method
  source:
    id: Terminate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 113
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllow to execute custom logic during the finalization of this instance.\n"
  example: []
  syntax:
    content: protected override void Terminate()
    content.vb: Protected Overrides Sub Terminate
  overridden: WaveEngine.Common.Service.Terminate
  overload: WaveEngine.Framework.Services.Microphone.Terminate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.Microphone.Start
  commentId: M:WaveEngine.Framework.Services.Microphone.Start
  id: Start
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Microphone.Start()
  fullName: WaveEngine.Framework.Services.Microphone.Start()
  type: Method
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 125
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nStarts the recording.\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: WaveEngine.Framework.Services.Microphone.Start*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Microphone has been already disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The microphone is recording already.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Microphone.Start(System.String)
  commentId: M:WaveEngine.Framework.Services.Microphone.Start(System.String)
  id: Start(System.String)
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Start(String)
  nameWithType: Microphone.Start(String)
  fullName: WaveEngine.Framework.Services.Microphone.Start(System.String)
  type: Method
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 136
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nStarts the recording, saving into a file.\n"
  example: []
  syntax:
    content: public void Start(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: Path of the recorded file.
    content.vb: Public Sub Start(filePath As String)
  overload: WaveEngine.Framework.Services.Microphone.Start*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Microphone has been already disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The microphone is recording already.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Microphone.Stop
  commentId: M:WaveEngine.Framework.Services.Microphone.Stop
  id: Stop
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: Microphone.Stop()
  fullName: WaveEngine.Framework.Services.Microphone.Stop()
  type: Method
  source:
    id: Stop
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 159
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nStops the recording.\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: WaveEngine.Framework.Services.Microphone.Stop*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Microphone has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The microphone is not recording
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Microphone.GetRecordedSound
  commentId: M:WaveEngine.Framework.Services.Microphone.GetRecordedSound
  id: GetRecordedSound
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: GetRecordedSound()
  nameWithType: Microphone.GetRecordedSound()
  fullName: WaveEngine.Framework.Services.Microphone.GetRecordedSound()
  type: Method
  source:
    id: GetRecordedSound
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 181
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets a soundinfo with the current recorded sound by the microphone.\n"
  example: []
  syntax:
    content: public SoundInfo GetRecordedSound()
    return:
      type: WaveEngine.Framework.Sound.SoundInfo
      description: "\nA sound info.\n"
    content.vb: Public Function GetRecordedSound As SoundInfo
  overload: WaveEngine.Framework.Services.Microphone.GetRecordedSound*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Microphone has been already disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Microphone.GetRecordedPath
  commentId: M:WaveEngine.Framework.Services.Microphone.GetRecordedPath
  id: GetRecordedPath
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: GetRecordedPath()
  nameWithType: Microphone.GetRecordedPath()
  fullName: WaveEngine.Framework.Services.Microphone.GetRecordedPath()
  type: Method
  source:
    id: GetRecordedPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 208
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the recorded path.\n"
  example: []
  syntax:
    content: public string GetRecordedPath()
    return:
      type: System.String
      description: "\nString with record sound path.\n"
    content.vb: Public Function GetRecordedPath As String
  overload: WaveEngine.Framework.Services.Microphone.GetRecordedPath*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Microphone has been already disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Microphone.Dispose
  commentId: M:WaveEngine.Framework.Services.Microphone.Dispose
  id: Dispose
  parent: WaveEngine.Framework.Services.Microphone
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Microphone.Dispose()
  fullName: WaveEngine.Framework.Services.Microphone.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Microphone.cs
    startLine: 221
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: WaveEngine.Framework.Services.Microphone.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Common.Service.IsInitialized
  commentId: P:WaveEngine.Common.Service.IsInitialized
  parent: WaveEngine.Common.Service
  name: IsInitialized
  nameWithType: Service.IsInitialized
  fullName: WaveEngine.Common.Service.IsInitialized
- uid: WaveEngine.Common.Service.IsTerminated
  commentId: P:WaveEngine.Common.Service.IsTerminated
  parent: WaveEngine.Common.Service
  name: IsTerminated
  nameWithType: Service.IsTerminated
  fullName: WaveEngine.Common.Service.IsTerminated
- uid: WaveEngine.Common.Service.BaseInitialize
  commentId: M:WaveEngine.Common.Service.BaseInitialize
  parent: WaveEngine.Common.Service
  name: BaseInitialize()
  nameWithType: Service.BaseInitialize()
  fullName: WaveEngine.Common.Service.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.BaseTerminate
  commentId: M:WaveEngine.Common.Service.BaseTerminate
  parent: WaveEngine.Common.Service
  name: BaseTerminate()
  nameWithType: Service.BaseTerminate()
  fullName: WaveEngine.Common.Service.BaseTerminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnActivated
  commentId: M:WaveEngine.Common.Service.OnActivated
  parent: WaveEngine.Common.Service
  name: OnActivated()
  nameWithType: Service.OnActivated()
  fullName: WaveEngine.Common.Service.OnActivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnDeactivated
  commentId: M:WaveEngine.Common.Service.OnDeactivated
  parent: WaveEngine.Common.Service
  name: OnDeactivated()
  nameWithType: Service.OnDeactivated()
  fullName: WaveEngine.Common.Service.OnDeactivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.EventHandler{WaveEngine.Common.Media.MicrophoneDataEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Common.Media.MicrophoneDataEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MicrophoneDataEventArgs>
  nameWithType: EventHandler<MicrophoneDataEventArgs>
  fullName: System.EventHandler<WaveEngine.Common.Media.MicrophoneDataEventArgs>
  nameWithType.vb: EventHandler(Of MicrophoneDataEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Common.Media.MicrophoneDataEventArgs)
  name.vb: EventHandler(Of MicrophoneDataEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Media.MicrophoneDataEventArgs
    name: MicrophoneDataEventArgs
    nameWithType: MicrophoneDataEventArgs
    fullName: WaveEngine.Common.Media.MicrophoneDataEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Media.MicrophoneDataEventArgs
    name: MicrophoneDataEventArgs
    nameWithType: MicrophoneDataEventArgs
    fullName: WaveEngine.Common.Media.MicrophoneDataEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.Microphone.IsRecording*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.IsRecording
  name: IsRecording
  nameWithType: Microphone.IsRecording
  fullName: WaveEngine.Framework.Services.Microphone.IsRecording
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Services.Microphone.IsConnected*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.IsConnected
  name: IsConnected
  nameWithType: Microphone.IsConnected
  fullName: WaveEngine.Framework.Services.Microphone.IsConnected
- uid: WaveEngine.Framework.Services.Microphone
  commentId: T:WaveEngine.Framework.Services.Microphone
  parent: WaveEngine.Framework.Services
  name: Microphone
  nameWithType: Microphone
  fullName: WaveEngine.Framework.Services.Microphone
- uid: WaveEngine.Framework.Services.Microphone.Finalize*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.Finalize
  name: Finalize
  nameWithType: Microphone.Finalize
  fullName: WaveEngine.Framework.Services.Microphone.Finalize
- uid: WaveEngine.Common.Service.Initialize
  commentId: M:WaveEngine.Common.Service.Initialize
  parent: WaveEngine.Common.Service
  name: Initialize()
  nameWithType: Service.Initialize()
  fullName: WaveEngine.Common.Service.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.Microphone.Initialize*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.Initialize
  name: Initialize
  nameWithType: Microphone.Initialize
  fullName: WaveEngine.Framework.Services.Microphone.Initialize
- uid: WaveEngine.Common.Service.Terminate
  commentId: M:WaveEngine.Common.Service.Terminate
  parent: WaveEngine.Common.Service
  name: Terminate()
  nameWithType: Service.Terminate()
  fullName: WaveEngine.Common.Service.Terminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.Microphone.Terminate*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.Terminate
  name: Terminate
  nameWithType: Microphone.Terminate
  fullName: WaveEngine.Framework.Services.Microphone.Terminate
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: WaveEngine.Framework.Services.Microphone.Start*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.Start
  name: Start
  nameWithType: Microphone.Start
  fullName: WaveEngine.Framework.Services.Microphone.Start
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework.Services.Microphone.Stop*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.Stop
  name: Stop
  nameWithType: Microphone.Stop
  fullName: WaveEngine.Framework.Services.Microphone.Stop
- uid: WaveEngine.Framework.Services.Microphone.GetRecordedSound*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.GetRecordedSound
  name: GetRecordedSound
  nameWithType: Microphone.GetRecordedSound
  fullName: WaveEngine.Framework.Services.Microphone.GetRecordedSound
- uid: WaveEngine.Framework.Sound.SoundInfo
  commentId: T:WaveEngine.Framework.Sound.SoundInfo
  parent: WaveEngine.Framework.Sound
  name: SoundInfo
  nameWithType: SoundInfo
  fullName: WaveEngine.Framework.Sound.SoundInfo
- uid: WaveEngine.Framework.Sound
  commentId: N:WaveEngine.Framework.Sound
  name: WaveEngine.Framework.Sound
  nameWithType: WaveEngine.Framework.Sound
  fullName: WaveEngine.Framework.Sound
- uid: WaveEngine.Framework.Services.Microphone.GetRecordedPath*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.GetRecordedPath
  name: GetRecordedPath
  nameWithType: Microphone.GetRecordedPath
  fullName: WaveEngine.Framework.Services.Microphone.GetRecordedPath
- uid: WaveEngine.Framework.Services.Microphone.Dispose*
  commentId: Overload:WaveEngine.Framework.Services.Microphone.Dispose
  name: Dispose
  nameWithType: Microphone.Dispose
  fullName: WaveEngine.Framework.Services.Microphone.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
