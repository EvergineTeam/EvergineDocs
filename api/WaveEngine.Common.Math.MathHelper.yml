### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.MathHelper
  commentId: T:WaveEngine.Common.Math.MathHelper
  id: MathHelper
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.MathHelper.Area(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Clamp(System.Double,System.Double,System.Double)
  - WaveEngine.Common.Math.MathHelper.Clamp(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Distance(System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.E
  - WaveEngine.Common.Math.MathHelper.Epsilon
  - WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.FloatInRange(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Lerp(System.Double,System.Double,System.Double)
  - WaveEngine.Common.Math.MathHelper.Lerp(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.LerpClamped(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Log10E
  - WaveEngine.Common.Math.MathHelper.Log2E
  - WaveEngine.Common.Math.MathHelper.Max(System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Max(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.MathHelper.Max(WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.MathHelper.Min(System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.Min(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.MathHelper.Min(WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.MathHelper.Pi
  - WaveEngine.Common.Math.MathHelper.PiOver2
  - WaveEngine.Common.Math.MathHelper.PiOver4
  - WaveEngine.Common.Math.MathHelper.SmoothDamp(System.Single,System.Single,System.Single@,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.SmoothStep(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.MathHelper.ToDegrees(System.Double)
  - WaveEngine.Common.Math.MathHelper.ToDegrees(System.Single)
  - WaveEngine.Common.Math.MathHelper.ToRadians(System.Double)
  - WaveEngine.Common.Math.MathHelper.ToRadians(System.Single)
  - WaveEngine.Common.Math.MathHelper.TwoPi
  - WaveEngine.Common.Math.MathHelper.WrapAngle(System.Single)
  langs:
  - csharp
  - vb
  name: MathHelper
  nameWithType: MathHelper
  fullName: WaveEngine.Common.Math.MathHelper
  type: Class
  source:
    id: MathHelper
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 11
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMath helper functions.\n"
  example: []
  syntax:
    content: public static class MathHelper
    content.vb: Public Module MathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Common.Math.MathHelper.E
  commentId: F:WaveEngine.Common.Math.MathHelper.E
  id: E
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: E
  nameWithType: MathHelper.E
  fullName: WaveEngine.Common.Math.MathHelper.E
  type: Field
  source:
    id: E
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the mathematical constant e.\n"
  example: []
  syntax:
    content: public const float E = 2.718282F
    return:
      type: System.Single
    content.vb: Public Const E As Single = 2.718282F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.Log10E
  commentId: F:WaveEngine.Common.Math.MathHelper.Log10E
  id: Log10E
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Log10E
  nameWithType: MathHelper.Log10E
  fullName: WaveEngine.Common.Math.MathHelper.Log10E
  type: Field
  source:
    id: Log10E
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 21
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the log base ten of e.\n"
  example: []
  syntax:
    content: public const float Log10E = 0.4342945F
    return:
      type: System.Single
    content.vb: Public Const Log10E As Single = 0.4342945F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.Log2E
  commentId: F:WaveEngine.Common.Math.MathHelper.Log2E
  id: Log2E
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Log2E
  nameWithType: MathHelper.Log2E
  fullName: WaveEngine.Common.Math.MathHelper.Log2E
  type: Field
  source:
    id: Log2E
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 26
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the log base two of e.\n"
  example: []
  syntax:
    content: public const float Log2E = 1.442695F
    return:
      type: System.Single
    content.vb: Public Const Log2E As Single = 1.442695F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.Pi
  commentId: F:WaveEngine.Common.Math.MathHelper.Pi
  id: Pi
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Pi
  nameWithType: MathHelper.Pi
  fullName: WaveEngine.Common.Math.MathHelper.Pi
  type: Field
  source:
    id: Pi
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 31
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the value of pi.\n"
  example: []
  syntax:
    content: public const float Pi = 3.141593F
    return:
      type: System.Single
    content.vb: Public Const Pi As Single = 3.141593F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.PiOver2
  commentId: F:WaveEngine.Common.Math.MathHelper.PiOver2
  id: PiOver2
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: PiOver2
  nameWithType: MathHelper.PiOver2
  fullName: WaveEngine.Common.Math.MathHelper.PiOver2
  type: Field
  source:
    id: PiOver2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 36
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the value of pi divided by two.\n"
  example: []
  syntax:
    content: public const float PiOver2 = 1.570796F
    return:
      type: System.Single
    content.vb: Public Const PiOver2 As Single = 1.570796F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.PiOver4
  commentId: F:WaveEngine.Common.Math.MathHelper.PiOver4
  id: PiOver4
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: PiOver4
  nameWithType: MathHelper.PiOver4
  fullName: WaveEngine.Common.Math.MathHelper.PiOver4
  type: Field
  source:
    id: PiOver4
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 41
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the value of pi divided by four.\n"
  example: []
  syntax:
    content: public const float PiOver4 = 0.7853982F
    return:
      type: System.Single
    content.vb: Public Const PiOver4 As Single = 0.7853982F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.TwoPi
  commentId: F:WaveEngine.Common.Math.MathHelper.TwoPi
  id: TwoPi
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: TwoPi
  nameWithType: MathHelper.TwoPi
  fullName: WaveEngine.Common.Math.MathHelper.TwoPi
  type: Field
  source:
    id: TwoPi
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents the value of pi times two.\n"
  example: []
  syntax:
    content: public const float TwoPi = 6.283185F
    return:
      type: System.Single
    content.vb: Public Const TwoPi As Single = 6.283185F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.Epsilon
  commentId: F:WaveEngine.Common.Math.MathHelper.Epsilon
  id: Epsilon
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Epsilon
  nameWithType: MathHelper.Epsilon
  fullName: WaveEngine.Common.Math.MathHelper.Epsilon
  type: Field
  source:
    id: Epsilon
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 51
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nThe epsilon\n"
  example: []
  syntax:
    content: public const float Epsilon = 1.1920929E-07F
    return:
      type: System.Single
    content.vb: Public Const Epsilon As Single = 1.1920929E-07F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Common.Math.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Barycentric(Single, Single, Single, Single, Single)
  nameWithType: MathHelper.Barycentric(Single, Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Barycentric(System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Barycentric
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates.\n"
  example: []
  syntax:
    content: public static float Barycentric(float value1, float value2, float value3, float amount1, float amount2)
    parameters:
    - id: value1
      type: System.Single
      description: The coordinate on one axis of vertex 1 of the defining triangle.
    - id: value2
      type: System.Single
      description: The coordinate on the same axis of vertex 2 of the defining triangle.
    - id: value3
      type: System.Single
      description: The coordinate on the same axis of vertex 3 of the defining triangle.
    - id: amount1
      type: System.Single
      description: The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2.
    - id: amount2
      type: System.Single
      description: The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3.
    return:
      type: System.Single
      description: Cartesian coordinate of the specified point with respect to the axis being used.
    content.vb: Public Shared Function Barycentric(value1 As Single, value2 As Single, value3 As Single, amount1 As Single, amount2 As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Barycentric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: CatmullRom(Single, Single, Single, Single, Single)
  nameWithType: MathHelper.CatmullRom(Single, Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.CatmullRom(System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CatmullRom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 78
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nPerforms a Catmull-Rom interpolation using the specified positions.\n"
  example: []
  syntax:
    content: public static float CatmullRom(float value1, float value2, float value3, float value4, float amount)
    parameters:
    - id: value1
      type: System.Single
      description: The first position in the interpolation.
    - id: value2
      type: System.Single
      description: The second position in the interpolation.
    - id: value3
      type: System.Single
      description: The third position in the interpolation.
    - id: value4
      type: System.Single
      description: The fourth position in the interpolation.
    - id: amount
      type: System.Single
      description: Weighting factor.
    return:
      type: System.Single
      description: A position that is the result of the Catmull-Rom interpolation.
    content.vb: Public Shared Function CatmullRom(value1 As Single, value2 As Single, value3 As Single, value4 As Single, amount As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.CatmullRom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Clamp(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Clamp(Single, Single, Single)
  nameWithType: MathHelper.Clamp(Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Clamp(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Clamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 93
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClamps a value between a minimum float and maximum float value.\n"
  example: []
  syntax:
    content: public static float Clamp(float value, float min, float max)
    parameters:
    - id: value
      type: System.Single
      description: The value.
    - id: min
      type: System.Single
      description: The minimum value. If value is less than min, min will be returned.
    - id: max
      type: System.Single
      description: The maximum value. If value is greater than max, max will be returned.
    return:
      type: System.Single
      description: The clamped value.
    content.vb: Public Shared Function Clamp(value As Single, min As Single, max As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Clamp(System.Double,System.Double,System.Double)
  commentId: M:WaveEngine.Common.Math.MathHelper.Clamp(System.Double,System.Double,System.Double)
  id: Clamp(System.Double,System.Double,System.Double)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Clamp(Double, Double, Double)
  nameWithType: MathHelper.Clamp(Double, Double, Double)
  fullName: WaveEngine.Common.Math.MathHelper.Clamp(System.Double, System.Double, System.Double)
  type: Method
  source:
    id: Clamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 108
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClamps a value between a minimum float and maximum float value.\n"
  example: []
  syntax:
    content: public static double Clamp(double value, double min, double max)
    parameters:
    - id: value
      type: System.Double
      description: The value.
    - id: min
      type: System.Double
      description: The minimum value. If value is less than min, min will be returned.
    - id: max
      type: System.Double
      description: The maximum value. If value is greater than max, max will be returned.
    return:
      type: System.Double
      description: The clamped value.
    content.vb: Public Shared Function Clamp(value As Double, min As Double, max As Double) As Double
  overload: WaveEngine.Common.Math.MathHelper.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Distance(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Distance(System.Single,System.Single)
  id: Distance(System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Distance(Single, Single)
  nameWithType: MathHelper.Distance(Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Distance(System.Single, System.Single)
  type: Method
  source:
    id: Distance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 122
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCalculates the absolute value of the difference of two values.\n"
  example: []
  syntax:
    content: public static float Distance(float value1, float value2)
    parameters:
    - id: value1
      type: System.Single
      description: Source value1.
    - id: value2
      type: System.Single
      description: Source value2.
    return:
      type: System.Single
      description: Distance between the two values.
    content.vb: Public Shared Function Distance(value1 As Single, value2 As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Hermite(Single, Single, Single, Single, Single)
  nameWithType: MathHelper.Hermite(Single, Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Hermite(System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Hermite
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 136
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nPerforms a Hermite spline interpolation.\n"
  example: []
  syntax:
    content: public static float Hermite(float value1, float tangent1, float value2, float tangent2, float amount)
    parameters:
    - id: value1
      type: System.Single
      description: Source value1.
    - id: tangent1
      type: System.Single
      description: Source tangent1
    - id: value2
      type: System.Single
      description: Source value2.
    - id: tangent2
      type: System.Single
      description: Source tangent2.
    - id: amount
      type: System.Single
      description: Weighting factor.
    return:
      type: System.Single
      description: The result of the Hermite spline interpolation.
    content.vb: Public Shared Function Hermite(value1 As Single, tangent1 As Single, value2 As Single, tangent2 As Single, amount As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Hermite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Area(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.MathHelper.Area(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  id: Area(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Area(ref Vector2, ref Vector2, ref Vector2)
  nameWithType: MathHelper.Area(ref Vector2, ref Vector2, ref Vector2)
  fullName: WaveEngine.Common.Math.MathHelper.Area(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Area
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 159
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLinearly interpolates between value1 and value2 by amount.\nThe parameter amount is not clamped and values outside the range [0, 1] will result in a return value outside the range [value1, value2].\nReturns a positive number if c is to the left of the line going from a to b.\n"
  example: []
  syntax:
    content: public static float Area(ref Vector2 a, ref Vector2 b, ref Vector2 c)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.Vector2
      description: The first vector
    - id: b
      type: WaveEngine.Common.Math.Vector2
      description: The second vector
    - id: c
      type: WaveEngine.Common.Math.Vector2
      description: The third vector
    return:
      type: System.Single
      description: >-
        Positive number if point is left, negative if point is right,

        and 0 if points are collinear.
    content.vb: Public Shared Function Area(ByRef a As Vector2, ByRef b As Vector2, ByRef c As Vector2) As Single
  overload: WaveEngine.Common.Math.MathHelper.Area*
  nameWithType.vb: MathHelper.Area(ByRef Vector2, ByRef Vector2, ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.MathHelper.Area(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Area(ByRef Vector2, ByRef Vector2, ByRef Vector2)
- uid: WaveEngine.Common.Math.MathHelper.Lerp(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Lerp(Single, Single, Single)
  nameWithType: MathHelper.Lerp(Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Lerp(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 176
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified value1.\n"
  example:
  - "\nWhen amount = 0 returns value1.\nWhen amount = 1 return value2.\nWhen amount = 0.5 returns the midpoint of value1 and value2.\n"
  syntax:
    content: public static float Lerp(float value1, float value2, float amount)
    parameters:
    - id: value1
      type: System.Single
      description: The value1.
    - id: value2
      type: System.Single
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: System.Single
      description: Interpolated value.
    content.vb: Public Shared Function Lerp(value1 As Single, value2 As Single, amount As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Lerp(System.Double,System.Double,System.Double)
  commentId: M:WaveEngine.Common.Math.MathHelper.Lerp(System.Double,System.Double,System.Double)
  id: Lerp(System.Double,System.Double,System.Double)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Lerp(Double, Double, Double)
  nameWithType: MathHelper.Lerp(Double, Double, Double)
  fullName: WaveEngine.Common.Math.MathHelper.Lerp(System.Double, System.Double, System.Double)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 193
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified value1.\n"
  example:
  - "\nWhen amount = 0 returns value1.\nWhen amount = 1 return value2.\nWhen amount = 0.5 returns the midpoint of value1 and value2.\n"
  syntax:
    content: public static double Lerp(double value1, double value2, double amount)
    parameters:
    - id: value1
      type: System.Double
      description: The value1.
    - id: value2
      type: System.Double
      description: The value2.
    - id: amount
      type: System.Double
      description: The amount.
    return:
      type: System.Double
      description: Interpolated value.
    content.vb: Public Shared Function Lerp(value1 As Double, value2 As Double, amount As Double) As Double
  overload: WaveEngine.Common.Math.MathHelper.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.LerpClamped(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.LerpClamped(System.Single,System.Single,System.Single)
  id: LerpClamped(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: LerpClamped(Single, Single, Single)
  nameWithType: MathHelper.LerpClamped(Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.LerpClamped(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: LerpClamped
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 211
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLinearly interpolates between value1 and value2 by amount.\nThe parameter amount is clamped to the range [0, 1].\n"
  example:
  - "\nWhen amount = 0 returns value1.\nWhen amount = 1 return value2.\nWhen amount = 0.5 returns the midpoint of value1 and value2.\n"
  syntax:
    content: public static float LerpClamped(float value1, float value2, float amount)
    parameters:
    - id: value1
      type: System.Single
      description: Source value1.
    - id: value2
      type: System.Single
      description: Source value2.
    - id: amount
      type: System.Single
      description: Value between 0 and 1 indicating the weight of value2.
    return:
      type: System.Single
      description: Interpolated value.
    content.vb: Public Shared Function LerpClamped(value1 As Single, value2 As Single, amount As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.LerpClamped*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Max(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Max(System.Single,System.Single)
  id: Max(System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Single, Single)
  nameWithType: MathHelper.Max(Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Max(System.Single, System.Single)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 234
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the greater of two values.\n"
  example: []
  syntax:
    content: public static float Max(float value1, float value2)
    parameters:
    - id: value1
      type: System.Single
      description: Source value1.
    - id: value2
      type: System.Single
      description: Source value2.
    return:
      type: System.Single
      description: The greater value.
    content.vb: Public Shared Function Max(value1 As Single, value2 As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Min(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.Min(System.Single,System.Single)
  id: Min(System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Single, Single)
  nameWithType: MathHelper.Min(Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.Min(System.Single, System.Single)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 245
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the lesser of two or more values.\n"
  example: []
  syntax:
    content: public static float Min(float value1, float value2)
    parameters:
    - id: value1
      type: System.Single
      description: Source value1.
    - id: value2
      type: System.Single
      description: Source value2.
    return:
      type: System.Single
      description: The lesser value.
    content.vb: Public Shared Function Min(value1 As Single, value2 As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.Max(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.MathHelper.Max(WaveEngine.Common.Math.Vector2@)
  id: Max(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Max(ref Vector2)
  nameWithType: MathHelper.Max(ref Vector2)
  fullName: WaveEngine.Common.Math.MathHelper.Max(ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 255
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the greater of two <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> components.\n"
  example: []
  syntax:
    content: public static float Max(ref Vector2 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: Source value.
    return:
      type: System.Single
      description: The greater value.
    content.vb: Public Shared Function Max(ByRef value As Vector2) As Single
  overload: WaveEngine.Common.Math.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.MathHelper.Max(ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Max(ByRef Vector2)
- uid: WaveEngine.Common.Math.MathHelper.Min(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.MathHelper.Min(WaveEngine.Common.Math.Vector2@)
  id: Min(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Min(ref Vector2)
  nameWithType: MathHelper.Min(ref Vector2)
  fullName: WaveEngine.Common.Math.MathHelper.Min(ref WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 271
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the lesser of two <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> components.\n"
  example: []
  syntax:
    content: public static float Min(ref Vector2 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: Source value.
    return:
      type: System.Single
      description: The lesser value.
    content.vb: Public Shared Function Min(ByRef value As Vector2) As Single
  overload: WaveEngine.Common.Math.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.MathHelper.Min(ByRef WaveEngine.Common.Math.Vector2)
  name.vb: Min(ByRef Vector2)
- uid: WaveEngine.Common.Math.MathHelper.Max(WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.MathHelper.Max(WaveEngine.Common.Math.Vector3@)
  id: Max(WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Max(ref Vector3)
  nameWithType: MathHelper.Max(ref Vector3)
  fullName: WaveEngine.Common.Math.MathHelper.Max(ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 287
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the greater of three <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> components.\n"
  example: []
  syntax:
    content: public static float Max(ref Vector3 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: Source vector.
    return:
      type: System.Single
      description: The greater value.
    content.vb: Public Shared Function Max(ByRef value As Vector3) As Single
  overload: WaveEngine.Common.Math.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.MathHelper.Max(ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Max(ByRef Vector3)
- uid: WaveEngine.Common.Math.MathHelper.Min(WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.MathHelper.Min(WaveEngine.Common.Math.Vector3@)
  id: Min(WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: Min(ref Vector3)
  nameWithType: MathHelper.Min(ref Vector3)
  fullName: WaveEngine.Common.Math.MathHelper.Min(ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 308
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns the lesser of three <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> components.\n"
  example: []
  syntax:
    content: public static float Min(ref Vector3 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: Source vector.
    return:
      type: System.Single
      description: The lesser value.
    content.vb: Public Shared Function Min(ByRef value As Vector3) As Single
  overload: WaveEngine.Common.Math.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.MathHelper.Min(ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Min(ByRef Vector3)
- uid: WaveEngine.Common.Math.MathHelper.SmoothStep(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.SmoothStep(System.Single,System.Single,System.Single)
  id: SmoothStep(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: SmoothStep(Single, Single, Single)
  nameWithType: MathHelper.SmoothStep(Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.SmoothStep(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: SmoothStep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 331
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInterpolates between two values using a cubic equation.\n"
  example: []
  syntax:
    content: public static float SmoothStep(float value1, float value2, float amount)
    parameters:
    - id: value1
      type: System.Single
      description: Source value1.
    - id: value2
      type: System.Single
      description: Source value2.
    - id: amount
      type: System.Single
      description: Weighting value.
    return:
      type: System.Single
      description: Interpolated value.
    content.vb: Public Shared Function SmoothStep(value1 As Single, value2 As Single, amount As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.SmoothDamp(System.Single,System.Single,System.Single@,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.SmoothDamp(System.Single,System.Single,System.Single@,System.Single,System.Single)
  id: SmoothDamp(System.Single,System.Single,System.Single@,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: SmoothDamp(Single, Single, ref Single, Single, Single)
  nameWithType: MathHelper.SmoothDamp(Single, Single, ref Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.SmoothDamp(System.Single, System.Single, ref System.Single, System.Single, System.Single)
  type: Method
  source:
    id: SmoothDamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 347
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChanges a float value towards a desired goal over time\n"
  example: []
  syntax:
    content: public static float SmoothDamp(float current, float target, ref float currentVelocity, float smoothTime, float gameTime)
    parameters:
    - id: current
      type: System.Single
      description: The current value
    - id: target
      type: System.Single
      description: The target value
    - id: currentVelocity
      type: System.Single
      description: The current velocity
    - id: smoothTime
      type: System.Single
      description: The time it will take to reach the target.
    - id: gameTime
      type: System.Single
      description: The current game time (time between last frame)
    return:
      type: System.Single
      description: The smooth value
    content.vb: Public Shared Function SmoothDamp(current As Single, target As Single, ByRef currentVelocity As Single, smoothTime As Single, gameTime As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.SmoothDamp*
  nameWithType.vb: MathHelper.SmoothDamp(Single, Single, ByRef Single, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.MathHelper.SmoothDamp(System.Single, System.Single, ByRef System.Single, System.Single, System.Single)
  name.vb: SmoothDamp(Single, Single, ByRef Single, Single, Single)
- uid: WaveEngine.Common.Math.MathHelper.ToDegrees(System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.ToDegrees(System.Single)
  id: ToDegrees(System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: ToDegrees(Single)
  nameWithType: MathHelper.ToDegrees(Single)
  fullName: WaveEngine.Common.Math.MathHelper.ToDegrees(System.Single)
  type: Method
  source:
    id: ToDegrees
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 377
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts radians to degrees.\n"
  example: []
  syntax:
    content: public static float ToDegrees(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: The angle in radians.
    return:
      type: System.Single
      description: The angle in degrees.
    content.vb: Public Shared Function ToDegrees(radians As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.ToDegrees*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.ToDegrees(System.Double)
  commentId: M:WaveEngine.Common.Math.MathHelper.ToDegrees(System.Double)
  id: ToDegrees(System.Double)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: ToDegrees(Double)
  nameWithType: MathHelper.ToDegrees(Double)
  fullName: WaveEngine.Common.Math.MathHelper.ToDegrees(System.Double)
  type: Method
  source:
    id: ToDegrees
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 387
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts radians to degrees.\n"
  example: []
  syntax:
    content: public static float ToDegrees(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: The angle in radians.
    return:
      type: System.Single
      description: The angle in degrees.
    content.vb: Public Shared Function ToDegrees(radians As Double) As Single
  overload: WaveEngine.Common.Math.MathHelper.ToDegrees*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.ToRadians(System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.ToRadians(System.Single)
  id: ToRadians(System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: ToRadians(Single)
  nameWithType: MathHelper.ToRadians(Single)
  fullName: WaveEngine.Common.Math.MathHelper.ToRadians(System.Single)
  type: Method
  source:
    id: ToRadians
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 397
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts degrees to radians.\n"
  example: []
  syntax:
    content: public static float ToRadians(float degrees)
    parameters:
    - id: degrees
      type: System.Single
      description: The angle in degrees.
    return:
      type: System.Single
      description: The angle in radians.
    content.vb: Public Shared Function ToRadians(degrees As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.ToRadians*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.ToRadians(System.Double)
  commentId: M:WaveEngine.Common.Math.MathHelper.ToRadians(System.Double)
  id: ToRadians(System.Double)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: ToRadians(Double)
  nameWithType: MathHelper.ToRadians(Double)
  fullName: WaveEngine.Common.Math.MathHelper.ToRadians(System.Double)
  type: Method
  source:
    id: ToRadians
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 407
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts degrees to radians.\n"
  example: []
  syntax:
    content: public static float ToRadians(double degrees)
    parameters:
    - id: degrees
      type: System.Double
      description: The angle in degrees..
    return:
      type: System.Single
      description: The angle in radians.
    content.vb: Public Shared Function ToRadians(degrees As Double) As Single
  overload: WaveEngine.Common.Math.MathHelper.ToRadians*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.WrapAngle(System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.WrapAngle(System.Single)
  id: WrapAngle(System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: WrapAngle(Single)
  nameWithType: MathHelper.WrapAngle(Single)
  fullName: WaveEngine.Common.Math.MathHelper.WrapAngle(System.Single)
  type: Method
  source:
    id: WrapAngle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 417
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReduces a given angle to a value between π and -π.\n"
  example: []
  syntax:
    content: public static float WrapAngle(float angle)
    parameters:
    - id: angle
      type: System.Single
      description: The angle to reduce, in radians.
    return:
      type: System.Single
      description: The new angle, in radians.
    content.vb: Public Shared Function WrapAngle(angle As Single) As Single
  overload: WaveEngine.Common.Math.MathHelper.WrapAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single,System.Single)
  id: FloatEquals(System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: FloatEquals(Single, Single)
  nameWithType: MathHelper.FloatEquals(Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single, System.Single)
  type: Method
  source:
    id: FloatEquals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 442
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChecks if a floating point Value is equal to another,\nwithin a certain tolerance.\n"
  example: []
  syntax:
    content: public static bool FloatEquals(float value1, float value2)
    parameters:
    - id: value1
      type: System.Single
      description: The first floating point Value.
    - id: value2
      type: System.Single
      description: The second floating point Value.
    return:
      type: System.Boolean
      description: True if the values are &quot;equal&quot;, false otherwise.
    content.vb: Public Shared Function FloatEquals(value1 As Single, value2 As Single) As Boolean
  overload: WaveEngine.Common.Math.MathHelper.FloatEquals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single,System.Single,System.Single)
  id: FloatEquals(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: FloatEquals(Single, Single, Single)
  nameWithType: MathHelper.FloatEquals(Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.FloatEquals(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: FloatEquals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 455
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChecks if a floating point Value is equal to another,\nwithin a certain tolerance.\n"
  example: []
  syntax:
    content: public static bool FloatEquals(float value1, float value2, float delta)
    parameters:
    - id: value1
      type: System.Single
      description: The first floating point Value.
    - id: value2
      type: System.Single
      description: The second floating point Value.
    - id: delta
      type: System.Single
      description: The floating point tolerance.
    return:
      type: System.Boolean
      description: True if the values are &quot;equal&quot;, false otherwise.
    content.vb: Public Shared Function FloatEquals(value1 As Single, value2 As Single, delta As Single) As Boolean
  overload: WaveEngine.Common.Math.MathHelper.FloatEquals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.MathHelper.FloatInRange(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.MathHelper.FloatInRange(System.Single,System.Single,System.Single)
  id: FloatInRange(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.MathHelper
  langs:
  - csharp
  - vb
  name: FloatInRange(Single, Single, Single)
  nameWithType: MathHelper.FloatInRange(Single, Single, Single)
  fullName: WaveEngine.Common.Math.MathHelper.FloatInRange(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: FloatInRange
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\MathHelper.cs
    startLine: 469
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChecks if a floating point Value is within a specified\nrange of values (inclusive).\n"
  example: []
  syntax:
    content: public static bool FloatInRange(float value, float min, float max)
    parameters:
    - id: value
      type: System.Single
      description: The Value to check.
    - id: min
      type: System.Single
      description: The minimum Value.
    - id: max
      type: System.Single
      description: The maximum Value.
    return:
      type: System.Boolean
      description: >-
        True if the Value is within the range specified,

        false otherwise.
    content.vb: Public Shared Function FloatInRange(value As Single, min As Single, max As Single) As Boolean
  overload: WaveEngine.Common.Math.MathHelper.FloatInRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.MathHelper.Barycentric*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Barycentric
  name: Barycentric
  nameWithType: MathHelper.Barycentric
  fullName: WaveEngine.Common.Math.MathHelper.Barycentric
- uid: WaveEngine.Common.Math.MathHelper.CatmullRom*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.CatmullRom
  name: CatmullRom
  nameWithType: MathHelper.CatmullRom
  fullName: WaveEngine.Common.Math.MathHelper.CatmullRom
- uid: WaveEngine.Common.Math.MathHelper.Clamp*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Clamp
  name: Clamp
  nameWithType: MathHelper.Clamp
  fullName: WaveEngine.Common.Math.MathHelper.Clamp
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: WaveEngine.Common.Math.MathHelper.Distance*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Distance
  name: Distance
  nameWithType: MathHelper.Distance
  fullName: WaveEngine.Common.Math.MathHelper.Distance
- uid: WaveEngine.Common.Math.MathHelper.Hermite*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Hermite
  name: Hermite
  nameWithType: MathHelper.Hermite
  fullName: WaveEngine.Common.Math.MathHelper.Hermite
- uid: WaveEngine.Common.Math.MathHelper.Area*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Area
  name: Area
  nameWithType: MathHelper.Area
  fullName: WaveEngine.Common.Math.MathHelper.Area
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math.MathHelper.Lerp*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Lerp
  name: Lerp
  nameWithType: MathHelper.Lerp
  fullName: WaveEngine.Common.Math.MathHelper.Lerp
- uid: WaveEngine.Common.Math.MathHelper.LerpClamped*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.LerpClamped
  name: LerpClamped
  nameWithType: MathHelper.LerpClamped
  fullName: WaveEngine.Common.Math.MathHelper.LerpClamped
- uid: WaveEngine.Common.Math.MathHelper.Max*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Max
  name: Max
  nameWithType: MathHelper.Max
  fullName: WaveEngine.Common.Math.MathHelper.Max
- uid: WaveEngine.Common.Math.MathHelper.Min*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.Min
  name: Min
  nameWithType: MathHelper.Min
  fullName: WaveEngine.Common.Math.MathHelper.Min
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.MathHelper.SmoothStep*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.SmoothStep
  name: SmoothStep
  nameWithType: MathHelper.SmoothStep
  fullName: WaveEngine.Common.Math.MathHelper.SmoothStep
- uid: WaveEngine.Common.Math.MathHelper.SmoothDamp*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.SmoothDamp
  name: SmoothDamp
  nameWithType: MathHelper.SmoothDamp
  fullName: WaveEngine.Common.Math.MathHelper.SmoothDamp
- uid: WaveEngine.Common.Math.MathHelper.ToDegrees*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.ToDegrees
  name: ToDegrees
  nameWithType: MathHelper.ToDegrees
  fullName: WaveEngine.Common.Math.MathHelper.ToDegrees
- uid: WaveEngine.Common.Math.MathHelper.ToRadians*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.ToRadians
  name: ToRadians
  nameWithType: MathHelper.ToRadians
  fullName: WaveEngine.Common.Math.MathHelper.ToRadians
- uid: WaveEngine.Common.Math.MathHelper.WrapAngle*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.WrapAngle
  name: WrapAngle
  nameWithType: MathHelper.WrapAngle
  fullName: WaveEngine.Common.Math.MathHelper.WrapAngle
- uid: WaveEngine.Common.Math.MathHelper.FloatEquals*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.FloatEquals
  name: FloatEquals
  nameWithType: MathHelper.FloatEquals
  fullName: WaveEngine.Common.Math.MathHelper.FloatEquals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Math.MathHelper.FloatInRange*
  commentId: Overload:WaveEngine.Common.Math.MathHelper.FloatInRange
  name: FloatInRange
  nameWithType: MathHelper.FloatInRange
  fullName: WaveEngine.Common.Math.MathHelper.FloatInRange
