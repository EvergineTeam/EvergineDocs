### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  commentId: T:WaveEngine.Framework.Threading.BackgroundTaskScheduler
  id: BackgroundTaskScheduler
  parent: WaveEngine.Framework.Threading
  children:
  - WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background
  - WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks
  - WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask(System.Threading.Tasks.Task)
  - WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  langs:
  - csharp
  - vb
  name: BackgroundTaskScheduler
  nameWithType: BackgroundTaskScheduler
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  type: Class
  source:
    id: BackgroundTaskScheduler
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\BackgroundTaskScheduler.cs
    startLine: 15
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nAn implementation of TaskScheduler that uses a Wave Engine background thread to execute tasks.\n"
  example: []
  syntax:
    content: 'public class BackgroundTaskScheduler : TaskScheduler'
    content.vb: >-
      Public Class BackgroundTaskScheduler

          Inherits TaskScheduler
  inheritance:
  - System.Object
  - System.Threading.Tasks.TaskScheduler
  inheritedMembers:
  - System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
  - System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  - System.Threading.Tasks.TaskScheduler.Default
  - System.Threading.Tasks.TaskScheduler.Current
  - System.Threading.Tasks.TaskScheduler.Id
  - System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background
  commentId: P:WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background
  id: Background
  parent: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  langs:
  - csharp
  - vb
  name: Background
  nameWithType: BackgroundTaskScheduler.Background
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background
  type: Property
  source:
    id: Background
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\BackgroundTaskScheduler.cs
    startLine: 50
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nGets the instance of <xref href=\"WaveEngine.Framework.Threading.BackgroundTaskScheduler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static BackgroundTaskScheduler Background { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Threading.BackgroundTaskScheduler
    content.vb: Public Shared ReadOnly Property Background As BackgroundTaskScheduler
  overload: WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks
  commentId: M:WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks
  id: GetScheduledTasks
  parent: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  langs:
  - csharp
  - vb
  name: GetScheduledTasks()
  nameWithType: BackgroundTaskScheduler.GetScheduledTasks()
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks()
  type: Method
  source:
    id: GetScheduledTasks
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\BackgroundTaskScheduler.cs
    startLine: 118
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nGenerates an enumerable of <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> instances\ncurrently queued to the scheduler waiting to be executed.\n"
  example: []
  syntax:
    content: protected override IEnumerable<Task> GetScheduledTasks()
    return:
      type: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}
      description: >
        An enumerable that allows traversal of tasks currently queued to this scheduler.
    content.vb: Protected Overrides Function GetScheduledTasks As IEnumerable(Of Task)
  overridden: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
  overload: WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThis scheduler is unable to generate a list of queued tasks at this time.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask(System.Threading.Tasks.Task)
  commentId: M:WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask(System.Threading.Tasks.Task)
  id: QueueTask(System.Threading.Tasks.Task)
  parent: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  langs:
  - csharp
  - vb
  name: QueueTask(Task)
  nameWithType: BackgroundTaskScheduler.QueueTask(Task)
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask(System.Threading.Tasks.Task)
  type: Method
  source:
    id: QueueTask
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\BackgroundTaskScheduler.cs
    startLine: 144
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nQueues a <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> to the scheduler.\n"
  example: []
  syntax:
    content: protected override void QueueTask(Task task)
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: The <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> to be queued.
    content.vb: Protected Overrides Sub QueueTask(task As Task)
  overridden: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  overload: WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  commentId: M:WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  id: TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  parent: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  langs:
  - csharp
  - vb
  name: TryExecuteTaskInline(Task, Boolean)
  nameWithType: BackgroundTaskScheduler.TryExecuteTaskInline(Task, Boolean)
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task, System.Boolean)
  type: Method
  source:
    id: TryExecuteTaskInline
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\BackgroundTaskScheduler.cs
    startLine: 165
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nDetermines whether the provided <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref>\ncan be executed synchronously in this call, and if it can, executes it.\n"
  example: []
  syntax:
    content: protected override bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued)
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: >-
        The <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> to be

        executed.
    - id: taskWasPreviouslyQueued
      type: System.Boolean
      description: >-
        A Boolean denoting whether or not task has previously been

        queued. If this parameter is True, then the task may have been previously queued (scheduled); if

        False, then the task is known not to have been queued, and this call is being made in order to

        execute the task inline without queueing it.
    return:
      type: System.Boolean
      description: A Boolean value indicating whether the task was executed inline.
    content.vb: Protected Overrides Function TryExecuteTaskInline(task As Task, taskWasPreviouslyQueued As Boolean) As Boolean
  overridden: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  overload: WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: WaveEngine.Framework.Threading
  commentId: N:WaveEngine.Framework.Threading
  name: WaveEngine.Framework.Threading
  nameWithType: WaveEngine.Framework.Threading
  fullName: WaveEngine.Framework.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskScheduler
  commentId: T:System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: true
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  commentId: M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: TryDequeue(Task)
  nameWithType: TaskScheduler.TryDequeue(Task)
  fullName: System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
    name: TryDequeue
    nameWithType: TaskScheduler.TryDequeue
    fullName: System.Threading.Tasks.TaskScheduler.TryDequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
    name: TryDequeue
    nameWithType: TaskScheduler.TryDequeue
    fullName: System.Threading.Tasks.TaskScheduler.TryDequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
  commentId: M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: FromCurrentSynchronizationContext()
  nameWithType: TaskScheduler.FromCurrentSynchronizationContext()
  fullName: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext()
  spec.csharp:
  - uid: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
    name: FromCurrentSynchronizationContext
    nameWithType: TaskScheduler.FromCurrentSynchronizationContext
    fullName: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
    name: FromCurrentSynchronizationContext
    nameWithType: TaskScheduler.FromCurrentSynchronizationContext
    fullName: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  commentId: M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: TryExecuteTask(Task)
  nameWithType: TaskScheduler.TryExecuteTask(Task)
  fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
    name: TryExecuteTask
    nameWithType: TaskScheduler.TryExecuteTask
    fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
    name: TryExecuteTask
    nameWithType: TaskScheduler.TryExecuteTask
    fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  commentId: P:System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: MaximumConcurrencyLevel
  nameWithType: TaskScheduler.MaximumConcurrencyLevel
  fullName: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
- uid: System.Threading.Tasks.TaskScheduler.Default
  commentId: P:System.Threading.Tasks.TaskScheduler.Default
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: Default
  nameWithType: TaskScheduler.Default
  fullName: System.Threading.Tasks.TaskScheduler.Default
- uid: System.Threading.Tasks.TaskScheduler.Current
  commentId: P:System.Threading.Tasks.TaskScheduler.Current
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: Current
  nameWithType: TaskScheduler.Current
  fullName: System.Threading.Tasks.TaskScheduler.Current
- uid: System.Threading.Tasks.TaskScheduler.Id
  commentId: P:System.Threading.Tasks.TaskScheduler.Id
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: Id
  nameWithType: TaskScheduler.Id
  fullName: System.Threading.Tasks.TaskScheduler.Id
- uid: System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  commentId: E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: UnobservedTaskException
  nameWithType: TaskScheduler.UnobservedTaskException
  fullName: System.Threading.Tasks.TaskScheduler.UnobservedTaskException
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler
  commentId: T:WaveEngine.Framework.Threading.BackgroundTaskScheduler
  parent: WaveEngine.Framework.Threading
  name: BackgroundTaskScheduler
  nameWithType: BackgroundTaskScheduler
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background*
  commentId: Overload:WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background
  name: Background
  nameWithType: BackgroundTaskScheduler.Background
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.Background
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
  commentId: M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: GetScheduledTasks()
  nameWithType: TaskScheduler.GetScheduledTasks()
  fullName: System.Threading.Tasks.TaskScheduler.GetScheduledTasks()
  spec.csharp:
  - uid: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
    name: GetScheduledTasks
    nameWithType: TaskScheduler.GetScheduledTasks
    fullName: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
    name: GetScheduledTasks
    nameWithType: TaskScheduler.GetScheduledTasks
    fullName: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks*
  commentId: Overload:WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks
  name: GetScheduledTasks
  nameWithType: BackgroundTaskScheduler.GetScheduledTasks
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.GetScheduledTasks
- uid: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}
  commentId: T:System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Task>
  nameWithType: IEnumerable<Task>
  fullName: System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>
  nameWithType.vb: IEnumerable(Of Task)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Threading.Tasks.Task)
  name.vb: IEnumerable(Of Task)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  commentId: M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: QueueTask(Task)
  nameWithType: TaskScheduler.QueueTask(Task)
  fullName: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
    name: QueueTask
    nameWithType: TaskScheduler.QueueTask
    fullName: System.Threading.Tasks.TaskScheduler.QueueTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
    name: QueueTask
    nameWithType: TaskScheduler.QueueTask
    fullName: System.Threading.Tasks.TaskScheduler.QueueTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask*
  commentId: Overload:WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask
  name: QueueTask
  nameWithType: BackgroundTaskScheduler.QueueTask
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.QueueTask
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  commentId: M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: true
  name: TryExecuteTaskInline(Task, Boolean)
  nameWithType: TaskScheduler.TryExecuteTaskInline(Task, Boolean)
  fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task, System.Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
    name: TryExecuteTaskInline
    nameWithType: TaskScheduler.TryExecuteTaskInline
    fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
    name: TryExecuteTaskInline
    nameWithType: TaskScheduler.TryExecuteTaskInline
    fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline*
  commentId: Overload:WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline
  name: TryExecuteTaskInline
  nameWithType: BackgroundTaskScheduler.TryExecuteTaskInline
  fullName: WaveEngine.Framework.Threading.BackgroundTaskScheduler.TryExecuteTaskInline
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
