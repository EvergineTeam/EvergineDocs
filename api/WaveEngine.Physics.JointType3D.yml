### YamlMime:ManagedReference
items:
- uid: WaveEngine.Physics.JointType3D
  commentId: T:WaveEngine.Physics.JointType3D
  id: JointType3D
  parent: WaveEngine.Physics
  children:
  - WaveEngine.Physics.JointType3D.BallSocket
  - WaveEngine.Physics.JointType3D.Fixed
  - WaveEngine.Physics.JointType3D.Hinge
  - WaveEngine.Physics.JointType3D.LineSlider
  - WaveEngine.Physics.JointType3D.MotorizedGrabSpring
  - WaveEngine.Physics.JointType3D.PlaneSlider
  - WaveEngine.Physics.JointType3D.PointPointDistance
  - WaveEngine.Physics.JointType3D.Prismatic
  - WaveEngine.Physics.JointType3D.SwivelHinge
  - WaveEngine.Physics.JointType3D.Universal
  langs:
  - csharp
  - vb
  name: JointType3D
  nameWithType: JointType3D
  fullName: WaveEngine.Physics.JointType3D
  type: Enum
  source:
    id: JointType3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 12
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nRepresent a 3d joint type.\n"
  example: []
  syntax:
    content: public enum JointType3D
    content.vb: Public Enum JointType3D
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: WaveEngine.Physics.JointType3D.BallSocket
  commentId: F:WaveEngine.Physics.JointType3D.BallSocket
  id: BallSocket
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: BallSocket
  nameWithType: JointType3D.BallSocket
  fullName: WaveEngine.Physics.JointType3D.BallSocket
  type: Field
  source:
    id: BallSocket
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 21
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe BallSocketJoint restricts all three linear degrees of freedom. Each entity has a point attached and the\nconstraint attempts to keep the two points at the same location.\nBallSocketJoints are very common and act as the linear component of many constraint configurations. For\nexample, in a ragdoll, every joint has a BallSocketJoint to keep the body together (along with other constraints\nto handle angular motion).\n"
  example: []
  syntax:
    content: BallSocket = 0
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.Fixed
  commentId: F:WaveEngine.Physics.JointType3D.Fixed
  id: Fixed
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: Fixed
  nameWithType: JointType3D.Fixed
  fullName: WaveEngine.Physics.JointType3D.Fixed
  type: Field
  source:
    id: Fixed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 30
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe FixedJoints restricts one angular degree of freedom. Each entity has an axis attached and the constraint\nattempts to prevent any relative twisting motion around the axes.\nFixedJoints have a singularity that can cause instability when the axes are folded back onto themselves. Prevent\nthis configuration from occurring using other limits or by ensuring the connected physical entities will collide\nbefore it can happen.\n"
  example: []
  syntax:
    content: Fixed = 1
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.Hinge
  commentId: F:WaveEngine.Physics.JointType3D.Hinge
  id: Hinge
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: Hinge
  nameWithType: JointType3D.Hinge
  fullName: WaveEngine.Physics.JointType3D.Hinge
  type: Field
  source:
    id: Hinge
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 37
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe HingeJoint allows one angular degree of freedom between two entities. It is composed of a BallSocketJoint\nand RevoluteAngularJoint.\nHingeJoints are commonly used for door hinges, elbows, and axis joints.\n"
  example: []
  syntax:
    content: Hinge = 2
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.PointPointDistance
  commentId: F:WaveEngine.Physics.JointType3D.PointPointDistance
  id: PointPointDistance
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: PointPointDistance
  nameWithType: JointType3D.PointPointDistance
  fullName: WaveEngine.Physics.JointType3D.PointPointDistance
  type: Field
  source:
    id: PointPointDistance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 45
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe PointPointDistanceJoint removes a single linear degree of freedom. Each entity has a point attached and the\nconstraint attempts to keep them at the same distance.\nA target distance of zero will be difficult to maintain since the constraint only works on a single degree of\nfreedom instead of three. If zero distance is desired between the anchor points, consider using a BallSocketJoint.\n"
  example: []
  syntax:
    content: PointPointDistance = 3
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.LineSlider
  commentId: F:WaveEngine.Physics.JointType3D.LineSlider
  id: LineSlider
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: LineSlider
  nameWithType: JointType3D.LineSlider
  fullName: WaveEngine.Physics.JointType3D.LineSlider
  type: Field
  source:
    id: LineSlider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 52
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe LineSliderJoint is created from a PointOnLineJoint and a RevoluteAngularJoint. This leaves the entities with\none linear sliding degree of freedom and one angular degree of freedom.\nThe LineSliderJoint also provides a LinearAxisLimit and a LinearAxisMotor, which are inactive by default.\n"
  example: []
  syntax:
    content: LineSlider = 4
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.PlaneSlider
  commentId: F:WaveEngine.Physics.JointType3D.PlaneSlider
  id: PlaneSlider
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: PlaneSlider
  nameWithType: JointType3D.PlaneSlider
  fullName: WaveEngine.Physics.JointType3D.PlaneSlider
  type: Field
  source:
    id: PlaneSlider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 59
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe PlaneSliderJoint restricts a single linear degree of freedom. It is created from a PointOnPlaneJoint and\na LinearAxisLimit and LinearAxisMotor for each of two axes on the plane. The limits and motors are inactive\nby default.\n"
  example: []
  syntax:
    content: PlaneSlider = 5
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.Prismatic
  commentId: F:WaveEngine.Physics.JointType3D.Prismatic
  id: Prismatic
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: Prismatic
  nameWithType: JointType3D.Prismatic
  fullName: WaveEngine.Physics.JointType3D.Prismatic
  type: Field
  source:
    id: Prismatic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 66
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe PrismaticJoint allows a single sliding linear degree of freedom and zero angular degrees of freedom\nbetween two entities. It is created from a PointOnLineJoint and a NoRotationConstraint.\nThe joint also provides a LinearAxisLimit and a LinearAxisMotor which are initially inactive.\n"
  example: []
  syntax:
    content: Prismatic = 6
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.SwivelHinge
  commentId: F:WaveEngine.Physics.JointType3D.SwivelHinge
  id: SwivelHinge
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: SwivelHinge
  nameWithType: JointType3D.SwivelHinge
  fullName: WaveEngine.Physics.JointType3D.SwivelHinge
  type: Field
  source:
    id: SwivelHinge
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 74
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe SwivelHingeJoint allows two angular degrees of freedom between two entities. It is comprised of a\nBallSocketJoint and a SwivelHingeAngularJoint.\nThe joint also provides control over the free degrees of freedom through its RevoluteLimit, RevoluteMotor,\nTwistLimit, and TwistMotor which are initially inactive.\n"
  example: []
  syntax:
    content: SwivelHinge = 7
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.Universal
  commentId: F:WaveEngine.Physics.JointType3D.Universal
  id: Universal
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: Universal
  nameWithType: JointType3D.Universal
  fullName: WaveEngine.Physics.JointType3D.Universal
  type: Field
  source:
    id: Universal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 83
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThe UniversalJoint allows two angular degrees of freedom between two entities. It is comprised of a\nBallSocketJoint and a TwistJoint.  It’s useful for transferring twist motion around angles, such as in vehicle\ndrive shafts.  The UniversalJoint also provides a TwistLimit and TwistMotor which are initially inactive.\nThese are not complementary to the TwistJoint; the TwistJoint should be inactive if either the limit or motor\nis active.\n"
  example: []
  syntax:
    content: Universal = 8
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: WaveEngine.Physics.JointType3D.MotorizedGrabSpring
  commentId: F:WaveEngine.Physics.JointType3D.MotorizedGrabSpring
  id: MotorizedGrabSpring
  parent: WaveEngine.Physics.JointType3D
  langs:
  - csharp
  - vb
  name: MotorizedGrabSpring
  nameWithType: JointType3D.MotorizedGrabSpring
  fullName: WaveEngine.Physics.JointType3D.MotorizedGrabSpring
  type: Field
  source:
    id: MotorizedGrabSpring
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\JointType3D.cs
    startLine: 88
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nMotorized is a special joint to grab an Entity and move it on the physic space.\n"
  example: []
  syntax:
    content: MotorizedGrabSpring = 9
    return:
      type: WaveEngine.Physics.JointType3D
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: WaveEngine.Physics
  commentId: N:WaveEngine.Physics
  name: WaveEngine.Physics
  nameWithType: WaveEngine.Physics
  fullName: WaveEngine.Physics
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Physics.JointType3D
  commentId: T:WaveEngine.Physics.JointType3D
  parent: WaveEngine.Physics
  name: JointType3D
  nameWithType: JointType3D
  fullName: WaveEngine.Physics.JointType3D
