### YamlMime:ManagedReference
items:
- uid: WaveEngine.Physics.PhysicsJoint3D
  commentId: T:WaveEngine.Physics.PhysicsJoint3D
  id: PhysicsJoint3D
  parent: WaveEngine.Physics
  children:
  - WaveEngine.Physics.PhysicsJoint3D.#ctor(WaveEngine.Physics.JointType3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.Simulation3D,WaveEngine.Common.Math.Vector3[])
  - WaveEngine.Physics.PhysicsJoint3D.BodyA
  - WaveEngine.Physics.PhysicsJoint3D.BodyB
  - WaveEngine.Physics.PhysicsJoint3D.GrabLocation
  - WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled
  - WaveEngine.Physics.PhysicsJoint3D.JointType
  - WaveEngine.Physics.PhysicsJoint3D.MotorDamping
  - WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce
  - WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis
  - WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal
  - WaveEngine.Physics.PhysicsJoint3D.MotorStiffness
  - WaveEngine.Physics.PhysicsJoint3D.MotorVelocity
  langs:
  - csharp
  - vb
  name: PhysicsJoint3D
  nameWithType: PhysicsJoint3D
  fullName: WaveEngine.Physics.PhysicsJoint3D
  type: Class
  source:
    id: PhysicsJoint3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 18
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nThis class represent a 3D physics joint and connects two entities together.\nAll Joints restrict some degrees of freedom, seeking a specific configuration.\n"
  example: []
  syntax:
    content: public class PhysicsJoint3D
    content.vb: Public Class PhysicsJoint3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled
  id: IsMotorEnabled
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: IsMotorEnabled
  nameWithType: PhysicsJoint3D.IsMotorEnabled
  fullName: WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled
  type: Property
  source:
    id: IsMotorEnabled
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 60
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the motor is enabled. Only Hinge (velocity motor) and Line (servo motor) joints can be motorized.\n"
  example: []
  syntax:
    content: public bool IsMotorEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMotorEnabled As Boolean
  overload: WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorVelocity
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.MotorVelocity
  id: MotorVelocity
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: MotorVelocity
  nameWithType: PhysicsJoint3D.MotorVelocity
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorVelocity
  type: Property
  source:
    id: MotorVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 90
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether Motor speed. This property must be used with IsMotorEnabled Property. Only hinge joints can be motorized.\n"
  example: []
  syntax:
    content: public float MotorVelocity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MotorVelocity As Single
  overload: WaveEngine.Physics.PhysicsJoint3D.MotorVelocity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce
  id: MotorMaxForce
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: MotorMaxForce
  nameWithType: PhysicsJoint3D.MotorMaxForce
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce
  type: Property
  source:
    id: MotorMaxForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 115
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the Motor Maximum Force. This property must be used with IsMotorEnabled Property and MotorVelocity. Only Hinge and Line joints can be motorized.\n"
  example: []
  syntax:
    content: public float MotorMaxForce { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MotorMaxForce As Single
  overload: WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorDamping
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.MotorDamping
  id: MotorDamping
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: MotorDamping
  nameWithType: PhysicsJoint3D.MotorDamping
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorDamping
  type: Property
  source:
    id: MotorDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 145
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the Motor damping. This property must be used with IsMotorEnabled Property and MotorVelocity. Only hinge joints can be motorized.\n"
  example: []
  syntax:
    content: public float MotorDamping { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MotorDamping As Single
  overload: WaveEngine.Physics.PhysicsJoint3D.MotorDamping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis
  id: MotorServoAxis
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: MotorServoAxis
  nameWithType: PhysicsJoint3D.MotorServoAxis
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis
  type: Property
  source:
    id: MotorServoAxis
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 177
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the Motor Servo World axis. This property must be used with IsMotorEnabled Property. Only Line joints can be Servo Motorized.\n"
  example: []
  syntax:
    content: public Vector3 MotorServoAxis { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Property MotorServoAxis As Vector3
  overload: WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorStiffness
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.MotorStiffness
  id: MotorStiffness
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: MotorStiffness
  nameWithType: PhysicsJoint3D.MotorStiffness
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorStiffness
  type: Property
  source:
    id: MotorStiffness
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 202
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the Servo Motor Stiffness. This property must be used with IsMotorEnabled Property. Only Line joints can be Servo Motorized.\n"
  example: []
  syntax:
    content: public float MotorStiffness { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MotorStiffness As Single
  overload: WaveEngine.Physics.PhysicsJoint3D.MotorStiffness*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal
  id: MotorServoGoal
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: MotorServoGoal
  nameWithType: PhysicsJoint3D.MotorServoGoal
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal
  type: Property
  source:
    id: MotorServoGoal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 227
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets a value indicating whether the Servo Motor Goal Distance. This property must be used with IsMotorEnabled Property. Only Line joints can be Servo Motorized.\n"
  example: []
  syntax:
    content: public float MotorServoGoal { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MotorServoGoal As Single
  overload: WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.BodyA
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.BodyA
  id: BodyA
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: BodyA
  nameWithType: PhysicsJoint3D.BodyA
  fullName: WaveEngine.Physics.PhysicsJoint3D.BodyA
  type: Property
  source:
    id: BodyA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 255
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets the first physics body.\n"
  example: []
  syntax:
    content: public PhysicsBody3D BodyA { get; }
    parameters: []
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: "\nThe body of this instance.\n"
    content.vb: Public ReadOnly Property BodyA As PhysicsBody3D
  overload: WaveEngine.Physics.PhysicsJoint3D.BodyA*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Physics.PhysicsJoint3D.BodyB
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.BodyB
  id: BodyB
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: BodyB
  nameWithType: PhysicsJoint3D.BodyB
  fullName: WaveEngine.Physics.PhysicsJoint3D.BodyB
  type: Property
  source:
    id: BodyB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 263
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets the second physics body.\n"
  example: []
  syntax:
    content: public PhysicsBody3D BodyB { get; }
    parameters: []
    return:
      type: WaveEngine.Physics.PhysicsBody3D
      description: "\nThe body of this instace.\n"
    content.vb: Public ReadOnly Property BodyB As PhysicsBody3D
  overload: WaveEngine.Physics.PhysicsJoint3D.BodyB*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Physics.PhysicsJoint3D.JointType
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.JointType
  id: JointType
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: JointType
  nameWithType: PhysicsJoint3D.JointType
  fullName: WaveEngine.Physics.PhysicsJoint3D.JointType
  type: Property
  source:
    id: JointType
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 271
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets the type of the joint.\n"
  example: []
  syntax:
    content: public JointType3D JointType { get; }
    parameters: []
    return:
      type: WaveEngine.Physics.JointType3D
      description: "\nThe type of the joint.\n"
    content.vb: Public ReadOnly Property JointType As JointType3D
  overload: WaveEngine.Physics.PhysicsJoint3D.JointType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Physics.PhysicsJoint3D.GrabLocation
  commentId: P:WaveEngine.Physics.PhysicsJoint3D.GrabLocation
  id: GrabLocation
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: GrabLocation
  nameWithType: PhysicsJoint3D.GrabLocation
  fullName: WaveEngine.Physics.PhysicsJoint3D.GrabLocation
  type: Property
  source:
    id: GrabLocation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 296
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nGets or sets Physic Entity Grab Location\n"
  example: []
  syntax:
    content: public Vector3 GrabLocation { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Property GrabLocation As Vector3
  overload: WaveEngine.Physics.PhysicsJoint3D.GrabLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Physics.PhysicsJoint3D.#ctor(WaveEngine.Physics.JointType3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.Simulation3D,WaveEngine.Common.Math.Vector3[])
  commentId: M:WaveEngine.Physics.PhysicsJoint3D.#ctor(WaveEngine.Physics.JointType3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.Simulation3D,WaveEngine.Common.Math.Vector3[])
  id: '#ctor(WaveEngine.Physics.JointType3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.PhysicsBody3D,WaveEngine.Physics.Simulation3D,WaveEngine.Common.Math.Vector3[])'
  parent: WaveEngine.Physics.PhysicsJoint3D
  langs:
  - csharp
  - vb
  name: PhysicsJoint3D(JointType3D, PhysicsBody3D, PhysicsBody3D, Simulation3D, Vector3[])
  nameWithType: PhysicsJoint3D.PhysicsJoint3D(JointType3D, PhysicsBody3D, PhysicsBody3D, Simulation3D, Vector3[])
  fullName: WaveEngine.Physics.PhysicsJoint3D.PhysicsJoint3D(WaveEngine.Physics.JointType3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.Simulation3D, WaveEngine.Common.Math.Vector3[])
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Physics\Shared\PhysicsJoint3D.cs
    startLine: 335
  assemblies:
  - WaveEngine.Physics
  namespace: WaveEngine.Physics
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Physics.PhysicsJoint3D\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PhysicsJoint3D(JointType3D jointType, PhysicsBody3D bodyA, PhysicsBody3D bodyB, Simulation3D simulation, params Vector3[] parameters)
    parameters:
    - id: jointType
      type: WaveEngine.Physics.JointType3D
      description: Type of the joint.
    - id: bodyA
      type: WaveEngine.Physics.PhysicsBody3D
      description: Fist physics body.
    - id: bodyB
      type: WaveEngine.Physics.PhysicsBody3D
      description: Second physics body.
    - id: simulation
      type: WaveEngine.Physics.Simulation3D
      description: Handle to <xref href="WaveEngine.Physics.Simulation3D" data-throw-if-not-resolved="false"></xref>.
    - id: parameters
      type: WaveEngine.Common.Math.Vector3[]
      description: The parameters.
    content.vb: Public Sub New(jointType As JointType3D, bodyA As PhysicsBody3D, bodyB As PhysicsBody3D, simulation As Simulation3D, ParamArray parameters As Vector3())
  overload: WaveEngine.Physics.PhysicsJoint3D.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Fist physics body cannot be null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Error invalid number of parameters
  nameWithType.vb: PhysicsJoint3D.PhysicsJoint3D(JointType3D, PhysicsBody3D, PhysicsBody3D, Simulation3D, Vector3())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Physics.PhysicsJoint3D.PhysicsJoint3D(WaveEngine.Physics.JointType3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.PhysicsBody3D, WaveEngine.Physics.Simulation3D, WaveEngine.Common.Math.Vector3())
  name.vb: PhysicsJoint3D(JointType3D, PhysicsBody3D, PhysicsBody3D, Simulation3D, Vector3())
references:
- uid: WaveEngine.Physics
  commentId: N:WaveEngine.Physics
  name: WaveEngine.Physics
  nameWithType: WaveEngine.Physics
  fullName: WaveEngine.Physics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled
  name: IsMotorEnabled
  nameWithType: PhysicsJoint3D.IsMotorEnabled
  fullName: WaveEngine.Physics.PhysicsJoint3D.IsMotorEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorVelocity*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.MotorVelocity
  name: MotorVelocity
  nameWithType: PhysicsJoint3D.MotorVelocity
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorVelocity
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce
  name: MotorMaxForce
  nameWithType: PhysicsJoint3D.MotorMaxForce
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorMaxForce
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorDamping*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.MotorDamping
  name: MotorDamping
  nameWithType: PhysicsJoint3D.MotorDamping
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorDamping
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis
  name: MotorServoAxis
  nameWithType: PhysicsJoint3D.MotorServoAxis
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorServoAxis
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorStiffness*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.MotorStiffness
  name: MotorStiffness
  nameWithType: PhysicsJoint3D.MotorStiffness
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorStiffness
- uid: WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal
  name: MotorServoGoal
  nameWithType: PhysicsJoint3D.MotorServoGoal
  fullName: WaveEngine.Physics.PhysicsJoint3D.MotorServoGoal
- uid: WaveEngine.Physics.PhysicsJoint3D.BodyA*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.BodyA
  name: BodyA
  nameWithType: PhysicsJoint3D.BodyA
  fullName: WaveEngine.Physics.PhysicsJoint3D.BodyA
- uid: WaveEngine.Physics.PhysicsBody3D
  commentId: T:WaveEngine.Physics.PhysicsBody3D
  parent: WaveEngine.Physics
  name: PhysicsBody3D
  nameWithType: PhysicsBody3D
  fullName: WaveEngine.Physics.PhysicsBody3D
- uid: WaveEngine.Physics.PhysicsJoint3D.BodyB*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.BodyB
  name: BodyB
  nameWithType: PhysicsJoint3D.BodyB
  fullName: WaveEngine.Physics.PhysicsJoint3D.BodyB
- uid: WaveEngine.Physics.PhysicsJoint3D.JointType*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.JointType
  name: JointType
  nameWithType: PhysicsJoint3D.JointType
  fullName: WaveEngine.Physics.PhysicsJoint3D.JointType
- uid: WaveEngine.Physics.JointType3D
  commentId: T:WaveEngine.Physics.JointType3D
  parent: WaveEngine.Physics
  name: JointType3D
  nameWithType: JointType3D
  fullName: WaveEngine.Physics.JointType3D
- uid: WaveEngine.Physics.PhysicsJoint3D.GrabLocation*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.GrabLocation
  name: GrabLocation
  nameWithType: PhysicsJoint3D.GrabLocation
  fullName: WaveEngine.Physics.PhysicsJoint3D.GrabLocation
- uid: WaveEngine.Physics.PhysicsJoint3D
  commentId: T:WaveEngine.Physics.PhysicsJoint3D
  parent: WaveEngine.Physics
  name: PhysicsJoint3D
  nameWithType: PhysicsJoint3D
  fullName: WaveEngine.Physics.PhysicsJoint3D
- uid: WaveEngine.Physics.Simulation3D
  commentId: T:WaveEngine.Physics.Simulation3D
  parent: WaveEngine.Physics
  name: Simulation3D
  nameWithType: Simulation3D
  fullName: WaveEngine.Physics.Simulation3D
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: WaveEngine.Physics.PhysicsJoint3D.#ctor*
  commentId: Overload:WaveEngine.Physics.PhysicsJoint3D.#ctor
  name: PhysicsJoint3D
  nameWithType: PhysicsJoint3D.PhysicsJoint3D
  fullName: WaveEngine.Physics.PhysicsJoint3D.PhysicsJoint3D
- uid: WaveEngine.Common.Math.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: WaveEngine.Common.Math.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: WaveEngine.Common.Math.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ()
    nameWithType: ()
    fullName: ()
