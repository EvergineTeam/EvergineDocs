### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Scene
  commentId: T:WaveEngine.Framework.Scene
  id: Scene
  parent: WaveEngine.Framework
  children:
  - WaveEngine.Framework.Scene.#ctor
  - WaveEngine.Framework.Scene.AddSceneBehavior(WaveEngine.Framework.SceneBehavior,WaveEngine.Framework.SceneBehavior.Order)
  - WaveEngine.Framework.Scene.Assets
  - WaveEngine.Framework.Scene.BehaviorManager
  - WaveEngine.Framework.Scene.Closed
  - WaveEngine.Framework.Scene.CreateScene
  - WaveEngine.Framework.Scene.Dispose
  - WaveEngine.Framework.Scene.Dispose(System.Boolean)
  - WaveEngine.Framework.Scene.End
  - WaveEngine.Framework.Scene.EntityManager
  - WaveEngine.Framework.Scene.Finalize
  - WaveEngine.Framework.Scene.Initialize(WaveEngine.Framework.Services.GraphicsDevice)
  - WaveEngine.Framework.Scene.IsDisposed
  - WaveEngine.Framework.Scene.IsFinished
  - WaveEngine.Framework.Scene.IsInitialized
  - WaveEngine.Framework.Scene.IsPaused
  - WaveEngine.Framework.Scene.IsStarted
  - WaveEngine.Framework.Scene.IsVisible
  - WaveEngine.Framework.Scene.Load(System.String)
  - WaveEngine.Framework.Scene.Name
  - WaveEngine.Framework.Scene.NextStep(System.TimeSpan)
  - WaveEngine.Framework.Scene.Pause
  - WaveEngine.Framework.Scene.Paused
  - WaveEngine.Framework.Scene.PhysicsManager
  - WaveEngine.Framework.Scene.RefreshEntityPointers(System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer})
  - WaveEngine.Framework.Scene.RemoveSceneBehavior(WaveEngine.Framework.SceneBehavior)
  - WaveEngine.Framework.Scene.RenderManager
  - WaveEngine.Framework.Scene.Resume
  - WaveEngine.Framework.Scene.Resumed
  - WaveEngine.Framework.Scene.Speed
  - WaveEngine.Framework.Scene.Start
  - WaveEngine.Framework.Scene.Started
  - WaveEngine.Framework.Scene.SupportedBehavior
  - WaveEngine.Framework.Scene.VirtualScreenManager
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: Scene
  fullName: WaveEngine.Framework.Scene
  type: Class
  source:
    id: Scene
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 56
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nA <xref href=\"WaveEngine.Framework.Scene\" data-throw-if-not-resolved=\"false\"></xref> is a collection of different manager classes that will handle the\nmaintenance of the different <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"WaveEngine.Framework.Component\" data-throw-if-not-resolved=\"false\"></xref> instances\nthat are associated with a given <xref href=\"WaveEngine.Framework.Scene\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p><strong>Scene managers</strong></p><ul><li><xref href=\"WaveEngine.Framework.Scene.EntityManager\" data-throw-if-not-resolved=\"false\"></xref> handles the adding or removal of <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> instances.</li><li><xref href=\"WaveEngine.Framework.Scene.BehaviorManager\" data-throw-if-not-resolved=\"false\"></xref> handles the update of <xref href=\"WaveEngine.Framework.Component\" data-throw-if-not-resolved=\"false\"></xref> instances.</li><li><xref href=\"WaveEngine.Framework.Scene.RenderManager\" data-throw-if-not-resolved=\"false\"></xref> handles the drawing of <xref href=\"WaveEngine.Framework.Component\" data-throw-if-not-resolved=\"false\"></xref> instances.</li><li><xref href=\"WaveEngine.Framework.Services.AssetsContainer\" data-throw-if-not-resolved=\"false\"></xref> handles the loading of resources needed by <xref href=\"WaveEngine.Framework.Component\" data-throw-if-not-resolved=\"false\"></xref> instances.</li></ul>\n<example>\n#### Recipes and samples\n<ul><li>[Add Scene recipe](../recipes/Basic/Create-New-Scenes.md)</li><li>[Navigate Between Scenes recipe](../recipes/Basic/Navigate-Between-Scenes.md)</li><li>[Navigation Flow sample](https://github.com/WaveEngine/Samples/tree/master/Basic/NavigationFlow)</li></ul>\n</example>\n"
  example: []
  syntax:
    content: 'public abstract class Scene : IDisposable'
    content.vb: >-
      Public MustInherit Class Scene

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(System.TimeSpan)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(System.Action)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(System.TimeSpan)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(System.Func{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Services.IGameAction)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(System.Func{System.Boolean},System.Int32)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Common.Media.MusicInfo)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Common.Media.VideoInfo)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Components.Gestures.TouchGestures)
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Func{WaveEngine.Framework.Services.IGameAction}[])
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction[])
  - WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Framework.Scene.Name
  commentId: F:WaveEngine.Framework.Scene.Name
  id: Name
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Scene.Name
  fullName: WaveEngine.Framework.Scene.Name
  type: Field
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 139
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nThe name of the scene.\n"
  example: []
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Closed
  commentId: E:WaveEngine.Framework.Scene.Closed
  id: Closed
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Closed
  nameWithType: Scene.Closed
  fullName: WaveEngine.Framework.Scene.Closed
  type: Event
  source:
    id: Closed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 154
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nOccurs when this instance has been closed.\n"
  example: []
  syntax:
    content: public event EventHandler Closed
    return:
      type: System.EventHandler
    content.vb: Public Event Closed As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Started
  commentId: E:WaveEngine.Framework.Scene.Started
  id: Started
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Started
  nameWithType: Scene.Started
  fullName: WaveEngine.Framework.Scene.Started
  type: Event
  source:
    id: Started
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 159
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nOccurs when this instance has been Started.\n"
  example: []
  syntax:
    content: public event EventHandler Started
    return:
      type: System.EventHandler
    content.vb: Public Event Started As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Paused
  commentId: E:WaveEngine.Framework.Scene.Paused
  id: Paused
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Paused
  nameWithType: Scene.Paused
  fullName: WaveEngine.Framework.Scene.Paused
  type: Event
  source:
    id: Paused
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 164
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nOccurs when this instance has been paused.\n"
  example: []
  syntax:
    content: public event EventHandler Paused
    return:
      type: System.EventHandler
    content.vb: Public Event Paused As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Resumed
  commentId: E:WaveEngine.Framework.Scene.Resumed
  id: Resumed
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Resumed
  nameWithType: Scene.Resumed
  fullName: WaveEngine.Framework.Scene.Resumed
  type: Event
  source:
    id: Resumed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 169
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nOccurs when this instance has been resumed.\n"
  example: []
  syntax:
    content: public event EventHandler Resumed
    return:
      type: System.EventHandler
    content.vb: Public Event Resumed As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.EntityManager
  commentId: P:WaveEngine.Framework.Scene.EntityManager
  id: EntityManager
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: EntityManager
  nameWithType: Scene.EntityManager
  fullName: WaveEngine.Framework.Scene.EntityManager
  type: Property
  source:
    id: EntityManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 176
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets this instance&apos;s <xref href=\"WaveEngine.Framework.Scene.EntityManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EntityManager EntityManager { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Managers.EntityManager
    content.vb: Public ReadOnly Property EntityManager As EntityManager
  overload: WaveEngine.Framework.Scene.EntityManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.RenderManager
  commentId: P:WaveEngine.Framework.Scene.RenderManager
  id: RenderManager
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: RenderManager
  nameWithType: Scene.RenderManager
  fullName: WaveEngine.Framework.Scene.RenderManager
  type: Property
  source:
    id: RenderManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 198
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets this instance&apos;s <xref href=\"WaveEngine.Framework.Scene.RenderManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RenderManager RenderManager { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Managers.RenderManager
    content.vb: Public ReadOnly Property RenderManager As RenderManager
  overload: WaveEngine.Framework.Scene.RenderManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.VirtualScreenManager
  commentId: P:WaveEngine.Framework.Scene.VirtualScreenManager
  id: VirtualScreenManager
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: VirtualScreenManager
  nameWithType: Scene.VirtualScreenManager
  fullName: WaveEngine.Framework.Scene.VirtualScreenManager
  type: Property
  source:
    id: VirtualScreenManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 217
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets the virtual screen manager.\n"
  example: []
  syntax:
    content: public VirtualScreenManager VirtualScreenManager { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Managers.VirtualScreenManager
      description: "\nThe virtual screen manager.\n"
    content.vb: Public ReadOnly Property VirtualScreenManager As VirtualScreenManager
  overload: WaveEngine.Framework.Scene.VirtualScreenManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.BehaviorManager
  commentId: P:WaveEngine.Framework.Scene.BehaviorManager
  id: BehaviorManager
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: BehaviorManager
  nameWithType: Scene.BehaviorManager
  fullName: WaveEngine.Framework.Scene.BehaviorManager
  type: Property
  source:
    id: BehaviorManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 233
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets this instance&apos;s <xref href=\"WaveEngine.Framework.Scene.BehaviorManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BehaviorManager BehaviorManager { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Managers.BehaviorManager
    content.vb: Public ReadOnly Property BehaviorManager As BehaviorManager
  overload: WaveEngine.Framework.Scene.BehaviorManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.SupportedBehavior
  commentId: P:WaveEngine.Framework.Scene.SupportedBehavior
  id: SupportedBehavior
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: SupportedBehavior
  nameWithType: Scene.SupportedBehavior
  fullName: WaveEngine.Framework.Scene.SupportedBehavior
  type: Property
  source:
    id: SupportedBehavior
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 249
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets the family of supported behaviors\n"
  example: []
  syntax:
    content: protected FamilyType SupportedBehavior { get; set; }
    parameters: []
    return:
      type: WaveEngine.Framework.FamilyType
    content.vb: Protected Property SupportedBehavior As FamilyType
  overload: WaveEngine.Framework.Scene.SupportedBehavior*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Scene.PhysicsManager
  commentId: P:WaveEngine.Framework.Scene.PhysicsManager
  id: PhysicsManager
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: PhysicsManager
  nameWithType: Scene.PhysicsManager
  fullName: WaveEngine.Framework.Scene.PhysicsManager
  type: Property
  source:
    id: PhysicsManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 270
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets this instance&apos;s <xref href=\"WaveEngine.Framework.Scene.PhysicsManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PhysicsManager PhysicsManager { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Managers.PhysicsManager
    content.vb: Public ReadOnly Property PhysicsManager As PhysicsManager
  overload: WaveEngine.Framework.Scene.PhysicsManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.IsDisposed
  commentId: P:WaveEngine.Framework.Scene.IsDisposed
  id: IsDisposed
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: Scene.IsDisposed
  fullName: WaveEngine.Framework.Scene.IsDisposed
  type: Property
  source:
    id: IsDisposed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 289
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets a value indicating whether this instance is disposed.\n"
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is disposed; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: WaveEngine.Framework.Scene.IsDisposed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.Assets
  commentId: P:WaveEngine.Framework.Scene.Assets
  id: Assets
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Assets
  nameWithType: Scene.Assets
  fullName: WaveEngine.Framework.Scene.Assets
  type: Property
  source:
    id: Assets
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 300
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets this instance&apos;s <xref href=\"WaveEngine.Framework.Services.AssetsContainer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AssetsContainer Assets { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.AssetsContainer
    content.vb: Public ReadOnly Property Assets As AssetsContainer
  overload: WaveEngine.Framework.Scene.Assets*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.IsInitialized
  commentId: P:WaveEngine.Framework.Scene.IsInitialized
  id: IsInitialized
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: Scene.IsInitialized
  fullName: WaveEngine.Framework.Scene.IsInitialized
  type: Property
  source:
    id: IsInitialized
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 319
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets a value indicating whether this instance has been initialized.\n"
  example: []
  syntax:
    content: public bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance has been initialized; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsInitialized As Boolean
  overload: WaveEngine.Framework.Scene.IsInitialized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.IsStarted
  commentId: P:WaveEngine.Framework.Scene.IsStarted
  id: IsStarted
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: IsStarted
  nameWithType: Scene.IsStarted
  fullName: WaveEngine.Framework.Scene.IsStarted
  type: Property
  source:
    id: IsStarted
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 338
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets a value indicating whether this instance has been started.\n"
  example: []
  syntax:
    content: public bool IsStarted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance has been started; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsStarted As Boolean
  overload: WaveEngine.Framework.Scene.IsStarted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.IsFinished
  commentId: P:WaveEngine.Framework.Scene.IsFinished
  id: IsFinished
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: IsFinished
  nameWithType: Scene.IsFinished
  fullName: WaveEngine.Framework.Scene.IsFinished
  type: Property
  source:
    id: IsFinished
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 357
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets a value indicating whether this instance is finished.\n"
  example: []
  syntax:
    content: public bool IsFinished { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is finished; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsFinished As Boolean
  overload: WaveEngine.Framework.Scene.IsFinished*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.IsPaused
  commentId: P:WaveEngine.Framework.Scene.IsPaused
  id: IsPaused
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: Scene.IsPaused
  fullName: WaveEngine.Framework.Scene.IsPaused
  type: Property
  source:
    id: IsPaused
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 376
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets a value indicating whether this instance is paused.\n"
  example: []
  syntax:
    content: public bool IsPaused { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is paused; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsPaused As Boolean
  overload: WaveEngine.Framework.Scene.IsPaused*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Scene.IsVisible
  commentId: P:WaveEngine.Framework.Scene.IsVisible
  id: IsVisible
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: Scene.IsVisible
  fullName: WaveEngine.Framework.Scene.IsVisible
  type: Property
  source:
    id: IsVisible
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 395
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets a value indicating whether this instance is visible.\n"
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is visible; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsVisible As Boolean
  overload: WaveEngine.Framework.Scene.IsVisible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Speed
  commentId: P:WaveEngine.Framework.Scene.Speed
  id: Speed
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: Scene.Speed
  fullName: WaveEngine.Framework.Scene.Speed
  type: Property
  source:
    id: Speed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 429
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets the speed factor at which this instance is updated.\nIts values are included in [0, infinity].\nFor example, a value of 2 will make the scene to run at 2x times.\n"
  remarks: "\nThis value can be used to create fast forward or bullet time effects.\n"
  example: []
  syntax:
    content: public float Speed { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe speed factor at which this instance is updated.\n"
    content.vb: Public Property Speed As Single
  overload: WaveEngine.Framework.Scene.Speed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.#ctor
  commentId: M:WaveEngine.Framework.Scene.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Scene()
  nameWithType: Scene.Scene()
  fullName: WaveEngine.Framework.Scene.Scene()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 463
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Scene\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected Scene()
    content.vb: Protected Sub New
  overload: WaveEngine.Framework.Scene.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Scene.Finalize
  commentId: M:WaveEngine.Framework.Scene.Finalize
  id: Finalize
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: Scene.Finalize()
  fullName: WaveEngine.Framework.Scene.Finalize()
  type: Method
  source:
    id: Finalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 477
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nFinalizes an instance of the <xref href=\"WaveEngine.Framework.Scene\" data-throw-if-not-resolved=\"false\"></xref> class.\n<xref href=\"WaveEngine.Framework.Scene\" data-throw-if-not-resolved=\"false\"></xref> is reclaimed by garbage collection.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: WaveEngine.Framework.Scene.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Scene.Initialize(WaveEngine.Framework.Services.GraphicsDevice)
  commentId: M:WaveEngine.Framework.Scene.Initialize(WaveEngine.Framework.Services.GraphicsDevice)
  id: Initialize(WaveEngine.Framework.Services.GraphicsDevice)
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Initialize(GraphicsDevice)
  nameWithType: Scene.Initialize(GraphicsDevice)
  fullName: WaveEngine.Framework.Scene.Initialize(WaveEngine.Framework.Services.GraphicsDevice)
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 492
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nInitializes this instance.\n"
  example: []
  syntax:
    content: public void Initialize(GraphicsDevice graphicsDevice)
    parameters:
    - id: graphicsDevice
      type: WaveEngine.Framework.Services.GraphicsDevice
      description: The specific <xref href="WaveEngine.Framework.Services.GraphicsDevice" data-throw-if-not-resolved="false"></xref> that the application is using.
    content.vb: Public Sub Initialize(graphicsDevice As GraphicsDevice)
  overload: WaveEngine.Framework.Scene.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If graphicsDevice is null.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: If this instance has been disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.AddSceneBehavior(WaveEngine.Framework.SceneBehavior,WaveEngine.Framework.SceneBehavior.Order)
  commentId: M:WaveEngine.Framework.Scene.AddSceneBehavior(WaveEngine.Framework.SceneBehavior,WaveEngine.Framework.SceneBehavior.Order)
  id: AddSceneBehavior(WaveEngine.Framework.SceneBehavior,WaveEngine.Framework.SceneBehavior.Order)
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: AddSceneBehavior(SceneBehavior, SceneBehavior.Order)
  nameWithType: Scene.AddSceneBehavior(SceneBehavior, SceneBehavior.Order)
  fullName: WaveEngine.Framework.Scene.AddSceneBehavior(WaveEngine.Framework.SceneBehavior, WaveEngine.Framework.SceneBehavior.Order)
  type: Method
  source:
    id: AddSceneBehavior
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 570
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nAdds the scene behavior.\n"
  example: []
  syntax:
    content: public void AddSceneBehavior(SceneBehavior sceneBehavior, SceneBehavior.Order order)
    parameters:
    - id: sceneBehavior
      type: WaveEngine.Framework.SceneBehavior
      description: The scene behavior.
    - id: order
      type: WaveEngine.Framework.SceneBehavior.Order
      description: The order.
    content.vb: Public Sub AddSceneBehavior(sceneBehavior As SceneBehavior, order As SceneBehavior.Order)
  overload: WaveEngine.Framework.Scene.AddSceneBehavior*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <xref href="WaveEngine.Framework.SceneBehavior" data-throw-if-not-resolved="false"></xref> is null.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: If this instance has been disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.RemoveSceneBehavior(WaveEngine.Framework.SceneBehavior)
  commentId: M:WaveEngine.Framework.Scene.RemoveSceneBehavior(WaveEngine.Framework.SceneBehavior)
  id: RemoveSceneBehavior(WaveEngine.Framework.SceneBehavior)
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: RemoveSceneBehavior(SceneBehavior)
  nameWithType: Scene.RemoveSceneBehavior(SceneBehavior)
  fullName: WaveEngine.Framework.Scene.RemoveSceneBehavior(WaveEngine.Framework.SceneBehavior)
  type: Method
  source:
    id: RemoveSceneBehavior
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 604
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nRemoves the scene behavior.\n"
  example: []
  syntax:
    content: public void RemoveSceneBehavior(SceneBehavior sceneBehavior)
    parameters:
    - id: sceneBehavior
      type: WaveEngine.Framework.SceneBehavior
      description: The scene behavior.
    content.vb: Public Sub RemoveSceneBehavior(sceneBehavior As SceneBehavior)
  overload: WaveEngine.Framework.Scene.RemoveSceneBehavior*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <xref href="WaveEngine.Framework.SceneBehavior" data-throw-if-not-resolved="false"></xref> is null.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: If this instance has been disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Pause
  commentId: M:WaveEngine.Framework.Scene.Pause
  id: Pause
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: Scene.Pause()
  fullName: WaveEngine.Framework.Scene.Pause()
  type: Method
  source:
    id: Pause
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 624
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nPauses this instance.\n"
  example: []
  syntax:
    content: public virtual void Pause()
    content.vb: Public Overridable Sub Pause
  overload: WaveEngine.Framework.Scene.Pause*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: If this instance has been disposed.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Scene.Resume
  commentId: M:WaveEngine.Framework.Scene.Resume
  id: Resume
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: Scene.Resume()
  fullName: WaveEngine.Framework.Scene.Resume()
  type: Method
  source:
    id: Resume
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 646
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nResumes this instance.\n"
  example: []
  syntax:
    content: public virtual void Resume()
    content.vb: Public Overridable Sub Resume
  overload: WaveEngine.Framework.Scene.Resume*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: If this instance has been disposed.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: WaveEngine.Framework.Scene.NextStep(System.TimeSpan)
  commentId: M:WaveEngine.Framework.Scene.NextStep(System.TimeSpan)
  id: NextStep(System.TimeSpan)
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: NextStep(TimeSpan)
  nameWithType: Scene.NextStep(TimeSpan)
  fullName: WaveEngine.Framework.Scene.NextStep(System.TimeSpan)
  type: Method
  source:
    id: NextStep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 669
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nUpdate the scene one cycle.\n"
  example: []
  syntax:
    content: public void NextStep(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: The elapsed game time since the last update.
    content.vb: Public Sub NextStep(gameTime As TimeSpan)
  overload: WaveEngine.Framework.Scene.NextStep*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: If this instance has been disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Dispose
  commentId: M:WaveEngine.Framework.Scene.Dispose
  id: Dispose
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Scene.Dispose()
  fullName: WaveEngine.Framework.Scene.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 682
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: WaveEngine.Framework.Scene.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.Load(System.String)
  commentId: M:WaveEngine.Framework.Scene.Load(System.String)
  id: Load(System.String)
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: Scene.Load(String)
  fullName: WaveEngine.Framework.Scene.Load(System.String)
  type: Method
  source:
    id: Load
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 848
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nLoads the scene from a XML file.\n"
  example: []
  syntax:
    content: public void Load(string path)
    parameters:
    - id: path
      type: System.String
      description: Path of the scene file.
    content.vb: Public Sub Load(path As String)
  overload: WaveEngine.Framework.Scene.Load*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Scene.RefreshEntityPointers(System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer})
  commentId: M:WaveEngine.Framework.Scene.RefreshEntityPointers(System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer})
  id: RefreshEntityPointers(System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer})
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: RefreshEntityPointers(List<EntityPointer>)
  nameWithType: Scene.RefreshEntityPointers(List<EntityPointer>)
  fullName: WaveEngine.Framework.Scene.RefreshEntityPointers(System.Collections.Generic.List<WaveEngine.Framework.Models.Entities.EntityPointer>)
  type: Method
  source:
    id: RefreshEntityPointers
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 900
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nRefreshes the entiti links\n"
  example: []
  syntax:
    content: public void RefreshEntityPointers(List<EntityPointer> entityLinks)
    parameters:
    - id: entityLinks
      type: System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer}
      description: The entity link list
    content.vb: Public Sub RefreshEntityPointers(entityLinks As List(Of EntityPointer))
  overload: WaveEngine.Framework.Scene.RefreshEntityPointers*
  nameWithType.vb: Scene.RefreshEntityPointers(List(Of EntityPointer))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Scene.RefreshEntityPointers(System.Collections.Generic.List(Of WaveEngine.Framework.Models.Entities.EntityPointer))
  name.vb: RefreshEntityPointers(List(Of EntityPointer))
- uid: WaveEngine.Framework.Scene.CreateScene
  commentId: M:WaveEngine.Framework.Scene.CreateScene
  id: CreateScene
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: CreateScene()
  nameWithType: Scene.CreateScene()
  fullName: WaveEngine.Framework.Scene.CreateScene()
  type: Method
  source:
    id: CreateScene
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 926
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nCreates the scene.\n"
  remarks: "\nThis method is called before all <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> instances in this instance are initialized.\n"
  example: []
  syntax:
    content: protected abstract void CreateScene()
    content.vb: Protected MustOverride Sub CreateScene
  overload: WaveEngine.Framework.Scene.CreateScene*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: WaveEngine.Framework.Scene.Start
  commentId: M:WaveEngine.Framework.Scene.Start
  id: Start
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Scene.Start()
  fullName: WaveEngine.Framework.Scene.Start()
  type: Method
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 934
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nAllows to perform custom code when this instance is started.\n"
  remarks: "\nThis base method perfoms a layout pass.\n"
  example: []
  syntax:
    content: protected virtual void Start()
    content.vb: Protected Overridable Sub Start
  overload: WaveEngine.Framework.Scene.Start*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Framework.Scene.End
  commentId: M:WaveEngine.Framework.Scene.End
  id: End
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: End()
  nameWithType: Scene.End()
  fullName: WaveEngine.Framework.Scene.End()
  type: Method
  source:
    id: End
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 942
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nEnds this instance.\n"
  example: []
  syntax:
    content: protected virtual void End()
    content.vb: Protected Overridable Sub
  overload: WaveEngine.Framework.Scene.End*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Framework.Scene.Dispose(System.Boolean)
  commentId: M:WaveEngine.Framework.Scene.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: WaveEngine.Framework.Scene
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Scene.Dispose(Boolean)
  fullName: WaveEngine.Framework.Scene.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Scene.cs
    startLine: 950
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nReleases unmanaged and - optionally - managed resources\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: <code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: WaveEngine.Framework.Scene.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: WaveEngine.Framework.Scene
  commentId: T:WaveEngine.Framework.Scene
  parent: WaveEngine.Framework
  name: Scene
  nameWithType: Scene
  fullName: WaveEngine.Framework.Scene
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: WaveEngine.Framework.Component
  commentId: T:WaveEngine.Framework.Component
  parent: WaveEngine.Framework
  name: Component
  nameWithType: Component
  fullName: WaveEngine.Framework.Component
- uid: WaveEngine.Framework.Scene.EntityManager
  commentId: P:WaveEngine.Framework.Scene.EntityManager
  isExternal: true
- uid: WaveEngine.Framework.Scene.BehaviorManager
  commentId: P:WaveEngine.Framework.Scene.BehaviorManager
  isExternal: true
- uid: WaveEngine.Framework.Scene.RenderManager
  commentId: P:WaveEngine.Framework.Scene.RenderManager
  isExternal: true
- uid: WaveEngine.Framework.Services.AssetsContainer
  commentId: T:WaveEngine.Framework.Services.AssetsContainer
  parent: WaveEngine.Framework.Services
  name: AssetsContainer
  nameWithType: AssetsContainer
  fullName: WaveEngine.Framework.Services.AssetsContainer
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  name: CreateEmptyGameAction()
  nameWithType: GameActionFactory.CreateEmptyGameAction()
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction()
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
    name: CreateEmptyGameAction
    nameWithType: GameActionFactory.CreateEmptyGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
    name: CreateEmptyGameAction
    nameWithType: GameActionFactory.CreateEmptyGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  name: CreateDelayGameAction(TimeSpan)
  nameWithType: GameActionFactory.CreateDelayGameAction(TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(System.TimeSpan)
    name: CreateDelayGameAction
    nameWithType: GameActionFactory.CreateDelayGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(System.TimeSpan)
    name: CreateDelayGameAction
    nameWithType: GameActionFactory.CreateDelayGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(System.Action)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  name: CreateGameActionFromAction(Action)
  nameWithType: GameActionFactory.CreateGameActionFromAction(Action)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(System.Action)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(System.Action)
    name: CreateGameActionFromAction
    nameWithType: GameActionFactory.CreateGameActionFromAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(System.Action)
    name: CreateGameActionFromAction
    nameWithType: GameActionFactory.CreateGameActionFromAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  name: CreateWaitGameAction(TimeSpan)
  nameWithType: GameActionFactory.CreateWaitGameAction(TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(System.TimeSpan)
    name: CreateWaitGameAction
    nameWithType: GameActionFactory.CreateWaitGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(System.TimeSpan)
    name: CreateWaitGameAction
    nameWithType: GameActionFactory.CreateWaitGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(System.Func{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  name: CreateGameAction(Func<IGameAction>)
  nameWithType: GameActionFactory.CreateGameAction(Func<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(System.Func<WaveEngine.Framework.Services.IGameAction>)
  nameWithType.vb: GameActionFactory.CreateGameAction(Func(Of IGameAction))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(System.Func(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateGameAction(Func(Of IGameAction))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(System.Func{WaveEngine.Framework.Services.IGameAction})
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(System.Func{WaveEngine.Framework.Services.IGameAction})
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Services.IGameAction)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  name: CreateGameAction(IGameAction)
  nameWithType: GameActionFactory.CreateGameAction(IGameAction)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Services.IGameAction)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Services.IGameAction)
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Services.IGameAction)
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(System.Func{System.Boolean},System.Int32)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  name: CreateWaitConditionGameAction(Func<Boolean>, Int32)
  nameWithType: GameActionFactory.CreateWaitConditionGameAction(Func<Boolean>, Int32)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(System.Func<System.Boolean>, System.Int32)
  nameWithType.vb: GameActionFactory.CreateWaitConditionGameAction(Func(Of Boolean), Int32)
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(System.Func(Of System.Boolean), System.Int32)
  name.vb: CreateWaitConditionGameAction(Func(Of Boolean), Int32)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(System.Func{System.Boolean},System.Int32)
    name: CreateWaitConditionGameAction
    nameWithType: GameActionFactory.CreateWaitConditionGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(System.Func{System.Boolean},System.Int32)
    name: CreateWaitConditionGameAction
    nameWithType: GameActionFactory.CreateWaitConditionGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  name: CreateSingleAnimationGameAction(SingleAnimation, AnimationUI, DependencyProperty)
  nameWithType: GameActionFactory.CreateSingleAnimationGameAction(SingleAnimation, AnimationUI, DependencyProperty)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Animation.SingleAnimation, WaveEngine.Framework.Animation.AnimationUI, WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
    name: CreateSingleAnimationGameAction
    nameWithType: GameActionFactory.CreateSingleAnimationGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Animation.SingleAnimation
    name: SingleAnimation
    nameWithType: SingleAnimation
    fullName: WaveEngine.Framework.Animation.SingleAnimation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Animation.AnimationUI
    name: AnimationUI
    nameWithType: AnimationUI
    fullName: WaveEngine.Framework.Animation.AnimationUI
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
    name: CreateSingleAnimationGameAction
    nameWithType: GameActionFactory.CreateSingleAnimationGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Animation.SingleAnimation
    name: SingleAnimation
    nameWithType: SingleAnimation
    fullName: WaveEngine.Framework.Animation.SingleAnimation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Animation.AnimationUI
    name: AnimationUI
    nameWithType: AnimationUI
    fullName: WaveEngine.Framework.Animation.AnimationUI
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Common.Media.MusicInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  name: CreatePlayMusicGameAction(MusicInfo)
  nameWithType: GameActionFactory.CreatePlayMusicGameAction(MusicInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Common.Media.MusicInfo)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Common.Media.MusicInfo)
    name: CreatePlayMusicGameAction
    nameWithType: GameActionFactory.CreatePlayMusicGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Media.MusicInfo
    name: MusicInfo
    nameWithType: MusicInfo
    fullName: WaveEngine.Common.Media.MusicInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Common.Media.MusicInfo)
    name: CreatePlayMusicGameAction
    nameWithType: GameActionFactory.CreatePlayMusicGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Media.MusicInfo
    name: MusicInfo
    nameWithType: MusicInfo
    fullName: WaveEngine.Common.Media.MusicInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  name: CreatePlaySoundGameAction(SoundInfo, Single, Boolean)
  nameWithType: GameActionFactory.CreatePlaySoundGameAction(SoundInfo, Single, Boolean)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Sound.SoundInfo, System.Single, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
    name: CreatePlaySoundGameAction
    nameWithType: GameActionFactory.CreatePlaySoundGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Sound.SoundInfo
    name: SoundInfo
    nameWithType: SoundInfo
    fullName: WaveEngine.Framework.Sound.SoundInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
    name: CreatePlaySoundGameAction
    nameWithType: GameActionFactory.CreatePlaySoundGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Sound.SoundInfo
    name: SoundInfo
    nameWithType: SoundInfo
    fullName: WaveEngine.Framework.Sound.SoundInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Common.Media.VideoInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  name: CreatePlayVideoGameAction(VideoInfo)
  nameWithType: GameActionFactory.CreatePlayVideoGameAction(VideoInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Common.Media.VideoInfo)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Common.Media.VideoInfo)
    name: CreatePlayVideoGameAction
    nameWithType: GameActionFactory.CreatePlayVideoGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Media.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: WaveEngine.Common.Media.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Common.Media.VideoInfo)
    name: CreatePlayVideoGameAction
    nameWithType: GameActionFactory.CreatePlayVideoGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Media.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: WaveEngine.Common.Media.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Components.Gestures.TouchGestures)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  name: CreateWaitTapGameAction(TouchGestures)
  nameWithType: GameActionFactory.CreateWaitTapGameAction(TouchGestures)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Components.Gestures.TouchGestures)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Components.Gestures.TouchGestures)
    name: CreateWaitTapGameAction
    nameWithType: GameActionFactory.CreateWaitTapGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Components.Gestures.TouchGestures
    name: TouchGestures
    nameWithType: TouchGestures
    fullName: WaveEngine.Components.Gestures.TouchGestures
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Components.Gestures.TouchGestures)
    name: CreateWaitTapGameAction
    nameWithType: GameActionFactory.CreateWaitTapGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Components.Gestures.TouchGestures
    name: TouchGestures
    nameWithType: TouchGestures
    fullName: WaveEngine.Components.Gestures.TouchGestures
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  name: CreateParallelGameActions(IEnumerable<Func<IGameAction>>)
  nameWithType: GameActionFactory.CreateParallelGameActions(IEnumerable<Func<IGameAction>>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>)
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(IEnumerable(Of Func(Of IGameAction)))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction)))
  name.vb: CreateParallelGameActions(IEnumerable(Of Func(Of IGameAction)))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  name: CreateParallelGameActions(IEnumerable<IGameAction>)
  nameWithType: GameActionFactory.CreateParallelGameActions(IEnumerable<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>)
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(IEnumerable(Of IGameAction))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateParallelGameActions(IEnumerable(Of IGameAction))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Func{WaveEngine.Framework.Services.IGameAction}[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  name: CreateParallelGameActions(Func<IGameAction>[])
  nameWithType: GameActionFactory.CreateParallelGameActions(Func<IGameAction>[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Func<WaveEngine.Framework.Services.IGameAction>[])
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Func(Of IGameAction)())
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Func(Of WaveEngine.Framework.Services.IGameAction)())
  name.vb: CreateParallelGameActions(Func(Of IGameAction)())
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Func{WaveEngine.Framework.Services.IGameAction}[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(System.Func{WaveEngine.Framework.Services.IGameAction}[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  name: CreateParallelGameActions(IGameAction[])
  nameWithType: GameActionFactory.CreateParallelGameActions(IGameAction[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction[])
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(IGameAction())
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction())
  name.vb: CreateParallelGameActions(IGameAction())
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Services.IGameAction[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  parent: WaveEngine.Components.GameActions.GameActionFactory
  definition: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  name: CreateLoopGameActionUntil(Func<IGameAction>, Func<Boolean>)
  nameWithType: GameActionFactory.CreateLoopGameActionUntil(Func<IGameAction>, Func<Boolean>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(System.Func<WaveEngine.Framework.Services.IGameAction>, System.Func<System.Boolean>)
  nameWithType.vb: GameActionFactory.CreateLoopGameActionUntil(Func(Of IGameAction), Func(Of Boolean))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(System.Func(Of WaveEngine.Framework.Services.IGameAction), System.Func(Of System.Boolean))
  name.vb: CreateLoopGameActionUntil(Func(Of IGameAction), Func(Of Boolean))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
    name: CreateLoopGameActionUntil
    nameWithType: GameActionFactory.CreateLoopGameActionUntil
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
    name: CreateLoopGameActionUntil
    nameWithType: GameActionFactory.CreateLoopGameActionUntil
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  name: CreateEmptyGameAction(Scene)
  nameWithType: GameActionFactory.CreateEmptyGameAction(Scene)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
    name: CreateEmptyGameAction
    nameWithType: GameActionFactory.CreateEmptyGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction(WaveEngine.Framework.Scene)
    name: CreateEmptyGameAction
    nameWithType: GameActionFactory.CreateEmptyGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateEmptyGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory
  commentId: T:WaveEngine.Components.GameActions.GameActionFactory
  parent: WaveEngine.Components.GameActions
  name: GameActionFactory
  nameWithType: GameActionFactory
  fullName: WaveEngine.Components.GameActions.GameActionFactory
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  isExternal: true
  name: CreateDelayGameAction(Scene, TimeSpan)
  nameWithType: GameActionFactory.CreateDelayGameAction(Scene, TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene, System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
    name: CreateDelayGameAction
    nameWithType: GameActionFactory.CreateDelayGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
    name: CreateDelayGameAction
    nameWithType: GameActionFactory.CreateDelayGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateDelayGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
  isExternal: true
  name: CreateGameActionFromAction(Scene, Action)
  nameWithType: GameActionFactory.CreateGameActionFromAction(Scene, Action)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene, System.Action)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
    name: CreateGameActionFromAction
    nameWithType: GameActionFactory.CreateGameActionFromAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction(WaveEngine.Framework.Scene,System.Action)
    name: CreateGameActionFromAction
    nameWithType: GameActionFactory.CreateGameActionFromAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameActionFromAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
  isExternal: true
  name: CreateWaitGameAction(Scene, TimeSpan)
  nameWithType: GameActionFactory.CreateWaitGameAction(Scene, TimeSpan)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene, System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
    name: CreateWaitGameAction
    nameWithType: GameActionFactory.CreateWaitGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction(WaveEngine.Framework.Scene,System.TimeSpan)
    name: CreateWaitGameAction
    nameWithType: GameActionFactory.CreateWaitGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
  isExternal: true
  name: CreateGameAction(Scene, Func<IGameAction>)
  nameWithType: GameActionFactory.CreateGameAction(Scene, Func<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene, System.Func<WaveEngine.Framework.Services.IGameAction>)
  nameWithType.vb: GameActionFactory.CreateGameAction(Scene, Func(Of IGameAction))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene, System.Func(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateGameAction(Scene, Func(Of IGameAction))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction})
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
  name: CreateGameAction(Scene, IGameAction)
  nameWithType: GameActionFactory.CreateGameAction(Scene, IGameAction)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene, WaveEngine.Framework.Services.IGameAction)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction)
    name: CreateGameAction
    nameWithType: GameActionFactory.CreateGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
  isExternal: true
  name: CreateWaitConditionGameAction(Scene, Func<Boolean>, Int32)
  nameWithType: GameActionFactory.CreateWaitConditionGameAction(Scene, Func<Boolean>, Int32)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene, System.Func<System.Boolean>, System.Int32)
  nameWithType.vb: GameActionFactory.CreateWaitConditionGameAction(Scene, Func(Of Boolean), Int32)
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene, System.Func(Of System.Boolean), System.Int32)
  name.vb: CreateWaitConditionGameAction(Scene, Func(Of Boolean), Int32)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
    name: CreateWaitConditionGameAction
    nameWithType: GameActionFactory.CreateWaitConditionGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction(WaveEngine.Framework.Scene,System.Func{System.Boolean},System.Int32)
    name: CreateWaitConditionGameAction
    nameWithType: GameActionFactory.CreateWaitConditionGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitConditionGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
  name: CreateSingleAnimationGameAction(Scene, SingleAnimation, AnimationUI, DependencyProperty)
  nameWithType: GameActionFactory.CreateSingleAnimationGameAction(Scene, SingleAnimation, AnimationUI, DependencyProperty)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene, WaveEngine.Framework.Animation.SingleAnimation, WaveEngine.Framework.Animation.AnimationUI, WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
    name: CreateSingleAnimationGameAction
    nameWithType: GameActionFactory.CreateSingleAnimationGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Animation.SingleAnimation
    name: SingleAnimation
    nameWithType: SingleAnimation
    fullName: WaveEngine.Framework.Animation.SingleAnimation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Animation.AnimationUI
    name: AnimationUI
    nameWithType: AnimationUI
    fullName: WaveEngine.Framework.Animation.AnimationUI
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Animation.SingleAnimation,WaveEngine.Framework.Animation.AnimationUI,WaveEngine.Framework.DependencyProperty)
    name: CreateSingleAnimationGameAction
    nameWithType: GameActionFactory.CreateSingleAnimationGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateSingleAnimationGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Animation.SingleAnimation
    name: SingleAnimation
    nameWithType: SingleAnimation
    fullName: WaveEngine.Framework.Animation.SingleAnimation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Animation.AnimationUI
    name: AnimationUI
    nameWithType: AnimationUI
    fullName: WaveEngine.Framework.Animation.AnimationUI
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
  name: CreatePlayMusicGameAction(Scene, MusicInfo)
  nameWithType: GameActionFactory.CreatePlayMusicGameAction(Scene, MusicInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene, WaveEngine.Common.Media.MusicInfo)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
    name: CreatePlayMusicGameAction
    nameWithType: GameActionFactory.CreatePlayMusicGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Media.MusicInfo
    name: MusicInfo
    nameWithType: MusicInfo
    fullName: WaveEngine.Common.Media.MusicInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.MusicInfo)
    name: CreatePlayMusicGameAction
    nameWithType: GameActionFactory.CreatePlayMusicGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayMusicGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Media.MusicInfo
    name: MusicInfo
    nameWithType: MusicInfo
    fullName: WaveEngine.Common.Media.MusicInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
  isExternal: true
  name: CreatePlaySoundGameAction(Scene, SoundInfo, Single, Boolean)
  nameWithType: GameActionFactory.CreatePlaySoundGameAction(Scene, SoundInfo, Single, Boolean)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene, WaveEngine.Framework.Sound.SoundInfo, System.Single, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
    name: CreatePlaySoundGameAction
    nameWithType: GameActionFactory.CreatePlaySoundGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Sound.SoundInfo
    name: SoundInfo
    nameWithType: SoundInfo
    fullName: WaveEngine.Framework.Sound.SoundInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction(WaveEngine.Framework.Scene,WaveEngine.Framework.Sound.SoundInfo,System.Single,System.Boolean)
    name: CreatePlaySoundGameAction
    nameWithType: GameActionFactory.CreatePlaySoundGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlaySoundGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Sound.SoundInfo
    name: SoundInfo
    nameWithType: SoundInfo
    fullName: WaveEngine.Framework.Sound.SoundInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
  name: CreatePlayVideoGameAction(Scene, VideoInfo)
  nameWithType: GameActionFactory.CreatePlayVideoGameAction(Scene, VideoInfo)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene, WaveEngine.Common.Media.VideoInfo)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
    name: CreatePlayVideoGameAction
    nameWithType: GameActionFactory.CreatePlayVideoGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Media.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: WaveEngine.Common.Media.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction(WaveEngine.Framework.Scene,WaveEngine.Common.Media.VideoInfo)
    name: CreatePlayVideoGameAction
    nameWithType: GameActionFactory.CreatePlayVideoGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreatePlayVideoGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Media.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: WaveEngine.Common.Media.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
  name: CreateWaitTapGameAction(Scene, TouchGestures)
  nameWithType: GameActionFactory.CreateWaitTapGameAction(Scene, TouchGestures)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene, WaveEngine.Components.Gestures.TouchGestures)
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
    name: CreateWaitTapGameAction
    nameWithType: GameActionFactory.CreateWaitTapGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Components.Gestures.TouchGestures
    name: TouchGestures
    nameWithType: TouchGestures
    fullName: WaveEngine.Components.Gestures.TouchGestures
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction(WaveEngine.Framework.Scene,WaveEngine.Components.Gestures.TouchGestures)
    name: CreateWaitTapGameAction
    nameWithType: GameActionFactory.CreateWaitTapGameAction
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateWaitTapGameAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Components.Gestures.TouchGestures
    name: TouchGestures
    nameWithType: TouchGestures
    fullName: WaveEngine.Components.Gestures.TouchGestures
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
  isExternal: true
  name: CreateParallelGameActions(Scene, IEnumerable<Func<IGameAction>>)
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable<Func<IGameAction>>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable<System.Func<WaveEngine.Framework.Services.IGameAction>>)
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable(Of Func(Of IGameAction)))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable(Of System.Func(Of WaveEngine.Framework.Services.IGameAction)))
  name.vb: CreateParallelGameActions(Scene, IEnumerable(Of Func(Of IGameAction)))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{System.Func{WaveEngine.Framework.Services.IGameAction}})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
  isExternal: true
  name: CreateParallelGameActions(Scene, IEnumerable<IGameAction>)
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable<IGameAction>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable<WaveEngine.Framework.Services.IGameAction>)
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, IEnumerable(Of IGameAction))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Collections.Generic.IEnumerable(Of WaveEngine.Framework.Services.IGameAction))
  name.vb: CreateParallelGameActions(Scene, IEnumerable(Of IGameAction))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Collections.Generic.IEnumerable{WaveEngine.Framework.Services.IGameAction})
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
  isExternal: true
  name: CreateParallelGameActions(Scene, Func<IGameAction>[])
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, Func<IGameAction>[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Func<WaveEngine.Framework.Services.IGameAction>[])
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, Func(Of IGameAction)())
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, System.Func(Of WaveEngine.Framework.Services.IGameAction)())
  name.vb: CreateParallelGameActions(Scene, Func(Of IGameAction)())
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction}[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
  name: CreateParallelGameActions(Scene, IGameAction[])
  nameWithType: GameActionFactory.CreateParallelGameActions(Scene, IGameAction[])
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, WaveEngine.Framework.Services.IGameAction[])
  nameWithType.vb: GameActionFactory.CreateParallelGameActions(Scene, IGameAction())
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene, WaveEngine.Framework.Services.IGameAction())
  name.vb: CreateParallelGameActions(Scene, IGameAction())
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions(WaveEngine.Framework.Scene,WaveEngine.Framework.Services.IGameAction[])
    name: CreateParallelGameActions
    nameWithType: GameActionFactory.CreateParallelGameActions
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateParallelGameActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  commentId: M:WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
  isExternal: true
  name: CreateLoopGameActionUntil(Scene, Func<IGameAction>, Func<Boolean>)
  nameWithType: GameActionFactory.CreateLoopGameActionUntil(Scene, Func<IGameAction>, Func<Boolean>)
  fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene, System.Func<WaveEngine.Framework.Services.IGameAction>, System.Func<System.Boolean>)
  nameWithType.vb: GameActionFactory.CreateLoopGameActionUntil(Scene, Func(Of IGameAction), Func(Of Boolean))
  fullName.vb: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene, System.Func(Of WaveEngine.Framework.Services.IGameAction), System.Func(Of System.Boolean))
  name.vb: CreateLoopGameActionUntil(Scene, Func(Of IGameAction), Func(Of Boolean))
  spec.csharp:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
    name: CreateLoopGameActionUntil
    nameWithType: GameActionFactory.CreateLoopGameActionUntil
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil(WaveEngine.Framework.Scene,System.Func{WaveEngine.Framework.Services.IGameAction},System.Func{System.Boolean})
    name: CreateLoopGameActionUntil
    nameWithType: GameActionFactory.CreateLoopGameActionUntil
    fullName: WaveEngine.Components.GameActions.GameActionFactory.CreateLoopGameActionUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.Scene
    name: Scene
    nameWithType: Scene
    fullName: WaveEngine.Framework.Scene
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Services.IGameAction
    name: IGameAction
    nameWithType: IGameAction
    fullName: WaveEngine.Framework.Services.IGameAction
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Components.GameActions
  commentId: N:WaveEngine.Components.GameActions
  name: WaveEngine.Components.GameActions
  nameWithType: WaveEngine.Components.GameActions
  fullName: WaveEngine.Components.GameActions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: WaveEngine.Framework.Scene.EntityManager*
  commentId: Overload:WaveEngine.Framework.Scene.EntityManager
  name: EntityManager
  nameWithType: Scene.EntityManager
  fullName: WaveEngine.Framework.Scene.EntityManager
- uid: WaveEngine.Framework.Managers.EntityManager
  commentId: T:WaveEngine.Framework.Managers.EntityManager
  parent: WaveEngine.Framework.Managers
  name: EntityManager
  nameWithType: EntityManager
  fullName: WaveEngine.Framework.Managers.EntityManager
- uid: WaveEngine.Framework.Managers
  commentId: N:WaveEngine.Framework.Managers
  name: WaveEngine.Framework.Managers
  nameWithType: WaveEngine.Framework.Managers
  fullName: WaveEngine.Framework.Managers
- uid: WaveEngine.Framework.Scene.RenderManager*
  commentId: Overload:WaveEngine.Framework.Scene.RenderManager
  name: RenderManager
  nameWithType: Scene.RenderManager
  fullName: WaveEngine.Framework.Scene.RenderManager
- uid: WaveEngine.Framework.Managers.RenderManager
  commentId: T:WaveEngine.Framework.Managers.RenderManager
  parent: WaveEngine.Framework.Managers
  name: RenderManager
  nameWithType: RenderManager
  fullName: WaveEngine.Framework.Managers.RenderManager
- uid: WaveEngine.Framework.Scene.VirtualScreenManager*
  commentId: Overload:WaveEngine.Framework.Scene.VirtualScreenManager
  name: VirtualScreenManager
  nameWithType: Scene.VirtualScreenManager
  fullName: WaveEngine.Framework.Scene.VirtualScreenManager
- uid: WaveEngine.Framework.Managers.VirtualScreenManager
  commentId: T:WaveEngine.Framework.Managers.VirtualScreenManager
  parent: WaveEngine.Framework.Managers
  name: VirtualScreenManager
  nameWithType: VirtualScreenManager
  fullName: WaveEngine.Framework.Managers.VirtualScreenManager
- uid: WaveEngine.Framework.Scene.BehaviorManager*
  commentId: Overload:WaveEngine.Framework.Scene.BehaviorManager
  name: BehaviorManager
  nameWithType: Scene.BehaviorManager
  fullName: WaveEngine.Framework.Scene.BehaviorManager
- uid: WaveEngine.Framework.Managers.BehaviorManager
  commentId: T:WaveEngine.Framework.Managers.BehaviorManager
  parent: WaveEngine.Framework.Managers
  name: BehaviorManager
  nameWithType: BehaviorManager
  fullName: WaveEngine.Framework.Managers.BehaviorManager
- uid: WaveEngine.Framework.Scene.SupportedBehavior*
  commentId: Overload:WaveEngine.Framework.Scene.SupportedBehavior
  name: SupportedBehavior
  nameWithType: Scene.SupportedBehavior
  fullName: WaveEngine.Framework.Scene.SupportedBehavior
- uid: WaveEngine.Framework.FamilyType
  commentId: T:WaveEngine.Framework.FamilyType
  parent: WaveEngine.Framework
  name: FamilyType
  nameWithType: FamilyType
  fullName: WaveEngine.Framework.FamilyType
- uid: WaveEngine.Framework.Scene.PhysicsManager
  commentId: P:WaveEngine.Framework.Scene.PhysicsManager
  isExternal: true
- uid: WaveEngine.Framework.Scene.PhysicsManager*
  commentId: Overload:WaveEngine.Framework.Scene.PhysicsManager
  name: PhysicsManager
  nameWithType: Scene.PhysicsManager
  fullName: WaveEngine.Framework.Scene.PhysicsManager
- uid: WaveEngine.Framework.Managers.PhysicsManager
  commentId: T:WaveEngine.Framework.Managers.PhysicsManager
  parent: WaveEngine.Framework.Managers
  name: PhysicsManager
  nameWithType: PhysicsManager
  fullName: WaveEngine.Framework.Managers.PhysicsManager
- uid: WaveEngine.Framework.Scene.IsDisposed*
  commentId: Overload:WaveEngine.Framework.Scene.IsDisposed
  name: IsDisposed
  nameWithType: Scene.IsDisposed
  fullName: WaveEngine.Framework.Scene.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Scene.Assets*
  commentId: Overload:WaveEngine.Framework.Scene.Assets
  name: Assets
  nameWithType: Scene.Assets
  fullName: WaveEngine.Framework.Scene.Assets
- uid: WaveEngine.Framework.Scene.IsInitialized*
  commentId: Overload:WaveEngine.Framework.Scene.IsInitialized
  name: IsInitialized
  nameWithType: Scene.IsInitialized
  fullName: WaveEngine.Framework.Scene.IsInitialized
- uid: WaveEngine.Framework.Scene.IsStarted*
  commentId: Overload:WaveEngine.Framework.Scene.IsStarted
  name: IsStarted
  nameWithType: Scene.IsStarted
  fullName: WaveEngine.Framework.Scene.IsStarted
- uid: WaveEngine.Framework.Scene.IsFinished*
  commentId: Overload:WaveEngine.Framework.Scene.IsFinished
  name: IsFinished
  nameWithType: Scene.IsFinished
  fullName: WaveEngine.Framework.Scene.IsFinished
- uid: WaveEngine.Framework.Scene.IsPaused*
  commentId: Overload:WaveEngine.Framework.Scene.IsPaused
  name: IsPaused
  nameWithType: Scene.IsPaused
  fullName: WaveEngine.Framework.Scene.IsPaused
- uid: WaveEngine.Framework.Scene.IsVisible*
  commentId: Overload:WaveEngine.Framework.Scene.IsVisible
  name: IsVisible
  nameWithType: Scene.IsVisible
  fullName: WaveEngine.Framework.Scene.IsVisible
- uid: WaveEngine.Framework.Scene.Speed*
  commentId: Overload:WaveEngine.Framework.Scene.Speed
  name: Speed
  nameWithType: Scene.Speed
  fullName: WaveEngine.Framework.Scene.Speed
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Framework.Scene.#ctor*
  commentId: Overload:WaveEngine.Framework.Scene.#ctor
  name: Scene
  nameWithType: Scene.Scene
  fullName: WaveEngine.Framework.Scene.Scene
- uid: WaveEngine.Framework.Scene.Finalize*
  commentId: Overload:WaveEngine.Framework.Scene.Finalize
  name: Finalize
  nameWithType: Scene.Finalize
  fullName: WaveEngine.Framework.Scene.Finalize
- uid: WaveEngine.Framework.Services.GraphicsDevice
  commentId: T:WaveEngine.Framework.Services.GraphicsDevice
  parent: WaveEngine.Framework.Services
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: WaveEngine.Framework.Services.GraphicsDevice
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
- uid: WaveEngine.Framework.Scene.Initialize*
  commentId: Overload:WaveEngine.Framework.Scene.Initialize
  name: Initialize
  nameWithType: Scene.Initialize
  fullName: WaveEngine.Framework.Scene.Initialize
- uid: WaveEngine.Framework.SceneBehavior
  commentId: T:WaveEngine.Framework.SceneBehavior
  parent: WaveEngine.Framework
  name: SceneBehavior
  nameWithType: SceneBehavior
  fullName: WaveEngine.Framework.SceneBehavior
- uid: WaveEngine.Framework.Scene.AddSceneBehavior*
  commentId: Overload:WaveEngine.Framework.Scene.AddSceneBehavior
  name: AddSceneBehavior
  nameWithType: Scene.AddSceneBehavior
  fullName: WaveEngine.Framework.Scene.AddSceneBehavior
- uid: WaveEngine.Framework.SceneBehavior.Order
  commentId: T:WaveEngine.Framework.SceneBehavior.Order
  parent: WaveEngine.Framework
  name: SceneBehavior.Order
  nameWithType: SceneBehavior.Order
  fullName: WaveEngine.Framework.SceneBehavior.Order
- uid: WaveEngine.Framework.Scene.RemoveSceneBehavior*
  commentId: Overload:WaveEngine.Framework.Scene.RemoveSceneBehavior
  name: RemoveSceneBehavior
  nameWithType: Scene.RemoveSceneBehavior
  fullName: WaveEngine.Framework.Scene.RemoveSceneBehavior
- uid: WaveEngine.Framework.Scene.Pause*
  commentId: Overload:WaveEngine.Framework.Scene.Pause
  name: Pause
  nameWithType: Scene.Pause
  fullName: WaveEngine.Framework.Scene.Pause
- uid: WaveEngine.Framework.Scene.Resume*
  commentId: Overload:WaveEngine.Framework.Scene.Resume
  name: Resume
  nameWithType: Scene.Resume
  fullName: WaveEngine.Framework.Scene.Resume
- uid: WaveEngine.Framework.Scene.NextStep*
  commentId: Overload:WaveEngine.Framework.Scene.NextStep
  name: NextStep
  nameWithType: Scene.NextStep
  fullName: WaveEngine.Framework.Scene.NextStep
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Framework.Scene.Dispose*
  commentId: Overload:WaveEngine.Framework.Scene.Dispose
  name: Dispose
  nameWithType: Scene.Dispose
  fullName: WaveEngine.Framework.Scene.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Scene.Load*
  commentId: Overload:WaveEngine.Framework.Scene.Load
  name: Load
  nameWithType: Scene.Load
  fullName: WaveEngine.Framework.Scene.Load
- uid: WaveEngine.Framework.Scene.RefreshEntityPointers*
  commentId: Overload:WaveEngine.Framework.Scene.RefreshEntityPointers
  name: RefreshEntityPointers
  nameWithType: Scene.RefreshEntityPointers
  fullName: WaveEngine.Framework.Scene.RefreshEntityPointers
- uid: System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Models.Entities.EntityPointer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EntityPointer>
  nameWithType: List<EntityPointer>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Models.Entities.EntityPointer>
  nameWithType.vb: List(Of EntityPointer)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Models.Entities.EntityPointer)
  name.vb: List(Of EntityPointer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Models.Entities.EntityPointer
    name: EntityPointer
    nameWithType: EntityPointer
    fullName: WaveEngine.Framework.Models.Entities.EntityPointer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Models.Entities.EntityPointer
    name: EntityPointer
    nameWithType: EntityPointer
    fullName: WaveEngine.Framework.Models.Entities.EntityPointer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Scene.CreateScene*
  commentId: Overload:WaveEngine.Framework.Scene.CreateScene
  name: CreateScene
  nameWithType: Scene.CreateScene
  fullName: WaveEngine.Framework.Scene.CreateScene
- uid: WaveEngine.Framework.Scene.Start*
  commentId: Overload:WaveEngine.Framework.Scene.Start
  name: Start
  nameWithType: Scene.Start
  fullName: WaveEngine.Framework.Scene.Start
- uid: WaveEngine.Framework.Scene.End*
  commentId: Overload:WaveEngine.Framework.Scene.End
  name: End
  nameWithType: Scene.End
  fullName: WaveEngine.Framework.Scene.End
