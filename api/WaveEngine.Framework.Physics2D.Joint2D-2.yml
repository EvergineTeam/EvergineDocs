### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Physics2D.Joint2D`2
  commentId: T:WaveEngine.Framework.Physics2D.Joint2D`2
  id: Joint2D`2
  parent: WaveEngine.Framework.Physics2D
  children:
  - WaveEngine.Framework.Physics2D.Joint2D`2.#ctor
  - WaveEngine.Framework.Physics2D.Joint2D`2.anchor
  - WaveEngine.Framework.Physics2D.Joint2D`2.Anchor
  - WaveEngine.Framework.Physics2D.Joint2D`2.breakpoint
  - WaveEngine.Framework.Physics2D.Joint2D`2.BreakPoint
  - WaveEngine.Framework.Physics2D.Joint2D`2.CollideConnected
  - WaveEngine.Framework.Physics2D.Joint2D`2.connectedAnchor
  - WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedAnchor
  - WaveEngine.Framework.Physics2D.Joint2D`2.connectedBody
  - WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedEntityPath
  - WaveEngine.Framework.Physics2D.Joint2D`2.CreateJoint(`1)
  - WaveEngine.Framework.Physics2D.Joint2D`2.DefaultValues
  - WaveEngine.Framework.Physics2D.Joint2D`2.DeleteDependencies
  - WaveEngine.Framework.Physics2D.Joint2D`2.FillJointDef(`1)
  - WaveEngine.Framework.Physics2D.Joint2D`2.Initialize
  - WaveEngine.Framework.Physics2D.Joint2D`2.isActive
  - WaveEngine.Framework.Physics2D.Joint2D`2.IsActive
  - WaveEngine.Framework.Physics2D.Joint2D`2.joint
  - WaveEngine.Framework.Physics2D.Joint2D`2.OnBroke
  - WaveEngine.Framework.Physics2D.Joint2D`2.RefreshConnectedEntity
  - WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJoint
  - WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJointValue``1(``0@,``0)
  - WaveEngine.Framework.Physics2D.Joint2D`2.RigiBody
  - WaveEngine.Framework.Physics2D.Joint2D`2.rigidBody
  langs:
  - csharp
  - vb
  name: Joint2D<T, K>
  nameWithType: Joint2D<T, K>
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>
  type: Class
  source:
    id: Joint2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 18
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nThis class represent a 2D physics joint and connects two entities together.\nAll Joints restrict some degrees of freedom, seeking a specific configuration.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Framework.Physics2D")]

      public abstract class Joint2D<T, K> : Component where T : IJoint2D where K : JointDef2D<T>
    typeParameters:
    - id: T
      description: The associated joint interface
    - id: K
      description: The associated joint definition
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Framework.Physics2D")>

      Public MustInherit Class Joint2D(Of T As IJoint2D, K As JointDef2D(Of T))

          Inherits Component
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Framework.DependencyObject
  - WaveEngine.Framework.Component
  derivedClasses:
  - WaveEngine.Framework.Physics2D.DistanceJoint2D
  - WaveEngine.Framework.Physics2D.MouseJoint2D
  - WaveEngine.Framework.Physics2D.PrismaticJoint2D
  - WaveEngine.Framework.Physics2D.RevoluteJoint2D
  - WaveEngine.Framework.Physics2D.RopeJoint2D
  - WaveEngine.Framework.Physics2D.WeldJoint2D
  - WaveEngine.Framework.Physics2D.WheelJoint2D
  inheritedMembers:
  - WaveEngine.Framework.Component.isInitialized
  - WaveEngine.Framework.Component.OnComponentInitialized
  - WaveEngine.Framework.Component.OnComponentRemoved
  - WaveEngine.Framework.Component.Name
  - WaveEngine.Framework.Component.Owner
  - WaveEngine.Framework.Component.Assets
  - WaveEngine.Framework.Component.EntityManager
  - WaveEngine.Framework.Component.BehaviorManager
  - WaveEngine.Framework.Component.RenderManager
  - WaveEngine.Framework.Component.Clone
  - WaveEngine.Framework.Component.ToString
  - WaveEngine.Framework.Component.ResolveDependencies
  - WaveEngine.Framework.Component.Removed
  - WaveEngine.Framework.DependencyObject.PropertyChanged
  - WaveEngine.Framework.DependencyObject.ParentDependencyObject
  - WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  - WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  - WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Framework.Physics2D
  nameWithType.vb: Joint2D(Of T, K)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K)
  name.vb: Joint2D(Of T, K)
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.OnBroke
  commentId: E:WaveEngine.Framework.Physics2D.Joint2D`2.OnBroke
  id: OnBroke
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: OnBroke
  nameWithType: Joint2D<T, K>.OnBroke
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.OnBroke
  type: Event
  source:
    id: OnBroke
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 34
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nPhysic 2D Joint Broke Event\n"
  example: []
  syntax:
    content: public event Joint2D<T, K>.OnBrokeEventHandler OnBroke
    return:
      type: WaveEngine.Framework.Physics2D.Joint2D`2.OnBrokeEventHandler
    content.vb: Public Event OnBroke As Joint2D(Of T, K).OnBrokeEventHandler
  nameWithType.vb: Joint2D(Of T, K).OnBroke
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).OnBroke
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.breakpoint
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.breakpoint
  id: breakpoint
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: breakpoint
  nameWithType: Joint2D<T, K>.breakpoint
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.breakpoint
  type: Field
  source:
    id: breakpoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 40
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nJoint Breakpoint\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected float breakpoint
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Protected breakpoint As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: Joint2D(Of T, K).breakpoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).breakpoint
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.joint
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.joint
  id: joint
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: joint
  nameWithType: Joint2D<T, K>.joint
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.joint
  type: Field
  source:
    id: joint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 45
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nThe physic joint\n"
  example: []
  syntax:
    content: protected T joint
    return:
      type: '{T}'
    content.vb: Protected joint As T
  nameWithType.vb: Joint2D(Of T, K).joint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).joint
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.rigidBody
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.rigidBody
  id: rigidBody
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: rigidBody
  nameWithType: Joint2D<T, K>.rigidBody
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.rigidBody
  type: Field
  source:
    id: rigidBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 51
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nThe associated body\n"
  example: []
  syntax:
    content: >-
      [RequiredComponent]

      protected RigidBody2D rigidBody
    return:
      type: WaveEngine.Framework.Physics2D.RigidBody2D
    content.vb: >-
      <RequiredComponent>

      Protected rigidBody As RigidBody2D
  attributes:
  - type: WaveEngine.Framework.RequiredComponent
    ctor: WaveEngine.Framework.RequiredComponent.#ctor
    arguments: []
  nameWithType.vb: Joint2D(Of T, K).rigidBody
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).rigidBody
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.connectedBody
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.connectedBody
  id: connectedBody
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: connectedBody
  nameWithType: Joint2D<T, K>.connectedBody
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.connectedBody
  type: Field
  source:
    id: connectedBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 73
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nThe connected rigid body\n"
  example: []
  syntax:
    content: protected RigidBody2D connectedBody
    return:
      type: WaveEngine.Framework.Physics2D.RigidBody2D
    content.vb: Protected connectedBody As RigidBody2D
  nameWithType.vb: Joint2D(Of T, K).connectedBody
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).connectedBody
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.anchor
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.anchor
  id: anchor
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: anchor
  nameWithType: Joint2D<T, K>.anchor
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.anchor
  type: Field
  source:
    id: anchor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 79
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nThe anchor in relation to rigid body\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected Vector2 anchor
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: >-
      <DataMember>

      Protected anchor As Vector2
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: Joint2D(Of T, K).anchor
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).anchor
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.connectedAnchor
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.connectedAnchor
  id: connectedAnchor
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: connectedAnchor
  nameWithType: Joint2D<T, K>.connectedAnchor
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.connectedAnchor
  type: Field
  source:
    id: connectedAnchor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 85
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nThe anchor of the connected body\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected Vector2 connectedAnchor
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: >-
      <DataMember>

      Protected connectedAnchor As Vector2
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: Joint2D(Of T, K).connectedAnchor
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).connectedAnchor
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.isActive
  commentId: F:WaveEngine.Framework.Physics2D.Joint2D`2.isActive
  id: isActive
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: isActive
  nameWithType: Joint2D<T, K>.isActive
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.isActive
  type: Field
  source:
    id: isActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 91
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nIf the joint is active\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      protected bool isActive
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Protected isActive As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: Joint2D(Of T, K).isActive
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).isActive
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RigiBody
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.RigiBody
  id: RigiBody
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: RigiBody
  nameWithType: Joint2D<T, K>.RigiBody
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RigiBody
  type: Property
  source:
    id: RigiBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 98
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets the rigidbody\n"
  example: []
  syntax:
    content: public RigidBody2D RigiBody { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Physics2D.RigidBody2D
    content.vb: Public ReadOnly Property RigiBody As RigidBody2D
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.RigiBody*
  nameWithType.vb: Joint2D(Of T, K).RigiBody
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RigiBody
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.IsActive
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.IsActive
  id: IsActive
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: Joint2D<T, K>.IsActive
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.IsActive
  type: Property
  source:
    id: IsActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 110
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets a value indicating whether the joint is active\n"
  example: []
  syntax:
    content: >-
      [RenderProperty(Tooltip = "Indicating whether the joint is active.")]

      public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <RenderProperty(Tooltip:="Indicating whether the joint is active.")>

      Public Property IsActive As Boolean
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.IsActive*
  attributes:
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Indicating whether the joint is active.
  nameWithType.vb: Joint2D(Of T, K).IsActive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).IsActive
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedEntityPath
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedEntityPath
  id: ConnectedEntityPath
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: ConnectedEntityPath
  nameWithType: Joint2D<T, K>.ConnectedEntityPath
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.ConnectedEntityPath
  type: Property
  source:
    id: ConnectedEntityPath
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 137
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets the connected entity path\n"
  example: []
  syntax:
    content: >-
      [RenderPropertyAsEntity(ComponentsFilter = new string[]{"WaveEngine.Framework.Physics2D.RigidBody2D"})]

      public virtual string ConnectedEntityPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RenderPropertyAsEntity(ComponentsFilter:=New String() {"WaveEngine.Framework.Physics2D.RigidBody2D"})>

      Public Overridable Property ConnectedEntityPath As String
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedEntityPath*
  attributes:
  - type: WaveEngine.Common.Attributes.RenderPropertyAsEntity
    ctor: WaveEngine.Common.Attributes.RenderPropertyAsEntity.#ctor
    arguments: []
  nameWithType.vb: Joint2D(Of T, K).ConnectedEntityPath
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).ConnectedEntityPath
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.CollideConnected
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.CollideConnected
  id: CollideConnected
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: CollideConnected
  nameWithType: Joint2D<T, K>.CollideConnected
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.CollideConnected
  type: Property
  source:
    id: CollideConnected
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 154
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets a value indicating whether the attached bodies should collide themselves.\n"
  example: []
  syntax:
    content: >-
      [RenderProperty(Tooltip = "Indicating whether the attached bodies should collide themselves.")]

      public bool CollideConnected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <RenderProperty(Tooltip:="Indicating whether the attached bodies should collide themselves.")>

      Public Property CollideConnected As Boolean
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.CollideConnected*
  attributes:
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Indicating whether the attached bodies should collide themselves.
  nameWithType.vb: Joint2D(Of T, K).CollideConnected
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).CollideConnected
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.Anchor
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.Anchor
  id: Anchor
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: Joint2D<T, K>.Anchor
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.Anchor
  type: Property
  source:
    id: Anchor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 171
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets the local anchor point relative to the body\n"
  example: []
  syntax:
    content: >-
      [RenderProperty(Tooltip = "The local anchor point relative to the body.")]

      public Vector2 Anchor { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: >-
      <RenderProperty(Tooltip:="The local anchor point relative to the body.")>

      Public Property Anchor As Vector2
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.Anchor*
  attributes:
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: The local anchor point relative to the body.
  nameWithType.vb: Joint2D(Of T, K).Anchor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).Anchor
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedAnchor
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedAnchor
  id: ConnectedAnchor
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: ConnectedAnchor
  nameWithType: Joint2D<T, K>.ConnectedAnchor
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.ConnectedAnchor
  type: Property
  source:
    id: ConnectedAnchor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 188
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets the local anchor point relative to connected body\n"
  example: []
  syntax:
    content: >-
      [RenderProperty(Tooltip = "The local anchor point relative to connected body.")]

      public Vector2 ConnectedAnchor { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: >-
      <RenderProperty(Tooltip:="The local anchor point relative to connected body.")>

      Public Property ConnectedAnchor As Vector2
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedAnchor*
  attributes:
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: The local anchor point relative to connected body.
  nameWithType.vb: Joint2D(Of T, K).ConnectedAnchor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).ConnectedAnchor
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.BreakPoint
  commentId: P:WaveEngine.Framework.Physics2D.Joint2D`2.BreakPoint
  id: BreakPoint
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: BreakPoint
  nameWithType: Joint2D<T, K>.BreakPoint
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.BreakPoint
  type: Property
  source:
    id: BreakPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 205
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets joint Breakpoint Property. MaxValue by default\n"
  example: []
  syntax:
    content: >-
      [RenderProperty(Tooltip = "Joint Breakpoint Property. MaxValue by default")]

      public float BreakPoint { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <RenderProperty(Tooltip:="Joint Breakpoint Property. MaxValue by default")>

      Public Property BreakPoint As Single
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.BreakPoint*
  attributes:
  - type: WaveEngine.Common.Attributes.RenderProperty
    ctor: WaveEngine.Common.Attributes.RenderProperty.#ctor
    arguments: []
    namedArguments:
    - name: Tooltip
      type: System.String
      value: Joint Breakpoint Property. MaxValue by default
  nameWithType.vb: Joint2D(Of T, K).BreakPoint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).BreakPoint
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.#ctor
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: Joint2D()
  nameWithType: Joint2D<T, K>.Joint2D()
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.Joint2D()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 230
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.Physics2D.Joint2D%602\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Joint2D()
    content.vb: Public Sub New
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.#ctor*
  nameWithType.vb: Joint2D(Of T, K).Joint2D()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).Joint2D()
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.DefaultValues
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.DefaultValues
  id: DefaultValues
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: DefaultValues()
  nameWithType: Joint2D<T, K>.DefaultValues()
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.DefaultValues()
  type: Method
  source:
    id: DefaultValues
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 237
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nSets the default values\n"
  example: []
  syntax:
    content: protected override void DefaultValues()
    content.vb: Protected Overrides Sub DefaultValues
  overridden: WaveEngine.Common.IO.SerializableObject.DefaultValues
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.DefaultValues*
  nameWithType.vb: Joint2D(Of T, K).DefaultValues()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).DefaultValues()
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.DeleteDependencies
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.DeleteDependencies
  id: DeleteDependencies
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: DeleteDependencies()
  nameWithType: Joint2D<T, K>.DeleteDependencies()
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.DeleteDependencies()
  type: Method
  source:
    id: DeleteDependencies
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 249
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nDelete the dependencies\n"
  example: []
  syntax:
    content: protected override void DeleteDependencies()
    content.vb: Protected Overrides Sub DeleteDependencies
  overridden: WaveEngine.Framework.Component.DeleteDependencies
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.DeleteDependencies*
  nameWithType.vb: Joint2D(Of T, K).DeleteDependencies()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).DeleteDependencies()
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.Initialize
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.Initialize
  id: Initialize
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: Joint2D<T, K>.Initialize()
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 258
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nInitializes the entity\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Framework.Component.Initialize
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.Initialize*
  nameWithType.vb: Joint2D(Of T, K).Initialize()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).Initialize()
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshConnectedEntity
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.RefreshConnectedEntity
  id: RefreshConnectedEntity
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: RefreshConnectedEntity()
  nameWithType: Joint2D<T, K>.RefreshConnectedEntity()
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RefreshConnectedEntity()
  type: Method
  source:
    id: RefreshConnectedEntity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 285
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nRefresh the connected entity\n"
  example: []
  syntax:
    content: protected void RefreshConnectedEntity()
    content.vb: Protected Sub RefreshConnectedEntity
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshConnectedEntity*
  nameWithType.vb: Joint2D(Of T, K).RefreshConnectedEntity()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RefreshConnectedEntity()
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.FillJointDef(`1)
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.FillJointDef(`1)
  id: FillJointDef(`1)
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: FillJointDef(K)
  nameWithType: Joint2D<T, K>.FillJointDef(K)
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.FillJointDef(K)
  type: Method
  source:
    id: FillJointDef
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 307
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nFill the joint definition\n"
  example: []
  syntax:
    content: protected virtual bool FillJointDef(K jointDef)
    parameters:
    - id: jointDef
      type: '{K}'
      description: The joint definition
    return:
      type: System.Boolean
      description: True if all is OK
    content.vb: Protected Overridable Function FillJointDef(jointDef As K) As Boolean
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.FillJointDef*
  nameWithType.vb: Joint2D(Of T, K).FillJointDef(K)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).FillJointDef(K)
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.CreateJoint(`1)
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.CreateJoint(`1)
  id: CreateJoint(`1)
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: CreateJoint(K)
  nameWithType: Joint2D<T, K>.CreateJoint(K)
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.CreateJoint(K)
  type: Method
  source:
    id: CreateJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 352
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nCreates the joint\n"
  example: []
  syntax:
    content: protected virtual T CreateJoint(K jointDef)
    parameters:
    - id: jointDef
      type: '{K}'
      description: The joint def
    return:
      type: '{T}'
      description: The physic joint
    content.vb: Protected Overridable Function CreateJoint(jointDef As K) As T
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.CreateJoint*
  nameWithType.vb: Joint2D(Of T, K).CreateJoint(K)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).CreateJoint(K)
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJoint
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJoint
  id: RefreshJoint
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: RefreshJoint()
  nameWithType: Joint2D<T, K>.RefreshJoint()
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RefreshJoint()
  type: Method
  source:
    id: RefreshJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 360
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nRefresh the joint\n"
  example: []
  syntax:
    content: protected void RefreshJoint()
    content.vb: Protected Sub RefreshJoint
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJoint*
  nameWithType.vb: Joint2D(Of T, K).RefreshJoint()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RefreshJoint()
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJointValue``1(``0@,``0)
  commentId: M:WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJointValue``1(``0@,``0)
  id: RefreshJointValue``1(``0@,``0)
  parent: WaveEngine.Framework.Physics2D.Joint2D`2
  langs:
  - csharp
  - vb
  name: RefreshJointValue<V>(ref V, V)
  nameWithType: Joint2D<T, K>.RefreshJointValue<V>(ref V, V)
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RefreshJointValue<V>(ref V, V)
  type: Method
  source:
    id: RefreshJointValue
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Joints\Joint2D`2.cs
    startLine: 454
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nUpdate a joint value\n"
  example: []
  syntax:
    content: protected void RefreshJointValue<V>(ref V variable, V newValue)
    parameters:
    - id: variable
      type: '{V}'
      description: The variable to change
    - id: newValue
      type: '{V}'
      description: The new value
    typeParameters:
    - id: V
      description: The variable type
    content.vb: Protected Sub RefreshJointValue(Of V)(ByRef variable As V, newValue As V)
  overload: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJointValue*
  nameWithType.vb: Joint2D(Of T, K).RefreshJointValue(Of V)(ByRef V, V)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RefreshJointValue(Of V)(ByRef V, V)
  name.vb: RefreshJointValue(Of V)(ByRef V, V)
references:
- uid: WaveEngine.Framework.Physics2D
  commentId: N:WaveEngine.Framework.Physics2D
  name: WaveEngine.Framework.Physics2D
  nameWithType: WaveEngine.Framework.Physics2D
  fullName: WaveEngine.Framework.Physics2D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Framework.DependencyObject
  commentId: T:WaveEngine.Framework.DependencyObject
  parent: WaveEngine.Framework
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: WaveEngine.Framework.DependencyObject
- uid: WaveEngine.Framework.Component
  commentId: T:WaveEngine.Framework.Component
  parent: WaveEngine.Framework
  name: Component
  nameWithType: Component
  fullName: WaveEngine.Framework.Component
- uid: WaveEngine.Framework.Component.isInitialized
  commentId: F:WaveEngine.Framework.Component.isInitialized
  parent: WaveEngine.Framework.Component
  name: isInitialized
  nameWithType: Component.isInitialized
  fullName: WaveEngine.Framework.Component.isInitialized
- uid: WaveEngine.Framework.Component.OnComponentInitialized
  commentId: E:WaveEngine.Framework.Component.OnComponentInitialized
  parent: WaveEngine.Framework.Component
  name: OnComponentInitialized
  nameWithType: Component.OnComponentInitialized
  fullName: WaveEngine.Framework.Component.OnComponentInitialized
- uid: WaveEngine.Framework.Component.OnComponentRemoved
  commentId: E:WaveEngine.Framework.Component.OnComponentRemoved
  parent: WaveEngine.Framework.Component
  name: OnComponentRemoved
  nameWithType: Component.OnComponentRemoved
  fullName: WaveEngine.Framework.Component.OnComponentRemoved
- uid: WaveEngine.Framework.Component.Name
  commentId: P:WaveEngine.Framework.Component.Name
  parent: WaveEngine.Framework.Component
  name: Name
  nameWithType: Component.Name
  fullName: WaveEngine.Framework.Component.Name
- uid: WaveEngine.Framework.Component.Owner
  commentId: P:WaveEngine.Framework.Component.Owner
  parent: WaveEngine.Framework.Component
  name: Owner
  nameWithType: Component.Owner
  fullName: WaveEngine.Framework.Component.Owner
- uid: WaveEngine.Framework.Component.Assets
  commentId: P:WaveEngine.Framework.Component.Assets
  parent: WaveEngine.Framework.Component
  name: Assets
  nameWithType: Component.Assets
  fullName: WaveEngine.Framework.Component.Assets
- uid: WaveEngine.Framework.Component.EntityManager
  commentId: P:WaveEngine.Framework.Component.EntityManager
  parent: WaveEngine.Framework.Component
  name: EntityManager
  nameWithType: Component.EntityManager
  fullName: WaveEngine.Framework.Component.EntityManager
- uid: WaveEngine.Framework.Component.BehaviorManager
  commentId: P:WaveEngine.Framework.Component.BehaviorManager
  parent: WaveEngine.Framework.Component
  name: BehaviorManager
  nameWithType: Component.BehaviorManager
  fullName: WaveEngine.Framework.Component.BehaviorManager
- uid: WaveEngine.Framework.Component.RenderManager
  commentId: P:WaveEngine.Framework.Component.RenderManager
  parent: WaveEngine.Framework.Component
  name: RenderManager
  nameWithType: Component.RenderManager
  fullName: WaveEngine.Framework.Component.RenderManager
- uid: WaveEngine.Framework.Component.Clone
  commentId: M:WaveEngine.Framework.Component.Clone
  parent: WaveEngine.Framework.Component
  name: Clone()
  nameWithType: Component.Clone()
  fullName: WaveEngine.Framework.Component.Clone()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Clone
    name: Clone
    nameWithType: Component.Clone
    fullName: WaveEngine.Framework.Component.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Clone
    name: Clone
    nameWithType: Component.Clone
    fullName: WaveEngine.Framework.Component.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.ToString
  commentId: M:WaveEngine.Framework.Component.ToString
  parent: WaveEngine.Framework.Component
  name: ToString()
  nameWithType: Component.ToString()
  fullName: WaveEngine.Framework.Component.ToString()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.ToString
    name: ToString
    nameWithType: Component.ToString
    fullName: WaveEngine.Framework.Component.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.ToString
    name: ToString
    nameWithType: Component.ToString
    fullName: WaveEngine.Framework.Component.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.ResolveDependencies
  commentId: M:WaveEngine.Framework.Component.ResolveDependencies
  parent: WaveEngine.Framework.Component
  name: ResolveDependencies()
  nameWithType: Component.ResolveDependencies()
  fullName: WaveEngine.Framework.Component.ResolveDependencies()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.ResolveDependencies
    name: ResolveDependencies
    nameWithType: Component.ResolveDependencies
    fullName: WaveEngine.Framework.Component.ResolveDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.ResolveDependencies
    name: ResolveDependencies
    nameWithType: Component.ResolveDependencies
    fullName: WaveEngine.Framework.Component.ResolveDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Component.Removed
  commentId: M:WaveEngine.Framework.Component.Removed
  parent: WaveEngine.Framework.Component
  name: Removed()
  nameWithType: Component.Removed()
  fullName: WaveEngine.Framework.Component.Removed()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Removed
    name: Removed
    nameWithType: Component.Removed
    fullName: WaveEngine.Framework.Component.Removed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Removed
    name: Removed
    nameWithType: Component.Removed
    fullName: WaveEngine.Framework.Component.Removed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.PropertyChanged
  commentId: E:WaveEngine.Framework.DependencyObject.PropertyChanged
  parent: WaveEngine.Framework.DependencyObject
  name: PropertyChanged
  nameWithType: DependencyObject.PropertyChanged
  fullName: WaveEngine.Framework.DependencyObject.PropertyChanged
- uid: WaveEngine.Framework.DependencyObject.ParentDependencyObject
  commentId: P:WaveEngine.Framework.DependencyObject.ParentDependencyObject
  parent: WaveEngine.Framework.DependencyObject
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: WaveEngine.Framework.DependencyObject.ParentDependencyObject
- uid: WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  commentId: P:WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
  parent: WaveEngine.Framework.DependencyObject
  name: EnableDiagnosticCallback
  nameWithType: DependencyObject.EnableDiagnosticCallback
  fullName: WaveEngine.Framework.DependencyObject.EnableDiagnosticCallback
- uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  commentId: M:WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
  parent: WaveEngine.Framework.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty, System.Object)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: WaveEngine.Framework.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.SetValue(WaveEngine.Framework.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: WaveEngine.Framework.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: WaveEngine.Framework.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.GetValue(WaveEngine.Framework.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: WaveEngine.Framework.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: GetAbsoluteValue<T>(DependencyProperty)
  nameWithType: DependencyObject.GetAbsoluteValue<T>(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue<T>(WaveEngine.Framework.DependencyProperty)
  nameWithType.vb: DependencyObject.GetAbsoluteValue(Of T)(DependencyProperty)
  fullName.vb: WaveEngine.Framework.DependencyObject.GetAbsoluteValue(Of T)(WaveEngine.Framework.DependencyProperty)
  name.vb: GetAbsoluteValue(Of T)(DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
    name: GetAbsoluteValue<T>
    nameWithType: DependencyObject.GetAbsoluteValue<T>
    fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.GetAbsoluteValue``1(WaveEngine.Framework.DependencyProperty)
    name: GetAbsoluteValue(Of T)
    nameWithType: DependencyObject.GetAbsoluteValue(Of T)
    fullName: WaveEngine.Framework.DependencyObject.GetAbsoluteValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: WaveEngine.Framework.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.ClearValue(WaveEngine.Framework.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: WaveEngine.Framework.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  commentId: M:WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  parent: WaveEngine.Framework.DependencyObject
  name: IsValueSet(DependencyProperty)
  nameWithType: DependencyObject.IsValueSet(DependencyProperty)
  fullName: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
  spec.csharp:
  - uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
    name: IsValueSet
    nameWithType: DependencyObject.IsValueSet
    fullName: WaveEngine.Framework.DependencyObject.IsValueSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.DependencyObject.IsValueSet(WaveEngine.Framework.DependencyProperty)
    name: IsValueSet
    nameWithType: DependencyObject.IsValueSet
    fullName: WaveEngine.Framework.DependencyObject.IsValueSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Framework.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: WaveEngine.Framework.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.OnBrokeEventHandler
  commentId: T:WaveEngine.Framework.Physics2D.Joint2D`2.OnBrokeEventHandler
  parent: WaveEngine.Framework.Physics2D
  name: Joint2D.OnBrokeEventHandler<>
  nameWithType: Joint2D.OnBrokeEventHandler<>
  fullName: WaveEngine.Framework.Physics2D.Joint2D.OnBrokeEventHandler<>
  nameWithType.vb: Joint2D.OnBrokeEventHandler(Of )
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D.OnBrokeEventHandler(Of )
  name.vb: Joint2D.OnBrokeEventHandler(Of )
  spec.csharp:
  - uid: WaveEngine.Framework.Physics2D.Joint2D`2.OnBrokeEventHandler
    name: Joint2D.OnBrokeEventHandler
    nameWithType: Joint2D.OnBrokeEventHandler
    fullName: WaveEngine.Framework.Physics2D.Joint2D.OnBrokeEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Physics2D.Joint2D`2.OnBrokeEventHandler
    name: Joint2D.OnBrokeEventHandler
    nameWithType: Joint2D.OnBrokeEventHandler
    fullName: WaveEngine.Framework.Physics2D.Joint2D.OnBrokeEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Framework.Physics2D.RigidBody2D
  commentId: T:WaveEngine.Framework.Physics2D.RigidBody2D
  parent: WaveEngine.Framework.Physics2D
  name: RigidBody2D
  nameWithType: RigidBody2D
  fullName: WaveEngine.Framework.Physics2D.RigidBody2D
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RigiBody*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.RigiBody
  name: RigiBody
  nameWithType: Joint2D<T, K>.RigiBody
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RigiBody
  nameWithType.vb: Joint2D(Of T, K).RigiBody
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RigiBody
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.IsActive*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.IsActive
  name: IsActive
  nameWithType: Joint2D<T, K>.IsActive
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.IsActive
  nameWithType.vb: Joint2D(Of T, K).IsActive
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).IsActive
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedEntityPath*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedEntityPath
  name: ConnectedEntityPath
  nameWithType: Joint2D<T, K>.ConnectedEntityPath
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.ConnectedEntityPath
  nameWithType.vb: Joint2D(Of T, K).ConnectedEntityPath
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).ConnectedEntityPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.CollideConnected*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.CollideConnected
  name: CollideConnected
  nameWithType: Joint2D<T, K>.CollideConnected
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.CollideConnected
  nameWithType.vb: Joint2D(Of T, K).CollideConnected
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).CollideConnected
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.Anchor*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.Anchor
  name: Anchor
  nameWithType: Joint2D<T, K>.Anchor
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.Anchor
  nameWithType.vb: Joint2D(Of T, K).Anchor
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).Anchor
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedAnchor*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.ConnectedAnchor
  name: ConnectedAnchor
  nameWithType: Joint2D<T, K>.ConnectedAnchor
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.ConnectedAnchor
  nameWithType.vb: Joint2D(Of T, K).ConnectedAnchor
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).ConnectedAnchor
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.BreakPoint*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.BreakPoint
  name: BreakPoint
  nameWithType: Joint2D<T, K>.BreakPoint
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.BreakPoint
  nameWithType.vb: Joint2D(Of T, K).BreakPoint
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).BreakPoint
- uid: WaveEngine.Framework.Physics2D.Joint2D`2
  commentId: T:WaveEngine.Framework.Physics2D.Joint2D`2
  name: Joint2D<T, K>
  nameWithType: Joint2D<T, K>
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>
  nameWithType.vb: Joint2D(Of T, K)
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K)
  name.vb: Joint2D(Of T, K)
  spec.csharp:
  - uid: WaveEngine.Framework.Physics2D.Joint2D`2
    name: Joint2D
    nameWithType: Joint2D
    fullName: WaveEngine.Framework.Physics2D.Joint2D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Framework.Physics2D.Joint2D`2
    name: Joint2D
    nameWithType: Joint2D
    fullName: WaveEngine.Framework.Physics2D.Joint2D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.#ctor*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.#ctor
  name: Joint2D
  nameWithType: Joint2D<T, K>.Joint2D
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.Joint2D
  nameWithType.vb: Joint2D(Of T, K).Joint2D
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).Joint2D
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.DefaultValues*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.DefaultValues
  name: DefaultValues
  nameWithType: Joint2D<T, K>.DefaultValues
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.DefaultValues
  nameWithType.vb: Joint2D(Of T, K).DefaultValues
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).DefaultValues
- uid: WaveEngine.Framework.Component.DeleteDependencies
  commentId: M:WaveEngine.Framework.Component.DeleteDependencies
  parent: WaveEngine.Framework.Component
  name: DeleteDependencies()
  nameWithType: Component.DeleteDependencies()
  fullName: WaveEngine.Framework.Component.DeleteDependencies()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.DeleteDependencies
    name: DeleteDependencies
    nameWithType: Component.DeleteDependencies
    fullName: WaveEngine.Framework.Component.DeleteDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.DeleteDependencies
    name: DeleteDependencies
    nameWithType: Component.DeleteDependencies
    fullName: WaveEngine.Framework.Component.DeleteDependencies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.DeleteDependencies*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.DeleteDependencies
  name: DeleteDependencies
  nameWithType: Joint2D<T, K>.DeleteDependencies
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.DeleteDependencies
  nameWithType.vb: Joint2D(Of T, K).DeleteDependencies
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).DeleteDependencies
- uid: WaveEngine.Framework.Component.Initialize
  commentId: M:WaveEngine.Framework.Component.Initialize
  parent: WaveEngine.Framework.Component
  name: Initialize()
  nameWithType: Component.Initialize()
  fullName: WaveEngine.Framework.Component.Initialize()
  spec.csharp:
  - uid: WaveEngine.Framework.Component.Initialize
    name: Initialize
    nameWithType: Component.Initialize
    fullName: WaveEngine.Framework.Component.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Framework.Component.Initialize
    name: Initialize
    nameWithType: Component.Initialize
    fullName: WaveEngine.Framework.Component.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.Initialize*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.Initialize
  name: Initialize
  nameWithType: Joint2D<T, K>.Initialize
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.Initialize
  nameWithType.vb: Joint2D(Of T, K).Initialize
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).Initialize
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshConnectedEntity*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.RefreshConnectedEntity
  name: RefreshConnectedEntity
  nameWithType: Joint2D<T, K>.RefreshConnectedEntity
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RefreshConnectedEntity
  nameWithType.vb: Joint2D(Of T, K).RefreshConnectedEntity
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RefreshConnectedEntity
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.FillJointDef*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.FillJointDef
  name: FillJointDef
  nameWithType: Joint2D<T, K>.FillJointDef
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.FillJointDef
  nameWithType.vb: Joint2D(Of T, K).FillJointDef
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).FillJointDef
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.CreateJoint*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.CreateJoint
  name: CreateJoint
  nameWithType: Joint2D<T, K>.CreateJoint
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.CreateJoint
  nameWithType.vb: Joint2D(Of T, K).CreateJoint
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).CreateJoint
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJoint*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJoint
  name: RefreshJoint
  nameWithType: Joint2D<T, K>.RefreshJoint
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RefreshJoint
  nameWithType.vb: Joint2D(Of T, K).RefreshJoint
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RefreshJoint
- uid: WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJointValue*
  commentId: Overload:WaveEngine.Framework.Physics2D.Joint2D`2.RefreshJointValue
  name: RefreshJointValue
  nameWithType: Joint2D<T, K>.RefreshJointValue
  fullName: WaveEngine.Framework.Physics2D.Joint2D<T, K>.RefreshJointValue
  nameWithType.vb: Joint2D(Of T, K).RefreshJointValue
  fullName.vb: WaveEngine.Framework.Physics2D.Joint2D(Of T, K).RefreshJointValue
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: V
  name: V
  nameWithType: V
  fullName: V
