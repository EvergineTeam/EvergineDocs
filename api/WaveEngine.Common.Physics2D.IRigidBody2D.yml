### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics2D.IRigidBody2D
  commentId: T:WaveEngine.Common.Physics2D.IRigidBody2D
  id: IRigidBody2D
  parent: WaveEngine.Common.Physics2D
  children:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Active
  - WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  - WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  - WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  - WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
  - WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  - WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  - WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  - WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  - WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  - WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  - WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  - WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  - WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  - WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  - WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  - WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  - WaveEngine.Common.Physics2D.IRigidBody2D.Position
  - WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  - WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Physics2D.IRigidBody2D.Type
  - WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  - WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  langs:
  - csharp
  - vb
  name: IRigidBody2D
  nameWithType: IRigidBody2D
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D
  type: Interface
  source:
    id: IRigidBody2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nInterface for RigidBody of 2D physics.\n"
  example: []
  syntax:
    content: public interface IRigidBody2D
    content.vb: Public Interface IRigidBody2D
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Position
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Position
  id: Position
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: IRigidBody2D.Position
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Position
  type: Property
  source:
    id: Position
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 21
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the world position of the body.\n"
  example: []
  syntax:
    content: Vector2 Position { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property Position As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Position*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  id: Angle
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: IRigidBody2D.Angle
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  type: Property
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 26
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the world angle of the body in radians.\n"
  example: []
  syntax:
    content: float Angle { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property Angle As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Angle*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  id: LinearVelocity
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: IRigidBody2D.LinearVelocity
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  type: Property
  source:
    id: LinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 31
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the linear velocity of the body&apos;s origin in world co-ordinates.\n"
  example: []
  syntax:
    content: Vector2 LinearVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Property LinearVelocity As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  id: AngularVelocity
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: IRigidBody2D.AngularVelocity
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  type: Property
  source:
    id: AngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 36
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the angular velocity of the body.\n"
  example: []
  syntax:
    content: float AngularVelocity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property AngularVelocity As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  id: LinearDamping
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: LinearDamping
  nameWithType: IRigidBody2D.LinearDamping
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  type: Property
  source:
    id: LinearDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 42
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the Linear damping is use to reduce the linear velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: float LinearDamping { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property LinearDamping As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  id: AngularDamping
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: AngularDamping
  nameWithType: IRigidBody2D.AngularDamping
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  type: Property
  source:
    id: AngularDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 48
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the Angular damping is use to reduce the angular velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: float AngularDamping { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property AngularDamping As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  id: AllowSleep
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: AllowSleep
  nameWithType: IRigidBody2D.AllowSleep
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  type: Property
  source:
    id: AllowSleep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 53
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this flag to false if this body should never fall asleep. Note that this increases CPU usage.\n"
  example: []
  syntax:
    content: bool AllowSleep { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AllowSleep As Boolean
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  id: Awake
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Awake
  nameWithType: IRigidBody2D.Awake
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  type: Property
  source:
    id: Awake
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 58
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this is this body initially awake or sleeping?\n"
  example: []
  syntax:
    content: bool Awake { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Awake As Boolean
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Awake*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  id: FixedRotation
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: FixedRotation
  nameWithType: IRigidBody2D.FixedRotation
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  type: Property
  source:
    id: FixedRotation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 63
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this body be prevented from rotating? Useful for characters.\n"
  example: []
  syntax:
    content: bool FixedRotation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property FixedRotation As Boolean
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  id: Bullet
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Bullet
  nameWithType: IRigidBody2D.Bullet
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  type: Property
  source:
    id: Bullet
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 72
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this is a fast moving body that should be prevented from tunneling through other moving bodies?\n<remarks>\nNote that all bodies are prevented from tunneling through kinematic and static bodies.\nThis setting is only considered on dynamic bodies.\n</remarks>\n"
  example: []
  syntax:
    content: bool Bullet { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Bullet As Boolean
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Active
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Active
  id: Active
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: IRigidBody2D.Active
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Active
  type: Property
  source:
    id: Active
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 77
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this body start out active?\n"
  example: []
  syntax:
    content: bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Active As Boolean
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Active*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  id: UserData
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: IRigidBody2D.UserData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  type: Property
  source:
    id: UserData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 82
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the application specific body data.\n"
  example: []
  syntax:
    content: object UserData { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property UserData As Object
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.UserData*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  id: GravityScale
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GravityScale
  nameWithType: IRigidBody2D.GravityScale
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  type: Property
  source:
    id: GravityScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 87
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the gravity scale applied to this body.\n"
  example: []
  syntax:
    content: float GravityScale { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property GravityScale As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Type
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Type
  id: Type
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IRigidBody2D.Type
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Type
  type: Property
  source:
    id: Type
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 92
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the rigid body 2D type\n"
  example: []
  syntax:
    content: RigidBodyType2D Type { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.RigidBodyType2D
    content.vb: Property Type As RigidBodyType2D
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Type*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  id: WorldCenter
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: WorldCenter
  nameWithType: IRigidBody2D.WorldCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  type: Property
  source:
    id: WorldCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 97
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the world position of the center of mass.\n"
  example: []
  syntax:
    content: Vector2 WorldCenter { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property WorldCenter As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  id: LocalCenter
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: LocalCenter
  nameWithType: IRigidBody2D.LocalCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  type: Property
  source:
    id: LocalCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 102
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the local position of the center of the mass.\n"
  example: []
  syntax:
    content: Vector2 LocalCenter { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property LocalCenter As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  id: ColliderList
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: ColliderList
  nameWithType: IRigidBody2D.ColliderList
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  type: Property
  source:
    id: ColliderList
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 107
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the collider list\n"
  example: []
  syntax:
    content: IEnumerable<ICollider2D> ColliderList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics2D.ICollider2D}
    content.vb: ReadOnly Property ColliderList As IEnumerable(Of ICollider2D)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  id: Mass
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: IRigidBody2D.Mass
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  type: Property
  source:
    id: Mass
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 112
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the total mass of the body, usually in kg-m^2.\n"
  example: []
  syntax:
    content: float Mass { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property Mass As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Mass*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  id: Inertia
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: Inertia
  nameWithType: IRigidBody2D.Inertia
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  type: Property
  source:
    id: Inertia
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 117
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the rotational inertia of the body about the local origin, usually in kg-m^2.\n"
  example: []
  syntax:
    content: float Inertia { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property Inertia As Single
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  id: MassData
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: MassData
  nameWithType: IRigidBody2D.MassData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  type: Property
  source:
    id: MassData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 122
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the mass data of the body.\n"
  example: []
  syntax:
    content: RigidBodyMassData2D MassData { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.RigidBodyMassData2D
    content.vb: Property MassData As RigidBodyMassData2D
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.MassData*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  id: SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: SetTransform(Vector2, Single)
  nameWithType: IRigidBody2D.SetTransform(Vector2, Single)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: SetTransform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 132
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nSet the position of the body&apos;s origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body&apos;s transform may cause non-physical behavior.\n"
  example: []
  syntax:
    content: void SetTransform(Vector2 worldPosition, float angle)
    parameters:
    - id: worldPosition
      type: WaveEngine.Common.Math.Vector2
      description: the world position of the body&apos;s local origin.
    - id: angle
      type: System.Single
      description: the world rotation in radians.
    content.vb: Sub SetTransform(worldPosition As Vector2, angle As Single)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  id: ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: ApplyForce(Vector2, Vector2, Boolean)
  nameWithType: IRigidBody2D.ApplyForce(Vector2, Vector2, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean)
  type: Method
  source:
    id: ApplyForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 140
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nApply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body.\n"
  example: []
  syntax:
    content: void ApplyForce(Vector2 force, Vector2 point, bool wake = true)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector2
      description: The world force vector, usually in Newtons (N).
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: The world position of the point of application.
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Sub ApplyForce(force As Vector2, point As Vector2, wake As Boolean = True)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  id: ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: ApplyForceToCenter(Vector2, Boolean)
  nameWithType: IRigidBody2D.ApplyForceToCenter(Vector2, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2, System.Boolean)
  type: Method
  source:
    id: ApplyForceToCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 147
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nApply a force to the center of mass. This wakes up the body.\n"
  example: []
  syntax:
    content: void ApplyForceToCenter(Vector2 force, bool wake = true)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector2
      description: The world force vector, usually in Newtons (N).
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Sub ApplyForceToCenter(force As Vector2, wake As Boolean = True)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  id: ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: ApplyLinearImpulse(Vector2, Vector2, Boolean)
  nameWithType: IRigidBody2D.ApplyLinearImpulse(Vector2, Vector2, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean)
  type: Method
  source:
    id: ApplyLinearImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 155
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\npply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body.\n"
  example: []
  syntax:
    content: void ApplyLinearImpulse(Vector2 impulse, Vector2 point, bool wake = true)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector2
      description: The world impulse vector, usually in N-seconds or kg-m/s.
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: The world position of the point of application.
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Sub ApplyLinearImpulse(impulse As Vector2, point As Vector2, wake As Boolean = True)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
  id: ApplyTorque(System.Single,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: ApplyTorque(Single, Boolean)
  nameWithType: IRigidBody2D.ApplyTorque(Single, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single, System.Boolean)
  type: Method
  source:
    id: ApplyTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 162
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nApply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass. This wakes up the body.\n"
  example: []
  syntax:
    content: void ApplyTorque(float torque, bool wake = true)
    parameters:
    - id: torque
      type: System.Single
      description: About the z-axis (out of the screen), usually in N-m.
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Sub ApplyTorque(torque As Single, wake As Boolean = True)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  id: CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: CreateCollider(ColliderDef2D)
  nameWithType: IRigidBody2D.CreateCollider(ColliderDef2D)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  type: Method
  source:
    id: CreateCollider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 169
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nCreates a collider with the specified definition\n"
  example: []
  syntax:
    content: ICollider2D CreateCollider(ColliderDef2D def)
    parameters:
    - id: def
      type: WaveEngine.Common.Physics2D.ColliderDef2D
      description: The collider 2D definition
    return:
      type: WaveEngine.Common.Physics2D.ICollider2D
      description: The collider 2D
    content.vb: Function CreateCollider(def As ColliderDef2D) As ICollider2D
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  id: DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: DestroyCollider(ICollider2D)
  nameWithType: IRigidBody2D.DestroyCollider(ICollider2D)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  type: Method
  source:
    id: DestroyCollider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 177
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nDestroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with this fixture.\nThis will automatically adjust the mass of the body if the body is dynamic and the fixture has positive density.\nAll fixtures attached to a body are implicitly destroyed when the body is destroyed.\n"
  example: []
  syntax:
    content: void DestroyCollider(ICollider2D collider)
    parameters:
    - id: collider
      type: WaveEngine.Common.Physics2D.ICollider2D
      description: The collider 2D to be removed
    content.vb: Sub DestroyCollider(collider As ICollider2D)
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  id: GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GetLinearVelocityFromLocalPoint(Vector2)
  nameWithType: IRigidBody2D.GetLinearVelocityFromLocalPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLinearVelocityFromLocalPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 184
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGet the world velocity of a local point.\n"
  example: []
  syntax:
    content: Vector2 GetLinearVelocityFromLocalPoint(Vector2 localPoint)
    parameters:
    - id: localPoint
      type: WaveEngine.Common.Math.Vector2
      description: Point in local coordinates
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The world velocity of a point.
    content.vb: Function GetLinearVelocityFromLocalPoint(localPoint As Vector2) As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  id: GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GetLinearVelocityFromWorldPoint(Vector2)
  nameWithType: IRigidBody2D.GetLinearVelocityFromWorldPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLinearVelocityFromWorldPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 191
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGet the world linear velocity of a world point attached to this body..\n"
  example: []
  syntax:
    content: Vector2 GetLinearVelocityFromWorldPoint(Vector2 localPoint)
    parameters:
    - id: localPoint
      type: WaveEngine.Common.Math.Vector2
      description: Point in world coordinates
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The world velocity of a point.
    content.vb: Function GetLinearVelocityFromWorldPoint(localPoint As Vector2) As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  id: GetLocalPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GetLocalPoint(Vector2)
  nameWithType: IRigidBody2D.GetLocalPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLocalPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 198
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets a local point relative to the body&apos;s origin given a world point\n"
  example: []
  syntax:
    content: Vector2 GetLocalPoint(Vector2 worldPoint)
    parameters:
    - id: worldPoint
      type: WaveEngine.Common.Math.Vector2
      description: Point in world coordinates
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The corresponding local point relative to the body&apos;s origin.
    content.vb: Function GetLocalPoint(worldPoint As Vector2) As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  id: GetLocalVector(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GetLocalVector(Vector2)
  nameWithType: IRigidBody2D.GetLocalVector(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLocalVector
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 205
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets a local vector given a world vector.\n"
  example: []
  syntax:
    content: Vector2 GetLocalVector(Vector2 worldVector)
    parameters:
    - id: worldVector
      type: WaveEngine.Common.Math.Vector2
      description: Vector in world coordinates.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The corresponding local vector
    content.vb: Function GetLocalVector(worldVector As Vector2) As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  id: GetWorldPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GetWorldPoint(Vector2)
  nameWithType: IRigidBody2D.GetWorldPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetWorldPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 212
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGet the world coordinates of a point given the local coordinates.\n"
  example: []
  syntax:
    content: Vector2 GetWorldPoint(Vector2 localPoint)
    parameters:
    - id: localPoint
      type: WaveEngine.Common.Math.Vector2
      description: A point on the body measured relative the the body&apos;s origin.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The same point expressed in world coordinates.
    content.vb: Function GetWorldPoint(localPoint As Vector2) As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  id: GetWorldVector(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: GetWorldVector(Vector2)
  nameWithType: IRigidBody2D.GetWorldVector(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetWorldVector
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 219
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGet the world coordinates of a vector given the local coordinates.\n"
  example: []
  syntax:
    content: Vector2 GetWorldVector(Vector2 localVector)
    parameters:
    - id: localVector
      type: WaveEngine.Common.Math.Vector2
      description: A vector fixed in the body.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The same vector expressed in world coordinates
    content.vb: Function GetWorldVector(localVector As Vector2) As Vector2
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector*
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  id: ResetMassData
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  langs:
  - csharp
  - vb
  name: ResetMassData()
  nameWithType: IRigidBody2D.ResetMassData()
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData()
  type: Method
  source:
    id: ResetMassData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\IRigidBody2D.cs
    startLine: 227
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nThis resets the mass properties to the sum of the mass properties of the fixtures.\n"
  remarks: "\nThis normally does not need to be called unless you called SetMassData to override the mass and you later want to reset the mass.\n"
  example: []
  syntax:
    content: void ResetMassData()
    content.vb: Sub ResetMassData
  overload: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData*
references:
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Position*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Position
  name: Position
  nameWithType: IRigidBody2D.Position
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Position
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Angle*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  name: Angle
  nameWithType: IRigidBody2D.Angle
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Angle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  name: LinearVelocity
  nameWithType: IRigidBody2D.LinearVelocity
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  name: AngularVelocity
  nameWithType: IRigidBody2D.AngularVelocity
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  name: LinearDamping
  nameWithType: IRigidBody2D.LinearDamping
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  name: AngularDamping
  nameWithType: IRigidBody2D.AngularDamping
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  name: AllowSleep
  nameWithType: IRigidBody2D.AllowSleep
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Awake*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  name: Awake
  nameWithType: IRigidBody2D.Awake
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Awake
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  name: FixedRotation
  nameWithType: IRigidBody2D.FixedRotation
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  name: Bullet
  nameWithType: IRigidBody2D.Bullet
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Active*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Active
  name: Active
  nameWithType: IRigidBody2D.Active
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Active
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.UserData*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  name: UserData
  nameWithType: IRigidBody2D.UserData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.UserData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  name: GravityScale
  nameWithType: IRigidBody2D.GravityScale
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Type*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Type
  name: Type
  nameWithType: IRigidBody2D.Type
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Type
- uid: WaveEngine.Common.Physics2D.RigidBodyType2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyType2D
  parent: WaveEngine.Common.Physics2D
  name: RigidBodyType2D
  nameWithType: RigidBodyType2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyType2D
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  name: WorldCenter
  nameWithType: IRigidBody2D.WorldCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  name: LocalCenter
  nameWithType: IRigidBody2D.LocalCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  name: ColliderList
  nameWithType: IRigidBody2D.ColliderList
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics2D.ICollider2D}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics2D.ICollider2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ICollider2D>
  nameWithType: IEnumerable<ICollider2D>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Physics2D.ICollider2D>
  nameWithType.vb: IEnumerable(Of ICollider2D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Physics2D.ICollider2D)
  name.vb: IEnumerable(Of ICollider2D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Physics2D.ICollider2D
    name: ICollider2D
    nameWithType: ICollider2D
    fullName: WaveEngine.Common.Physics2D.ICollider2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Physics2D.ICollider2D
    name: ICollider2D
    nameWithType: ICollider2D
    fullName: WaveEngine.Common.Physics2D.ICollider2D
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Mass*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  name: Mass
  nameWithType: IRigidBody2D.Mass
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Mass
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  name: Inertia
  nameWithType: IRigidBody2D.Inertia
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.MassData*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  name: MassData
  nameWithType: IRigidBody2D.MassData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.MassData
- uid: WaveEngine.Common.Physics2D.RigidBodyMassData2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyMassData2D
  parent: WaveEngine.Common.Physics2D
  name: RigidBodyMassData2D
  nameWithType: RigidBodyMassData2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyMassData2D
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform
  name: SetTransform
  nameWithType: IRigidBody2D.SetTransform
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce
  name: ApplyForce
  nameWithType: IRigidBody2D.ApplyForce
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter
  name: ApplyForceToCenter
  nameWithType: IRigidBody2D.ApplyForceToCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse
  name: ApplyLinearImpulse
  nameWithType: IRigidBody2D.ApplyLinearImpulse
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque
  name: ApplyTorque
  nameWithType: IRigidBody2D.ApplyTorque
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider
  name: CreateCollider
  nameWithType: IRigidBody2D.CreateCollider
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider
- uid: WaveEngine.Common.Physics2D.ColliderDef2D
  commentId: T:WaveEngine.Common.Physics2D.ColliderDef2D
  parent: WaveEngine.Common.Physics2D
  name: ColliderDef2D
  nameWithType: ColliderDef2D
  fullName: WaveEngine.Common.Physics2D.ColliderDef2D
- uid: WaveEngine.Common.Physics2D.ICollider2D
  commentId: T:WaveEngine.Common.Physics2D.ICollider2D
  parent: WaveEngine.Common.Physics2D
  name: ICollider2D
  nameWithType: ICollider2D
  fullName: WaveEngine.Common.Physics2D.ICollider2D
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider
  name: DestroyCollider
  nameWithType: IRigidBody2D.DestroyCollider
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint
  name: GetLinearVelocityFromLocalPoint
  nameWithType: IRigidBody2D.GetLinearVelocityFromLocalPoint
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint
  name: GetLinearVelocityFromWorldPoint
  nameWithType: IRigidBody2D.GetLinearVelocityFromWorldPoint
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint
  name: GetLocalPoint
  nameWithType: IRigidBody2D.GetLocalPoint
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector
  name: GetLocalVector
  nameWithType: IRigidBody2D.GetLocalVector
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint
  name: GetWorldPoint
  nameWithType: IRigidBody2D.GetWorldPoint
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector
  name: GetWorldVector
  nameWithType: IRigidBody2D.GetWorldVector
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData*
  commentId: Overload:WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  name: ResetMassData
  nameWithType: IRigidBody2D.ResetMassData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
