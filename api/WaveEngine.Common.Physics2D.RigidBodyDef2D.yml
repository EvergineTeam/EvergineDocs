### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyDef2D
  id: RigidBodyDef2D
  parent: WaveEngine.Common.Physics2D
  children:
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.Active
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.AllowSleep
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.Angle
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularDamping
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularVelocity
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.Awake
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.Bullet
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.FixedRotation
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.GravityScale
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearDamping
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearVelocity
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.Position
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.Type
  - WaveEngine.Common.Physics2D.RigidBodyDef2D.UserData
  langs:
  - csharp
  - vb
  name: RigidBodyDef2D
  nameWithType: RigidBodyDef2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D
  type: Class
  source:
    id: RigidBodyDef2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nDefinition of a Rigid Body 2D.\n"
  example: []
  syntax:
    content: public class RigidBodyDef2D
    content.vb: Public Class RigidBodyDef2D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.Position
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.Position
  id: Position
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: RigidBodyDef2D.Position
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.Position
  type: Field
  source:
    id: Position
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 19
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nThe world position of the body. Avoid creating bodies at the origin since this can lead to many overlapping shapes.\n"
  example: []
  syntax:
    content: public Vector2 Position
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Position As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.Angle
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.Angle
  id: Angle
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: RigidBodyDef2D.Angle
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.Angle
  type: Field
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 24
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nThe world angle of the body in radians.\n"
  example: []
  syntax:
    content: public float Angle
    return:
      type: System.Single
    content.vb: Public Angle As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearVelocity
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearVelocity
  id: LinearVelocity
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: RigidBodyDef2D.LinearVelocity
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearVelocity
  type: Field
  source:
    id: LinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 29
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nThe linear velocity of the body&apos;s origin in world co-ordinates.\n"
  example: []
  syntax:
    content: public Vector2 LinearVelocity
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public LinearVelocity As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularVelocity
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularVelocity
  id: AngularVelocity
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: RigidBodyDef2D.AngularVelocity
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularVelocity
  type: Field
  source:
    id: AngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 34
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nThe angular velocity of the body.\n"
  example: []
  syntax:
    content: public float AngularVelocity
    return:
      type: System.Single
    content.vb: Public AngularVelocity As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearDamping
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearDamping
  id: LinearDamping
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: LinearDamping
  nameWithType: RigidBodyDef2D.LinearDamping
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.LinearDamping
  type: Field
  source:
    id: LinearDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 40
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nLinear damping is use to reduce the linear velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: public float LinearDamping
    return:
      type: System.Single
    content.vb: Public LinearDamping As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularDamping
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularDamping
  id: AngularDamping
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: AngularDamping
  nameWithType: RigidBodyDef2D.AngularDamping
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.AngularDamping
  type: Field
  source:
    id: AngularDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nAngular damping is use to reduce the angular velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: public float AngularDamping
    return:
      type: System.Single
    content.vb: Public AngularDamping As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.AllowSleep
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.AllowSleep
  id: AllowSleep
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: AllowSleep
  nameWithType: RigidBodyDef2D.AllowSleep
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.AllowSleep
  type: Field
  source:
    id: AllowSleep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 51
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nSet this flag to false if this body should never fall asleep. Note that this increases CPU usage.\n"
  example: []
  syntax:
    content: public bool AllowSleep
    return:
      type: System.Boolean
    content.vb: Public AllowSleep As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.Awake
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.Awake
  id: Awake
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: Awake
  nameWithType: RigidBodyDef2D.Awake
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.Awake
  type: Field
  source:
    id: Awake
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 56
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nIs this body initially awake or sleeping?\n"
  example: []
  syntax:
    content: public bool Awake
    return:
      type: System.Boolean
    content.vb: Public Awake As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.FixedRotation
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.FixedRotation
  id: FixedRotation
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: FixedRotation
  nameWithType: RigidBodyDef2D.FixedRotation
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.FixedRotation
  type: Field
  source:
    id: FixedRotation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 61
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nShould this body be prevented from rotating? Useful for characters.\n"
  example: []
  syntax:
    content: public bool FixedRotation
    return:
      type: System.Boolean
    content.vb: Public FixedRotation As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.Bullet
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.Bullet
  id: Bullet
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: Bullet
  nameWithType: RigidBodyDef2D.Bullet
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.Bullet
  type: Field
  source:
    id: Bullet
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 70
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nIs this a fast moving body that should be prevented from tunneling through other moving bodies?\n<remarks>\nNote that all bodies are prevented from tunneling through kinematic and static bodies.\nThis setting is only considered on dynamic bodies.\n</remarks>\n"
  example: []
  syntax:
    content: public bool Bullet
    return:
      type: System.Boolean
    content.vb: Public Bullet As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.Active
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.Active
  id: Active
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: RigidBodyDef2D.Active
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.Active
  type: Field
  source:
    id: Active
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 75
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nDoes this body start out active?\n"
  example: []
  syntax:
    content: public bool Active
    return:
      type: System.Boolean
    content.vb: Public Active As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.UserData
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.UserData
  id: UserData
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: RigidBodyDef2D.UserData
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.UserData
  type: Field
  source:
    id: UserData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 80
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nUse this to store application specific body data.\n"
  example: []
  syntax:
    content: public object UserData
    return:
      type: System.Object
    content.vb: Public UserData As Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.GravityScale
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.GravityScale
  id: GravityScale
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: GravityScale
  nameWithType: RigidBodyDef2D.GravityScale
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.GravityScale
  type: Field
  source:
    id: GravityScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 85
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nScale the gravity applied to this body.\n"
  example: []
  syntax:
    content: public float GravityScale
    return:
      type: System.Single
    content.vb: Public GravityScale As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D.Type
  commentId: F:WaveEngine.Common.Physics2D.RigidBodyDef2D.Type
  id: Type
  parent: WaveEngine.Common.Physics2D.RigidBodyDef2D
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RigidBodyDef2D.Type
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D.Type
  type: Field
  source:
    id: Type
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Body\RigidBodyDef2D.cs
    startLine: 90
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nThe rigid body 2D type\n"
  example: []
  syntax:
    content: public RigidBodyType2D Type
    return:
      type: WaveEngine.Common.Physics2D.RigidBodyType2D
    content.vb: Public Type As RigidBodyType2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Physics2D.RigidBodyType2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyType2D
  parent: WaveEngine.Common.Physics2D
  name: RigidBodyType2D
  nameWithType: RigidBodyType2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyType2D
