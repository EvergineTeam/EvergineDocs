### YamlMime:ManagedReference
items:
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices
  commentId: T:WaveEngine.Box2D.TextureTools.DetectedVertices
  id: DetectedVertices
  parent: WaveEngine.Box2D.TextureTools
  children:
  - WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor
  - WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor(WaveEngine.Box2D.Utils.Vertices)
  - WaveEngine.Box2D.TextureTools.DetectedVertices.Holes
  - WaveEngine.Box2D.TextureTools.DetectedVertices.Transform(WaveEngine.Common.Math.Matrix)
  langs:
  - csharp
  - vb
  name: DetectedVertices
  nameWithType: DetectedVertices
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices
  type: Class
  source:
    id: DetectedVertices
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\TextureTools\DetectedVertices.cs
    startLine: 15
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.TextureTools
  summary: "\nDetected vertices of a single polygon.\n"
  example: []
  syntax:
    content: 'public class DetectedVertices : Vertices, IList<Vector2>, ICollection<Vector2>, IList, ICollection, IReadOnlyList<Vector2>, IReadOnlyCollection<Vector2>, IEnumerable<Vector2>, IEnumerable'
    content.vb: >-
      Public Class DetectedVertices

          Inherits Vertices

          Implements IList(Of Vector2), ICollection(Of Vector2), IList, ICollection, IReadOnlyList(Of Vector2), IReadOnlyCollection(Of Vector2), IEnumerable(Of Vector2), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  - WaveEngine.Box2D.Utils.Vertices
  implements:
  - System.Collections.Generic.IList{WaveEngine.Common.Math.Vector2}
  - System.Collections.Generic.ICollection{WaveEngine.Common.Math.Vector2}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{WaveEngine.Common.Math.Vector2}
  - System.Collections.Generic.IReadOnlyCollection{WaveEngine.Common.Math.Vector2}
  - System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2}
  - System.Collections.IEnumerable
  inheritedMembers:
  - WaveEngine.Box2D.Utils.Vertices.MaxPolygonVertices
  - WaveEngine.Box2D.Utils.Vertices.AngularSlop
  - WaveEngine.Box2D.Utils.Vertices.LinearSlop
  - WaveEngine.Box2D.Utils.Vertices.NextIndex(System.Int32)
  - WaveEngine.Box2D.Utils.Vertices.NextVertex(System.Int32)
  - WaveEngine.Box2D.Utils.Vertices.PreviousIndex(System.Int32)
  - WaveEngine.Box2D.Utils.Vertices.PreviousVertex(System.Int32)
  - WaveEngine.Box2D.Utils.Vertices.GetSignedArea
  - WaveEngine.Box2D.Utils.Vertices.GetArea
  - WaveEngine.Box2D.Utils.Vertices.GetCentroid
  - WaveEngine.Box2D.Utils.Vertices.GetRadius
  - WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.Vertices.Scale(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.Vertices.Rotate(System.Single)
  - WaveEngine.Box2D.Utils.Vertices.Transform(WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Box2D.Utils.Vertices.IsConvex
  - WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
  - WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
  - WaveEngine.Box2D.Utils.Vertices.IsSimple
  - WaveEngine.Box2D.Utils.Vertices.CheckPolygon
  - WaveEngine.Box2D.Utils.Vertices.TraceEdge(WaveEngine.Box2D.Utils.Vertices)
  - WaveEngine.Box2D.Utils.Vertices.ToString
  - WaveEngine.Box2D.Utils.Vertices.ProjectToAxis(WaveEngine.Common.Math.Vector2@,System.Single@,System.Single@)
  - WaveEngine.Box2D.Utils.Vertices.PointInPolygon(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle(WaveEngine.Common.Math.Vector2@)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Add(WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.AddRange(System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.AsReadOnly
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(System.Int32,System.Int32,WaveEngine.Common.Math.Vector2,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(WaveEngine.Common.Math.Vector2,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Clear
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Contains(WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ConvertAll``1(System.Converter{WaveEngine.Common.Math.Vector2,{TOutput}})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(WaveEngine.Common.Math.Vector2[])
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(System.Int32,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(WaveEngine.Common.Math.Vector2[],System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Exists(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Find(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Int32,System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLast(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Int32,System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ForEach(System.Action{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.GetEnumerator
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2,System.Int32,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Insert(System.Int32,WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2,System.Int32,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Remove(WaveEngine.Common.Math.Vector2)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Reverse
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Comparison{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ToArray
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.TrimExcess
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.TrueForAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Capacity
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Count
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Item(System.Int32)
  - System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.Holes
  commentId: P:WaveEngine.Box2D.TextureTools.DetectedVertices.Holes
  id: Holes
  parent: WaveEngine.Box2D.TextureTools.DetectedVertices
  langs:
  - csharp
  - vb
  name: Holes
  nameWithType: DetectedVertices.Holes
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.Holes
  type: Property
  source:
    id: Holes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\TextureTools\DetectedVertices.cs
    startLine: 25
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.TextureTools
  summary: "\nGets or sets the holes\n"
  example: []
  syntax:
    content: public List<Vertices> Holes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{WaveEngine.Box2D.Utils.Vertices}
    content.vb: Public Property Holes As List(Of Vertices)
  overload: WaveEngine.Box2D.TextureTools.DetectedVertices.Holes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor
  commentId: M:WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor
  id: '#ctor'
  parent: WaveEngine.Box2D.TextureTools.DetectedVertices
  langs:
  - csharp
  - vb
  name: DetectedVertices()
  nameWithType: DetectedVertices.DetectedVertices()
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.DetectedVertices()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\TextureTools\DetectedVertices.cs
    startLine: 34
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.TextureTools
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Box2D.TextureTools.DetectedVertices\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DetectedVertices()
    content.vb: Public Sub New
  overload: WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor(WaveEngine.Box2D.Utils.Vertices)
  commentId: M:WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor(WaveEngine.Box2D.Utils.Vertices)
  id: '#ctor(WaveEngine.Box2D.Utils.Vertices)'
  parent: WaveEngine.Box2D.TextureTools.DetectedVertices
  langs:
  - csharp
  - vb
  name: DetectedVertices(Vertices)
  nameWithType: DetectedVertices.DetectedVertices(Vertices)
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.DetectedVertices(WaveEngine.Box2D.Utils.Vertices)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\TextureTools\DetectedVertices.cs
    startLine: 43
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.TextureTools
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Box2D.TextureTools.DetectedVertices\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DetectedVertices(Vertices vertices)
    parameters:
    - id: vertices
      type: WaveEngine.Box2D.Utils.Vertices
      description: The vertices
    content.vb: Public Sub New(vertices As Vertices)
  overload: WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.Transform(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Box2D.TextureTools.DetectedVertices.Transform(WaveEngine.Common.Math.Matrix)
  id: Transform(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Box2D.TextureTools.DetectedVertices
  langs:
  - csharp
  - vb
  name: Transform(Matrix)
  nameWithType: DetectedVertices.Transform(Matrix)
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.Transform(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Utils\TextureTools\DetectedVertices.cs
    startLine: 52
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D.TextureTools
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Box2D.TextureTools.DetectedVertices\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public void Transform(Matrix transform)
    parameters:
    - id: transform
      type: WaveEngine.Common.Math.Matrix
      description: The transform
    content.vb: Public Sub Transform(transform As Matrix)
  overload: WaveEngine.Box2D.TextureTools.DetectedVertices.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Box2D.TextureTools
  commentId: N:WaveEngine.Box2D.TextureTools
  name: WaveEngine.Box2D.TextureTools
  nameWithType: WaveEngine.Box2D.TextureTools
  fullName: WaveEngine.Box2D.TextureTools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices
  commentId: T:WaveEngine.Box2D.Utils.Vertices
  parent: WaveEngine.Box2D.Utils
  name: Vertices
  nameWithType: Vertices
  fullName: WaveEngine.Box2D.Utils.Vertices
- uid: System.Collections.Generic.IList{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.IList{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Vector2>
  nameWithType: IList<Vector2>
  fullName: System.Collections.Generic.IList<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: IList(Of Vector2)
  fullName.vb: System.Collections.Generic.IList(Of WaveEngine.Common.Math.Vector2)
  name.vb: IList(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.ICollection{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Vector2>
  nameWithType: ICollection<Vector2>
  fullName: System.Collections.Generic.ICollection<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: ICollection(Of Vector2)
  fullName.vb: System.Collections.Generic.ICollection(Of WaveEngine.Common.Math.Vector2)
  name.vb: ICollection(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.IReadOnlyList{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Vector2>
  nameWithType: IReadOnlyList<Vector2>
  fullName: System.Collections.Generic.IReadOnlyList<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: IReadOnlyList(Of Vector2)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of WaveEngine.Common.Math.Vector2)
  name.vb: IReadOnlyList(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Vector2>
  nameWithType: IReadOnlyCollection<Vector2>
  fullName: System.Collections.Generic.IReadOnlyCollection<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: IReadOnlyCollection(Of Vector2)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of WaveEngine.Common.Math.Vector2)
  name.vb: IReadOnlyCollection(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector2>
  nameWithType: IEnumerable<Vector2>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: IEnumerable(Of Vector2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Math.Vector2)
  name.vb: IEnumerable(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: WaveEngine.Box2D.Utils.Vertices.MaxPolygonVertices
  commentId: F:WaveEngine.Box2D.Utils.Vertices.MaxPolygonVertices
  parent: WaveEngine.Box2D.Utils.Vertices
  name: MaxPolygonVertices
  nameWithType: Vertices.MaxPolygonVertices
  fullName: WaveEngine.Box2D.Utils.Vertices.MaxPolygonVertices
- uid: WaveEngine.Box2D.Utils.Vertices.AngularSlop
  commentId: F:WaveEngine.Box2D.Utils.Vertices.AngularSlop
  parent: WaveEngine.Box2D.Utils.Vertices
  name: AngularSlop
  nameWithType: Vertices.AngularSlop
  fullName: WaveEngine.Box2D.Utils.Vertices.AngularSlop
- uid: WaveEngine.Box2D.Utils.Vertices.LinearSlop
  commentId: F:WaveEngine.Box2D.Utils.Vertices.LinearSlop
  parent: WaveEngine.Box2D.Utils.Vertices
  name: LinearSlop
  nameWithType: Vertices.LinearSlop
  fullName: WaveEngine.Box2D.Utils.Vertices.LinearSlop
- uid: WaveEngine.Box2D.Utils.Vertices.NextIndex(System.Int32)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.NextIndex(System.Int32)
  parent: WaveEngine.Box2D.Utils.Vertices
  isExternal: true
  name: NextIndex(Int32)
  nameWithType: Vertices.NextIndex(Int32)
  fullName: WaveEngine.Box2D.Utils.Vertices.NextIndex(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.NextIndex(System.Int32)
    name: NextIndex
    nameWithType: Vertices.NextIndex
    fullName: WaveEngine.Box2D.Utils.Vertices.NextIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.NextIndex(System.Int32)
    name: NextIndex
    nameWithType: Vertices.NextIndex
    fullName: WaveEngine.Box2D.Utils.Vertices.NextIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.NextVertex(System.Int32)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.NextVertex(System.Int32)
  parent: WaveEngine.Box2D.Utils.Vertices
  isExternal: true
  name: NextVertex(Int32)
  nameWithType: Vertices.NextVertex(Int32)
  fullName: WaveEngine.Box2D.Utils.Vertices.NextVertex(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.NextVertex(System.Int32)
    name: NextVertex
    nameWithType: Vertices.NextVertex
    fullName: WaveEngine.Box2D.Utils.Vertices.NextVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.NextVertex(System.Int32)
    name: NextVertex
    nameWithType: Vertices.NextVertex
    fullName: WaveEngine.Box2D.Utils.Vertices.NextVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.PreviousIndex(System.Int32)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.PreviousIndex(System.Int32)
  parent: WaveEngine.Box2D.Utils.Vertices
  isExternal: true
  name: PreviousIndex(Int32)
  nameWithType: Vertices.PreviousIndex(Int32)
  fullName: WaveEngine.Box2D.Utils.Vertices.PreviousIndex(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.PreviousIndex(System.Int32)
    name: PreviousIndex
    nameWithType: Vertices.PreviousIndex
    fullName: WaveEngine.Box2D.Utils.Vertices.PreviousIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.PreviousIndex(System.Int32)
    name: PreviousIndex
    nameWithType: Vertices.PreviousIndex
    fullName: WaveEngine.Box2D.Utils.Vertices.PreviousIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.PreviousVertex(System.Int32)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.PreviousVertex(System.Int32)
  parent: WaveEngine.Box2D.Utils.Vertices
  isExternal: true
  name: PreviousVertex(Int32)
  nameWithType: Vertices.PreviousVertex(Int32)
  fullName: WaveEngine.Box2D.Utils.Vertices.PreviousVertex(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.PreviousVertex(System.Int32)
    name: PreviousVertex
    nameWithType: Vertices.PreviousVertex
    fullName: WaveEngine.Box2D.Utils.Vertices.PreviousVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.PreviousVertex(System.Int32)
    name: PreviousVertex
    nameWithType: Vertices.PreviousVertex
    fullName: WaveEngine.Box2D.Utils.Vertices.PreviousVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.GetSignedArea
  commentId: M:WaveEngine.Box2D.Utils.Vertices.GetSignedArea
  parent: WaveEngine.Box2D.Utils.Vertices
  name: GetSignedArea()
  nameWithType: Vertices.GetSignedArea()
  fullName: WaveEngine.Box2D.Utils.Vertices.GetSignedArea()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetSignedArea
    name: GetSignedArea
    nameWithType: Vertices.GetSignedArea
    fullName: WaveEngine.Box2D.Utils.Vertices.GetSignedArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetSignedArea
    name: GetSignedArea
    nameWithType: Vertices.GetSignedArea
    fullName: WaveEngine.Box2D.Utils.Vertices.GetSignedArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.GetArea
  commentId: M:WaveEngine.Box2D.Utils.Vertices.GetArea
  parent: WaveEngine.Box2D.Utils.Vertices
  name: GetArea()
  nameWithType: Vertices.GetArea()
  fullName: WaveEngine.Box2D.Utils.Vertices.GetArea()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetArea
    name: GetArea
    nameWithType: Vertices.GetArea
    fullName: WaveEngine.Box2D.Utils.Vertices.GetArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetArea
    name: GetArea
    nameWithType: Vertices.GetArea
    fullName: WaveEngine.Box2D.Utils.Vertices.GetArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.GetCentroid
  commentId: M:WaveEngine.Box2D.Utils.Vertices.GetCentroid
  parent: WaveEngine.Box2D.Utils.Vertices
  name: GetCentroid()
  nameWithType: Vertices.GetCentroid()
  fullName: WaveEngine.Box2D.Utils.Vertices.GetCentroid()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetCentroid
    name: GetCentroid
    nameWithType: Vertices.GetCentroid
    fullName: WaveEngine.Box2D.Utils.Vertices.GetCentroid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetCentroid
    name: GetCentroid
    nameWithType: Vertices.GetCentroid
    fullName: WaveEngine.Box2D.Utils.Vertices.GetCentroid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.GetRadius
  commentId: M:WaveEngine.Box2D.Utils.Vertices.GetRadius
  parent: WaveEngine.Box2D.Utils.Vertices
  name: GetRadius()
  nameWithType: Vertices.GetRadius()
  fullName: WaveEngine.Box2D.Utils.Vertices.GetRadius()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetRadius
    name: GetRadius
    nameWithType: Vertices.GetRadius
    fullName: WaveEngine.Box2D.Utils.Vertices.GetRadius
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.GetRadius
    name: GetRadius
    nameWithType: Vertices.GetRadius
    fullName: WaveEngine.Box2D.Utils.Vertices.GetRadius
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: Translate(Vector2)
  nameWithType: Vertices.Translate(Vector2)
  fullName: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
    name: Translate
    nameWithType: Vertices.Translate
    fullName: WaveEngine.Box2D.Utils.Vertices.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
    name: Translate
    nameWithType: Vertices.Translate
    fullName: WaveEngine.Box2D.Utils.Vertices.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: Translate(Vector2)
  nameWithType: Vertices.Translate(Vector2)
  fullName: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2@)
    name: Translate
    nameWithType: Vertices.Translate
    fullName: WaveEngine.Box2D.Utils.Vertices.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.Translate(WaveEngine.Common.Math.Vector2@)
    name: Translate
    nameWithType: Vertices.Translate
    fullName: WaveEngine.Box2D.Utils.Vertices.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.Scale(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.Scale(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: Scale(Vector2)
  nameWithType: Vertices.Scale(Vector2)
  fullName: WaveEngine.Box2D.Utils.Vertices.Scale(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.Scale(WaveEngine.Common.Math.Vector2@)
    name: Scale
    nameWithType: Vertices.Scale
    fullName: WaveEngine.Box2D.Utils.Vertices.Scale
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.Scale(WaveEngine.Common.Math.Vector2@)
    name: Scale
    nameWithType: Vertices.Scale
    fullName: WaveEngine.Box2D.Utils.Vertices.Scale
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.Rotate(System.Single)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.Rotate(System.Single)
  parent: WaveEngine.Box2D.Utils.Vertices
  isExternal: true
  name: Rotate(Single)
  nameWithType: Vertices.Rotate(Single)
  fullName: WaveEngine.Box2D.Utils.Vertices.Rotate(System.Single)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.Rotate(System.Single)
    name: Rotate
    nameWithType: Vertices.Rotate
    fullName: WaveEngine.Box2D.Utils.Vertices.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.Rotate(System.Single)
    name: Rotate
    nameWithType: Vertices.Rotate
    fullName: WaveEngine.Box2D.Utils.Vertices.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.Transform(WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.Transform(WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: Transform(Matrix)
  nameWithType: Vertices.Transform(Matrix)
  fullName: WaveEngine.Box2D.Utils.Vertices.Transform(WaveEngine.Common.Math.Matrix)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.Transform(WaveEngine.Common.Math.Matrix@)
    name: Transform
    nameWithType: Vertices.Transform
    fullName: WaveEngine.Box2D.Utils.Vertices.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.Transform(WaveEngine.Common.Math.Matrix@)
    name: Transform
    nameWithType: Vertices.Transform
    fullName: WaveEngine.Box2D.Utils.Vertices.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.IsConvex
  commentId: M:WaveEngine.Box2D.Utils.Vertices.IsConvex
  parent: WaveEngine.Box2D.Utils.Vertices
  name: IsConvex()
  nameWithType: Vertices.IsConvex()
  fullName: WaveEngine.Box2D.Utils.Vertices.IsConvex()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.IsConvex
    name: IsConvex
    nameWithType: Vertices.IsConvex
    fullName: WaveEngine.Box2D.Utils.Vertices.IsConvex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.IsConvex
    name: IsConvex
    nameWithType: Vertices.IsConvex
    fullName: WaveEngine.Box2D.Utils.Vertices.IsConvex
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
  commentId: M:WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
  parent: WaveEngine.Box2D.Utils.Vertices
  name: IsCounterClockWise()
  nameWithType: Vertices.IsCounterClockWise()
  fullName: WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
    name: IsCounterClockWise
    nameWithType: Vertices.IsCounterClockWise
    fullName: WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
    name: IsCounterClockWise
    nameWithType: Vertices.IsCounterClockWise
    fullName: WaveEngine.Box2D.Utils.Vertices.IsCounterClockWise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
  commentId: M:WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
  parent: WaveEngine.Box2D.Utils.Vertices
  name: ForceCounterClockWise()
  nameWithType: Vertices.ForceCounterClockWise()
  fullName: WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
    name: ForceCounterClockWise
    nameWithType: Vertices.ForceCounterClockWise
    fullName: WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
    name: ForceCounterClockWise
    nameWithType: Vertices.ForceCounterClockWise
    fullName: WaveEngine.Box2D.Utils.Vertices.ForceCounterClockWise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.IsSimple
  commentId: M:WaveEngine.Box2D.Utils.Vertices.IsSimple
  parent: WaveEngine.Box2D.Utils.Vertices
  name: IsSimple()
  nameWithType: Vertices.IsSimple()
  fullName: WaveEngine.Box2D.Utils.Vertices.IsSimple()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.IsSimple
    name: IsSimple
    nameWithType: Vertices.IsSimple
    fullName: WaveEngine.Box2D.Utils.Vertices.IsSimple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.IsSimple
    name: IsSimple
    nameWithType: Vertices.IsSimple
    fullName: WaveEngine.Box2D.Utils.Vertices.IsSimple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.CheckPolygon
  commentId: M:WaveEngine.Box2D.Utils.Vertices.CheckPolygon
  parent: WaveEngine.Box2D.Utils.Vertices
  name: CheckPolygon()
  nameWithType: Vertices.CheckPolygon()
  fullName: WaveEngine.Box2D.Utils.Vertices.CheckPolygon()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.CheckPolygon
    name: CheckPolygon
    nameWithType: Vertices.CheckPolygon
    fullName: WaveEngine.Box2D.Utils.Vertices.CheckPolygon
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.CheckPolygon
    name: CheckPolygon
    nameWithType: Vertices.CheckPolygon
    fullName: WaveEngine.Box2D.Utils.Vertices.CheckPolygon
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.TraceEdge(WaveEngine.Box2D.Utils.Vertices)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.TraceEdge(WaveEngine.Box2D.Utils.Vertices)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: TraceEdge(Vertices)
  nameWithType: Vertices.TraceEdge(Vertices)
  fullName: WaveEngine.Box2D.Utils.Vertices.TraceEdge(WaveEngine.Box2D.Utils.Vertices)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.TraceEdge(WaveEngine.Box2D.Utils.Vertices)
    name: TraceEdge
    nameWithType: Vertices.TraceEdge
    fullName: WaveEngine.Box2D.Utils.Vertices.TraceEdge
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Box2D.Utils.Vertices
    name: Vertices
    nameWithType: Vertices
    fullName: WaveEngine.Box2D.Utils.Vertices
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.TraceEdge(WaveEngine.Box2D.Utils.Vertices)
    name: TraceEdge
    nameWithType: Vertices.TraceEdge
    fullName: WaveEngine.Box2D.Utils.Vertices.TraceEdge
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Box2D.Utils.Vertices
    name: Vertices
    nameWithType: Vertices
    fullName: WaveEngine.Box2D.Utils.Vertices
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.ToString
  commentId: M:WaveEngine.Box2D.Utils.Vertices.ToString
  parent: WaveEngine.Box2D.Utils.Vertices
  name: ToString()
  nameWithType: Vertices.ToString()
  fullName: WaveEngine.Box2D.Utils.Vertices.ToString()
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.ToString
    name: ToString
    nameWithType: Vertices.ToString
    fullName: WaveEngine.Box2D.Utils.Vertices.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.ToString
    name: ToString
    nameWithType: Vertices.ToString
    fullName: WaveEngine.Box2D.Utils.Vertices.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.ProjectToAxis(WaveEngine.Common.Math.Vector2@,System.Single@,System.Single@)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.ProjectToAxis(WaveEngine.Common.Math.Vector2@,System.Single@,System.Single@)
  parent: WaveEngine.Box2D.Utils.Vertices
  isExternal: true
  name: ProjectToAxis(Vector2, Single, Single)
  nameWithType: Vertices.ProjectToAxis(Vector2, Single, Single)
  fullName: WaveEngine.Box2D.Utils.Vertices.ProjectToAxis(WaveEngine.Common.Math.Vector2, System.Single, System.Single)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.ProjectToAxis(WaveEngine.Common.Math.Vector2@,System.Single@,System.Single@)
    name: ProjectToAxis
    nameWithType: Vertices.ProjectToAxis
    fullName: WaveEngine.Box2D.Utils.Vertices.ProjectToAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.ProjectToAxis(WaveEngine.Common.Math.Vector2@,System.Single@,System.Single@)
    name: ProjectToAxis
    nameWithType: Vertices.ProjectToAxis
    fullName: WaveEngine.Box2D.Utils.Vertices.ProjectToAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.PointInPolygon(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.PointInPolygon(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: PointInPolygon(Vector2)
  nameWithType: Vertices.PointInPolygon(Vector2)
  fullName: WaveEngine.Box2D.Utils.Vertices.PointInPolygon(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.PointInPolygon(WaveEngine.Common.Math.Vector2@)
    name: PointInPolygon
    nameWithType: Vertices.PointInPolygon
    fullName: WaveEngine.Box2D.Utils.Vertices.PointInPolygon
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.PointInPolygon(WaveEngine.Common.Math.Vector2@)
    name: PointInPolygon
    nameWithType: Vertices.PointInPolygon
    fullName: WaveEngine.Box2D.Utils.Vertices.PointInPolygon
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Box2D.Utils.Vertices
  name: PointInPolygonAngle(Vector2)
  nameWithType: Vertices.PointInPolygonAngle(Vector2)
  fullName: WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle(WaveEngine.Common.Math.Vector2@)
    name: PointInPolygonAngle
    nameWithType: Vertices.PointInPolygonAngle
    fullName: WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle(WaveEngine.Common.Math.Vector2@)
    name: PointInPolygonAngle
    nameWithType: Vertices.PointInPolygonAngle
    fullName: WaveEngine.Box2D.Utils.Vertices.PointInPolygonAngle
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: List<Vector2>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<Vector2>.IList.get_Item
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of Vector2).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: List<Vector2>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<Vector2>.IList.set_Item
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of Vector2).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Add(WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Add(WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Add(`0)
  name: Add(Vector2)
  nameWithType: List<Vector2>.Add(Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Add(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).Add(Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Add(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<Vector2>.Add
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of Vector2).Add
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<Vector2>.IList.Add(Object)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<Vector2>.IList.Add
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of Vector2).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.AddRange(System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.AddRange(System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<Vector2>)
  nameWithType: List<Vector2>.AddRange(IEnumerable<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.AddRange(System.Collections.Generic.IEnumerable<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).AddRange(IEnumerable(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).AddRange(System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Math.Vector2))
  name.vb: AddRange(IEnumerable(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<Vector2>.AddRange
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of Vector2).AddRange
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.AsReadOnly
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.AsReadOnly
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<Vector2>.AsReadOnly()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.AsReadOnly()
  nameWithType.vb: List(Of Vector2).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<Vector2>.AsReadOnly
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of Vector2).AsReadOnly
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(System.Int32,System.Int32,WaveEngine.Common.Math.Vector2,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(System.Int32,System.Int32,WaveEngine.Common.Math.Vector2,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, Vector2, IComparer<Vector2>)
  nameWithType: List<Vector2>.BinarySearch(Int32, Int32, Vector2, IComparer<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.BinarySearch(System.Int32, System.Int32, WaveEngine.Common.Math.Vector2, System.Collections.Generic.IComparer<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).BinarySearch(Int32, Int32, Vector2, IComparer(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).BinarySearch(System.Int32, System.Int32, WaveEngine.Common.Math.Vector2, System.Collections.Generic.IComparer(Of WaveEngine.Common.Math.Vector2))
  name.vb: BinarySearch(Int32, Int32, Vector2, IComparer(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<Vector2>.BinarySearch
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of Vector2).BinarySearch
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(Vector2)
  nameWithType: List<Vector2>.BinarySearch(Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.BinarySearch(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).BinarySearch(Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).BinarySearch(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<Vector2>.BinarySearch
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of Vector2).BinarySearch
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(WaveEngine.Common.Math.Vector2,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.BinarySearch(WaveEngine.Common.Math.Vector2,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Vector2, IComparer<Vector2>)
  nameWithType: List<Vector2>.BinarySearch(Vector2, IComparer<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.BinarySearch(WaveEngine.Common.Math.Vector2, System.Collections.Generic.IComparer<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).BinarySearch(Vector2, IComparer(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).BinarySearch(WaveEngine.Common.Math.Vector2, System.Collections.Generic.IComparer(Of WaveEngine.Common.Math.Vector2))
  name.vb: BinarySearch(Vector2, IComparer(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<Vector2>.BinarySearch
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of Vector2).BinarySearch
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Clear
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Clear
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<Vector2>.Clear()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Clear()
  nameWithType.vb: List(Of Vector2).Clear()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<Vector2>.Clear
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of Vector2).Clear
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Contains(WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Contains(WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(Vector2)
  nameWithType: List<Vector2>.Contains(Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Contains(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).Contains(Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Contains(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<Vector2>.Contains
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of Vector2).Contains
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<Vector2>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<Vector2>.IList.Contains
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of Vector2).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ConvertAll``1(System.Converter{WaveEngine.Common.Math.Vector2,{TOutput}})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ConvertAll``1(System.Converter{WaveEngine.Common.Math.Vector2,``0})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<Vector2, TOutput>)
  nameWithType: List<Vector2>.ConvertAll<TOutput>(Converter<Vector2, TOutput>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.ConvertAll<TOutput>(System.Converter<WaveEngine.Common.Math.Vector2, TOutput>)
  nameWithType.vb: List(Of Vector2).ConvertAll(Of TOutput)(Converter(Of Vector2, TOutput))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).ConvertAll(Of TOutput)(System.Converter(Of WaveEngine.Common.Math.Vector2, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of Vector2, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<Vector2>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of Vector2).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(WaveEngine.Common.Math.Vector2[])
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(WaveEngine.Common.Math.Vector2[])
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(Vector2[])
  nameWithType: List<Vector2>.CopyTo(Vector2[])
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.CopyTo(WaveEngine.Common.Math.Vector2[])
  nameWithType.vb: List(Of Vector2).CopyTo(Vector2())
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).CopyTo(WaveEngine.Common.Math.Vector2())
  name.vb: CopyTo(Vector2())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<Vector2>.CopyTo
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of Vector2).CopyTo
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<Vector2>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of Vector2).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<Vector2>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of Vector2).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(System.Int32,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(System.Int32,WaveEngine.Common.Math.Vector2[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, Vector2[], Int32, Int32)
  nameWithType: List<Vector2>.CopyTo(Int32, Vector2[], Int32, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.CopyTo(System.Int32, WaveEngine.Common.Math.Vector2[], System.Int32, System.Int32)
  nameWithType.vb: List(Of Vector2).CopyTo(Int32, Vector2(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).CopyTo(System.Int32, WaveEngine.Common.Math.Vector2(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, Vector2(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<Vector2>.CopyTo
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of Vector2).CopyTo
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(WaveEngine.Common.Math.Vector2[],System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.CopyTo(WaveEngine.Common.Math.Vector2[],System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(Vector2[], Int32)
  nameWithType: List<Vector2>.CopyTo(Vector2[], Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.CopyTo(WaveEngine.Common.Math.Vector2[], System.Int32)
  nameWithType.vb: List(Of Vector2).CopyTo(Vector2(), Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).CopyTo(WaveEngine.Common.Math.Vector2(), System.Int32)
  name.vb: CopyTo(Vector2(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<Vector2>.CopyTo
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of Vector2).CopyTo
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Exists(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Exists(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<Vector2>)
  nameWithType: List<Vector2>.Exists(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Exists(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).Exists(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Exists(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: Exists(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<Vector2>.Exists
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of Vector2).Exists
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Find(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Find(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<Vector2>)
  nameWithType: List<Vector2>.Find(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Find(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).Find(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Find(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: Find(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<Vector2>.Find
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of Vector2).Find
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<Vector2>)
  nameWithType: List<Vector2>.FindAll(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindAll(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindAll(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindAll(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindAll(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<Vector2>.FindAll
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of Vector2).FindAll
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<Vector2>)
  nameWithType: List<Vector2>.FindIndex(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindIndex(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindIndex(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindIndex(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindIndex(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<Vector2>.FindIndex
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of Vector2).FindIndex
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<Vector2>)
  nameWithType: List<Vector2>.FindIndex(Int32, Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindIndex(System.Int32, System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindIndex(Int32, Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindIndex(System.Int32, System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindIndex(Int32, Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<Vector2>.FindIndex
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of Vector2).FindIndex
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Int32,System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindIndex(System.Int32,System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<Vector2>)
  nameWithType: List<Vector2>.FindIndex(Int32, Int32, Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindIndex(System.Int32, System.Int32, System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindIndex(Int32, Int32, Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindIndex(System.Int32, System.Int32, System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindIndex(Int32, Int32, Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<Vector2>.FindIndex
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of Vector2).FindIndex
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLast(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLast(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<Vector2>)
  nameWithType: List<Vector2>.FindLast(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLast(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindLast(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLast(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindLast(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<Vector2>.FindLast
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of Vector2).FindLast
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<Vector2>)
  nameWithType: List<Vector2>.FindLastIndex(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLastIndex(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindLastIndex(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLastIndex(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindLastIndex(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<Vector2>.FindLastIndex
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of Vector2).FindLastIndex
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<Vector2>)
  nameWithType: List<Vector2>.FindLastIndex(Int32, Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLastIndex(System.Int32, System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindLastIndex(Int32, Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLastIndex(System.Int32, System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindLastIndex(Int32, Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<Vector2>.FindLastIndex
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of Vector2).FindLastIndex
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Int32,System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.FindLastIndex(System.Int32,System.Int32,System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<Vector2>)
  nameWithType: List<Vector2>.FindLastIndex(Int32, Int32, Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLastIndex(System.Int32, System.Int32, System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).FindLastIndex(Int32, Int32, Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<Vector2>.FindLastIndex
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of Vector2).FindLastIndex
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ForEach(System.Action{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ForEach(System.Action{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<Vector2>)
  nameWithType: List<Vector2>.ForEach(Action<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.ForEach(System.Action<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).ForEach(Action(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).ForEach(System.Action(Of WaveEngine.Common.Math.Vector2))
  name.vb: ForEach(Action(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<Vector2>.ForEach
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of Vector2).ForEach
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.GetEnumerator
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.GetEnumerator
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<Vector2>.GetEnumerator()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.GetEnumerator()
  nameWithType.vb: List(Of Vector2).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<Vector2>.GetEnumerator
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of Vector2).GetEnumerator
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<Vector2>.GetEnumerator()
  nameWithType: List<Vector2>.IEnumerable<Vector2>.GetEnumerator()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.Generic.IEnumerable<WaveEngine.Common.Math.Vector2>.GetEnumerator()
  nameWithType.vb: List(Of Vector2).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<Vector2>.GetEnumerator
    nameWithType: List<Vector2>.IEnumerable<Vector2>.GetEnumerator
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.Generic.IEnumerable<WaveEngine.Common.Math.Vector2>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of Vector2).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<Vector2>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of Vector2).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<Vector2>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of Vector2).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<Vector2>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of Vector2).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<Vector2>.GetRange
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of Vector2).GetRange
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(Vector2)
  nameWithType: List<Vector2>.IndexOf(Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.IndexOf(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).IndexOf(Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).IndexOf(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<Vector2>.IndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of Vector2).IndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<Vector2>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<Vector2>.IList.IndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of Vector2).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(Vector2, Int32)
  nameWithType: List<Vector2>.IndexOf(Vector2, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.IndexOf(WaveEngine.Common.Math.Vector2, System.Int32)
  nameWithType.vb: List(Of Vector2).IndexOf(Vector2, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).IndexOf(WaveEngine.Common.Math.Vector2, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<Vector2>.IndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of Vector2).IndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.IndexOf(WaveEngine.Common.Math.Vector2,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(Vector2, Int32, Int32)
  nameWithType: List<Vector2>.IndexOf(Vector2, Int32, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.IndexOf(WaveEngine.Common.Math.Vector2, System.Int32, System.Int32)
  nameWithType.vb: List(Of Vector2).IndexOf(Vector2, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).IndexOf(WaveEngine.Common.Math.Vector2, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<Vector2>.IndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of Vector2).IndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Insert(System.Int32,WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Insert(System.Int32,WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, Vector2)
  nameWithType: List<Vector2>.Insert(Int32, Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Insert(System.Int32, WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).Insert(Int32, Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Insert(System.Int32, WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<Vector2>.Insert
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of Vector2).Insert
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<Vector2>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<Vector2>.IList.Insert
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of Vector2).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<Vector2>)
  nameWithType: List<Vector2>.InsertRange(Int32, IEnumerable<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).InsertRange(Int32, IEnumerable(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Math.Vector2))
  name.vb: InsertRange(Int32, IEnumerable(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<Vector2>.InsertRange
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of Vector2).InsertRange
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(Vector2)
  nameWithType: List<Vector2>.LastIndexOf(Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.LastIndexOf(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).LastIndexOf(Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).LastIndexOf(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<Vector2>.LastIndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of Vector2).LastIndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(Vector2, Int32)
  nameWithType: List<Vector2>.LastIndexOf(Vector2, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.LastIndexOf(WaveEngine.Common.Math.Vector2, System.Int32)
  nameWithType.vb: List(Of Vector2).LastIndexOf(Vector2, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).LastIndexOf(WaveEngine.Common.Math.Vector2, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<Vector2>.LastIndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of Vector2).LastIndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.LastIndexOf(WaveEngine.Common.Math.Vector2,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(Vector2, Int32, Int32)
  nameWithType: List<Vector2>.LastIndexOf(Vector2, Int32, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.LastIndexOf(WaveEngine.Common.Math.Vector2, System.Int32, System.Int32)
  nameWithType.vb: List(Of Vector2).LastIndexOf(Vector2, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).LastIndexOf(WaveEngine.Common.Math.Vector2, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<Vector2>.LastIndexOf
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of Vector2).LastIndexOf
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Remove(WaveEngine.Common.Math.Vector2)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Remove(WaveEngine.Common.Math.Vector2)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(Vector2)
  nameWithType: List<Vector2>.Remove(Vector2)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Remove(WaveEngine.Common.Math.Vector2)
  nameWithType.vb: List(Of Vector2).Remove(Vector2)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Remove(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<Vector2>.Remove
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of Vector2).Remove
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<Vector2>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of Vector2).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<Vector2>.IList.Remove
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of Vector2).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<Vector2>)
  nameWithType: List<Vector2>.RemoveAll(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.RemoveAll(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).RemoveAll(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).RemoveAll(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: RemoveAll(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<Vector2>.RemoveAll
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of Vector2).RemoveAll
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<Vector2>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of Vector2).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<Vector2>.RemoveAt
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of Vector2).RemoveAt
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<Vector2>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of Vector2).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<Vector2>.RemoveRange
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of Vector2).RemoveRange
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Reverse
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Reverse
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<Vector2>.Reverse()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Reverse()
  nameWithType.vb: List(Of Vector2).Reverse()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<Vector2>.Reverse
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of Vector2).Reverse
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<Vector2>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of Vector2).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<Vector2>.Reverse
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of Vector2).Reverse
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<Vector2>.Sort()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort()
  nameWithType.vb: List(Of Vector2).Sort()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<Vector2>.Sort
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of Vector2).Sort
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<Vector2>)
  nameWithType: List<Vector2>.Sort(IComparer<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort(System.Collections.Generic.IComparer<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).Sort(IComparer(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort(System.Collections.Generic.IComparer(Of WaveEngine.Common.Math.Vector2))
  name.vb: Sort(IComparer(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<Vector2>.Sort
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of Vector2).Sort
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<Vector2>)
  nameWithType: List<Vector2>.Sort(Int32, Int32, IComparer<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).Sort(Int32, Int32, IComparer(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of WaveEngine.Common.Math.Vector2))
  name.vb: Sort(Int32, Int32, IComparer(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<Vector2>.Sort
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of Vector2).Sort
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Comparison{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Sort(System.Comparison{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<Vector2>)
  nameWithType: List<Vector2>.Sort(Comparison<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort(System.Comparison<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).Sort(Comparison(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort(System.Comparison(Of WaveEngine.Common.Math.Vector2))
  name.vb: Sort(Comparison(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<Vector2>.Sort
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of Vector2).Sort
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ToArray
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.ToArray
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<Vector2>.ToArray()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.ToArray()
  nameWithType.vb: List(Of Vector2).ToArray()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<Vector2>.ToArray
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of Vector2).ToArray
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.TrimExcess
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.TrimExcess
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<Vector2>.TrimExcess()
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.TrimExcess()
  nameWithType.vb: List(Of Vector2).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<Vector2>.TrimExcess
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of Vector2).TrimExcess
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.TrueForAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  commentId: M:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.TrueForAll(System.Predicate{WaveEngine.Common.Math.Vector2})
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<Vector2>)
  nameWithType: List<Vector2>.TrueForAll(Predicate<Vector2>)
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.TrueForAll(System.Predicate<WaveEngine.Common.Math.Vector2>)
  nameWithType.vb: List(Of Vector2).TrueForAll(Predicate(Of Vector2))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).TrueForAll(System.Predicate(Of WaveEngine.Common.Math.Vector2))
  name.vb: TrueForAll(Predicate(Of Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<Vector2>.TrueForAll
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of Vector2).TrueForAll
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Capacity
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Capacity
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<Vector2>.Capacity
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Capacity
  nameWithType.vb: List(Of Vector2).Capacity
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Capacity
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Count
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Count
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<Vector2>.Count
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Count
  nameWithType.vb: List(Of Vector2).Count
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Count
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<Vector2>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of Vector2).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<Vector2>.IsReadOnly
  nameWithType: List<Vector2>.ICollection<Vector2>.IsReadOnly
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.Generic.ICollection<WaveEngine.Common.Math.Vector2>.IsReadOnly
  nameWithType.vb: List(Of Vector2).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<Vector2>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of Vector2).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<Vector2>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of Vector2).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<Vector2>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of Vector2).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.Item(System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: List<Vector2>.Item[Int32]
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Item[System.Int32]
  nameWithType.vb: List(Of Vector2).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<Vector2>.Item
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of Vector2).Item
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List{WaveEngine.Common.Math.Vector2}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: List<Vector2>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of Vector2).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<Vector2>.IList.Item
    fullName: System.Collections.Generic.List<WaveEngine.Common.Math.Vector2>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of Vector2).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of WaveEngine.Common.Math.Vector2).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Box2D.Utils
  commentId: N:WaveEngine.Box2D.Utils
  name: WaveEngine.Box2D.Utils
  nameWithType: WaveEngine.Box2D.Utils
  fullName: WaveEngine.Box2D.Utils
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: List<T>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<T>.IList.get_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: List<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<T>.IList.set_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<T>.Add
    fullName: System.Collections.Generic.List<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of T).Add
    fullName: System.Collections.Generic.List(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: List<T>.Item[Int32]
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  nameWithType.vb: List(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<T>.Item
    fullName: System.Collections.Generic.List<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of T).Item
    fullName: System.Collections.Generic.List(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: List<T>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<T>.IList.Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of T).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.Holes*
  commentId: Overload:WaveEngine.Box2D.TextureTools.DetectedVertices.Holes
  name: Holes
  nameWithType: DetectedVertices.Holes
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.Holes
- uid: System.Collections.Generic.List{WaveEngine.Box2D.Utils.Vertices}
  commentId: T:System.Collections.Generic.List{WaveEngine.Box2D.Utils.Vertices}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vertices>
  nameWithType: List<Vertices>
  fullName: System.Collections.Generic.List<WaveEngine.Box2D.Utils.Vertices>
  nameWithType.vb: List(Of Vertices)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Box2D.Utils.Vertices)
  name.vb: List(Of Vertices)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Box2D.Utils.Vertices
    name: Vertices
    nameWithType: Vertices
    fullName: WaveEngine.Box2D.Utils.Vertices
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Box2D.Utils.Vertices
    name: Vertices
    nameWithType: Vertices
    fullName: WaveEngine.Box2D.Utils.Vertices
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices
  commentId: T:WaveEngine.Box2D.TextureTools.DetectedVertices
  name: DetectedVertices
  nameWithType: DetectedVertices
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor*
  commentId: Overload:WaveEngine.Box2D.TextureTools.DetectedVertices.#ctor
  name: DetectedVertices
  nameWithType: DetectedVertices.DetectedVertices
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.DetectedVertices
- uid: WaveEngine.Box2D.TextureTools.DetectedVertices.Transform*
  commentId: Overload:WaveEngine.Box2D.TextureTools.DetectedVertices.Transform
  name: Transform
  nameWithType: DetectedVertices.Transform
  fullName: WaveEngine.Box2D.TextureTools.DetectedVertices.Transform
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
