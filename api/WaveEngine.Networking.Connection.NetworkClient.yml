### YamlMime:ManagedReference
items:
- uid: WaveEngine.Networking.Connection.NetworkClient
  commentId: T:WaveEngine.Networking.Connection.NetworkClient
  id: NetworkClient
  parent: WaveEngine.Networking.Connection
  children:
  - WaveEngine.Networking.Connection.NetworkClient.#ctor(System.String,System.Single,System.Single)
  - WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  - WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  - WaveEngine.Networking.Connection.NetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  - WaveEngine.Networking.Connection.NetworkClient.Disconnect
  - WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts(System.Int32)
  - WaveEngine.Networking.Connection.NetworkClient.HostConnected
  - WaveEngine.Networking.Connection.NetworkClient.HostDisconnected
  - WaveEngine.Networking.Connection.NetworkClient.HostDiscovered
  - WaveEngine.Networking.Connection.NetworkClient.Identifier
  - WaveEngine.Networking.Connection.NetworkClient.IsConnected
  - WaveEngine.Networking.Connection.NetworkClient.MessageReceived
  - WaveEngine.Networking.Connection.NetworkClient.OnHostConnected(WaveEngine.Networking.NetworkEndpoint)
  - WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected(WaveEngine.Networking.NetworkEndpoint)
  - WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered(WaveEngine.Networking.NetworkEndpoint)
  - WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.IncomingMessage)
  - WaveEngine.Networking.Connection.NetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  langs:
  - csharp
  - vb
  name: NetworkClient
  nameWithType: NetworkClient
  fullName: WaveEngine.Networking.Connection.NetworkClient
  type: Class
  source:
    id: NetworkClient
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 17
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  summary: "\nThe network client\n"
  example: []
  syntax:
    content: 'public class NetworkClient : INetworkClient'
    content.vb: >-
      Public Class NetworkClient

          Implements INetworkClient
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Networking.Connection.INetworkClient
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Networking.Connection.NetworkClient.IsConnected
  commentId: P:WaveEngine.Networking.Connection.NetworkClient.IsConnected
  id: IsConnected
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: NetworkClient.IsConnected
  fullName: WaveEngine.Networking.Connection.NetworkClient.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 37
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: WaveEngine.Networking.Connection.NetworkClient.IsConnected*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.IsConnected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Connection.NetworkClient.Identifier
  commentId: P:WaveEngine.Networking.Connection.NetworkClient.Identifier
  id: Identifier
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: NetworkClient.Identifier
  fullName: WaveEngine.Networking.Connection.NetworkClient.Identifier
  type: Property
  source:
    id: Identifier
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 40
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public long Identifier { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Identifier As Long
  overload: WaveEngine.Networking.Connection.NetworkClient.Identifier*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.Identifier
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Connection.NetworkClient.MessageReceived
  commentId: E:WaveEngine.Networking.Connection.NetworkClient.MessageReceived
  id: MessageReceived
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: MessageReceived
  nameWithType: NetworkClient.MessageReceived
  fullName: WaveEngine.Networking.Connection.NetworkClient.MessageReceived
  type: Event
  source:
    id: MessageReceived
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 50
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public event EventHandler<MessageReceivedEventArgs> MessageReceived
    return:
      type: System.EventHandler{WaveEngine.Networking.Connection.MessageReceivedEventArgs}
    content.vb: Public Event MessageReceived As EventHandler(Of MessageReceivedEventArgs)
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.MessageReceived
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.HostConnected
  commentId: E:WaveEngine.Networking.Connection.NetworkClient.HostConnected
  id: HostConnected
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: HostConnected
  nameWithType: NetworkClient.HostConnected
  fullName: WaveEngine.Networking.Connection.NetworkClient.HostConnected
  type: Event
  source:
    id: HostConnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 53
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public event EventHandler<HostConnectedEventArgs> HostConnected
    return:
      type: System.EventHandler{WaveEngine.Networking.Connection.HostConnectedEventArgs}
    content.vb: Public Event HostConnected As EventHandler(Of HostConnectedEventArgs)
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.HostConnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.HostDisconnected
  commentId: E:WaveEngine.Networking.Connection.NetworkClient.HostDisconnected
  id: HostDisconnected
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: HostDisconnected
  nameWithType: NetworkClient.HostDisconnected
  fullName: WaveEngine.Networking.Connection.NetworkClient.HostDisconnected
  type: Event
  source:
    id: HostDisconnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 56
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public event EventHandler<HostDisconnectedEventArgs> HostDisconnected
    return:
      type: System.EventHandler{WaveEngine.Networking.Connection.HostDisconnectedEventArgs}
    content.vb: Public Event HostDisconnected As EventHandler(Of HostDisconnectedEventArgs)
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.HostDisconnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.HostDiscovered
  commentId: E:WaveEngine.Networking.Connection.NetworkClient.HostDiscovered
  id: HostDiscovered
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: HostDiscovered
  nameWithType: NetworkClient.HostDiscovered
  fullName: WaveEngine.Networking.Connection.NetworkClient.HostDiscovered
  type: Event
  source:
    id: HostDiscovered
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 59
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public event EventHandler<HostDiscoveredEventArgs> HostDiscovered
    return:
      type: System.EventHandler{WaveEngine.Networking.Connection.HostDiscoveredEventArgs}
    content.vb: Public Event HostDiscovered As EventHandler(Of HostDiscoveredEventArgs)
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.HostDiscovered
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.#ctor(System.String,System.Single,System.Single)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.#ctor(System.String,System.Single,System.Single)
  id: '#ctor(System.String,System.Single,System.Single)'
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: NetworkClient(String, Single, Single)
  nameWithType: NetworkClient.NetworkClient(String, Single, Single)
  fullName: WaveEngine.Networking.Connection.NetworkClient.NetworkClient(System.String, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 71
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Networking.Connection.NetworkClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public NetworkClient(string applicationIdentifier, float pingInterval, float connectionTimeout)
    parameters:
    - id: applicationIdentifier
      type: System.String
      description: The application identifier.
    - id: pingInterval
      type: System.Single
      description: Ping interval in seconds.
    - id: connectionTimeout
      type: System.Single
      description: Connection timeout in seconds.
    content.vb: Public Sub New(applicationIdentifier As String, pingInterval As Single, connectionTimeout As Single)
  overload: WaveEngine.Networking.Connection.NetworkClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts(System.Int32)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts(System.Int32)
  id: DiscoverHosts(System.Int32)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: DiscoverHosts(Int32)
  nameWithType: NetworkClient.DiscoverHosts(Int32)
  fullName: WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts(System.Int32)
  type: Method
  source:
    id: DiscoverHosts
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 86
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public void DiscoverHosts(int port)
    parameters:
    - id: port
      type: System.Int32
    content.vb: Public Sub DiscoverHosts(port As Integer)
  overload: WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  id: Connect(WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: Connect(NetworkEndpoint)
  nameWithType: NetworkClient.Connect(NetworkEndpoint)
  fullName: WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: Connect
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 93
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public void Connect(NetworkEndpoint host)
    parameters:
    - id: host
      type: WaveEngine.Networking.NetworkEndpoint
    content.vb: Public Sub Connect(host As NetworkEndpoint)
  overload: WaveEngine.Networking.Connection.NetworkClient.Connect*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  id: Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: Connect(NetworkEndpoint, OutgoingMessage)
  nameWithType: NetworkClient.Connect(NetworkEndpoint, OutgoingMessage)
  fullName: WaveEngine.Networking.Connection.NetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint, WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  type: Method
  source:
    id: Connect
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 101
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public void Connect(NetworkEndpoint host, OutgoingMessage hailMessage)
    parameters:
    - id: host
      type: WaveEngine.Networking.NetworkEndpoint
    - id: hailMessage
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    content.vb: Public Sub Connect(host As NetworkEndpoint, hailMessage As OutgoingMessage)
  overload: WaveEngine.Networking.Connection.NetworkClient.Connect*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.Disconnect
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.Disconnect
  id: Disconnect
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: NetworkClient.Disconnect()
  fullName: WaveEngine.Networking.Connection.NetworkClient.Disconnect()
  type: Method
  source:
    id: Disconnect
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 109
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public void Disconnect()
    content.vb: Public Sub Disconnect
  overload: WaveEngine.Networking.Connection.NetworkClient.Disconnect*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.Disconnect
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  id: Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: Send(OutgoingMessage, DeliveryMethod)
  nameWithType: NetworkClient.Send(OutgoingMessage, DeliveryMethod)
  fullName: WaveEngine.Networking.Connection.NetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage, WaveEngine.Networking.Messages.DeliveryMethod)
  type: Method
  source:
    id: Send
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 117
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public void Send(OutgoingMessage toSendMessage, DeliveryMethod deliveryMethod)
    parameters:
    - id: toSendMessage
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    - id: deliveryMethod
      type: WaveEngine.Networking.Messages.DeliveryMethod
    content.vb: Public Sub Send(toSendMessage As OutgoingMessage, deliveryMethod As DeliveryMethod)
  overload: WaveEngine.Networking.Connection.NetworkClient.Send*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  id: CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: CreateMessage(MessageType)
  nameWithType: NetworkClient.CreateMessage(MessageType)
  fullName: WaveEngine.Networking.Connection.NetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  type: Method
  source:
    id: CreateMessage
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 123
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  example: []
  syntax:
    content: public OutgoingMessage CreateMessage(MessageType type = MessageType.Data)
    parameters:
    - id: type
      type: WaveEngine.Networking.Connection.Messages.MessageType
    return:
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    content.vb: Public Function CreateMessage(type As MessageType = MessageType.Data) As OutgoingMessage
  overload: WaveEngine.Networking.Connection.NetworkClient.CreateMessage*
  implements:
  - WaveEngine.Networking.Connection.INetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Networking.Connection.NetworkClient.OnHostConnected(WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.OnHostConnected(WaveEngine.Networking.NetworkEndpoint)
  id: OnHostConnected(WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: OnHostConnected(NetworkEndpoint)
  nameWithType: NetworkClient.OnHostConnected(NetworkEndpoint)
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnHostConnected(WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: OnHostConnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 211
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  summary: "\nCalled when the client connects with the host.\n"
  example: []
  syntax:
    content: protected virtual void OnHostConnected(NetworkEndpoint host)
    parameters:
    - id: host
      type: WaveEngine.Networking.NetworkEndpoint
      description: The host.
    content.vb: Protected Overridable Sub OnHostConnected(host As NetworkEndpoint)
  overload: WaveEngine.Networking.Connection.NetworkClient.OnHostConnected*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered(WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered(WaveEngine.Networking.NetworkEndpoint)
  id: OnHostDiscovered(WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: OnHostDiscovered(NetworkEndpoint)
  nameWithType: NetworkClient.OnHostDiscovered(NetworkEndpoint)
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered(WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: OnHostDiscovered
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 220
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  summary: "\nCalled when a host with the same application identifier is discovered.\n"
  example: []
  syntax:
    content: protected virtual void OnHostDiscovered(NetworkEndpoint host)
    parameters:
    - id: host
      type: WaveEngine.Networking.NetworkEndpoint
      description: The discovered host endpoint.
    content.vb: Protected Overridable Sub OnHostDiscovered(host As NetworkEndpoint)
  overload: WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.IncomingMessage)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.IncomingMessage)
  id: OnMessageReceived(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.IncomingMessage)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: OnMessageReceived(NetworkEndpoint, IncomingMessage)
  nameWithType: NetworkClient.OnMessageReceived(NetworkEndpoint, IncomingMessage)
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived(WaveEngine.Networking.NetworkEndpoint, WaveEngine.Networking.Connection.Messages.IncomingMessage)
  type: Method
  source:
    id: OnMessageReceived
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 230
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  summary: "\nCalled when message is received.\n"
  example: []
  syntax:
    content: protected virtual void OnMessageReceived(NetworkEndpoint host, IncomingMessage receivedMessage)
    parameters:
    - id: host
      type: WaveEngine.Networking.NetworkEndpoint
      description: The host endpoint that sent the message.
    - id: receivedMessage
      type: WaveEngine.Networking.Connection.Messages.IncomingMessage
      description: The received message.
    content.vb: Protected Overridable Sub OnMessageReceived(host As NetworkEndpoint, receivedMessage As IncomingMessage)
  overload: WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected(WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected(WaveEngine.Networking.NetworkEndpoint)
  id: OnHostDisconnected(WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.Connection.NetworkClient
  langs:
  - csharp
  - vb
  name: OnHostDisconnected(NetworkEndpoint)
  nameWithType: NetworkClient.OnHostDisconnected(NetworkEndpoint)
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected(WaveEngine.Networking.NetworkEndpoint)
  type: Method
  source:
    id: OnHostDisconnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Connection\NetworkClient.cs
    startLine: 239
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Connection
  summary: "\nCalled when the client lose the connection with the host.\n"
  example: []
  syntax:
    content: protected virtual void OnHostDisconnected(NetworkEndpoint host)
    parameters:
    - id: host
      type: WaveEngine.Networking.NetworkEndpoint
      description: The host endpoint.
    content.vb: Protected Overridable Sub OnHostDisconnected(host As NetworkEndpoint)
  overload: WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: WaveEngine.Networking.Connection
  commentId: N:WaveEngine.Networking.Connection
  name: WaveEngine.Networking.Connection
  nameWithType: WaveEngine.Networking.Connection
  fullName: WaveEngine.Networking.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Networking.Connection.INetworkClient
  commentId: T:WaveEngine.Networking.Connection.INetworkClient
  parent: WaveEngine.Networking.Connection
  name: INetworkClient
  nameWithType: INetworkClient
  fullName: WaveEngine.Networking.Connection.INetworkClient
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Networking.Connection.NetworkClient.IsConnected*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.IsConnected
  name: IsConnected
  nameWithType: NetworkClient.IsConnected
  fullName: WaveEngine.Networking.Connection.NetworkClient.IsConnected
- uid: WaveEngine.Networking.Connection.INetworkClient.IsConnected
  commentId: P:WaveEngine.Networking.Connection.INetworkClient.IsConnected
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: IsConnected
  nameWithType: INetworkClient.IsConnected
  fullName: WaveEngine.Networking.Connection.INetworkClient.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Networking.Connection.NetworkClient.Identifier*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.Identifier
  name: Identifier
  nameWithType: NetworkClient.Identifier
  fullName: WaveEngine.Networking.Connection.NetworkClient.Identifier
- uid: WaveEngine.Networking.Connection.INetworkClient.Identifier
  commentId: P:WaveEngine.Networking.Connection.INetworkClient.Identifier
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: Identifier
  nameWithType: INetworkClient.Identifier
  fullName: WaveEngine.Networking.Connection.INetworkClient.Identifier
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: WaveEngine.Networking.Connection.INetworkClient.MessageReceived
  commentId: E:WaveEngine.Networking.Connection.INetworkClient.MessageReceived
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: MessageReceived
  nameWithType: INetworkClient.MessageReceived
  fullName: WaveEngine.Networking.Connection.INetworkClient.MessageReceived
- uid: System.EventHandler{WaveEngine.Networking.Connection.MessageReceivedEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Connection.MessageReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageReceivedEventArgs>
  nameWithType: EventHandler<MessageReceivedEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Connection.MessageReceivedEventArgs>
  nameWithType.vb: EventHandler(Of MessageReceivedEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Connection.MessageReceivedEventArgs)
  name.vb: EventHandler(Of MessageReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Connection.MessageReceivedEventArgs
    name: MessageReceivedEventArgs
    nameWithType: MessageReceivedEventArgs
    fullName: WaveEngine.Networking.Connection.MessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Connection.MessageReceivedEventArgs
    name: MessageReceivedEventArgs
    nameWithType: MessageReceivedEventArgs
    fullName: WaveEngine.Networking.Connection.MessageReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.INetworkClient.HostConnected
  commentId: E:WaveEngine.Networking.Connection.INetworkClient.HostConnected
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: HostConnected
  nameWithType: INetworkClient.HostConnected
  fullName: WaveEngine.Networking.Connection.INetworkClient.HostConnected
- uid: System.EventHandler{WaveEngine.Networking.Connection.HostConnectedEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Connection.HostConnectedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<HostConnectedEventArgs>
  nameWithType: EventHandler<HostConnectedEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Connection.HostConnectedEventArgs>
  nameWithType.vb: EventHandler(Of HostConnectedEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Connection.HostConnectedEventArgs)
  name.vb: EventHandler(Of HostConnectedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Connection.HostConnectedEventArgs
    name: HostConnectedEventArgs
    nameWithType: HostConnectedEventArgs
    fullName: WaveEngine.Networking.Connection.HostConnectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Connection.HostConnectedEventArgs
    name: HostConnectedEventArgs
    nameWithType: HostConnectedEventArgs
    fullName: WaveEngine.Networking.Connection.HostConnectedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.INetworkClient.HostDisconnected
  commentId: E:WaveEngine.Networking.Connection.INetworkClient.HostDisconnected
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: HostDisconnected
  nameWithType: INetworkClient.HostDisconnected
  fullName: WaveEngine.Networking.Connection.INetworkClient.HostDisconnected
- uid: System.EventHandler{WaveEngine.Networking.Connection.HostDisconnectedEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Connection.HostDisconnectedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<HostDisconnectedEventArgs>
  nameWithType: EventHandler<HostDisconnectedEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Connection.HostDisconnectedEventArgs>
  nameWithType.vb: EventHandler(Of HostDisconnectedEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Connection.HostDisconnectedEventArgs)
  name.vb: EventHandler(Of HostDisconnectedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Connection.HostDisconnectedEventArgs
    name: HostDisconnectedEventArgs
    nameWithType: HostDisconnectedEventArgs
    fullName: WaveEngine.Networking.Connection.HostDisconnectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Connection.HostDisconnectedEventArgs
    name: HostDisconnectedEventArgs
    nameWithType: HostDisconnectedEventArgs
    fullName: WaveEngine.Networking.Connection.HostDisconnectedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.INetworkClient.HostDiscovered
  commentId: E:WaveEngine.Networking.Connection.INetworkClient.HostDiscovered
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: HostDiscovered
  nameWithType: INetworkClient.HostDiscovered
  fullName: WaveEngine.Networking.Connection.INetworkClient.HostDiscovered
- uid: System.EventHandler{WaveEngine.Networking.Connection.HostDiscoveredEventArgs}
  commentId: T:System.EventHandler{WaveEngine.Networking.Connection.HostDiscoveredEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<HostDiscoveredEventArgs>
  nameWithType: EventHandler<HostDiscoveredEventArgs>
  fullName: System.EventHandler<WaveEngine.Networking.Connection.HostDiscoveredEventArgs>
  nameWithType.vb: EventHandler(Of HostDiscoveredEventArgs)
  fullName.vb: System.EventHandler(Of WaveEngine.Networking.Connection.HostDiscoveredEventArgs)
  name.vb: EventHandler(Of HostDiscoveredEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
    name: HostDiscoveredEventArgs
    nameWithType: HostDiscoveredEventArgs
    fullName: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
    name: HostDiscoveredEventArgs
    nameWithType: HostDiscoveredEventArgs
    fullName: WaveEngine.Networking.Connection.HostDiscoveredEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.NetworkClient
  commentId: T:WaveEngine.Networking.Connection.NetworkClient
  name: NetworkClient
  nameWithType: NetworkClient
  fullName: WaveEngine.Networking.Connection.NetworkClient
- uid: WaveEngine.Networking.Connection.NetworkClient.#ctor*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.#ctor
  name: NetworkClient
  nameWithType: NetworkClient.NetworkClient
  fullName: WaveEngine.Networking.Connection.NetworkClient.NetworkClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts
  name: DiscoverHosts
  nameWithType: NetworkClient.DiscoverHosts
  fullName: WaveEngine.Networking.Connection.NetworkClient.DiscoverHosts
- uid: WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts(System.Int32)
  commentId: M:WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts(System.Int32)
  parent: WaveEngine.Networking.Connection.INetworkClient
  isExternal: true
  name: DiscoverHosts(Int32)
  nameWithType: INetworkClient.DiscoverHosts(Int32)
  fullName: WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts(System.Int32)
    name: DiscoverHosts
    nameWithType: INetworkClient.DiscoverHosts
    fullName: WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts(System.Int32)
    name: DiscoverHosts
    nameWithType: INetworkClient.DiscoverHosts
    fullName: WaveEngine.Networking.Connection.INetworkClient.DiscoverHosts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Networking.Connection.NetworkClient.Connect*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.Connect
  name: Connect
  nameWithType: NetworkClient.Connect
  fullName: WaveEngine.Networking.Connection.NetworkClient.Connect
- uid: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  commentId: M:WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: Connect(NetworkEndpoint)
  nameWithType: INetworkClient.Connect(NetworkEndpoint)
  fullName: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
  spec.csharp:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
    name: Connect
    nameWithType: INetworkClient.Connect
    fullName: WaveEngine.Networking.Connection.INetworkClient.Connect
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.NetworkEndpoint
    name: NetworkEndpoint
    nameWithType: NetworkEndpoint
    fullName: WaveEngine.Networking.NetworkEndpoint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint)
    name: Connect
    nameWithType: INetworkClient.Connect
    fullName: WaveEngine.Networking.Connection.INetworkClient.Connect
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.NetworkEndpoint
    name: NetworkEndpoint
    nameWithType: NetworkEndpoint
    fullName: WaveEngine.Networking.NetworkEndpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.NetworkEndpoint
  commentId: T:WaveEngine.Networking.NetworkEndpoint
  parent: WaveEngine.Networking
  name: NetworkEndpoint
  nameWithType: NetworkEndpoint
  fullName: WaveEngine.Networking.NetworkEndpoint
- uid: WaveEngine.Networking
  commentId: N:WaveEngine.Networking
  name: WaveEngine.Networking
  nameWithType: WaveEngine.Networking
  fullName: WaveEngine.Networking
- uid: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  commentId: M:WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: Connect(NetworkEndpoint, OutgoingMessage)
  nameWithType: INetworkClient.Connect(NetworkEndpoint, OutgoingMessage)
  fullName: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint, WaveEngine.Networking.Connection.Messages.OutgoingMessage)
  spec.csharp:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
    name: Connect
    nameWithType: INetworkClient.Connect
    fullName: WaveEngine.Networking.Connection.INetworkClient.Connect
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.NetworkEndpoint
    name: NetworkEndpoint
    nameWithType: NetworkEndpoint
    fullName: WaveEngine.Networking.NetworkEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    name: OutgoingMessage
    nameWithType: OutgoingMessage
    fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Connect(WaveEngine.Networking.NetworkEndpoint,WaveEngine.Networking.Connection.Messages.OutgoingMessage)
    name: Connect
    nameWithType: INetworkClient.Connect
    fullName: WaveEngine.Networking.Connection.INetworkClient.Connect
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.NetworkEndpoint
    name: NetworkEndpoint
    nameWithType: NetworkEndpoint
    fullName: WaveEngine.Networking.NetworkEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    name: OutgoingMessage
    nameWithType: OutgoingMessage
    fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  commentId: T:WaveEngine.Networking.Connection.Messages.OutgoingMessage
  parent: WaveEngine.Networking.Connection.Messages
  name: OutgoingMessage
  nameWithType: OutgoingMessage
  fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
- uid: WaveEngine.Networking.Connection.Messages
  commentId: N:WaveEngine.Networking.Connection.Messages
  name: WaveEngine.Networking.Connection.Messages
  nameWithType: WaveEngine.Networking.Connection.Messages
  fullName: WaveEngine.Networking.Connection.Messages
- uid: WaveEngine.Networking.Connection.NetworkClient.Disconnect*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.Disconnect
  name: Disconnect
  nameWithType: NetworkClient.Disconnect
  fullName: WaveEngine.Networking.Connection.NetworkClient.Disconnect
- uid: WaveEngine.Networking.Connection.INetworkClient.Disconnect
  commentId: M:WaveEngine.Networking.Connection.INetworkClient.Disconnect
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: Disconnect()
  nameWithType: INetworkClient.Disconnect()
  fullName: WaveEngine.Networking.Connection.INetworkClient.Disconnect()
  spec.csharp:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Disconnect
    name: Disconnect
    nameWithType: INetworkClient.Disconnect
    fullName: WaveEngine.Networking.Connection.INetworkClient.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Disconnect
    name: Disconnect
    nameWithType: INetworkClient.Disconnect
    fullName: WaveEngine.Networking.Connection.INetworkClient.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.NetworkClient.Send*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.Send
  name: Send
  nameWithType: NetworkClient.Send
  fullName: WaveEngine.Networking.Connection.NetworkClient.Send
- uid: WaveEngine.Networking.Connection.INetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  commentId: M:WaveEngine.Networking.Connection.INetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: Send(OutgoingMessage, DeliveryMethod)
  nameWithType: INetworkClient.Send(OutgoingMessage, DeliveryMethod)
  fullName: WaveEngine.Networking.Connection.INetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage, WaveEngine.Networking.Messages.DeliveryMethod)
  spec.csharp:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
    name: Send
    nameWithType: INetworkClient.Send
    fullName: WaveEngine.Networking.Connection.INetworkClient.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    name: OutgoingMessage
    nameWithType: OutgoingMessage
    fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Networking.Messages.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: WaveEngine.Networking.Messages.DeliveryMethod
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Networking.Connection.INetworkClient.Send(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Messages.DeliveryMethod)
    name: Send
    nameWithType: INetworkClient.Send
    fullName: WaveEngine.Networking.Connection.INetworkClient.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
    name: OutgoingMessage
    nameWithType: OutgoingMessage
    fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Networking.Messages.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: WaveEngine.Networking.Messages.DeliveryMethod
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Messages.DeliveryMethod
  commentId: T:WaveEngine.Networking.Messages.DeliveryMethod
  parent: WaveEngine.Networking.Messages
  name: DeliveryMethod
  nameWithType: DeliveryMethod
  fullName: WaveEngine.Networking.Messages.DeliveryMethod
- uid: WaveEngine.Networking.Messages
  commentId: N:WaveEngine.Networking.Messages
  name: WaveEngine.Networking.Messages
  nameWithType: WaveEngine.Networking.Messages
  fullName: WaveEngine.Networking.Messages
- uid: WaveEngine.Networking.Connection.NetworkClient.CreateMessage*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.CreateMessage
  name: CreateMessage
  nameWithType: NetworkClient.CreateMessage
  fullName: WaveEngine.Networking.Connection.NetworkClient.CreateMessage
- uid: WaveEngine.Networking.Connection.INetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  commentId: M:WaveEngine.Networking.Connection.INetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  parent: WaveEngine.Networking.Connection.INetworkClient
  name: CreateMessage(MessageType)
  nameWithType: INetworkClient.CreateMessage(MessageType)
  fullName: WaveEngine.Networking.Connection.INetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
  spec.csharp:
  - uid: WaveEngine.Networking.Connection.INetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
    name: CreateMessage
    nameWithType: INetworkClient.CreateMessage
    fullName: WaveEngine.Networking.Connection.INetworkClient.CreateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.Connection.Messages.MessageType
    name: MessageType
    nameWithType: MessageType
    fullName: WaveEngine.Networking.Connection.Messages.MessageType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Networking.Connection.INetworkClient.CreateMessage(WaveEngine.Networking.Connection.Messages.MessageType)
    name: CreateMessage
    nameWithType: INetworkClient.CreateMessage
    fullName: WaveEngine.Networking.Connection.INetworkClient.CreateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Networking.Connection.Messages.MessageType
    name: MessageType
    nameWithType: MessageType
    fullName: WaveEngine.Networking.Connection.Messages.MessageType
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Networking.Connection.Messages.MessageType
  commentId: T:WaveEngine.Networking.Connection.Messages.MessageType
  parent: WaveEngine.Networking.Connection.Messages
  name: MessageType
  nameWithType: MessageType
  fullName: WaveEngine.Networking.Connection.Messages.MessageType
- uid: WaveEngine.Networking.Connection.NetworkClient.OnHostConnected*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.OnHostConnected
  name: OnHostConnected
  nameWithType: NetworkClient.OnHostConnected
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnHostConnected
- uid: WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered
  name: OnHostDiscovered
  nameWithType: NetworkClient.OnHostDiscovered
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnHostDiscovered
- uid: WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived
  name: OnMessageReceived
  nameWithType: NetworkClient.OnMessageReceived
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnMessageReceived
- uid: WaveEngine.Networking.Connection.Messages.IncomingMessage
  commentId: T:WaveEngine.Networking.Connection.Messages.IncomingMessage
  parent: WaveEngine.Networking.Connection.Messages
  name: IncomingMessage
  nameWithType: IncomingMessage
  fullName: WaveEngine.Networking.Connection.Messages.IncomingMessage
- uid: WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected*
  commentId: Overload:WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected
  name: OnHostDisconnected
  nameWithType: NetworkClient.OnHostDisconnected
  fullName: WaveEngine.Networking.Connection.NetworkClient.OnHostDisconnected
