### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Graphics.BlendStates
  commentId: T:WaveEngine.Common.Graphics.BlendStates
  id: BlendStates
  parent: WaveEngine.Common.Graphics
  children:
  - WaveEngine.Common.Graphics.BlendStates.Additive
  - WaveEngine.Common.Graphics.BlendStates.AlphaBlend
  - WaveEngine.Common.Graphics.BlendStates.Multiplicative
  - WaveEngine.Common.Graphics.BlendStates.NonPremultiplied
  - WaveEngine.Common.Graphics.BlendStates.Opaque
  langs:
  - csharp
  - vb
  name: BlendStates
  nameWithType: BlendStates
  fullName: WaveEngine.Common.Graphics.BlendStates
  type: Class
  source:
    id: BlendStates
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\RenderStates\BlendStates.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nDefault known values for <xref href=\"WaveEngine.Common.Graphics.BlendStateDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class BlendStates
    content.vb: Public Module BlendStates
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Common.Graphics.BlendStates.Opaque
  commentId: F:WaveEngine.Common.Graphics.BlendStates.Opaque
  id: Opaque
  parent: WaveEngine.Common.Graphics.BlendStates
  langs:
  - csharp
  - vb
  name: Opaque
  nameWithType: BlendStates.Opaque
  fullName: WaveEngine.Common.Graphics.BlendStates.Opaque
  type: Field
  source:
    id: Opaque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\RenderStates\BlendStates.cs
    startLine: 51
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nNot blending.\n"
  example: []
  syntax:
    content: public static readonly BlendStateDescription Opaque
    return:
      type: WaveEngine.Common.Graphics.BlendStateDescription
    content.vb: Public Shared ReadOnly Opaque As BlendStateDescription
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Graphics.BlendStates.AlphaBlend
  commentId: F:WaveEngine.Common.Graphics.BlendStates.AlphaBlend
  id: AlphaBlend
  parent: WaveEngine.Common.Graphics.BlendStates
  langs:
  - csharp
  - vb
  name: AlphaBlend
  nameWithType: BlendStates.AlphaBlend
  fullName: WaveEngine.Common.Graphics.BlendStates.AlphaBlend
  type: Field
  source:
    id: AlphaBlend
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\RenderStates\BlendStates.cs
    startLine: 56
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nPremultiplied alpha blending.\n"
  example: []
  syntax:
    content: public static readonly BlendStateDescription AlphaBlend
    return:
      type: WaveEngine.Common.Graphics.BlendStateDescription
    content.vb: Public Shared ReadOnly AlphaBlend As BlendStateDescription
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Graphics.BlendStates.Additive
  commentId: F:WaveEngine.Common.Graphics.BlendStates.Additive
  id: Additive
  parent: WaveEngine.Common.Graphics.BlendStates
  langs:
  - csharp
  - vb
  name: Additive
  nameWithType: BlendStates.Additive
  fullName: WaveEngine.Common.Graphics.BlendStates.Additive
  type: Field
  source:
    id: Additive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\RenderStates\BlendStates.cs
    startLine: 61
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nAdditive alpha blending.\n"
  example: []
  syntax:
    content: public static readonly BlendStateDescription Additive
    return:
      type: WaveEngine.Common.Graphics.BlendStateDescription
    content.vb: Public Shared ReadOnly Additive As BlendStateDescription
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Graphics.BlendStates.Multiplicative
  commentId: F:WaveEngine.Common.Graphics.BlendStates.Multiplicative
  id: Multiplicative
  parent: WaveEngine.Common.Graphics.BlendStates
  langs:
  - csharp
  - vb
  name: Multiplicative
  nameWithType: BlendStates.Multiplicative
  fullName: WaveEngine.Common.Graphics.BlendStates.Multiplicative
  type: Field
  source:
    id: Multiplicative
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\RenderStates\BlendStates.cs
    startLine: 66
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nAdditive alpha blending.\n"
  example: []
  syntax:
    content: public static readonly BlendStateDescription Multiplicative
    return:
      type: WaveEngine.Common.Graphics.BlendStateDescription
    content.vb: Public Shared ReadOnly Multiplicative As BlendStateDescription
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Graphics.BlendStates.NonPremultiplied
  commentId: F:WaveEngine.Common.Graphics.BlendStates.NonPremultiplied
  id: NonPremultiplied
  parent: WaveEngine.Common.Graphics.BlendStates
  langs:
  - csharp
  - vb
  name: NonPremultiplied
  nameWithType: BlendStates.NonPremultiplied
  fullName: WaveEngine.Common.Graphics.BlendStates.NonPremultiplied
  type: Field
  source:
    id: NonPremultiplied
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\RenderStates\BlendStates.cs
    startLine: 71
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nNon premultiplied alpha blending.\n"
  example: []
  syntax:
    content: public static readonly BlendStateDescription NonPremultiplied
    return:
      type: WaveEngine.Common.Graphics.BlendStateDescription
    content.vb: Public Shared ReadOnly NonPremultiplied As BlendStateDescription
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: WaveEngine.Common.Graphics.BlendStateDescription
  commentId: T:WaveEngine.Common.Graphics.BlendStateDescription
  parent: WaveEngine.Common.Graphics
  name: BlendStateDescription
  nameWithType: BlendStateDescription
  fullName: WaveEngine.Common.Graphics.BlendStateDescription
- uid: WaveEngine.Common.Graphics
  commentId: N:WaveEngine.Common.Graphics
  name: WaveEngine.Common.Graphics
  nameWithType: WaveEngine.Common.Graphics
  fullName: WaveEngine.Common.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
