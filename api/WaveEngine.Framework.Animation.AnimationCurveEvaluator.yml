### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  commentId: T:WaveEngine.Framework.Animation.AnimationCurveEvaluator
  id: AnimationCurveEvaluator
  parent: WaveEngine.Framework.Animation
  children:
  - WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(System.Object@,System.Object@,System.Object@)
  - WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(System.Object@,System.Object@,System.Single,System.Object@)
  - WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType
  - WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue(System.Object)
  - WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp(System.Object@,System.Object@,System.Single,System.Object@)
  langs:
  - csharp
  - vb
  name: AnimationCurveEvaluator
  nameWithType: AnimationCurveEvaluator
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  type: Class
  source:
    id: AnimationCurveEvaluator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Animation\Clips\CurveEvaluators\AnimationCurveEvaluator.cs
    startLine: 11
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Animation
  summary: "\nEvaluate the values of a curve\n"
  example: []
  syntax:
    content: public abstract class AnimationCurveEvaluator
    content.vb: Public MustInherit Class AnimationCurveEvaluator
  inheritance:
  - System.Object
  derivedClasses:
  - WaveEngine.Framework.Animation.AnimationCurveEvaluator`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType
  commentId: P:WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType
  id: EvaluatedType
  parent: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  langs:
  - csharp
  - vb
  name: EvaluatedType
  nameWithType: AnimationCurveEvaluator.EvaluatedType
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType
  type: Property
  source:
    id: EvaluatedType
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Animation\Clips\CurveEvaluators\AnimationCurveEvaluator.cs
    startLine: 16
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Animation
  summary: "\nGets the type that is evaluated\n"
  example: []
  syntax:
    content: public abstract Type EvaluatedType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public MustOverride ReadOnly Property EvaluatedType As Type
  overload: WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(System.Object@,System.Object@,System.Object@)
  commentId: M:WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(System.Object@,System.Object@,System.Object@)
  id: Add(System.Object@,System.Object@,System.Object@)
  parent: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  langs:
  - csharp
  - vb
  name: Add(ref Object, ref Object, ref Object)
  nameWithType: AnimationCurveEvaluator.Add(ref Object, ref Object, ref Object)
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(ref System.Object, ref System.Object, ref System.Object)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Animation\Clips\CurveEvaluators\AnimationCurveEvaluator.cs
    startLine: 27
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Animation
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public abstract void Add(ref object a, ref object b, ref object result)
    parameters:
    - id: a
      type: System.Object
      description: The value1.
    - id: b
      type: System.Object
      description: The value2.
    - id: result
      type: System.Object
      description: The result.
    content.vb: Public MustOverride Sub Add(ByRef a As Object, ByRef b As Object, ByRef result As Object)
  overload: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add*
  nameWithType.vb: AnimationCurveEvaluator.Add(ByRef Object, ByRef Object, ByRef Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(ByRef System.Object, ByRef System.Object, ByRef System.Object)
  name.vb: Add(ByRef Object, ByRef Object, ByRef Object)
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(System.Object@,System.Object@,System.Single,System.Object@)
  commentId: M:WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(System.Object@,System.Object@,System.Single,System.Object@)
  id: Add(System.Object@,System.Object@,System.Single,System.Object@)
  parent: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  langs:
  - csharp
  - vb
  name: Add(ref Object, ref Object, Single, ref Object)
  nameWithType: AnimationCurveEvaluator.Add(ref Object, ref Object, Single, ref Object)
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(ref System.Object, ref System.Object, System.Single, ref System.Object)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Animation\Clips\CurveEvaluators\AnimationCurveEvaluator.cs
    startLine: 36
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Animation
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public abstract void Add(ref object a, ref object b, float amount, ref object result)
    parameters:
    - id: a
      type: System.Object
      description: The value1.
    - id: b
      type: System.Object
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: System.Object
      description: The result.
    content.vb: Public MustOverride Sub Add(ByRef a As Object, ByRef b As Object, amount As Single, ByRef result As Object)
  overload: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add*
  nameWithType.vb: AnimationCurveEvaluator.Add(ByRef Object, ByRef Object, Single, ByRef Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add(ByRef System.Object, ByRef System.Object, System.Single, ByRef System.Object)
  name.vb: Add(ByRef Object, ByRef Object, Single, ByRef Object)
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp(System.Object@,System.Object@,System.Single,System.Object@)
  commentId: M:WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp(System.Object@,System.Object@,System.Single,System.Object@)
  id: Lerp(System.Object@,System.Object@,System.Single,System.Object@)
  parent: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  langs:
  - csharp
  - vb
  name: Lerp(ref Object, ref Object, Single, ref Object)
  nameWithType: AnimationCurveEvaluator.Lerp(ref Object, ref Object, Single, ref Object)
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp(ref System.Object, ref System.Object, System.Single, ref System.Object)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Animation\Clips\CurveEvaluators\AnimationCurveEvaluator.cs
    startLine: 45
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Animation
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public abstract void Lerp(ref object a, ref object b, float amount, ref object result)
    parameters:
    - id: a
      type: System.Object
      description: The value1.
    - id: b
      type: System.Object
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: System.Object
      description: The result.
    content.vb: Public MustOverride Sub Lerp(ByRef a As Object, ByRef b As Object, amount As Single, ByRef result As Object)
  overload: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp*
  nameWithType.vb: AnimationCurveEvaluator.Lerp(ByRef Object, ByRef Object, Single, ByRef Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp(ByRef System.Object, ByRef System.Object, System.Single, ByRef System.Object)
  name.vb: Lerp(ByRef Object, ByRef Object, Single, ByRef Object)
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue(System.Object)
  commentId: M:WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue(System.Object)
  id: InverseValue(System.Object)
  parent: WaveEngine.Framework.Animation.AnimationCurveEvaluator
  langs:
  - csharp
  - vb
  name: InverseValue(Object)
  nameWithType: AnimationCurveEvaluator.InverseValue(Object)
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue(System.Object)
  type: Method
  source:
    id: InverseValue
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Animation\Clips\CurveEvaluators\AnimationCurveEvaluator.cs
    startLine: 52
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Animation
  summary: "\nIntert a value\n"
  example: []
  syntax:
    content: public abstract object InverseValue(object value)
    parameters:
    - id: value
      type: System.Object
      description: The value
    return:
      type: System.Object
      description: The inverted value
    content.vb: Public MustOverride Function InverseValue(value As Object) As Object
  overload: WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: WaveEngine.Framework.Animation
  commentId: N:WaveEngine.Framework.Animation
  name: WaveEngine.Framework.Animation
  nameWithType: WaveEngine.Framework.Animation
  fullName: WaveEngine.Framework.Animation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType*
  commentId: Overload:WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType
  name: EvaluatedType
  nameWithType: AnimationCurveEvaluator.EvaluatedType
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.EvaluatedType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add*
  commentId: Overload:WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add
  name: Add
  nameWithType: AnimationCurveEvaluator.Add
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Add
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp*
  commentId: Overload:WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp
  name: Lerp
  nameWithType: AnimationCurveEvaluator.Lerp
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.Lerp
- uid: WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue*
  commentId: Overload:WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue
  name: InverseValue
  nameWithType: AnimationCurveEvaluator.InverseValue
  fullName: WaveEngine.Framework.Animation.AnimationCurveEvaluator.InverseValue
