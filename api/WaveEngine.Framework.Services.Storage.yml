### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.Storage
  commentId: T:WaveEngine.Framework.Services.Storage
  id: Storage
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.Storage.CreateDirectory(System.String)
  - WaveEngine.Framework.Services.Storage.CreateStorageDirectory(System.String)
  - WaveEngine.Framework.Services.Storage.CreateStorageFile(System.String)
  - WaveEngine.Framework.Services.Storage.Delete(System.String)
  - WaveEngine.Framework.Services.Storage.Delete``1
  - WaveEngine.Framework.Services.Storage.DeleteStorageFile(System.String)
  - WaveEngine.Framework.Services.Storage.DirectoryExists(System.String)
  - WaveEngine.Framework.Services.Storage.Exists(System.String)
  - WaveEngine.Framework.Services.Storage.Exists``1
  - WaveEngine.Framework.Services.Storage.ExistsContentFile(System.String)
  - WaveEngine.Framework.Services.Storage.ExistsStorageFile(System.String)
  - WaveEngine.Framework.Services.Storage.GetContentDirectories(System.String)
  - WaveEngine.Framework.Services.Storage.GetContentFileNames(System.String)
  - WaveEngine.Framework.Services.Storage.GetCreationTime(System.String)
  - WaveEngine.Framework.Services.Storage.GetDirectoryNames(System.String)
  - WaveEngine.Framework.Services.Storage.GetFileNames(System.String)
  - WaveEngine.Framework.Services.Storage.Initialize
  - WaveEngine.Framework.Services.Storage.Move(System.String,System.String)
  - WaveEngine.Framework.Services.Storage.MoveStorageFile(System.String,System.String)
  - WaveEngine.Framework.Services.Storage.OpenContentFile(System.String)
  - WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode)
  - WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode,WaveEngine.Common.IO.FileAccess)
  - WaveEngine.Framework.Services.Storage.Read``1
  - WaveEngine.Framework.Services.Storage.Read``1(System.String)
  - WaveEngine.Framework.Services.Storage.ReadAsString(System.String)
  - WaveEngine.Framework.Services.Storage.ReadFromContent``1(System.String)
  - WaveEngine.Framework.Services.Storage.ReadFromContentAsString(System.String)
  - WaveEngine.Framework.Services.Storage.SavePictureToLibrary(System.String)
  - WaveEngine.Framework.Services.Storage.SetKnownTypes(System.Collections.Generic.IEnumerable{System.Type})
  - WaveEngine.Framework.Services.Storage.Terminate
  - WaveEngine.Framework.Services.Storage.Write``1(``0)
  - WaveEngine.Framework.Services.Storage.Write``1(System.String,``0)
  langs:
  - csharp
  - vb
  name: Storage
  nameWithType: Storage
  fullName: WaveEngine.Framework.Services.Storage
  type: Class
  source:
    id: Storage
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 17
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllows persistence operations for objects over the storage.\n"
  example: []
  syntax:
    content: 'public sealed class Storage : Service'
    content.vb: >-
      Public NotInheritable Class Storage

          Inherits Service
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Common.Service
  inheritedMembers:
  - WaveEngine.Common.Service.IsInitialized
  - WaveEngine.Common.Service.IsTerminated
  - WaveEngine.Common.Service.BaseInitialize
  - WaveEngine.Common.Service.BaseTerminate
  - WaveEngine.Common.Service.OnActivated
  - WaveEngine.Common.Service.OnDeactivated
  - WaveEngine.Common.IO.SerializableObject.DefaultValues
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Framework.Services.Storage.Initialize
  commentId: M:WaveEngine.Framework.Services.Storage.Initialize
  id: Initialize
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: Storage.Initialize()
  fullName: WaveEngine.Framework.Services.Storage.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 59
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllows to execute custom logic during the initialization of this instance.\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Common.Service.Initialize
  overload: WaveEngine.Framework.Services.Storage.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.Storage.Terminate
  commentId: M:WaveEngine.Framework.Services.Storage.Terminate
  id: Terminate
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: Storage.Terminate()
  fullName: WaveEngine.Framework.Services.Storage.Terminate()
  type: Method
  source:
    id: Terminate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 73
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllow to execute custom logic during the finalization of this instance.\n"
  example: []
  syntax:
    content: protected override void Terminate()
    content.vb: Protected Overrides Sub Terminate
  overridden: WaveEngine.Common.Service.Terminate
  overload: WaveEngine.Framework.Services.Storage.Terminate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.Storage.SetKnownTypes(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:WaveEngine.Framework.Services.Storage.SetKnownTypes(System.Collections.Generic.IEnumerable{System.Type})
  id: SetKnownTypes(System.Collections.Generic.IEnumerable{System.Type})
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: SetKnownTypes(IEnumerable<Type>)
  nameWithType: Storage.SetKnownTypes(IEnumerable<Type>)
  fullName: WaveEngine.Framework.Services.Storage.SetKnownTypes(System.Collections.Generic.IEnumerable<System.Type>)
  type: Method
  source:
    id: SetKnownTypes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 84
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nSets the known types by this instace for serialization and deserialization of data.\n"
  example: []
  syntax:
    content: public void SetKnownTypes(IEnumerable<Type> types)
    parameters:
    - id: types
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: The types known by this instance.
    content.vb: Public Sub SetKnownTypes(types As IEnumerable(Of Type))
  overload: WaveEngine.Framework.Services.Storage.SetKnownTypes*
  nameWithType.vb: Storage.SetKnownTypes(IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.SetKnownTypes(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: SetKnownTypes(IEnumerable(Of Type))
- uid: WaveEngine.Framework.Services.Storage.Delete``1
  commentId: M:WaveEngine.Framework.Services.Storage.Delete``1
  id: Delete``1
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Delete<T>()
  nameWithType: Storage.Delete<T>()
  fullName: WaveEngine.Framework.Services.Storage.Delete<T>()
  type: Method
  source:
    id: Delete
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 98
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nDeletes an object from the storage.\n"
  example: []
  syntax:
    content: public void Delete<T>()
    typeParameters:
    - id: T
      description: Type of the object to delete.
    content.vb: Public Sub Delete(Of T)
  overload: WaveEngine.Framework.Services.Storage.Delete*
  nameWithType.vb: Storage.Delete(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.Delete(Of T)()
  name.vb: Delete(Of T)()
- uid: WaveEngine.Framework.Services.Storage.Delete(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.Delete(System.String)
  id: Delete(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Delete(String)
  nameWithType: Storage.Delete(String)
  fullName: WaveEngine.Framework.Services.Storage.Delete(System.String)
  type: Method
  source:
    id: Delete
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 108
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nDeletes an object from the storage.\n"
  example: []
  syntax:
    content: public void Delete(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file that contains the object to delete.
    content.vb: Public Sub Delete(fileName As String)
  overload: WaveEngine.Framework.Services.Storage.Delete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If fileName is null or empty.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.Exists``1
  commentId: M:WaveEngine.Framework.Services.Storage.Exists``1
  id: Exists``1
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Exists<T>()
  nameWithType: Storage.Exists<T>()
  fullName: WaveEngine.Framework.Services.Storage.Exists<T>()
  type: Method
  source:
    id: Exists
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 125
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nChecks if an object exists in the storage.\n"
  example: []
  syntax:
    content: public bool Exists<T>()
    typeParameters:
    - id: T
      description: Type of the object to check.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the object exists, otherwise, <code>false</code>.\n"
    content.vb: Public Function Exists(Of T) As Boolean
  overload: WaveEngine.Framework.Services.Storage.Exists*
  nameWithType.vb: Storage.Exists(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.Exists(Of T)()
  name.vb: Exists(Of T)()
- uid: WaveEngine.Framework.Services.Storage.Exists(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.Exists(System.String)
  id: Exists(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Exists(String)
  nameWithType: Storage.Exists(String)
  fullName: WaveEngine.Framework.Services.Storage.Exists(System.String)
  type: Method
  source:
    id: Exists
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 138
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nChecks if an object exists in the storage.\n"
  example: []
  syntax:
    content: public bool Exists(string path)
    parameters:
    - id: path
      type: System.String
      description: Path that contains the file to check.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the object exists, otherwise, <code>false</code>.\n"
    content.vb: Public Function Exists(path As String) As Boolean
  overload: WaveEngine.Framework.Services.Storage.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If path is null or emtpy.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.DirectoryExists(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: DirectoryExists(String)
  nameWithType: Storage.DirectoryExists(String)
  fullName: WaveEngine.Framework.Services.Storage.DirectoryExists(System.String)
  type: Method
  source:
    id: DirectoryExists
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 156
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nChecks if a directory exists in the storage.\n"
  example: []
  syntax:
    content: public bool DirectoryExists(string path)
    parameters:
    - id: path
      type: System.String
      description: Path that contains the directory to check.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the directory exists, otherwise, <code>false</code>.\n"
    content.vb: Public Function DirectoryExists(path As String) As Boolean
  overload: WaveEngine.Framework.Services.Storage.DirectoryExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If path is null or emtpy.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.OpenContentFile(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.OpenContentFile(System.String)
  id: OpenContentFile(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: OpenContentFile(String)
  nameWithType: Storage.OpenContentFile(String)
  fullName: WaveEngine.Framework.Services.Storage.OpenContentFile(System.String)
  type: Method
  source:
    id: OpenContentFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 172
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nOpens a file from the content.\n"
  example: []
  syntax:
    content: public Stream OpenContentFile(string path)
    parameters:
    - id: path
      type: System.String
      description: Name of the file to open.
    return:
      type: System.IO.Stream
      description: A stream to the open file.
    content.vb: Public Function OpenContentFile(path As String) As Stream
  overload: WaveEngine.Framework.Services.Storage.OpenContentFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If path is null or empty.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.ExistsContentFile(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.ExistsContentFile(System.String)
  id: ExistsContentFile(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: ExistsContentFile(String)
  nameWithType: Storage.ExistsContentFile(String)
  fullName: WaveEngine.Framework.Services.Storage.ExistsContentFile(System.String)
  type: Method
  source:
    id: ExistsContentFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 188
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nDetermine whether the specified file exists.\n"
  example: []
  syntax:
    content: public bool ExistsContentFile(string path)
    parameters:
    - id: path
      type: System.String
      description: Name of the file.
    return:
      type: System.Boolean
      description: True is specified file exists.
    content.vb: Public Function ExistsContentFile(path As String) As Boolean
  overload: WaveEngine.Framework.Services.Storage.ExistsContentFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If path is null or empty.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.ExistsStorageFile(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.ExistsStorageFile(System.String)
  id: ExistsStorageFile(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: ExistsStorageFile(String)
  nameWithType: Storage.ExistsStorageFile(String)
  fullName: WaveEngine.Framework.Services.Storage.ExistsStorageFile(System.String)
  type: Method
  source:
    id: ExistsStorageFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 204
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nExistses the storage file.\n"
  example: []
  syntax:
    content: public bool ExistsStorageFile(string path)
    parameters:
    - id: path
      type: System.String
      description: The path.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function ExistsStorageFile(path As String) As Boolean
  overload: WaveEngine.Framework.Services.Storage.ExistsStorageFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If path is null or empty.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.CreateStorageFile(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.CreateStorageFile(System.String)
  id: CreateStorageFile(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: CreateStorageFile(String)
  nameWithType: Storage.CreateStorageFile(String)
  fullName: WaveEngine.Framework.Services.Storage.CreateStorageFile(System.String)
  type: Method
  source:
    id: CreateStorageFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 219
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nCreates the storage file.\n"
  example: []
  syntax:
    content: public Stream CreateStorageFile(string path)
    parameters:
    - id: path
      type: System.String
      description: The path.
    return:
      type: System.IO.Stream
      description: The result.
    content.vb: Public Function CreateStorageFile(path As String) As Stream
  overload: WaveEngine.Framework.Services.Storage.CreateStorageFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.CreateDirectory(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: CreateDirectory(String)
  nameWithType: Storage.CreateDirectory(String)
  fullName: WaveEngine.Framework.Services.Storage.CreateDirectory(System.String)
  type: Method
  source:
    id: CreateDirectory
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 233
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nCreates the directory .\n"
  example: []
  syntax:
    content: public void CreateDirectory(string directoryName)
    parameters:
    - id: directoryName
      type: System.String
      description: Name of the directory.
    content.vb: Public Sub CreateDirectory(directoryName As String)
  overload: WaveEngine.Framework.Services.Storage.CreateDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode)
  commentId: M:WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode)
  id: OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: OpenStorageFile(String, FileMode)
  nameWithType: Storage.OpenStorageFile(String, FileMode)
  fullName: WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String, WaveEngine.Common.IO.FileMode)
  type: Method
  source:
    id: OpenStorageFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 249
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nOpens the storage file.\n"
  example: []
  syntax:
    content: public Stream OpenStorageFile(string path, FileMode mode)
    parameters:
    - id: path
      type: System.String
      description: The path.
    - id: mode
      type: WaveEngine.Common.IO.FileMode
      description: The mode.
    return:
      type: System.IO.Stream
      description: The result.
    content.vb: Public Function OpenStorageFile(path As String, mode As FileMode) As Stream
  overload: WaveEngine.Framework.Services.Storage.OpenStorageFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode,WaveEngine.Common.IO.FileAccess)
  commentId: M:WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode,WaveEngine.Common.IO.FileAccess)
  id: OpenStorageFile(System.String,WaveEngine.Common.IO.FileMode,WaveEngine.Common.IO.FileAccess)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: OpenStorageFile(String, FileMode, FileAccess)
  nameWithType: Storage.OpenStorageFile(String, FileMode, FileAccess)
  fullName: WaveEngine.Framework.Services.Storage.OpenStorageFile(System.String, WaveEngine.Common.IO.FileMode, WaveEngine.Common.IO.FileAccess)
  type: Method
  source:
    id: OpenStorageFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 266
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nOpens the storage file.\n"
  example: []
  syntax:
    content: public Stream OpenStorageFile(string path, FileMode mode, FileAccess access)
    parameters:
    - id: path
      type: System.String
      description: The path.
    - id: mode
      type: WaveEngine.Common.IO.FileMode
      description: The mode.
    - id: access
      type: WaveEngine.Common.IO.FileAccess
      description: The access.
    return:
      type: System.IO.Stream
      description: The result.
    content.vb: Public Function OpenStorageFile(path As String, mode As FileMode, access As FileAccess) As Stream
  overload: WaveEngine.Framework.Services.Storage.OpenStorageFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.DeleteStorageFile(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.DeleteStorageFile(System.String)
  id: DeleteStorageFile(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: DeleteStorageFile(String)
  nameWithType: Storage.DeleteStorageFile(String)
  fullName: WaveEngine.Framework.Services.Storage.DeleteStorageFile(System.String)
  type: Method
  source:
    id: DeleteStorageFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 280
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nDeletes the storage file.\n"
  example: []
  syntax:
    content: public void DeleteStorageFile(string path)
    parameters:
    - id: path
      type: System.String
      description: The path.
    content.vb: Public Sub DeleteStorageFile(path As String)
  overload: WaveEngine.Framework.Services.Storage.DeleteStorageFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.MoveStorageFile(System.String,System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.MoveStorageFile(System.String,System.String)
  id: MoveStorageFile(System.String,System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: MoveStorageFile(String, String)
  nameWithType: Storage.MoveStorageFile(String, String)
  fullName: WaveEngine.Framework.Services.Storage.MoveStorageFile(System.String, System.String)
  type: Method
  source:
    id: MoveStorageFile
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 295
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nMoves the storage file.\n"
  example: []
  syntax:
    content: public void MoveStorageFile(string oldPath, string newPath)
    parameters:
    - id: oldPath
      type: System.String
      description: The old path.
    - id: newPath
      type: System.String
      description: The new path.
    content.vb: Public Sub MoveStorageFile(oldPath As String, newPath As String)
  overload: WaveEngine.Framework.Services.Storage.MoveStorageFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.GetContentFileNames(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.GetContentFileNames(System.String)
  id: GetContentFileNames(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: GetContentFileNames(String)
  nameWithType: Storage.GetContentFileNames(String)
  fullName: WaveEngine.Framework.Services.Storage.GetContentFileNames(System.String)
  type: Method
  source:
    id: GetContentFileNames
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 315
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the file names under this content path.\n"
  example: []
  syntax:
    content: public string[] GetContentFileNames(string path)
    parameters:
    - id: path
      type: System.String
      description: The path.
    return:
      type: System.String[]
      description: A list of the existing files under this path.
    content.vb: Public Function GetContentFileNames(path As String) As String()
  overload: WaveEngine.Framework.Services.Storage.GetContentFileNames*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.GetCreationTime(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: GetCreationTime(String)
  nameWithType: Storage.GetCreationTime(String)
  fullName: WaveEngine.Framework.Services.Storage.GetCreationTime(System.String)
  type: Method
  source:
    id: GetCreationTime
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 332
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the creation time of an storage object.\n"
  example: []
  syntax:
    content: public DateTimeOffset GetCreationTime(string path)
    parameters:
    - id: path
      type: System.String
      description: The path of the object.
    return:
      type: System.DateTimeOffset
      description: The result.
    content.vb: Public Function GetCreationTime(path As String) As DateTimeOffset
  overload: WaveEngine.Framework.Services.Storage.GetCreationTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.GetContentDirectories(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.GetContentDirectories(System.String)
  id: GetContentDirectories(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: GetContentDirectories(String)
  nameWithType: Storage.GetContentDirectories(String)
  fullName: WaveEngine.Framework.Services.Storage.GetContentDirectories(System.String)
  type: Method
  source:
    id: GetContentDirectories
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 347
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the directory names under this content path.\n"
  example: []
  syntax:
    content: public string[] GetContentDirectories(string path)
    parameters:
    - id: path
      type: System.String
      description: The path.
    return:
      type: System.String[]
      description: A list of the existing directories under this content path.
    content.vb: Public Function GetContentDirectories(path As String) As String()
  overload: WaveEngine.Framework.Services.Storage.GetContentDirectories*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.GetFileNames(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.GetFileNames(System.String)
  id: GetFileNames(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: GetFileNames(String)
  nameWithType: Storage.GetFileNames(String)
  fullName: WaveEngine.Framework.Services.Storage.GetFileNames(System.String)
  type: Method
  source:
    id: GetFileNames
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 366
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the file names.\n"
  example: []
  syntax:
    content: public string[] GetFileNames(string searchPattern)
    parameters:
    - id: searchPattern
      type: System.String
      description: The search pattern.
    return:
      type: System.String[]
      description: "\nThe result.\n"
    content.vb: Public Function GetFileNames(searchPattern As String) As String()
  overload: WaveEngine.Framework.Services.Storage.GetFileNames*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.GetDirectoryNames(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.GetDirectoryNames(System.String)
  id: GetDirectoryNames(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: GetDirectoryNames(String)
  nameWithType: Storage.GetDirectoryNames(String)
  fullName: WaveEngine.Framework.Services.Storage.GetDirectoryNames(System.String)
  type: Method
  source:
    id: GetDirectoryNames
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 376
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the directory names.\n"
  example: []
  syntax:
    content: public string[] GetDirectoryNames(string searchPattern)
    parameters:
    - id: searchPattern
      type: System.String
      description: The search pattern.
    return:
      type: System.String[]
      description: The result.
    content.vb: Public Function GetDirectoryNames(searchPattern As String) As String()
  overload: WaveEngine.Framework.Services.Storage.GetDirectoryNames*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.CreateStorageDirectory(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.CreateStorageDirectory(System.String)
  id: CreateStorageDirectory(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: CreateStorageDirectory(String)
  nameWithType: Storage.CreateStorageDirectory(String)
  fullName: WaveEngine.Framework.Services.Storage.CreateStorageDirectory(System.String)
  type: Method
  source:
    id: CreateStorageDirectory
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 385
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nCreates a directory in the storage.\n"
  example: []
  syntax:
    content: public void CreateStorageDirectory(string directoryName)
    parameters:
    - id: directoryName
      type: System.String
      description: The name of the directory.
    content.vb: Public Sub CreateStorageDirectory(directoryName As String)
  overload: WaveEngine.Framework.Services.Storage.CreateStorageDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.Read``1
  commentId: M:WaveEngine.Framework.Services.Storage.Read``1
  id: Read``1
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Read<T>()
  nameWithType: Storage.Read<T>()
  fullName: WaveEngine.Framework.Services.Storage.Read<T>()
  type: Method
  source:
    id: Read
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 395
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nReads an object from the storage.\n"
  example: []
  syntax:
    content: public T Read<T>()
    typeParameters:
    - id: T
      description: Type of the object to read.
    return:
      type: '{T}'
      description: The object read.
    content.vb: Public Function Read(Of T) As T
  overload: WaveEngine.Framework.Services.Storage.Read*
  nameWithType.vb: Storage.Read(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.Read(Of T)()
  name.vb: Read(Of T)()
- uid: WaveEngine.Framework.Services.Storage.Read``1(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.Read``1(System.String)
  id: Read``1(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Read<T>(String)
  nameWithType: Storage.Read<T>(String)
  fullName: WaveEngine.Framework.Services.Storage.Read<T>(System.String)
  type: Method
  source:
    id: Read
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 407
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nReads an object from the storage.\n"
  example: []
  syntax:
    content: public T Read<T>(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file where the object was written.
    typeParameters:
    - id: T
      description: Type of the object to read.
    return:
      type: '{T}'
      description: The object read.
    content.vb: Public Function Read(Of T)(fileName As String) As T
  overload: WaveEngine.Framework.Services.Storage.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If fileName is null or emtpy.
  nameWithType.vb: Storage.Read(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.Read(Of T)(System.String)
  name.vb: Read(Of T)(String)
- uid: WaveEngine.Framework.Services.Storage.ReadAsString(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.ReadAsString(System.String)
  id: ReadAsString(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: ReadAsString(String)
  nameWithType: Storage.ReadAsString(String)
  fullName: WaveEngine.Framework.Services.Storage.ReadAsString(System.String)
  type: Method
  source:
    id: ReadAsString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 425
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nReads file content as string\n"
  example: []
  syntax:
    content: public Task<string> ReadAsString(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: file path
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Content as string
    content.vb: Public Function ReadAsString(fileName As String) As Task(Of String)
  overload: WaveEngine.Framework.Services.Storage.ReadAsString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.ReadFromContent``1(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.ReadFromContent``1(System.String)
  id: ReadFromContent``1(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: ReadFromContent<T>(String)
  nameWithType: Storage.ReadFromContent<T>(String)
  fullName: WaveEngine.Framework.Services.Storage.ReadFromContent<T>(System.String)
  type: Method
  source:
    id: ReadFromContent
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 445
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nReads an object from the content.\n"
  example: []
  syntax:
    content: public T ReadFromContent<T>(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the filename where the object was written.
    typeParameters:
    - id: T
      description: Type of the object to read.
    return:
      type: '{T}'
      description: The object read.
    content.vb: Public Function ReadFromContent(Of T)(fileName As String) As T
  overload: WaveEngine.Framework.Services.Storage.ReadFromContent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If fileName is null or emtpy.
  nameWithType.vb: Storage.ReadFromContent(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.ReadFromContent(Of T)(System.String)
  name.vb: ReadFromContent(Of T)(String)
- uid: WaveEngine.Framework.Services.Storage.ReadFromContentAsString(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.ReadFromContentAsString(System.String)
  id: ReadFromContentAsString(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: ReadFromContentAsString(String)
  nameWithType: Storage.ReadFromContentAsString(String)
  fullName: WaveEngine.Framework.Services.Storage.ReadFromContentAsString(System.String)
  type: Method
  source:
    id: ReadFromContentAsString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 463
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRead a file content as string\n"
  example: []
  syntax:
    content: public Task<string> ReadFromContentAsString(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: file path
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: content as string
    content.vb: Public Function ReadFromContentAsString(fileName As String) As Task(Of String)
  overload: WaveEngine.Framework.Services.Storage.ReadFromContentAsString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.Write``1(``0)
  commentId: M:WaveEngine.Framework.Services.Storage.Write``1(``0)
  id: Write``1(``0)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Write<T>(T)
  nameWithType: Storage.Write<T>(T)
  fullName: WaveEngine.Framework.Services.Storage.Write<T>(T)
  type: Method
  source:
    id: Write
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 482
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nWrites the specified object to the storage.\n"
  remarks: This will overwrite an existing file with the same name.
  example: []
  syntax:
    content: public void Write<T>(T value)
    parameters:
    - id: value
      type: '{T}'
      description: The object to write.
    typeParameters:
    - id: T
      description: Type of the object to write
    content.vb: Public Sub Write(Of T)(value As T)
  overload: WaveEngine.Framework.Services.Storage.Write*
  nameWithType.vb: Storage.Write(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.Write(Of T)(T)
  name.vb: Write(Of T)(T)
- uid: WaveEngine.Framework.Services.Storage.Write``1(System.String,``0)
  commentId: M:WaveEngine.Framework.Services.Storage.Write``1(System.String,``0)
  id: Write``1(System.String,``0)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Write<T>(String, T)
  nameWithType: Storage.Write<T>(String, T)
  fullName: WaveEngine.Framework.Services.Storage.Write<T>(System.String, T)
  type: Method
  source:
    id: Write
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 498
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nWrites the specified object to the storage.\n"
  remarks: "\nThis will overwrite an existing file with the same name.\n"
  example: []
  syntax:
    content: public void Write<T>(string fileName, T value)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file where the object will be written.
    - id: value
      type: '{T}'
      description: The object to write.
    typeParameters:
    - id: T
      description: Generic value.
    content.vb: Public Sub Write(Of T)(fileName As String, value As T)
  overload: WaveEngine.Framework.Services.Storage.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: FileName is null or empty.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If fileName is null or empty.
  nameWithType.vb: Storage.Write(Of T)(String, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Services.Storage.Write(Of T)(System.String, T)
  name.vb: Write(Of T)(String, T)
- uid: WaveEngine.Framework.Services.Storage.SavePictureToLibrary(System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.SavePictureToLibrary(System.String)
  id: SavePictureToLibrary(System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: SavePictureToLibrary(String)
  nameWithType: Storage.SavePictureToLibrary(String)
  fullName: WaveEngine.Framework.Services.Storage.SavePictureToLibrary(System.String)
  type: Method
  source:
    id: SavePictureToLibrary
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 515
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nSaves the picture to library.\n"
  example: []
  syntax:
    content: public void SavePictureToLibrary(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file.
    content.vb: Public Sub SavePictureToLibrary(fileName As String)
  overload: WaveEngine.Framework.Services.Storage.SavePictureToLibrary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.Storage.Move(System.String,System.String)
  commentId: M:WaveEngine.Framework.Services.Storage.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: WaveEngine.Framework.Services.Storage
  langs:
  - csharp
  - vb
  name: Move(String, String)
  nameWithType: Storage.Move(String, String)
  fullName: WaveEngine.Framework.Services.Storage.Move(System.String, System.String)
  type: Method
  source:
    id: Move
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\Storage.cs
    startLine: 525
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nMoves an existing file to a new destination.\n"
  example: []
  syntax:
    content: public void Move(string sourceFile, string destinationFile)
    parameters:
    - id: sourceFile
      type: System.String
      description: Path of the source file
    - id: destinationFile
      type: System.String
      description: Path of the destination file
    content.vb: Public Sub Move(sourceFile As String, destinationFile As String)
  overload: WaveEngine.Framework.Services.Storage.Move*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: WaveEngine.Common.Service.IsInitialized
  commentId: P:WaveEngine.Common.Service.IsInitialized
  parent: WaveEngine.Common.Service
  name: IsInitialized
  nameWithType: Service.IsInitialized
  fullName: WaveEngine.Common.Service.IsInitialized
- uid: WaveEngine.Common.Service.IsTerminated
  commentId: P:WaveEngine.Common.Service.IsTerminated
  parent: WaveEngine.Common.Service
  name: IsTerminated
  nameWithType: Service.IsTerminated
  fullName: WaveEngine.Common.Service.IsTerminated
- uid: WaveEngine.Common.Service.BaseInitialize
  commentId: M:WaveEngine.Common.Service.BaseInitialize
  parent: WaveEngine.Common.Service
  name: BaseInitialize()
  nameWithType: Service.BaseInitialize()
  fullName: WaveEngine.Common.Service.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.BaseTerminate
  commentId: M:WaveEngine.Common.Service.BaseTerminate
  parent: WaveEngine.Common.Service
  name: BaseTerminate()
  nameWithType: Service.BaseTerminate()
  fullName: WaveEngine.Common.Service.BaseTerminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnActivated
  commentId: M:WaveEngine.Common.Service.OnActivated
  parent: WaveEngine.Common.Service
  name: OnActivated()
  nameWithType: Service.OnActivated()
  fullName: WaveEngine.Common.Service.OnActivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnDeactivated
  commentId: M:WaveEngine.Common.Service.OnDeactivated
  parent: WaveEngine.Common.Service
  name: OnDeactivated()
  nameWithType: Service.OnDeactivated()
  fullName: WaveEngine.Common.Service.OnDeactivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Service.Initialize
  commentId: M:WaveEngine.Common.Service.Initialize
  parent: WaveEngine.Common.Service
  name: Initialize()
  nameWithType: Service.Initialize()
  fullName: WaveEngine.Common.Service.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.Storage.Initialize*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Initialize
  name: Initialize
  nameWithType: Storage.Initialize
  fullName: WaveEngine.Framework.Services.Storage.Initialize
- uid: WaveEngine.Common.Service.Terminate
  commentId: M:WaveEngine.Common.Service.Terminate
  parent: WaveEngine.Common.Service
  name: Terminate()
  nameWithType: Service.Terminate()
  fullName: WaveEngine.Common.Service.Terminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.Storage.Terminate*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Terminate
  name: Terminate
  nameWithType: Storage.Terminate
  fullName: WaveEngine.Framework.Services.Storage.Terminate
- uid: WaveEngine.Framework.Services.Storage.SetKnownTypes*
  commentId: Overload:WaveEngine.Framework.Services.Storage.SetKnownTypes
  name: SetKnownTypes
  nameWithType: Storage.SetKnownTypes
  fullName: WaveEngine.Framework.Services.Storage.SetKnownTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Services.Storage.Delete*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Delete
  name: Delete
  nameWithType: Storage.Delete
  fullName: WaveEngine.Framework.Services.Storage.Delete
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework.Services.Storage.Exists*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Exists
  name: Exists
  nameWithType: Storage.Exists
  fullName: WaveEngine.Framework.Services.Storage.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Services.Storage.DirectoryExists*
  commentId: Overload:WaveEngine.Framework.Services.Storage.DirectoryExists
  name: DirectoryExists
  nameWithType: Storage.DirectoryExists
  fullName: WaveEngine.Framework.Services.Storage.DirectoryExists
- uid: WaveEngine.Framework.Services.Storage.OpenContentFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.OpenContentFile
  name: OpenContentFile
  nameWithType: Storage.OpenContentFile
  fullName: WaveEngine.Framework.Services.Storage.OpenContentFile
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: WaveEngine.Framework.Services.Storage.ExistsContentFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.ExistsContentFile
  name: ExistsContentFile
  nameWithType: Storage.ExistsContentFile
  fullName: WaveEngine.Framework.Services.Storage.ExistsContentFile
- uid: WaveEngine.Framework.Services.Storage.ExistsStorageFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.ExistsStorageFile
  name: ExistsStorageFile
  nameWithType: Storage.ExistsStorageFile
  fullName: WaveEngine.Framework.Services.Storage.ExistsStorageFile
- uid: WaveEngine.Framework.Services.Storage.CreateStorageFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.CreateStorageFile
  name: CreateStorageFile
  nameWithType: Storage.CreateStorageFile
  fullName: WaveEngine.Framework.Services.Storage.CreateStorageFile
- uid: WaveEngine.Framework.Services.Storage.CreateDirectory*
  commentId: Overload:WaveEngine.Framework.Services.Storage.CreateDirectory
  name: CreateDirectory
  nameWithType: Storage.CreateDirectory
  fullName: WaveEngine.Framework.Services.Storage.CreateDirectory
- uid: WaveEngine.Framework.Services.Storage.OpenStorageFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.OpenStorageFile
  name: OpenStorageFile
  nameWithType: Storage.OpenStorageFile
  fullName: WaveEngine.Framework.Services.Storage.OpenStorageFile
- uid: WaveEngine.Common.IO.FileMode
  commentId: T:WaveEngine.Common.IO.FileMode
  parent: WaveEngine.Common.IO
  name: FileMode
  nameWithType: FileMode
  fullName: WaveEngine.Common.IO.FileMode
- uid: WaveEngine.Common.IO.FileAccess
  commentId: T:WaveEngine.Common.IO.FileAccess
  parent: WaveEngine.Common.IO
  name: FileAccess
  nameWithType: FileAccess
  fullName: WaveEngine.Common.IO.FileAccess
- uid: WaveEngine.Framework.Services.Storage.DeleteStorageFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.DeleteStorageFile
  name: DeleteStorageFile
  nameWithType: Storage.DeleteStorageFile
  fullName: WaveEngine.Framework.Services.Storage.DeleteStorageFile
- uid: WaveEngine.Framework.Services.Storage.MoveStorageFile*
  commentId: Overload:WaveEngine.Framework.Services.Storage.MoveStorageFile
  name: MoveStorageFile
  nameWithType: Storage.MoveStorageFile
  fullName: WaveEngine.Framework.Services.Storage.MoveStorageFile
- uid: WaveEngine.Framework.Services.Storage.GetContentFileNames*
  commentId: Overload:WaveEngine.Framework.Services.Storage.GetContentFileNames
  name: GetContentFileNames
  nameWithType: Storage.GetContentFileNames
  fullName: WaveEngine.Framework.Services.Storage.GetContentFileNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Framework.Services.Storage.GetCreationTime*
  commentId: Overload:WaveEngine.Framework.Services.Storage.GetCreationTime
  name: GetCreationTime
  nameWithType: Storage.GetCreationTime
  fullName: WaveEngine.Framework.Services.Storage.GetCreationTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: WaveEngine.Framework.Services.Storage.GetContentDirectories*
  commentId: Overload:WaveEngine.Framework.Services.Storage.GetContentDirectories
  name: GetContentDirectories
  nameWithType: Storage.GetContentDirectories
  fullName: WaveEngine.Framework.Services.Storage.GetContentDirectories
- uid: WaveEngine.Framework.Services.Storage.GetFileNames*
  commentId: Overload:WaveEngine.Framework.Services.Storage.GetFileNames
  name: GetFileNames
  nameWithType: Storage.GetFileNames
  fullName: WaveEngine.Framework.Services.Storage.GetFileNames
- uid: WaveEngine.Framework.Services.Storage.GetDirectoryNames*
  commentId: Overload:WaveEngine.Framework.Services.Storage.GetDirectoryNames
  name: GetDirectoryNames
  nameWithType: Storage.GetDirectoryNames
  fullName: WaveEngine.Framework.Services.Storage.GetDirectoryNames
- uid: WaveEngine.Framework.Services.Storage.CreateStorageDirectory*
  commentId: Overload:WaveEngine.Framework.Services.Storage.CreateStorageDirectory
  name: CreateStorageDirectory
  nameWithType: Storage.CreateStorageDirectory
  fullName: WaveEngine.Framework.Services.Storage.CreateStorageDirectory
- uid: WaveEngine.Framework.Services.Storage.Read*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Read
  name: Read
  nameWithType: Storage.Read
  fullName: WaveEngine.Framework.Services.Storage.Read
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Framework.Services.Storage.ReadAsString*
  commentId: Overload:WaveEngine.Framework.Services.Storage.ReadAsString
  name: ReadAsString
  nameWithType: Storage.ReadAsString
  fullName: WaveEngine.Framework.Services.Storage.ReadAsString
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: WaveEngine.Framework.Services.Storage.ReadFromContent*
  commentId: Overload:WaveEngine.Framework.Services.Storage.ReadFromContent
  name: ReadFromContent
  nameWithType: Storage.ReadFromContent
  fullName: WaveEngine.Framework.Services.Storage.ReadFromContent
- uid: WaveEngine.Framework.Services.Storage.ReadFromContentAsString*
  commentId: Overload:WaveEngine.Framework.Services.Storage.ReadFromContentAsString
  name: ReadFromContentAsString
  nameWithType: Storage.ReadFromContentAsString
  fullName: WaveEngine.Framework.Services.Storage.ReadFromContentAsString
- uid: WaveEngine.Framework.Services.Storage.Write*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Write
  name: Write
  nameWithType: Storage.Write
  fullName: WaveEngine.Framework.Services.Storage.Write
- uid: WaveEngine.Framework.Services.Storage.SavePictureToLibrary*
  commentId: Overload:WaveEngine.Framework.Services.Storage.SavePictureToLibrary
  name: SavePictureToLibrary
  nameWithType: Storage.SavePictureToLibrary
  fullName: WaveEngine.Framework.Services.Storage.SavePictureToLibrary
- uid: WaveEngine.Framework.Services.Storage.Move*
  commentId: Overload:WaveEngine.Framework.Services.Storage.Move
  name: Move
  nameWithType: Storage.Move
  fullName: WaveEngine.Framework.Services.Storage.Move
