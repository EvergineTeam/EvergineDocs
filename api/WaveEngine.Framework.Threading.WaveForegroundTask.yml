### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Threading.WaveForegroundTask
  commentId: T:WaveEngine.Framework.Threading.WaveForegroundTask
  id: WaveForegroundTask
  parent: WaveEngine.Framework.Threading
  children:
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action)
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action,System.Threading.CancellationToken)
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func{System.Threading.Tasks.Task})
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{``0})
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{``0},System.Threading.CancellationToken)
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}})
  - WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: WaveForegroundTask
  nameWithType: WaveForegroundTask
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask
  type: Class
  source:
    id: WaveForegroundTask
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 14
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: "\nProvides methods for creating tasks that will be enqueued in the main Wave Engine thread.\n"
  remarks: "\nThe tasks will be enqueued using the <xref href=\"WaveEngine.Framework.Threading.ForegroundTaskScheduler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class WaveForegroundTask
    content.vb: Public Module WaveForegroundTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action)
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action)
  id: Run(System.Action)
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run(Action)
  nameWithType: WaveForegroundTask.Run(Action)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 20
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified action in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task Run(Action action)
    parameters:
    - id: action
      type: System.Action
      description: The action to execute asynchronously.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(action As Action) As Task
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">action</code> argument is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action,System.Threading.CancellationToken)
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action,System.Threading.CancellationToken)
  id: Run(System.Action,System.Threading.CancellationToken)
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run(Action, CancellationToken)
  nameWithType: WaveForegroundTask.Run(Action, CancellationToken)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Action, System.Threading.CancellationToken)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 30
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified action in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task Run(Action action, CancellationToken cancellationToken)
    parameters:
    - id: action
      type: System.Action
      description: The action to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The CancellationToken to use to request cancellation of this task.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(action As Action, cancellationToken As CancellationToken) As Task
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">action</code> argument is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func{System.Threading.Tasks.Task})
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func{System.Threading.Tasks.Task})
  id: Run(System.Func{System.Threading.Tasks.Task})
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run(Func<Task>)
  nameWithType: WaveForegroundTask.Run(Func<Task>)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 39
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified function in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task Run(Func<Task> function)
    parameters:
    - id: function
      type: System.Func{System.Threading.Tasks.Task}
      description: The function to execute asynchronously.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(function As Func(Of Task)) As Task
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">function</code> argument is null.
  nameWithType.vb: WaveForegroundTask.Run(Func(Of Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func(Of System.Threading.Tasks.Task))
  name.vb: Run(Func(Of Task))
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  id: Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run(Func<Task>, CancellationToken)
  nameWithType: WaveForegroundTask.Run(Func<Task>, CancellationToken)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func<System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 49
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified function in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task Run(Func<Task> function, CancellationToken cancellationToken)
    parameters:
    - id: function
      type: System.Func{System.Threading.Tasks.Task}
      description: The function to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The CancellationToken to use to request cancellation of this task.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the completion of the function.
    content.vb: Public Shared Function Run(function As Func(Of Task), cancellationToken As CancellationToken) As Task
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">function</code> argument is null.
  nameWithType.vb: WaveForegroundTask.Run(Func(Of Task), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.WaveForegroundTask.Run(System.Func(Of System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: Run(Func(Of Task), CancellationToken)
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{``0})
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{``0})
  id: Run``1(System.Func{``0})
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run<TResult>(Func<TResult>)
  nameWithType: WaveForegroundTask.Run<TResult>(Func<TResult>)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run<TResult>(System.Func<TResult>)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 59
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified function in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task<TResult> Run<TResult>(Func<TResult> function)
    parameters:
    - id: function
      type: System.Func{{TResult}}
      description: The function to execute asynchronously.
    typeParameters:
    - id: TResult
      description: The task result type.
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(Of TResult)(function As Func(Of TResult)) As Task(Of TResult)
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">function</code> argument is null.
  nameWithType.vb: WaveForegroundTask.Run(Of TResult)(Func(Of TResult))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.WaveForegroundTask.Run(Of TResult)(System.Func(Of TResult))
  name.vb: Run(Of TResult)(Func(Of TResult))
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{``0},System.Threading.CancellationToken)
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{``0},System.Threading.CancellationToken)
  id: Run``1(System.Func{``0},System.Threading.CancellationToken)
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run<TResult>(Func<TResult>, CancellationToken)
  nameWithType: WaveForegroundTask.Run<TResult>(Func<TResult>, CancellationToken)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run<TResult>(System.Func<TResult>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 70
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified function in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task<TResult> Run<TResult>(Func<TResult> function, CancellationToken cancellationToken)
    parameters:
    - id: function
      type: System.Func{{TResult}}
      description: The function to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The CancellationToken to use to cancel the task.
    typeParameters:
    - id: TResult
      description: The task result type.
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(Of TResult)(function As Func(Of TResult), cancellationToken As CancellationToken) As Task(Of TResult)
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">function</code> argument is null.
  nameWithType.vb: WaveForegroundTask.Run(Of TResult)(Func(Of TResult), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.WaveForegroundTask.Run(Of TResult)(System.Func(Of TResult), System.Threading.CancellationToken)
  name.vb: Run(Of TResult)(Func(Of TResult), CancellationToken)
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}})
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}})
  id: Run``1(System.Func{System.Threading.Tasks.Task{``0}})
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run<TResult>(Func<Task<TResult>>)
  nameWithType: WaveForegroundTask.Run<TResult>(Func<Task<TResult>>)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 80
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified function in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task<TResult> Run<TResult>(Func<Task<TResult>> function)
    parameters:
    - id: function
      type: System.Func{System.Threading.Tasks.Task{{TResult}}}
      description: The function to execute asynchronously.
    typeParameters:
    - id: TResult
      description: The task result type.
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(Of TResult)(function As Func(Of Task(Of TResult))) As Task(Of TResult)
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">function</code> argument is null.
  nameWithType.vb: WaveForegroundTask.Run(Of TResult)(Func(Of Task(Of TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.WaveForegroundTask.Run(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  name.vb: Run(Of TResult)(Func(Of Task(Of TResult)))
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  commentId: M:WaveEngine.Framework.Threading.WaveForegroundTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  id: Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  parent: WaveEngine.Framework.Threading.WaveForegroundTask
  langs:
  - csharp
  - vb
  name: Run<TResult>(Func<Task<TResult>>, CancellationToken)
  nameWithType: WaveForegroundTask.Run<TResult>(Func<Task<TResult>>, CancellationToken)
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Run
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Threading\WaveForegroundTask.cs
    startLine: 91
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Threading
  summary: Creates a task that runs the specified function in the main Wave Engine thread.
  example: []
  syntax:
    content: public static Task<TResult> Run<TResult>(Func<Task<TResult>> function, CancellationToken cancellationToken)
    parameters:
    - id: function
      type: System.Func{System.Threading.Tasks.Task{{TResult}}}
      description: The function to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The CancellationToken to use to cancel the task.
    typeParameters:
    - id: TResult
      description: The task result type.
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: A task that represents the completion of the action.
    content.vb: Public Shared Function Run(Of TResult)(function As Func(Of Task(Of TResult)), cancellationToken As CancellationToken) As Task(Of TResult)
  overload: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">function</code> argument is null.
  nameWithType.vb: WaveForegroundTask.Run(Of TResult)(Func(Of Task(Of TResult)), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Threading.WaveForegroundTask.Run(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.CancellationToken)
  name.vb: Run(Of TResult)(Func(Of Task(Of TResult)), CancellationToken)
references:
- uid: WaveEngine.Framework.Threading.ForegroundTaskScheduler
  commentId: T:WaveEngine.Framework.Threading.ForegroundTaskScheduler
  parent: WaveEngine.Framework.Threading
  name: ForegroundTaskScheduler
  nameWithType: ForegroundTaskScheduler
  fullName: WaveEngine.Framework.Threading.ForegroundTaskScheduler
- uid: WaveEngine.Framework.Threading
  commentId: N:WaveEngine.Framework.Threading
  name: WaveEngine.Framework.Threading
  nameWithType: WaveEngine.Framework.Threading
  fullName: WaveEngine.Framework.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: WaveEngine.Framework.Threading.WaveForegroundTask.Run*
  commentId: Overload:WaveEngine.Framework.Threading.WaveForegroundTask.Run
  name: Run
  nameWithType: WaveForegroundTask.Run
  fullName: WaveEngine.Framework.Threading.WaveForegroundTask.Run
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TResult}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task{{TResult}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Func`1
  name: Func<Task<TResult>>
  nameWithType: Func<Task<TResult>>
  fullName: System.Func<System.Threading.Tasks.Task<TResult>>
  nameWithType.vb: Func(Of Task(Of TResult))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of TResult))
  name.vb: Func(Of Task(Of TResult))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
