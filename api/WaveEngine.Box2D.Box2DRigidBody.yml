### YamlMime:ManagedReference
items:
- uid: WaveEngine.Box2D.Box2DRigidBody
  commentId: T:WaveEngine.Box2D.Box2DRigidBody
  id: Box2DRigidBody
  parent: WaveEngine.Box2D
  children:
  - WaveEngine.Box2D.Box2DRigidBody.#ctor(WaveEngine.Box2D.Box2DSimulation,WaveEngine.Common.Physics2D.RigidBodyDef2D)
  - WaveEngine.Box2D.Box2DRigidBody.Active
  - WaveEngine.Box2D.Box2DRigidBody.AllowSleep
  - WaveEngine.Box2D.Box2DRigidBody.Angle
  - WaveEngine.Box2D.Box2DRigidBody.AngularDamping
  - WaveEngine.Box2D.Box2DRigidBody.AngularVelocity
  - WaveEngine.Box2D.Box2DRigidBody.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  - WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  - WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  - WaveEngine.Box2D.Box2DRigidBody.ApplyTorque(System.Single,System.Boolean)
  - WaveEngine.Box2D.Box2DRigidBody.Awake
  - WaveEngine.Box2D.Box2DRigidBody.Bullet
  - WaveEngine.Box2D.Box2DRigidBody.ColliderList
  - WaveEngine.Box2D.Box2DRigidBody.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  - WaveEngine.Box2D.Box2DRigidBody.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  - WaveEngine.Box2D.Box2DRigidBody.FixedRotation
  - WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Box2DRigidBody.GetLocalVector(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Box2DRigidBody.GetWorldVector(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Box2D.Box2DRigidBody.GravityScale
  - WaveEngine.Box2D.Box2DRigidBody.Inertia
  - WaveEngine.Box2D.Box2DRigidBody.IsDestroyed
  - WaveEngine.Box2D.Box2DRigidBody.LinearDamping
  - WaveEngine.Box2D.Box2DRigidBody.LinearVelocity
  - WaveEngine.Box2D.Box2DRigidBody.LocalCenter
  - WaveEngine.Box2D.Box2DRigidBody.Mass
  - WaveEngine.Box2D.Box2DRigidBody.MassData
  - WaveEngine.Box2D.Box2DRigidBody.Position
  - WaveEngine.Box2D.Box2DRigidBody.RegenerateBody
  - WaveEngine.Box2D.Box2DRigidBody.ResetMassData
  - WaveEngine.Box2D.Box2DRigidBody.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Box2D.Box2DRigidBody.Type
  - WaveEngine.Box2D.Box2DRigidBody.UserData
  - WaveEngine.Box2D.Box2DRigidBody.WorldCenter
  langs:
  - csharp
  - vb
  name: Box2DRigidBody
  nameWithType: Box2DRigidBody
  fullName: WaveEngine.Box2D.Box2DRigidBody
  type: Class
  source:
    id: Box2DRigidBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 16
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nThe Box2DRigidBody implements Box2D rigid body for Wave\n"
  example: []
  syntax:
    content: 'public sealed class Box2DRigidBody : IRigidBody2D'
    content.vb: >-
      Public NotInheritable Class Box2DRigidBody

          Implements IRigidBody2D
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Box2D.Box2DRigidBody.Position
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Position
  id: Position
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Box2DRigidBody.Position
  fullName: WaveEngine.Box2D.Box2DRigidBody.Position
  type: Property
  source:
    id: Position
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 58
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the world position of the body.\n"
  example: []
  syntax:
    content: public Vector2 Position { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public ReadOnly Property Position As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.Position*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Position
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.Angle
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Angle
  id: Angle
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: Box2DRigidBody.Angle
  fullName: WaveEngine.Box2D.Box2DRigidBody.Angle
  type: Property
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 74
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the world angle of the body in radians.\n"
  example: []
  syntax:
    content: public float Angle { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Angle As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.Angle*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.LinearVelocity
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.LinearVelocity
  id: LinearVelocity
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: Box2DRigidBody.LinearVelocity
  fullName: WaveEngine.Box2D.Box2DRigidBody.LinearVelocity
  type: Property
  source:
    id: LinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 90
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the linear velocity of the body&apos;s origin in world co-ordinates.\n"
  example: []
  syntax:
    content: public Vector2 LinearVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Property LinearVelocity As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.LinearVelocity*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.AngularVelocity
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.AngularVelocity
  id: AngularVelocity
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: Box2DRigidBody.AngularVelocity
  fullName: WaveEngine.Box2D.Box2DRigidBody.AngularVelocity
  type: Property
  source:
    id: AngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 118
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the angular velocity of the body.\n"
  example: []
  syntax:
    content: public float AngularVelocity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property AngularVelocity As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.AngularVelocity*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.LinearDamping
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.LinearDamping
  id: LinearDamping
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: LinearDamping
  nameWithType: Box2DRigidBody.LinearDamping
  fullName: WaveEngine.Box2D.Box2DRigidBody.LinearDamping
  type: Property
  source:
    id: LinearDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 147
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the linear damping is use to reduce the linear velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: public float LinearDamping { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property LinearDamping As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.LinearDamping*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.AngularDamping
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.AngularDamping
  id: AngularDamping
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: AngularDamping
  nameWithType: Box2DRigidBody.AngularDamping
  fullName: WaveEngine.Box2D.Box2DRigidBody.AngularDamping
  type: Property
  source:
    id: AngularDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 176
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the angular damping is use to reduce the angular velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: public float AngularDamping { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property AngularDamping As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.AngularDamping*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.AllowSleep
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.AllowSleep
  id: AllowSleep
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: AllowSleep
  nameWithType: Box2DRigidBody.AllowSleep
  fullName: WaveEngine.Box2D.Box2DRigidBody.AllowSleep
  type: Property
  source:
    id: AllowSleep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 204
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets a value indicating whether or not this body should never fall asleep. Note that this increases CPU usage.\n"
  example: []
  syntax:
    content: public bool AllowSleep { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowSleep As Boolean
  overload: WaveEngine.Box2D.Box2DRigidBody.AllowSleep*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.Awake
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Awake
  id: Awake
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Awake
  nameWithType: Box2DRigidBody.Awake
  fullName: WaveEngine.Box2D.Box2DRigidBody.Awake
  type: Property
  source:
    id: Awake
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 232
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets a value indicating whether this body is awake\n"
  example: []
  syntax:
    content: public bool Awake { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Awake As Boolean
  overload: WaveEngine.Box2D.Box2DRigidBody.Awake*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.FixedRotation
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.FixedRotation
  id: FixedRotation
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: FixedRotation
  nameWithType: Box2DRigidBody.FixedRotation
  fullName: WaveEngine.Box2D.Box2DRigidBody.FixedRotation
  type: Property
  source:
    id: FixedRotation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 260
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets a value indicating whether this body be prevented from rotating. Useful for characters.\n"
  example: []
  syntax:
    content: public bool FixedRotation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FixedRotation As Boolean
  overload: WaveEngine.Box2D.Box2DRigidBody.FixedRotation*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.Bullet
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Bullet
  id: Bullet
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Bullet
  nameWithType: Box2DRigidBody.Bullet
  fullName: WaveEngine.Box2D.Box2DRigidBody.Bullet
  type: Property
  source:
    id: Bullet
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 292
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets a value indicating whether this is a fast moving body that should be prevented from tunneling through other moving bodies?\n<remarks>\nNote that all bodies are prevented from tunneling through kinematic and static bodies.\nThis setting is only considered on dynamic bodies.\n</remarks>\n"
  example: []
  syntax:
    content: public bool Bullet { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Bullet As Boolean
  overload: WaveEngine.Box2D.Box2DRigidBody.Bullet*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.Active
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Active
  id: Active
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: Box2DRigidBody.Active
  fullName: WaveEngine.Box2D.Box2DRigidBody.Active
  type: Property
  source:
    id: Active
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 320
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets a value indicating whether thithis body start out active?\n"
  example: []
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: WaveEngine.Box2D.Box2DRigidBody.Active*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Active
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GravityScale
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.GravityScale
  id: GravityScale
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GravityScale
  nameWithType: Box2DRigidBody.GravityScale
  fullName: WaveEngine.Box2D.Box2DRigidBody.GravityScale
  type: Property
  source:
    id: GravityScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 348
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the scale the gravity applied to this body.\n"
  example: []
  syntax:
    content: public float GravityScale { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property GravityScale As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.GravityScale*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.Type
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Type
  id: Type
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Box2DRigidBody.Type
  fullName: WaveEngine.Box2D.Box2DRigidBody.Type
  type: Property
  source:
    id: Type
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 376
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the rigid body 2D type\n"
  example: []
  syntax:
    content: public RigidBodyType2D Type { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.RigidBodyType2D
    content.vb: Public Property Type As RigidBodyType2D
  overload: WaveEngine.Box2D.Box2DRigidBody.Type*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.UserData
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.UserData
  id: UserData
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: Box2DRigidBody.UserData
  fullName: WaveEngine.Box2D.Box2DRigidBody.UserData
  type: Property
  source:
    id: UserData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 404
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the object user data\n"
  example: []
  syntax:
    content: public object UserData { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property UserData As Object
  overload: WaveEngine.Box2D.Box2DRigidBody.UserData*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.WorldCenter
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.WorldCenter
  id: WorldCenter
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: WorldCenter
  nameWithType: Box2DRigidBody.WorldCenter
  fullName: WaveEngine.Box2D.Box2DRigidBody.WorldCenter
  type: Property
  source:
    id: WorldCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 452
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the world position of the center of mass.\n"
  example: []
  syntax:
    content: public Vector2 WorldCenter { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public ReadOnly Property WorldCenter As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.WorldCenter*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.LocalCenter
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.LocalCenter
  id: LocalCenter
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: LocalCenter
  nameWithType: Box2DRigidBody.LocalCenter
  fullName: WaveEngine.Box2D.Box2DRigidBody.LocalCenter
  type: Property
  source:
    id: LocalCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 468
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the local position of the center of the mass.\n"
  example: []
  syntax:
    content: public Vector2 LocalCenter { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public ReadOnly Property LocalCenter As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.LocalCenter*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.ColliderList
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.ColliderList
  id: ColliderList
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: ColliderList
  nameWithType: Box2DRigidBody.ColliderList
  fullName: WaveEngine.Box2D.Box2DRigidBody.ColliderList
  type: Property
  source:
    id: ColliderList
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 484
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the collider list\n"
  example: []
  syntax:
    content: public IEnumerable<ICollider2D> ColliderList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics2D.ICollider2D}
    content.vb: Public ReadOnly Property ColliderList As IEnumerable(Of ICollider2D)
  overload: WaveEngine.Box2D.Box2DRigidBody.ColliderList*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.Mass
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Mass
  id: Mass
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: Box2DRigidBody.Mass
  fullName: WaveEngine.Box2D.Box2DRigidBody.Mass
  type: Property
  source:
    id: Mass
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 498
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the total mass of the body, usually in kg-m^2.\n"
  example: []
  syntax:
    content: public float Mass { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Mass As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.Mass*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.Inertia
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.Inertia
  id: Inertia
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Inertia
  nameWithType: Box2DRigidBody.Inertia
  fullName: WaveEngine.Box2D.Box2DRigidBody.Inertia
  type: Property
  source:
    id: Inertia
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 514
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the rotational inertia of the body about the local origin, usually in kg-m^2.\n"
  example: []
  syntax:
    content: public float Inertia { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Inertia As Single
  overload: WaveEngine.Box2D.Box2DRigidBody.Inertia*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.MassData
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.MassData
  id: MassData
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: MassData
  nameWithType: Box2DRigidBody.MassData
  fullName: WaveEngine.Box2D.Box2DRigidBody.MassData
  type: Property
  source:
    id: MassData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 530
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the mass data of the body.\n"
  example: []
  syntax:
    content: public RigidBodyMassData2D MassData { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.RigidBodyMassData2D
    content.vb: Public Property MassData As RigidBodyMassData2D
  overload: WaveEngine.Box2D.Box2DRigidBody.MassData*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.IsDestroyed
  commentId: P:WaveEngine.Box2D.Box2DRigidBody.IsDestroyed
  id: IsDestroyed
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: IsDestroyed
  nameWithType: Box2DRigidBody.IsDestroyed
  fullName: WaveEngine.Box2D.Box2DRigidBody.IsDestroyed
  type: Property
  source:
    id: IsDestroyed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 556
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets a value indicating whether the body is destroyed\n"
  example: []
  syntax:
    content: public bool IsDestroyed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDestroyed As Boolean
  overload: WaveEngine.Box2D.Box2DRigidBody.IsDestroyed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Box2D.Box2DRigidBody.#ctor(WaveEngine.Box2D.Box2DSimulation,WaveEngine.Common.Physics2D.RigidBodyDef2D)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.#ctor(WaveEngine.Box2D.Box2DSimulation,WaveEngine.Common.Physics2D.RigidBodyDef2D)
  id: '#ctor(WaveEngine.Box2D.Box2DSimulation,WaveEngine.Common.Physics2D.RigidBodyDef2D)'
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: Box2DRigidBody(Box2DSimulation, RigidBodyDef2D)
  nameWithType: Box2DRigidBody.Box2DRigidBody(Box2DSimulation, RigidBodyDef2D)
  fullName: WaveEngine.Box2D.Box2DRigidBody.Box2DRigidBody(WaveEngine.Box2D.Box2DSimulation, WaveEngine.Common.Physics2D.RigidBodyDef2D)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 572
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Box2D.Box2DRigidBody\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Box2DRigidBody(Box2DSimulation simulation2D, RigidBodyDef2D rigidBodyDef)
    parameters:
    - id: simulation2D
      type: WaveEngine.Box2D.Box2DSimulation
      description: The box2D world
    - id: rigidBodyDef
      type: WaveEngine.Common.Physics2D.RigidBodyDef2D
      description: The definition of Rigid body
    content.vb: Public Sub New(simulation2D As Box2DSimulation, rigidBodyDef As RigidBodyDef2D)
  overload: WaveEngine.Box2D.Box2DRigidBody.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  id: SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: SetTransform(Vector2, Single)
  nameWithType: Box2DRigidBody.SetTransform(Vector2, Single)
  fullName: WaveEngine.Box2D.Box2DRigidBody.SetTransform(WaveEngine.Common.Math.Vector2, System.Single)
  type: Method
  source:
    id: SetTransform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 590
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nSet the position of the body&apos;s origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body&apos;s transform may cause non-physical behavior.\n"
  example: []
  syntax:
    content: public void SetTransform(Vector2 worldPosition, float angle)
    parameters:
    - id: worldPosition
      type: WaveEngine.Common.Math.Vector2
      description: the world position of the body&apos;s local origin.
    - id: angle
      type: System.Single
      description: the world rotation in radians.
    content.vb: Public Sub SetTransform(worldPosition As Vector2, angle As Single)
  overload: WaveEngine.Box2D.Box2DRigidBody.SetTransform*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  id: ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: ApplyForce(Vector2, Vector2, Boolean)
  nameWithType: Box2DRigidBody.ApplyForce(Vector2, Vector2, Boolean)
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyForce(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean)
  type: Method
  source:
    id: ApplyForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 604
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nApply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body.\n"
  example: []
  syntax:
    content: public void ApplyForce(Vector2 force, Vector2 point, bool wake)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector2
      description: The world force vector, usually in Newtons (N).
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: The world position of the point of application.
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Public Sub ApplyForce(force As Vector2, point As Vector2, wake As Boolean)
  overload: WaveEngine.Box2D.Box2DRigidBody.ApplyForce*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  id: ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: ApplyForceToCenter(Vector2, Boolean)
  nameWithType: Box2DRigidBody.ApplyForceToCenter(Vector2, Boolean)
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter(WaveEngine.Common.Math.Vector2, System.Boolean)
  type: Method
  source:
    id: ApplyForceToCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 617
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nApply a force to the center of mass. This wakes up the body.\n"
  example: []
  syntax:
    content: public void ApplyForceToCenter(Vector2 force, bool wake)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector2
      description: The world force vector, usually in Newtons (N).
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Public Sub ApplyForceToCenter(force As Vector2, wake As Boolean)
  overload: WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  id: ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: ApplyLinearImpulse(Vector2, Vector2, Boolean)
  nameWithType: Box2DRigidBody.ApplyLinearImpulse(Vector2, Vector2, Boolean)
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean)
  type: Method
  source:
    id: ApplyLinearImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 631
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nApply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body.\n"
  example: []
  syntax:
    content: public void ApplyLinearImpulse(Vector2 impulse, Vector2 point, bool wake)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector2
      description: The world impulse vector, usually in N-seconds or kg-m/s.
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: The world position of the point of application.
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Public Sub ApplyLinearImpulse(impulse As Vector2, point As Vector2, wake As Boolean)
  overload: WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyTorque(System.Single,System.Boolean)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.ApplyTorque(System.Single,System.Boolean)
  id: ApplyTorque(System.Single,System.Boolean)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: ApplyTorque(Single, Boolean)
  nameWithType: Box2DRigidBody.ApplyTorque(Single, Boolean)
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyTorque(System.Single, System.Boolean)
  type: Method
  source:
    id: ApplyTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 644
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nApply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass. This wakes up the body.\n"
  example: []
  syntax:
    content: public void ApplyTorque(float torque, bool wake)
    parameters:
    - id: torque
      type: System.Single
      description: About the z-axis (out of the screen), usually in N-m.
    - id: wake
      type: System.Boolean
      description: Also wake up the body
    content.vb: Public Sub ApplyTorque(torque As Single, wake As Boolean)
  overload: WaveEngine.Box2D.Box2DRigidBody.ApplyTorque*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  id: CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: CreateCollider(ColliderDef2D)
  nameWithType: Box2DRigidBody.CreateCollider(ColliderDef2D)
  fullName: WaveEngine.Box2D.Box2DRigidBody.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  type: Method
  source:
    id: CreateCollider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 657
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nCreates a collider with the specified definition\n"
  example: []
  syntax:
    content: public ICollider2D CreateCollider(ColliderDef2D def)
    parameters:
    - id: def
      type: WaveEngine.Common.Physics2D.ColliderDef2D
      description: The collider 2D definition
    return:
      type: WaveEngine.Common.Physics2D.ICollider2D
      description: The collider 2D
    content.vb: Public Function CreateCollider(def As ColliderDef2D) As ICollider2D
  overload: WaveEngine.Box2D.Box2DRigidBody.CreateCollider*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  id: DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: DestroyCollider(ICollider2D)
  nameWithType: Box2DRigidBody.DestroyCollider(ICollider2D)
  fullName: WaveEngine.Box2D.Box2DRigidBody.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  type: Method
  source:
    id: DestroyCollider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 671
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nDestroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with this fixture.\nThis will automatically adjust the mass of the body if the body is dynamic and the fixture has positive density.\nAll fixtures attached to a body are implicitly destroyed when the body is destroyed.\n"
  example: []
  syntax:
    content: public void DestroyCollider(ICollider2D collider)
    parameters:
    - id: collider
      type: WaveEngine.Common.Physics2D.ICollider2D
      description: The collider 2D to be removed
    content.vb: Public Sub DestroyCollider(collider As ICollider2D)
  overload: WaveEngine.Box2D.Box2DRigidBody.DestroyCollider*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  id: GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GetLinearVelocityFromLocalPoint(Vector2)
  nameWithType: Box2DRigidBody.GetLinearVelocityFromLocalPoint(Vector2)
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLinearVelocityFromLocalPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 687
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGet the world velocity of a local point.\n"
  example: []
  syntax:
    content: public Vector2 GetLinearVelocityFromLocalPoint(Vector2 localPoint)
    parameters:
    - id: localPoint
      type: WaveEngine.Common.Math.Vector2
      description: Point in local coordinates
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The world velocity of a point.
    content.vb: Public Function GetLinearVelocityFromLocalPoint(localPoint As Vector2) As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  id: GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GetLinearVelocityFromWorldPoint(Vector2)
  nameWithType: Box2DRigidBody.GetLinearVelocityFromWorldPoint(Vector2)
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLinearVelocityFromWorldPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 703
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGet the world linear velocity of a world point attached to this body..\n"
  example: []
  syntax:
    content: public Vector2 GetLinearVelocityFromWorldPoint(Vector2 localPoint)
    parameters:
    - id: localPoint
      type: WaveEngine.Common.Math.Vector2
      description: Point in world coordinates
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The world velocity of a point.
    content.vb: Public Function GetLinearVelocityFromWorldPoint(localPoint As Vector2) As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  id: GetLocalPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GetLocalPoint(Vector2)
  nameWithType: Box2DRigidBody.GetLocalPoint(Vector2)
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLocalPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 719
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets a local point relative to the body&apos;s origin given a world point\n"
  example: []
  syntax:
    content: public Vector2 GetLocalPoint(Vector2 worldPoint)
    parameters:
    - id: worldPoint
      type: WaveEngine.Common.Math.Vector2
      description: Point in world coordinates
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The corresponding local point relative to the body&apos;s origin.
    content.vb: Public Function GetLocalPoint(worldPoint As Vector2) As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLocalVector(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.GetLocalVector(WaveEngine.Common.Math.Vector2)
  id: GetLocalVector(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GetLocalVector(Vector2)
  nameWithType: Box2DRigidBody.GetLocalVector(Vector2)
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLocalVector(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetLocalVector
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 735
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets a local vector given a world vector.\n"
  example: []
  syntax:
    content: public Vector2 GetLocalVector(Vector2 worldVector)
    parameters:
    - id: worldVector
      type: WaveEngine.Common.Math.Vector2
      description: Vector in world coordinates.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The corresponding local vector
    content.vb: Public Function GetLocalVector(worldVector As Vector2) As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.GetLocalVector*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  id: GetWorldPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GetWorldPoint(Vector2)
  nameWithType: Box2DRigidBody.GetWorldPoint(Vector2)
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetWorldPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 751
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGet the world coordinates of a point given the local coordinates.\n"
  example: []
  syntax:
    content: public Vector2 GetWorldPoint(Vector2 localPoint)
    parameters:
    - id: localPoint
      type: WaveEngine.Common.Math.Vector2
      description: A point on the body measured relative the the body&apos;s origin.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The same point expressed in world coordinates.
    content.vb: Public Function GetWorldPoint(localPoint As Vector2) As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.GetWorldVector(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.GetWorldVector(WaveEngine.Common.Math.Vector2)
  id: GetWorldVector(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: GetWorldVector(Vector2)
  nameWithType: Box2DRigidBody.GetWorldVector(Vector2)
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetWorldVector(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: GetWorldVector
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 767
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGet the world coordinates of a vector given the local coordinates.\n"
  example: []
  syntax:
    content: public Vector2 GetWorldVector(Vector2 localVector)
    parameters:
    - id: localVector
      type: WaveEngine.Common.Math.Vector2
      description: A vector fixed in the body.
    return:
      type: WaveEngine.Common.Math.Vector2
      description: The same vector expressed in world coordinates
    content.vb: Public Function GetWorldVector(localVector As Vector2) As Vector2
  overload: WaveEngine.Box2D.Box2DRigidBody.GetWorldVector*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.ResetMassData
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.ResetMassData
  id: ResetMassData
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: ResetMassData()
  nameWithType: Box2DRigidBody.ResetMassData()
  fullName: WaveEngine.Box2D.Box2DRigidBody.ResetMassData()
  type: Method
  source:
    id: ResetMassData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 800
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nReset the mass data\n"
  example: []
  syntax:
    content: public void ResetMassData()
    content.vb: Public Sub ResetMassData
  overload: WaveEngine.Box2D.Box2DRigidBody.ResetMassData*
  implements:
  - WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Box2D.Box2DRigidBody.RegenerateBody
  commentId: M:WaveEngine.Box2D.Box2DRigidBody.RegenerateBody
  id: RegenerateBody
  parent: WaveEngine.Box2D.Box2DRigidBody
  langs:
  - csharp
  - vb
  name: RegenerateBody()
  nameWithType: Box2DRigidBody.RegenerateBody()
  fullName: WaveEngine.Box2D.Box2DRigidBody.RegenerateBody()
  type: Method
  source:
    id: RegenerateBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Body\Box2DRigidBody.cs
    startLine: 811
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nRegenerate body\n"
  example: []
  syntax:
    content: public void RegenerateBody()
    content.vb: Public Sub RegenerateBody
  overload: WaveEngine.Box2D.Box2DRigidBody.RegenerateBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Box2D
  commentId: N:WaveEngine.Box2D
  name: WaveEngine.Box2D
  nameWithType: WaveEngine.Box2D
  fullName: WaveEngine.Box2D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Physics2D.IRigidBody2D
  commentId: T:WaveEngine.Common.Physics2D.IRigidBody2D
  parent: WaveEngine.Common.Physics2D
  name: IRigidBody2D
  nameWithType: IRigidBody2D
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Box2D.Box2DRigidBody.Position*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Position
  name: Position
  nameWithType: Box2DRigidBody.Position
  fullName: WaveEngine.Box2D.Box2DRigidBody.Position
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Position
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Position
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Position
  nameWithType: IRigidBody2D.Position
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Position
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Box2D.Box2DRigidBody.Angle*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Angle
  name: Angle
  nameWithType: Box2DRigidBody.Angle
  fullName: WaveEngine.Box2D.Box2DRigidBody.Angle
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Angle
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Angle
  nameWithType: IRigidBody2D.Angle
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Angle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Box2D.Box2DRigidBody.LinearVelocity*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.LinearVelocity
  name: LinearVelocity
  nameWithType: Box2DRigidBody.LinearVelocity
  fullName: WaveEngine.Box2D.Box2DRigidBody.LinearVelocity
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: LinearVelocity
  nameWithType: IRigidBody2D.LinearVelocity
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LinearVelocity
- uid: WaveEngine.Box2D.Box2DRigidBody.AngularVelocity*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.AngularVelocity
  name: AngularVelocity
  nameWithType: Box2DRigidBody.AngularVelocity
  fullName: WaveEngine.Box2D.Box2DRigidBody.AngularVelocity
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: AngularVelocity
  nameWithType: IRigidBody2D.AngularVelocity
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AngularVelocity
- uid: WaveEngine.Box2D.Box2DRigidBody.LinearDamping*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.LinearDamping
  name: LinearDamping
  nameWithType: Box2DRigidBody.LinearDamping
  fullName: WaveEngine.Box2D.Box2DRigidBody.LinearDamping
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: LinearDamping
  nameWithType: IRigidBody2D.LinearDamping
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LinearDamping
- uid: WaveEngine.Box2D.Box2DRigidBody.AngularDamping*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.AngularDamping
  name: AngularDamping
  nameWithType: Box2DRigidBody.AngularDamping
  fullName: WaveEngine.Box2D.Box2DRigidBody.AngularDamping
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: AngularDamping
  nameWithType: IRigidBody2D.AngularDamping
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AngularDamping
- uid: WaveEngine.Box2D.Box2DRigidBody.AllowSleep*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.AllowSleep
  name: AllowSleep
  nameWithType: Box2DRigidBody.AllowSleep
  fullName: WaveEngine.Box2D.Box2DRigidBody.AllowSleep
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: AllowSleep
  nameWithType: IRigidBody2D.AllowSleep
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.AllowSleep
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Box2D.Box2DRigidBody.Awake*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Awake
  name: Awake
  nameWithType: Box2DRigidBody.Awake
  fullName: WaveEngine.Box2D.Box2DRigidBody.Awake
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Awake
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Awake
  nameWithType: IRigidBody2D.Awake
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Awake
- uid: WaveEngine.Box2D.Box2DRigidBody.FixedRotation*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.FixedRotation
  name: FixedRotation
  nameWithType: Box2DRigidBody.FixedRotation
  fullName: WaveEngine.Box2D.Box2DRigidBody.FixedRotation
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: FixedRotation
  nameWithType: IRigidBody2D.FixedRotation
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.FixedRotation
- uid: WaveEngine.Box2D.Box2DRigidBody.Bullet*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Bullet
  name: Bullet
  nameWithType: Box2DRigidBody.Bullet
  fullName: WaveEngine.Box2D.Box2DRigidBody.Bullet
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Bullet
  nameWithType: IRigidBody2D.Bullet
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Bullet
- uid: WaveEngine.Box2D.Box2DRigidBody.Active*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Active
  name: Active
  nameWithType: Box2DRigidBody.Active
  fullName: WaveEngine.Box2D.Box2DRigidBody.Active
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Active
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Active
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Active
  nameWithType: IRigidBody2D.Active
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Active
- uid: WaveEngine.Box2D.Box2DRigidBody.GravityScale*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GravityScale
  name: GravityScale
  nameWithType: Box2DRigidBody.GravityScale
  fullName: WaveEngine.Box2D.Box2DRigidBody.GravityScale
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GravityScale
  nameWithType: IRigidBody2D.GravityScale
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GravityScale
- uid: WaveEngine.Box2D.Box2DRigidBody.Type*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Type
  name: Type
  nameWithType: Box2DRigidBody.Type
  fullName: WaveEngine.Box2D.Box2DRigidBody.Type
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Type
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Type
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Type
  nameWithType: IRigidBody2D.Type
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Type
- uid: WaveEngine.Common.Physics2D.RigidBodyType2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyType2D
  parent: WaveEngine.Common.Physics2D
  name: RigidBodyType2D
  nameWithType: RigidBodyType2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyType2D
- uid: WaveEngine.Box2D.Box2DRigidBody.UserData*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.UserData
  name: UserData
  nameWithType: Box2DRigidBody.UserData
  fullName: WaveEngine.Box2D.Box2DRigidBody.UserData
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.UserData
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: UserData
  nameWithType: IRigidBody2D.UserData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.UserData
- uid: WaveEngine.Box2D.Box2DRigidBody.WorldCenter*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.WorldCenter
  name: WorldCenter
  nameWithType: Box2DRigidBody.WorldCenter
  fullName: WaveEngine.Box2D.Box2DRigidBody.WorldCenter
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: WorldCenter
  nameWithType: IRigidBody2D.WorldCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.WorldCenter
- uid: WaveEngine.Box2D.Box2DRigidBody.LocalCenter*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.LocalCenter
  name: LocalCenter
  nameWithType: Box2DRigidBody.LocalCenter
  fullName: WaveEngine.Box2D.Box2DRigidBody.LocalCenter
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: LocalCenter
  nameWithType: IRigidBody2D.LocalCenter
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.LocalCenter
- uid: WaveEngine.Box2D.Box2DRigidBody.ColliderList*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.ColliderList
  name: ColliderList
  nameWithType: Box2DRigidBody.ColliderList
  fullName: WaveEngine.Box2D.Box2DRigidBody.ColliderList
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: ColliderList
  nameWithType: IRigidBody2D.ColliderList
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ColliderList
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics2D.ICollider2D}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics2D.ICollider2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ICollider2D>
  nameWithType: IEnumerable<ICollider2D>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Physics2D.ICollider2D>
  nameWithType.vb: IEnumerable(Of ICollider2D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Physics2D.ICollider2D)
  name.vb: IEnumerable(Of ICollider2D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Physics2D.ICollider2D
    name: ICollider2D
    nameWithType: ICollider2D
    fullName: WaveEngine.Common.Physics2D.ICollider2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Physics2D.ICollider2D
    name: ICollider2D
    nameWithType: ICollider2D
    fullName: WaveEngine.Common.Physics2D.ICollider2D
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Box2D.Box2DRigidBody.Mass*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Mass
  name: Mass
  nameWithType: Box2DRigidBody.Mass
  fullName: WaveEngine.Box2D.Box2DRigidBody.Mass
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Mass
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Mass
  nameWithType: IRigidBody2D.Mass
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Mass
- uid: WaveEngine.Box2D.Box2DRigidBody.Inertia*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.Inertia
  name: Inertia
  nameWithType: Box2DRigidBody.Inertia
  fullName: WaveEngine.Box2D.Box2DRigidBody.Inertia
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: Inertia
  nameWithType: IRigidBody2D.Inertia
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.Inertia
- uid: WaveEngine.Box2D.Box2DRigidBody.MassData*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.MassData
  name: MassData
  nameWithType: Box2DRigidBody.MassData
  fullName: WaveEngine.Box2D.Box2DRigidBody.MassData
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  commentId: P:WaveEngine.Common.Physics2D.IRigidBody2D.MassData
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: MassData
  nameWithType: IRigidBody2D.MassData
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.MassData
- uid: WaveEngine.Common.Physics2D.RigidBodyMassData2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyMassData2D
  parent: WaveEngine.Common.Physics2D
  name: RigidBodyMassData2D
  nameWithType: RigidBodyMassData2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyMassData2D
- uid: WaveEngine.Box2D.Box2DRigidBody.IsDestroyed*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.IsDestroyed
  name: IsDestroyed
  nameWithType: Box2DRigidBody.IsDestroyed
  fullName: WaveEngine.Box2D.Box2DRigidBody.IsDestroyed
- uid: WaveEngine.Box2D.Box2DRigidBody
  commentId: T:WaveEngine.Box2D.Box2DRigidBody
  parent: WaveEngine.Box2D
  name: Box2DRigidBody
  nameWithType: Box2DRigidBody
  fullName: WaveEngine.Box2D.Box2DRigidBody
- uid: WaveEngine.Box2D.Box2DRigidBody.#ctor*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.#ctor
  name: Box2DRigidBody
  nameWithType: Box2DRigidBody.Box2DRigidBody
  fullName: WaveEngine.Box2D.Box2DRigidBody.Box2DRigidBody
- uid: WaveEngine.Box2D.Box2DSimulation
  commentId: T:WaveEngine.Box2D.Box2DSimulation
  parent: WaveEngine.Box2D
  name: Box2DSimulation
  nameWithType: Box2DSimulation
  fullName: WaveEngine.Box2D.Box2DSimulation
- uid: WaveEngine.Common.Physics2D.RigidBodyDef2D
  commentId: T:WaveEngine.Common.Physics2D.RigidBodyDef2D
  parent: WaveEngine.Common.Physics2D
  name: RigidBodyDef2D
  nameWithType: RigidBodyDef2D
  fullName: WaveEngine.Common.Physics2D.RigidBodyDef2D
- uid: WaveEngine.Box2D.Box2DRigidBody.SetTransform*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.SetTransform
  name: SetTransform
  nameWithType: Box2DRigidBody.SetTransform
  fullName: WaveEngine.Box2D.Box2DRigidBody.SetTransform
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  isExternal: true
  name: SetTransform(Vector2, Single)
  nameWithType: IRigidBody2D.SetTransform(Vector2, Single)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2, System.Single)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
    name: SetTransform
    nameWithType: IRigidBody2D.SetTransform
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform(WaveEngine.Common.Math.Vector2,System.Single)
    name: SetTransform
    nameWithType: IRigidBody2D.SetTransform
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.SetTransform
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyForce*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.ApplyForce
  name: ApplyForce
  nameWithType: Box2DRigidBody.ApplyForce
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyForce
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  isExternal: true
  name: ApplyForce(Vector2, Vector2, Boolean)
  nameWithType: IRigidBody2D.ApplyForce(Vector2, Vector2, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
    name: ApplyForce
    nameWithType: IRigidBody2D.ApplyForce
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
    name: ApplyForce
    nameWithType: IRigidBody2D.ApplyForce
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForce
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter
  name: ApplyForceToCenter
  nameWithType: Box2DRigidBody.ApplyForceToCenter
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyForceToCenter
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  isExternal: true
  name: ApplyForceToCenter(Vector2, Boolean)
  nameWithType: IRigidBody2D.ApplyForceToCenter(Vector2, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
    name: ApplyForceToCenter
    nameWithType: IRigidBody2D.ApplyForceToCenter
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter(WaveEngine.Common.Math.Vector2,System.Boolean)
    name: ApplyForceToCenter
    nameWithType: IRigidBody2D.ApplyForceToCenter
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyForceToCenter
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse
  name: ApplyLinearImpulse
  nameWithType: Box2DRigidBody.ApplyLinearImpulse
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyLinearImpulse
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  isExternal: true
  name: ApplyLinearImpulse(Vector2, Vector2, Boolean)
  nameWithType: IRigidBody2D.ApplyLinearImpulse(Vector2, Vector2, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2, WaveEngine.Common.Math.Vector2, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
    name: ApplyLinearImpulse
    nameWithType: IRigidBody2D.ApplyLinearImpulse
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse(WaveEngine.Common.Math.Vector2,WaveEngine.Common.Math.Vector2,System.Boolean)
    name: ApplyLinearImpulse
    nameWithType: IRigidBody2D.ApplyLinearImpulse
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyLinearImpulse
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.ApplyTorque*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.ApplyTorque
  name: ApplyTorque
  nameWithType: Box2DRigidBody.ApplyTorque
  fullName: WaveEngine.Box2D.Box2DRigidBody.ApplyTorque
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  isExternal: true
  name: ApplyTorque(Single, Boolean)
  nameWithType: IRigidBody2D.ApplyTorque(Single, Boolean)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single, System.Boolean)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
    name: ApplyTorque
    nameWithType: IRigidBody2D.ApplyTorque
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque(System.Single,System.Boolean)
    name: ApplyTorque
    nameWithType: IRigidBody2D.ApplyTorque
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ApplyTorque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.CreateCollider*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.CreateCollider
  name: CreateCollider
  nameWithType: Box2DRigidBody.CreateCollider
  fullName: WaveEngine.Box2D.Box2DRigidBody.CreateCollider
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: CreateCollider(ColliderDef2D)
  nameWithType: IRigidBody2D.CreateCollider(ColliderDef2D)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
    name: CreateCollider
    nameWithType: IRigidBody2D.CreateCollider
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics2D.ColliderDef2D
    name: ColliderDef2D
    nameWithType: ColliderDef2D
    fullName: WaveEngine.Common.Physics2D.ColliderDef2D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider(WaveEngine.Common.Physics2D.ColliderDef2D)
    name: CreateCollider
    nameWithType: IRigidBody2D.CreateCollider
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.CreateCollider
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics2D.ColliderDef2D
    name: ColliderDef2D
    nameWithType: ColliderDef2D
    fullName: WaveEngine.Common.Physics2D.ColliderDef2D
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Physics2D.ColliderDef2D
  commentId: T:WaveEngine.Common.Physics2D.ColliderDef2D
  parent: WaveEngine.Common.Physics2D
  name: ColliderDef2D
  nameWithType: ColliderDef2D
  fullName: WaveEngine.Common.Physics2D.ColliderDef2D
- uid: WaveEngine.Common.Physics2D.ICollider2D
  commentId: T:WaveEngine.Common.Physics2D.ICollider2D
  parent: WaveEngine.Common.Physics2D
  name: ICollider2D
  nameWithType: ICollider2D
  fullName: WaveEngine.Common.Physics2D.ICollider2D
- uid: WaveEngine.Box2D.Box2DRigidBody.DestroyCollider*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.DestroyCollider
  name: DestroyCollider
  nameWithType: Box2DRigidBody.DestroyCollider
  fullName: WaveEngine.Box2D.Box2DRigidBody.DestroyCollider
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: DestroyCollider(ICollider2D)
  nameWithType: IRigidBody2D.DestroyCollider(ICollider2D)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
    name: DestroyCollider
    nameWithType: IRigidBody2D.DestroyCollider
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics2D.ICollider2D
    name: ICollider2D
    nameWithType: ICollider2D
    fullName: WaveEngine.Common.Physics2D.ICollider2D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider(WaveEngine.Common.Physics2D.ICollider2D)
    name: DestroyCollider
    nameWithType: IRigidBody2D.DestroyCollider
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.DestroyCollider
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics2D.ICollider2D
    name: ICollider2D
    nameWithType: ICollider2D
    fullName: WaveEngine.Common.Physics2D.ICollider2D
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint
  name: GetLinearVelocityFromLocalPoint
  nameWithType: Box2DRigidBody.GetLinearVelocityFromLocalPoint
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromLocalPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GetLinearVelocityFromLocalPoint(Vector2)
  nameWithType: IRigidBody2D.GetLinearVelocityFromLocalPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
    name: GetLinearVelocityFromLocalPoint
    nameWithType: IRigidBody2D.GetLinearVelocityFromLocalPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint(WaveEngine.Common.Math.Vector2)
    name: GetLinearVelocityFromLocalPoint
    nameWithType: IRigidBody2D.GetLinearVelocityFromLocalPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromLocalPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint
  name: GetLinearVelocityFromWorldPoint
  nameWithType: Box2DRigidBody.GetLinearVelocityFromWorldPoint
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLinearVelocityFromWorldPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GetLinearVelocityFromWorldPoint(Vector2)
  nameWithType: IRigidBody2D.GetLinearVelocityFromWorldPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
    name: GetLinearVelocityFromWorldPoint
    nameWithType: IRigidBody2D.GetLinearVelocityFromWorldPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint(WaveEngine.Common.Math.Vector2)
    name: GetLinearVelocityFromWorldPoint
    nameWithType: IRigidBody2D.GetLinearVelocityFromWorldPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLinearVelocityFromWorldPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint
  name: GetLocalPoint
  nameWithType: Box2DRigidBody.GetLocalPoint
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLocalPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GetLocalPoint(Vector2)
  nameWithType: IRigidBody2D.GetLocalPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
    name: GetLocalPoint
    nameWithType: IRigidBody2D.GetLocalPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint(WaveEngine.Common.Math.Vector2)
    name: GetLocalPoint
    nameWithType: IRigidBody2D.GetLocalPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.GetLocalVector*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GetLocalVector
  name: GetLocalVector
  nameWithType: Box2DRigidBody.GetLocalVector
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetLocalVector
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GetLocalVector(Vector2)
  nameWithType: IRigidBody2D.GetLocalVector(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
    name: GetLocalVector
    nameWithType: IRigidBody2D.GetLocalVector
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector(WaveEngine.Common.Math.Vector2)
    name: GetLocalVector
    nameWithType: IRigidBody2D.GetLocalVector
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetLocalVector
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint
  name: GetWorldPoint
  nameWithType: Box2DRigidBody.GetWorldPoint
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetWorldPoint
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GetWorldPoint(Vector2)
  nameWithType: IRigidBody2D.GetWorldPoint(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
    name: GetWorldPoint
    nameWithType: IRigidBody2D.GetWorldPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint(WaveEngine.Common.Math.Vector2)
    name: GetWorldPoint
    nameWithType: IRigidBody2D.GetWorldPoint
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.GetWorldVector*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.GetWorldVector
  name: GetWorldVector
  nameWithType: Box2DRigidBody.GetWorldVector
  fullName: WaveEngine.Box2D.Box2DRigidBody.GetWorldVector
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: GetWorldVector(Vector2)
  nameWithType: IRigidBody2D.GetWorldVector(Vector2)
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
    name: GetWorldVector
    nameWithType: IRigidBody2D.GetWorldVector
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector(WaveEngine.Common.Math.Vector2)
    name: GetWorldVector
    nameWithType: IRigidBody2D.GetWorldVector
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.GetWorldVector
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.ResetMassData*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.ResetMassData
  name: ResetMassData
  nameWithType: Box2DRigidBody.ResetMassData
  fullName: WaveEngine.Box2D.Box2DRigidBody.ResetMassData
- uid: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  commentId: M:WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  parent: WaveEngine.Common.Physics2D.IRigidBody2D
  name: ResetMassData()
  nameWithType: IRigidBody2D.ResetMassData()
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData()
  spec.csharp:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
    name: ResetMassData
    nameWithType: IRigidBody2D.ResetMassData
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
    name: ResetMassData
    nameWithType: IRigidBody2D.ResetMassData
    fullName: WaveEngine.Common.Physics2D.IRigidBody2D.ResetMassData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DRigidBody.RegenerateBody*
  commentId: Overload:WaveEngine.Box2D.Box2DRigidBody.RegenerateBody
  name: RegenerateBody
  nameWithType: Box2DRigidBody.RegenerateBody
  fullName: WaveEngine.Box2D.Box2DRigidBody.RegenerateBody
