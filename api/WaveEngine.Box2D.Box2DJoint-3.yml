### YamlMime:ManagedReference
items:
- uid: WaveEngine.Box2D.Box2DJoint`3
  commentId: T:WaveEngine.Box2D.Box2DJoint`3
  id: Box2DJoint`3
  parent: WaveEngine.Box2D
  children:
  - WaveEngine.Box2D.Box2DJoint`3.#ctor(WaveEngine.Box2D.Box2DSimulation,`1)
  - WaveEngine.Box2D.Box2DJoint`3.BodyA
  - WaveEngine.Box2D.Box2DJoint`3.BodyB
  - WaveEngine.Box2D.Box2DJoint`3.BreakPoint
  - WaveEngine.Box2D.Box2DJoint`3.CheckJointIntegrity
  - WaveEngine.Box2D.Box2DJoint`3.CreateBox2DJoint(`2)
  - WaveEngine.Box2D.Box2DJoint`3.def
  - WaveEngine.Box2D.Box2DJoint`3.DestroyJoint
  - WaveEngine.Box2D.Box2DJoint`3.FillJointDefinition(`2)
  - WaveEngine.Box2D.Box2DJoint`3.InternalJoint
  - WaveEngine.Box2D.Box2DJoint`3.IsActive
  - WaveEngine.Box2D.Box2DJoint`3.LocalAnchorA
  - WaveEngine.Box2D.Box2DJoint`3.LocalAnchorB
  - WaveEngine.Box2D.Box2DJoint`3.ReactionForce
  - WaveEngine.Box2D.Box2DJoint`3.ReactionTorque
  - WaveEngine.Box2D.Box2DJoint`3.RegenerateJoint
  langs:
  - csharp
  - vb
  name: Box2DJoint<T, K, L>
  nameWithType: Box2DJoint<T, K, L>
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>
  type: Class
  source:
    id: Box2DJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 19
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nBase implementation of Box2D Joint\n"
  example: []
  syntax:
    content: 'public abstract class Box2DJoint<T, K, L> : Box2DJoint, IJoint2D where T : b2Joint where K : JointDef2D where L : b2JointDef'
    typeParameters:
    - id: T
      description: The Box2D joint type
    - id: K
      description: The interface joint definition type
    - id: L
      description: The Box2D joint definition type
    content.vb: >-
      Public MustInherit Class Box2DJoint(Of T As b2Joint, K As JointDef2D, L As b2JointDef)

          Inherits Box2DJoint

          Implements IJoint2D
  inheritance:
  - System.Object
  - WaveEngine.Box2D.Box2DJoint
  derivedClasses:
  - WaveEngine.Box2D.Box2DDistanceJoint
  - WaveEngine.Box2D.Box2DMouseJoint
  - WaveEngine.Box2D.Box2DPrismaticJoint
  - WaveEngine.Box2D.Box2DRevoluteJoint
  - WaveEngine.Box2D.Box2DRopeJoint
  - WaveEngine.Box2D.Box2DWeldJoint
  - WaveEngine.Box2D.Box2DWheelJoint
  implements:
  - WaveEngine.Common.Physics2D.IJoint2D
  inheritedMembers:
  - WaveEngine.Box2D.Box2DJoint.simulation
  - WaveEngine.Box2D.Box2DJoint.isDestroyed
  - WaveEngine.Box2D.Box2DJoint.OnBroke
  - WaveEngine.Box2D.Box2DJoint.IsDestroyed
  - WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent(System.Single)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  nameWithType.vb: Box2DJoint(Of T, K, L)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L)
  name.vb: Box2DJoint(Of T, K, L)
- uid: WaveEngine.Box2D.Box2DJoint`3.def
  commentId: F:WaveEngine.Box2D.Box2DJoint`3.def
  id: def
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: def
  nameWithType: Box2DJoint<T, K, L>.def
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.def
  type: Field
  source:
    id: def
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 42
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nThe interface joint definition\n"
  example: []
  syntax:
    content: protected K def
    return:
      type: '{K}'
    content.vb: Protected def As K
  nameWithType.vb: Box2DJoint(Of T, K, L).def
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).def
- uid: WaveEngine.Box2D.Box2DJoint`3.InternalJoint
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.InternalJoint
  id: InternalJoint
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: InternalJoint
  nameWithType: Box2DJoint<T, K, L>.InternalJoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.InternalJoint
  type: Property
  source:
    id: InternalJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 49
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the Box2D internal joint\n"
  example: []
  syntax:
    content: public override object InternalJoint { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overrides ReadOnly Property InternalJoint As Object
  overridden: WaveEngine.Box2D.Box2DJoint.InternalJoint
  overload: WaveEngine.Box2D.Box2DJoint`3.InternalJoint*
  nameWithType.vb: Box2DJoint(Of T, K, L).InternalJoint
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).InternalJoint
- uid: WaveEngine.Box2D.Box2DJoint`3.BodyA
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.BodyA
  id: BodyA
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: BodyA
  nameWithType: Box2DJoint<T, K, L>.BodyA
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.BodyA
  type: Property
  source:
    id: BodyA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 60
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the first body attached to this joint\n"
  example: []
  syntax:
    content: public override IRigidBody2D BodyA { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.IRigidBody2D
    content.vb: Public Overrides ReadOnly Property BodyA As IRigidBody2D
  overridden: WaveEngine.Box2D.Box2DJoint.BodyA
  overload: WaveEngine.Box2D.Box2DJoint`3.BodyA*
  nameWithType.vb: Box2DJoint(Of T, K, L).BodyA
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).BodyA
- uid: WaveEngine.Box2D.Box2DJoint`3.BodyB
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.BodyB
  id: BodyB
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: BodyB
  nameWithType: Box2DJoint<T, K, L>.BodyB
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.BodyB
  type: Property
  source:
    id: BodyB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 71
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the second body attached to this joint\n"
  example: []
  syntax:
    content: public override IRigidBody2D BodyB { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.IRigidBody2D
    content.vb: Public Overrides ReadOnly Property BodyB As IRigidBody2D
  overridden: WaveEngine.Box2D.Box2DJoint.BodyB
  overload: WaveEngine.Box2D.Box2DJoint`3.BodyB*
  nameWithType.vb: Box2DJoint(Of T, K, L).BodyB
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).BodyB
- uid: WaveEngine.Box2D.Box2DJoint`3.LocalAnchorA
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.LocalAnchorA
  id: LocalAnchorA
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: LocalAnchorA
  nameWithType: Box2DJoint<T, K, L>.LocalAnchorA
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.LocalAnchorA
  type: Property
  source:
    id: LocalAnchorA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 82
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the local anchor point relative to bodyA&apos;s origin.\n"
  example: []
  syntax:
    content: public override Vector2 LocalAnchorA { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Overrides ReadOnly Property LocalAnchorA As Vector2
  overridden: WaveEngine.Box2D.Box2DJoint.LocalAnchorA
  overload: WaveEngine.Box2D.Box2DJoint`3.LocalAnchorA*
  nameWithType.vb: Box2DJoint(Of T, K, L).LocalAnchorA
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).LocalAnchorA
- uid: WaveEngine.Box2D.Box2DJoint`3.LocalAnchorB
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.LocalAnchorB
  id: LocalAnchorB
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: LocalAnchorB
  nameWithType: Box2DJoint<T, K, L>.LocalAnchorB
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.LocalAnchorB
  type: Property
  source:
    id: LocalAnchorB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 93
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the local anchor point relative to bodyA&apos;s origin.\n"
  example: []
  syntax:
    content: public override Vector2 LocalAnchorB { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Overrides ReadOnly Property LocalAnchorB As Vector2
  overridden: WaveEngine.Box2D.Box2DJoint.LocalAnchorB
  overload: WaveEngine.Box2D.Box2DJoint`3.LocalAnchorB*
  nameWithType.vb: Box2DJoint(Of T, K, L).LocalAnchorB
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).LocalAnchorB
- uid: WaveEngine.Box2D.Box2DJoint`3.ReactionForce
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.ReactionForce
  id: ReactionForce
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: ReactionForce
  nameWithType: Box2DJoint<T, K, L>.ReactionForce
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.ReactionForce
  type: Property
  source:
    id: ReactionForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 104
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the reaction force on bodyB at the joint anchor in Newtons.\n"
  example: []
  syntax:
    content: public override Vector2 ReactionForce { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Overrides ReadOnly Property ReactionForce As Vector2
  overridden: WaveEngine.Box2D.Box2DJoint.ReactionForce
  overload: WaveEngine.Box2D.Box2DJoint`3.ReactionForce*
  nameWithType.vb: Box2DJoint(Of T, K, L).ReactionForce
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).ReactionForce
- uid: WaveEngine.Box2D.Box2DJoint`3.ReactionTorque
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.ReactionTorque
  id: ReactionTorque
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: ReactionTorque
  nameWithType: Box2DJoint<T, K, L>.ReactionTorque
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.ReactionTorque
  type: Property
  source:
    id: ReactionTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 122
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets the reaction torque on bodyB in N*m.\n"
  example: []
  syntax:
    content: public override float ReactionTorque { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides ReadOnly Property ReactionTorque As Single
  overridden: WaveEngine.Box2D.Box2DJoint.ReactionTorque
  overload: WaveEngine.Box2D.Box2DJoint`3.ReactionTorque*
  nameWithType.vb: Box2DJoint(Of T, K, L).ReactionTorque
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).ReactionTorque
- uid: WaveEngine.Box2D.Box2DJoint`3.IsActive
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.IsActive
  id: IsActive
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: Box2DJoint<T, K, L>.IsActive
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.IsActive
  type: Property
  source:
    id: IsActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 140
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets a value indicating whether this joint is enabled\n"
  example: []
  syntax:
    content: public override bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property IsActive As Boolean
  overridden: WaveEngine.Box2D.Box2DJoint.IsActive
  overload: WaveEngine.Box2D.Box2DJoint`3.IsActive*
  nameWithType.vb: Box2DJoint(Of T, K, L).IsActive
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).IsActive
- uid: WaveEngine.Box2D.Box2DJoint`3.BreakPoint
  commentId: P:WaveEngine.Box2D.Box2DJoint`3.BreakPoint
  id: BreakPoint
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: BreakPoint
  nameWithType: Box2DJoint<T, K, L>.BreakPoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.BreakPoint
  type: Property
  source:
    id: BreakPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 170
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nGets or sets the amount offorce that a joint can take before break.\n"
  example: []
  syntax:
    content: public override float BreakPoint { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides Property BreakPoint As Single
  overridden: WaveEngine.Box2D.Box2DJoint.BreakPoint
  overload: WaveEngine.Box2D.Box2DJoint`3.BreakPoint*
  nameWithType.vb: Box2DJoint(Of T, K, L).BreakPoint
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).BreakPoint
- uid: WaveEngine.Box2D.Box2DJoint`3.#ctor(WaveEngine.Box2D.Box2DSimulation,`1)
  commentId: M:WaveEngine.Box2D.Box2DJoint`3.#ctor(WaveEngine.Box2D.Box2DSimulation,`1)
  id: '#ctor(WaveEngine.Box2D.Box2DSimulation,`1)'
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: Box2DJoint(Box2DSimulation, K)
  nameWithType: Box2DJoint<T, K, L>.Box2DJoint(Box2DSimulation, K)
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.Box2DJoint(WaveEngine.Box2D.Box2DSimulation, K)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 205
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Box2D.Box2DJoint%603\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Box2DJoint(Box2DSimulation simulation, K def)
    parameters:
    - id: simulation
      type: WaveEngine.Box2D.Box2DSimulation
      description: The box2D simulation instance
    - id: def
      type: '{K}'
      description: The Joint definition
    content.vb: Public Sub New(simulation As Box2DSimulation, def As K)
  overload: WaveEngine.Box2D.Box2DJoint`3.#ctor*
  nameWithType.vb: Box2DJoint(Of T, K, L).Box2DJoint(Box2DSimulation, K)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).Box2DJoint(WaveEngine.Box2D.Box2DSimulation, K)
- uid: WaveEngine.Box2D.Box2DJoint`3.FillJointDefinition(`2)
  commentId: M:WaveEngine.Box2D.Box2DJoint`3.FillJointDefinition(`2)
  id: FillJointDefinition(`2)
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: FillJointDefinition(L)
  nameWithType: Box2DJoint<T, K, L>.FillJointDefinition(L)
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.FillJointDefinition(L)
  type: Method
  source:
    id: FillJointDefinition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 234
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nFill the box2D definition\n"
  example: []
  syntax:
    content: protected virtual void FillJointDefinition(L b2Def)
    parameters:
    - id: b2Def
      type: '{L}'
      description: The Box2D joint definition
    content.vb: Protected Overridable Sub FillJointDefinition(b2Def As L)
  overload: WaveEngine.Box2D.Box2DJoint`3.FillJointDefinition*
  nameWithType.vb: Box2DJoint(Of T, K, L).FillJointDefinition(L)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).FillJointDefinition(L)
- uid: WaveEngine.Box2D.Box2DJoint`3.CreateBox2DJoint(`2)
  commentId: M:WaveEngine.Box2D.Box2DJoint`3.CreateBox2DJoint(`2)
  id: CreateBox2DJoint(`2)
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: CreateBox2DJoint(L)
  nameWithType: Box2DJoint<T, K, L>.CreateBox2DJoint(L)
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.CreateBox2DJoint(L)
  type: Method
  source:
    id: CreateBox2DJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 249
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nCreate the Box2D joint\n"
  example: []
  syntax:
    content: protected virtual void CreateBox2DJoint(L b2Def)
    parameters:
    - id: b2Def
      type: '{L}'
      description: The Box2D joint definition
    content.vb: Protected Overridable Sub CreateBox2DJoint(b2Def As L)
  overload: WaveEngine.Box2D.Box2DJoint`3.CreateBox2DJoint*
  nameWithType.vb: Box2DJoint(Of T, K, L).CreateBox2DJoint(L)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).CreateBox2DJoint(L)
- uid: WaveEngine.Box2D.Box2DJoint`3.DestroyJoint
  commentId: M:WaveEngine.Box2D.Box2DJoint`3.DestroyJoint
  id: DestroyJoint
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: DestroyJoint()
  nameWithType: Box2DJoint<T, K, L>.DestroyJoint()
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.DestroyJoint()
  type: Method
  source:
    id: DestroyJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 263
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nDestroy the box2D joint\n"
  example: []
  syntax:
    content: public override void DestroyJoint()
    content.vb: Public Overrides Sub DestroyJoint
  overridden: WaveEngine.Box2D.Box2DJoint.DestroyJoint
  overload: WaveEngine.Box2D.Box2DJoint`3.DestroyJoint*
  nameWithType.vb: Box2DJoint(Of T, K, L).DestroyJoint()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).DestroyJoint()
- uid: WaveEngine.Box2D.Box2DJoint`3.RegenerateJoint
  commentId: M:WaveEngine.Box2D.Box2DJoint`3.RegenerateJoint
  id: RegenerateJoint
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: RegenerateJoint()
  nameWithType: Box2DJoint<T, K, L>.RegenerateJoint()
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.RegenerateJoint()
  type: Method
  source:
    id: RegenerateJoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 289
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nCreate the joint\n"
  example: []
  syntax:
    content: public override void RegenerateJoint()
    content.vb: Public Overrides Sub RegenerateJoint
  overridden: WaveEngine.Box2D.Box2DJoint.RegenerateJoint
  overload: WaveEngine.Box2D.Box2DJoint`3.RegenerateJoint*
  nameWithType.vb: Box2DJoint(Of T, K, L).RegenerateJoint()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).RegenerateJoint()
- uid: WaveEngine.Box2D.Box2DJoint`3.CheckJointIntegrity
  commentId: M:WaveEngine.Box2D.Box2DJoint`3.CheckJointIntegrity
  id: CheckJointIntegrity
  parent: WaveEngine.Box2D.Box2DJoint`3
  langs:
  - csharp
  - vb
  name: CheckJointIntegrity()
  nameWithType: Box2DJoint<T, K, L>.CheckJointIntegrity()
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.CheckJointIntegrity()
  type: Method
  source:
    id: CheckJointIntegrity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Box2D\Shared\Joints\Box2DJoint`3.cs
    startLine: 300
  assemblies:
  - WaveEngine.Box2D
  namespace: WaveEngine.Box2D
  summary: "\nChecks the joint integrity\n"
  example: []
  syntax:
    content: public override void CheckJointIntegrity()
    content.vb: Public Overrides Sub CheckJointIntegrity
  overridden: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
  overload: WaveEngine.Box2D.Box2DJoint`3.CheckJointIntegrity*
  nameWithType.vb: Box2DJoint(Of T, K, L).CheckJointIntegrity()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).CheckJointIntegrity()
references:
- uid: WaveEngine.Box2D
  commentId: N:WaveEngine.Box2D
  name: WaveEngine.Box2D
  nameWithType: WaveEngine.Box2D
  fullName: WaveEngine.Box2D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Box2D.Box2DJoint
  commentId: T:WaveEngine.Box2D.Box2DJoint
  parent: WaveEngine.Box2D
  name: Box2DJoint
  nameWithType: Box2DJoint
  fullName: WaveEngine.Box2D.Box2DJoint
- uid: WaveEngine.Common.Physics2D.IJoint2D
  commentId: T:WaveEngine.Common.Physics2D.IJoint2D
  parent: WaveEngine.Common.Physics2D
  name: IJoint2D
  nameWithType: IJoint2D
  fullName: WaveEngine.Common.Physics2D.IJoint2D
- uid: WaveEngine.Box2D.Box2DJoint.simulation
  commentId: F:WaveEngine.Box2D.Box2DJoint.simulation
  parent: WaveEngine.Box2D.Box2DJoint
  name: simulation
  nameWithType: Box2DJoint.simulation
  fullName: WaveEngine.Box2D.Box2DJoint.simulation
- uid: WaveEngine.Box2D.Box2DJoint.isDestroyed
  commentId: F:WaveEngine.Box2D.Box2DJoint.isDestroyed
  parent: WaveEngine.Box2D.Box2DJoint
  name: isDestroyed
  nameWithType: Box2DJoint.isDestroyed
  fullName: WaveEngine.Box2D.Box2DJoint.isDestroyed
- uid: WaveEngine.Box2D.Box2DJoint.OnBroke
  commentId: E:WaveEngine.Box2D.Box2DJoint.OnBroke
  parent: WaveEngine.Box2D.Box2DJoint
  name: OnBroke
  nameWithType: Box2DJoint.OnBroke
  fullName: WaveEngine.Box2D.Box2DJoint.OnBroke
- uid: WaveEngine.Box2D.Box2DJoint.IsDestroyed
  commentId: P:WaveEngine.Box2D.Box2DJoint.IsDestroyed
  parent: WaveEngine.Box2D.Box2DJoint
  name: IsDestroyed
  nameWithType: Box2DJoint.IsDestroyed
  fullName: WaveEngine.Box2D.Box2DJoint.IsDestroyed
- uid: WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent(System.Single)
  commentId: M:WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent(System.Single)
  parent: WaveEngine.Box2D.Box2DJoint
  isExternal: true
  name: FireOnBrokeEvent(Single)
  nameWithType: Box2DJoint.FireOnBrokeEvent(Single)
  fullName: WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent(System.Single)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent(System.Single)
    name: FireOnBrokeEvent
    nameWithType: Box2DJoint.FireOnBrokeEvent
    fullName: WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent(System.Single)
    name: FireOnBrokeEvent
    nameWithType: Box2DJoint.FireOnBrokeEvent
    fullName: WaveEngine.Box2D.Box2DJoint.FireOnBrokeEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: WaveEngine.Box2D.Box2DJoint.InternalJoint
  commentId: P:WaveEngine.Box2D.Box2DJoint.InternalJoint
  parent: WaveEngine.Box2D.Box2DJoint
  name: InternalJoint
  nameWithType: Box2DJoint.InternalJoint
  fullName: WaveEngine.Box2D.Box2DJoint.InternalJoint
- uid: WaveEngine.Box2D.Box2DJoint`3.InternalJoint*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.InternalJoint
  name: InternalJoint
  nameWithType: Box2DJoint<T, K, L>.InternalJoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.InternalJoint
  nameWithType.vb: Box2DJoint(Of T, K, L).InternalJoint
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).InternalJoint
- uid: WaveEngine.Box2D.Box2DJoint.BodyA
  commentId: P:WaveEngine.Box2D.Box2DJoint.BodyA
  parent: WaveEngine.Box2D.Box2DJoint
  name: BodyA
  nameWithType: Box2DJoint.BodyA
  fullName: WaveEngine.Box2D.Box2DJoint.BodyA
- uid: WaveEngine.Box2D.Box2DJoint`3.BodyA*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.BodyA
  name: BodyA
  nameWithType: Box2DJoint<T, K, L>.BodyA
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.BodyA
  nameWithType.vb: Box2DJoint(Of T, K, L).BodyA
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).BodyA
- uid: WaveEngine.Common.Physics2D.IRigidBody2D
  commentId: T:WaveEngine.Common.Physics2D.IRigidBody2D
  parent: WaveEngine.Common.Physics2D
  name: IRigidBody2D
  nameWithType: IRigidBody2D
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D
- uid: WaveEngine.Box2D.Box2DJoint.BodyB
  commentId: P:WaveEngine.Box2D.Box2DJoint.BodyB
  parent: WaveEngine.Box2D.Box2DJoint
  name: BodyB
  nameWithType: Box2DJoint.BodyB
  fullName: WaveEngine.Box2D.Box2DJoint.BodyB
- uid: WaveEngine.Box2D.Box2DJoint`3.BodyB*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.BodyB
  name: BodyB
  nameWithType: Box2DJoint<T, K, L>.BodyB
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.BodyB
  nameWithType.vb: Box2DJoint(Of T, K, L).BodyB
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).BodyB
- uid: WaveEngine.Box2D.Box2DJoint.LocalAnchorA
  commentId: P:WaveEngine.Box2D.Box2DJoint.LocalAnchorA
  parent: WaveEngine.Box2D.Box2DJoint
  name: LocalAnchorA
  nameWithType: Box2DJoint.LocalAnchorA
  fullName: WaveEngine.Box2D.Box2DJoint.LocalAnchorA
- uid: WaveEngine.Box2D.Box2DJoint`3.LocalAnchorA*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.LocalAnchorA
  name: LocalAnchorA
  nameWithType: Box2DJoint<T, K, L>.LocalAnchorA
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.LocalAnchorA
  nameWithType.vb: Box2DJoint(Of T, K, L).LocalAnchorA
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).LocalAnchorA
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Box2D.Box2DJoint.LocalAnchorB
  commentId: P:WaveEngine.Box2D.Box2DJoint.LocalAnchorB
  parent: WaveEngine.Box2D.Box2DJoint
  name: LocalAnchorB
  nameWithType: Box2DJoint.LocalAnchorB
  fullName: WaveEngine.Box2D.Box2DJoint.LocalAnchorB
- uid: WaveEngine.Box2D.Box2DJoint`3.LocalAnchorB*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.LocalAnchorB
  name: LocalAnchorB
  nameWithType: Box2DJoint<T, K, L>.LocalAnchorB
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.LocalAnchorB
  nameWithType.vb: Box2DJoint(Of T, K, L).LocalAnchorB
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).LocalAnchorB
- uid: WaveEngine.Box2D.Box2DJoint.ReactionForce
  commentId: P:WaveEngine.Box2D.Box2DJoint.ReactionForce
  parent: WaveEngine.Box2D.Box2DJoint
  name: ReactionForce
  nameWithType: Box2DJoint.ReactionForce
  fullName: WaveEngine.Box2D.Box2DJoint.ReactionForce
- uid: WaveEngine.Box2D.Box2DJoint`3.ReactionForce*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.ReactionForce
  name: ReactionForce
  nameWithType: Box2DJoint<T, K, L>.ReactionForce
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.ReactionForce
  nameWithType.vb: Box2DJoint(Of T, K, L).ReactionForce
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).ReactionForce
- uid: WaveEngine.Box2D.Box2DJoint.ReactionTorque
  commentId: P:WaveEngine.Box2D.Box2DJoint.ReactionTorque
  parent: WaveEngine.Box2D.Box2DJoint
  name: ReactionTorque
  nameWithType: Box2DJoint.ReactionTorque
  fullName: WaveEngine.Box2D.Box2DJoint.ReactionTorque
- uid: WaveEngine.Box2D.Box2DJoint`3.ReactionTorque*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.ReactionTorque
  name: ReactionTorque
  nameWithType: Box2DJoint<T, K, L>.ReactionTorque
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.ReactionTorque
  nameWithType.vb: Box2DJoint(Of T, K, L).ReactionTorque
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).ReactionTorque
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Box2D.Box2DJoint.IsActive
  commentId: P:WaveEngine.Box2D.Box2DJoint.IsActive
  parent: WaveEngine.Box2D.Box2DJoint
  name: IsActive
  nameWithType: Box2DJoint.IsActive
  fullName: WaveEngine.Box2D.Box2DJoint.IsActive
- uid: WaveEngine.Box2D.Box2DJoint`3.IsActive*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.IsActive
  name: IsActive
  nameWithType: Box2DJoint<T, K, L>.IsActive
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.IsActive
  nameWithType.vb: Box2DJoint(Of T, K, L).IsActive
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Box2D.Box2DJoint.BreakPoint
  commentId: P:WaveEngine.Box2D.Box2DJoint.BreakPoint
  parent: WaveEngine.Box2D.Box2DJoint
  name: BreakPoint
  nameWithType: Box2DJoint.BreakPoint
  fullName: WaveEngine.Box2D.Box2DJoint.BreakPoint
- uid: WaveEngine.Box2D.Box2DJoint`3.BreakPoint*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.BreakPoint
  name: BreakPoint
  nameWithType: Box2DJoint<T, K, L>.BreakPoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.BreakPoint
  nameWithType.vb: Box2DJoint(Of T, K, L).BreakPoint
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).BreakPoint
- uid: WaveEngine.Box2D.Box2DJoint`3
  commentId: T:WaveEngine.Box2D.Box2DJoint`3
  name: Box2DJoint<T, K, L>
  nameWithType: Box2DJoint<T, K, L>
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>
  nameWithType.vb: Box2DJoint(Of T, K, L)
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L)
  name.vb: Box2DJoint(Of T, K, L)
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DJoint`3
    name: Box2DJoint
    nameWithType: Box2DJoint
    fullName: WaveEngine.Box2D.Box2DJoint
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: L
    nameWithType: L
    fullName: L
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DJoint`3
    name: Box2DJoint
    nameWithType: Box2DJoint
    fullName: WaveEngine.Box2D.Box2DJoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: L
    nameWithType: L
    fullName: L
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DJoint`3.#ctor*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.#ctor
  name: Box2DJoint
  nameWithType: Box2DJoint<T, K, L>.Box2DJoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.Box2DJoint
  nameWithType.vb: Box2DJoint(Of T, K, L).Box2DJoint
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).Box2DJoint
- uid: WaveEngine.Box2D.Box2DSimulation
  commentId: T:WaveEngine.Box2D.Box2DSimulation
  parent: WaveEngine.Box2D
  name: Box2DSimulation
  nameWithType: Box2DSimulation
  fullName: WaveEngine.Box2D.Box2DSimulation
- uid: WaveEngine.Box2D.Box2DJoint`3.FillJointDefinition*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.FillJointDefinition
  name: FillJointDefinition
  nameWithType: Box2DJoint<T, K, L>.FillJointDefinition
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.FillJointDefinition
  nameWithType.vb: Box2DJoint(Of T, K, L).FillJointDefinition
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).FillJointDefinition
- uid: '{L}'
  commentId: '!:L'
  definition: L
  name: L
  nameWithType: L
  fullName: L
- uid: L
  name: L
  nameWithType: L
  fullName: L
- uid: WaveEngine.Box2D.Box2DJoint`3.CreateBox2DJoint*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.CreateBox2DJoint
  name: CreateBox2DJoint
  nameWithType: Box2DJoint<T, K, L>.CreateBox2DJoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.CreateBox2DJoint
  nameWithType.vb: Box2DJoint(Of T, K, L).CreateBox2DJoint
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).CreateBox2DJoint
- uid: WaveEngine.Box2D.Box2DJoint.DestroyJoint
  commentId: M:WaveEngine.Box2D.Box2DJoint.DestroyJoint
  parent: WaveEngine.Box2D.Box2DJoint
  name: DestroyJoint()
  nameWithType: Box2DJoint.DestroyJoint()
  fullName: WaveEngine.Box2D.Box2DJoint.DestroyJoint()
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DJoint.DestroyJoint
    name: DestroyJoint
    nameWithType: Box2DJoint.DestroyJoint
    fullName: WaveEngine.Box2D.Box2DJoint.DestroyJoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DJoint.DestroyJoint
    name: DestroyJoint
    nameWithType: Box2DJoint.DestroyJoint
    fullName: WaveEngine.Box2D.Box2DJoint.DestroyJoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DJoint`3.DestroyJoint*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.DestroyJoint
  name: DestroyJoint
  nameWithType: Box2DJoint<T, K, L>.DestroyJoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.DestroyJoint
  nameWithType.vb: Box2DJoint(Of T, K, L).DestroyJoint
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).DestroyJoint
- uid: WaveEngine.Box2D.Box2DJoint.RegenerateJoint
  commentId: M:WaveEngine.Box2D.Box2DJoint.RegenerateJoint
  parent: WaveEngine.Box2D.Box2DJoint
  name: RegenerateJoint()
  nameWithType: Box2DJoint.RegenerateJoint()
  fullName: WaveEngine.Box2D.Box2DJoint.RegenerateJoint()
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DJoint.RegenerateJoint
    name: RegenerateJoint
    nameWithType: Box2DJoint.RegenerateJoint
    fullName: WaveEngine.Box2D.Box2DJoint.RegenerateJoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DJoint.RegenerateJoint
    name: RegenerateJoint
    nameWithType: Box2DJoint.RegenerateJoint
    fullName: WaveEngine.Box2D.Box2DJoint.RegenerateJoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DJoint`3.RegenerateJoint*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.RegenerateJoint
  name: RegenerateJoint
  nameWithType: Box2DJoint<T, K, L>.RegenerateJoint
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.RegenerateJoint
  nameWithType.vb: Box2DJoint(Of T, K, L).RegenerateJoint
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).RegenerateJoint
- uid: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
  commentId: M:WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
  parent: WaveEngine.Box2D.Box2DJoint
  name: CheckJointIntegrity()
  nameWithType: Box2DJoint.CheckJointIntegrity()
  fullName: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity()
  spec.csharp:
  - uid: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
    name: CheckJointIntegrity
    nameWithType: Box2DJoint.CheckJointIntegrity
    fullName: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
    name: CheckJointIntegrity
    nameWithType: Box2DJoint.CheckJointIntegrity
    fullName: WaveEngine.Box2D.Box2DJoint.CheckJointIntegrity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Box2D.Box2DJoint`3.CheckJointIntegrity*
  commentId: Overload:WaveEngine.Box2D.Box2DJoint`3.CheckJointIntegrity
  name: CheckJointIntegrity
  nameWithType: Box2DJoint<T, K, L>.CheckJointIntegrity
  fullName: WaveEngine.Box2D.Box2DJoint<T, K, L>.CheckJointIntegrity
  nameWithType.vb: Box2DJoint(Of T, K, L).CheckJointIntegrity
  fullName.vb: WaveEngine.Box2D.Box2DJoint(Of T, K, L).CheckJointIntegrity
