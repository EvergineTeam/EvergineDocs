### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Helpers.TimeSpanExtended
  commentId: T:WaveEngine.Common.Helpers.TimeSpanExtended
  id: TimeSpanExtended
  parent: WaveEngine.Common.Helpers
  children:
  - WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan,System.Int32)
  - WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan,System.TimeSpan)
  - WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan,System.Int32)
  - WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan,System.TimeSpan)
  langs:
  - csharp
  - vb
  name: TimeSpanExtended
  nameWithType: TimeSpanExtended
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended
  type: Class
  source:
    id: TimeSpanExtended
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\TimeSpanExtended.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nExtension methods for TimeSpan.\n"
  example: []
  syntax:
    content: public static class TimeSpanExtended
    content.vb: Public Module TimeSpanExtended
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan,System.Int32)
  commentId: M:WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan,System.Int32)
  id: Divide(System.TimeSpan,System.Int32)
  isExtensionMethod: true
  parent: WaveEngine.Common.Helpers.TimeSpanExtended
  langs:
  - csharp
  - vb
  name: Divide(TimeSpan, Int32)
  nameWithType: TimeSpanExtended.Divide(TimeSpan, Int32)
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan, System.Int32)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\TimeSpanExtended.cs
    startLine: 24
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nDivides the specified time.\n"
  example: []
  syntax:
    content: public static TimeSpan Divide(this TimeSpan time, int divider)
    parameters:
    - id: time
      type: System.TimeSpan
      description: The time.
    - id: divider
      type: System.Int32
      description: The divider.
    return:
      type: System.TimeSpan
      description: The result.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Divide(time As TimeSpan, divider As Integer) As TimeSpan
  overload: WaveEngine.Common.Helpers.TimeSpanExtended.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan,System.TimeSpan)
  commentId: M:WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan,System.TimeSpan)
  id: Divide(System.TimeSpan,System.TimeSpan)
  isExtensionMethod: true
  parent: WaveEngine.Common.Helpers.TimeSpanExtended
  langs:
  - csharp
  - vb
  name: Divide(TimeSpan, TimeSpan)
  nameWithType: TimeSpanExtended.Divide(TimeSpan, TimeSpan)
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended.Divide(System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\TimeSpanExtended.cs
    startLine: 37
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nDivides the specified time1.\n"
  example: []
  syntax:
    content: public static TimeSpan Divide(this TimeSpan time1, TimeSpan time2)
    parameters:
    - id: time1
      type: System.TimeSpan
      description: The time1.
    - id: time2
      type: System.TimeSpan
      description: The time2.
    return:
      type: System.TimeSpan
      description: The result.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Divide(time1 As TimeSpan, time2 As TimeSpan) As TimeSpan
  overload: WaveEngine.Common.Helpers.TimeSpanExtended.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan,System.Int32)
  commentId: M:WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan,System.Int32)
  id: Multiply(System.TimeSpan,System.Int32)
  isExtensionMethod: true
  parent: WaveEngine.Common.Helpers.TimeSpanExtended
  langs:
  - csharp
  - vb
  name: Multiply(TimeSpan, Int32)
  nameWithType: TimeSpanExtended.Multiply(TimeSpan, Int32)
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan, System.Int32)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\TimeSpanExtended.cs
    startLine: 51
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nMultiplies the specified time.\n"
  example: []
  syntax:
    content: public static TimeSpan Multiply(this TimeSpan time, int multipler)
    parameters:
    - id: time
      type: System.TimeSpan
      description: The time.
    - id: multipler
      type: System.Int32
      description: The multipler.
    return:
      type: System.TimeSpan
      description: The result.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Multiply(time As TimeSpan, multipler As Integer) As TimeSpan
  overload: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan,System.TimeSpan)
  commentId: M:WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan,System.TimeSpan)
  id: Multiply(System.TimeSpan,System.TimeSpan)
  isExtensionMethod: true
  parent: WaveEngine.Common.Helpers.TimeSpanExtended
  langs:
  - csharp
  - vb
  name: Multiply(TimeSpan, TimeSpan)
  nameWithType: TimeSpanExtended.Multiply(TimeSpan, TimeSpan)
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply(System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\TimeSpanExtended.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nMultiplies the specified time1.\n"
  example: []
  syntax:
    content: public static TimeSpan Multiply(this TimeSpan time1, TimeSpan time2)
    parameters:
    - id: time1
      type: System.TimeSpan
      description: The time1.
    - id: time2
      type: System.TimeSpan
      description: The time2.
    return:
      type: System.TimeSpan
      description: The result.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Multiply(time1 As TimeSpan, time2 As TimeSpan) As TimeSpan
  overload: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.TimeSpanExtended.Divide*
  commentId: Overload:WaveEngine.Common.Helpers.TimeSpanExtended.Divide
  name: Divide
  nameWithType: TimeSpanExtended.Divide
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended.Divide
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply*
  commentId: Overload:WaveEngine.Common.Helpers.TimeSpanExtended.Multiply
  name: Multiply
  nameWithType: TimeSpanExtended.Multiply
  fullName: WaveEngine.Common.Helpers.TimeSpanExtended.Multiply
