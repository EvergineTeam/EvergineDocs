### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Graphics.IRenderTargetManager
  commentId: T:WaveEngine.Common.Graphics.IRenderTargetManager
  id: IRenderTargetManager
  parent: WaveEngine.Common.Graphics
  children:
  - WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture(System.Int32,System.Int32)
  - WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  - WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture
  - WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle``1(System.UInt32)
  - WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles
  - WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  - WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  - WaveEngine.Common.Graphics.IRenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  - WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported
  - WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported
  - WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  - WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive
  - WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles
  - WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  - WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle``1(System.UInt32)
  langs:
  - csharp
  - vb
  name: IRenderTargetManager
  nameWithType: IRenderTargetManager
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager
  type: Interface
  source:
    id: IRenderTargetManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 13
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nInterface for render target managers.\n"
  example: []
  syntax:
    content: 'public interface IRenderTargetManager : IDisposable'
    content.vb: >-
      Public Interface IRenderTargetManager

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture
  commentId: P:WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture
  id: DefaultDepthTexture
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: DefaultDepthTexture
  nameWithType: IRenderTargetManager.DefaultDepthTexture
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture
  type: Property
  source:
    id: DefaultDepthTexture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 18
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets the default depth texture\n"
  example: []
  syntax:
    content: DepthTexture DefaultDepthTexture { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Graphics.DepthTexture
    content.vb: ReadOnly Property DefaultDepthTexture As DepthTexture
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported
  commentId: P:WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported
  id: IsMRTsupported
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: IsMRTsupported
  nameWithType: IRenderTargetManager.IsMRTsupported
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported
  type: Property
  source:
    id: IsMRTsupported
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 23
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets a value indicating whether this device has support for MRT (Multi Render Target)\n"
  example: []
  syntax:
    content: bool IsMRTsupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsMRTsupported As Boolean
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported
  commentId: P:WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported
  id: IsDepthAsTextureSupported
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: IsDepthAsTextureSupported
  nameWithType: IRenderTargetManager.IsDepthAsTextureSupported
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported
  type: Property
  source:
    id: IsDepthAsTextureSupported
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 28
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets a value indicating whether this device has support for Depth Buffer as texture\n"
  example: []
  syntax:
    content: bool IsDepthAsTextureSupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDepthAsTextureSupported As Boolean
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles
  commentId: P:WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles
  id: RenderTargetHandles
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: RenderTargetHandles
  nameWithType: IRenderTargetManager.RenderTargetHandles
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles
  type: Property
  source:
    id: RenderTargetHandles
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 33
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets the dictionary of render target handles.\n"
  example: []
  syntax:
    content: Dictionary<uint, object> RenderTargetHandles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.UInt32,System.Object}
    content.vb: ReadOnly Property RenderTargetHandles As Dictionary(Of UInteger, Object)
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles
  commentId: P:WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles
  id: DepthTextureHandles
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: DepthTextureHandles
  nameWithType: IRenderTargetManager.DepthTextureHandles
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles
  type: Property
  source:
    id: DepthTextureHandles
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 38
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets the dictionary of depth texture handles.\n"
  example: []
  syntax:
    content: Dictionary<uint, object> DepthTextureHandles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.UInt32,System.Object}
    content.vb: ReadOnly Property DepthTextureHandles As Dictionary(Of UInteger, Object)
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive
  commentId: P:WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive
  id: RenderTargetActive
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: RenderTargetActive
  nameWithType: IRenderTargetManager.RenderTargetActive
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive
  type: Property
  source:
    id: RenderTargetActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets a value indicating whether a render target is active.\n"
  example: []
  syntax:
    content: bool RenderTargetActive { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if render target is active otherwise, <code>false</code>.\n"
    content.vb: ReadOnly Property RenderTargetActive As Boolean
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  id: CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: CreateRenderTarget(Int32, Int32, PixelFormat)
  nameWithType: IRenderTargetManager.CreateRenderTarget(Int32, Int32, PixelFormat)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget(System.Int32, System.Int32, WaveEngine.Common.Graphics.PixelFormat)
  type: Method
  source:
    id: CreateRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 57
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nCreates the render target.\n"
  example: []
  syntax:
    content: RenderTarget CreateRenderTarget(int width, int height, PixelFormat pixelFormat)
    parameters:
    - id: width
      type: System.Int32
      description: The width.
    - id: height
      type: System.Int32
      description: The height.
    - id: pixelFormat
      type: WaveEngine.Common.Graphics.PixelFormat
      description: The pixel format
    return:
      type: WaveEngine.Common.Graphics.RenderTarget
      description: The result.
    content.vb: Function CreateRenderTarget(width As Integer, height As Integer, pixelFormat As PixelFormat) As RenderTarget
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget*
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture(System.Int32,System.Int32)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture(System.Int32,System.Int32)
  id: CreateDepthTexture(System.Int32,System.Int32)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: CreateDepthTexture(Int32, Int32)
  nameWithType: IRenderTargetManager.CreateDepthTexture(Int32, Int32)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture(System.Int32, System.Int32)
  type: Method
  source:
    id: CreateDepthTexture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 65
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nCreate a Depth Texture\n"
  example: []
  syntax:
    content: DepthTexture CreateDepthTexture(int width, int height)
    parameters:
    - id: width
      type: System.Int32
      description: The width.
    - id: height
      type: System.Int32
      description: The height.
    return:
      type: WaveEngine.Common.Graphics.DepthTexture
      description: The new depth texture
    content.vb: Function CreateDepthTexture(width As Integer, height As Integer) As DepthTexture
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture*
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  id: DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: DestroyRenderTarget(RenderTarget)
  nameWithType: IRenderTargetManager.DestroyRenderTarget(RenderTarget)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  type: Method
  source:
    id: DestroyRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 71
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nDestroys the render target.\n"
  example: []
  syntax:
    content: void DestroyRenderTarget(RenderTarget renderTarget)
    parameters:
    - id: renderTarget
      type: WaveEngine.Common.Graphics.RenderTarget
      description: The render target to remove.
    content.vb: Sub DestroyRenderTarget(renderTarget As RenderTarget)
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget*
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  id: DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: DestroyDepthTexture(DepthTexture)
  nameWithType: IRenderTargetManager.DestroyDepthTexture(DepthTexture)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  type: Method
  source:
    id: DestroyDepthTexture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 77
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nDestroys the depth texture.\n"
  example: []
  syntax:
    content: void DestroyDepthTexture(DepthTexture depthTexture)
    parameters:
    - id: depthTexture
      type: WaveEngine.Common.Graphics.DepthTexture
      description: The depth texture to remove.
    content.vb: Sub DestroyDepthTexture(depthTexture As DepthTexture)
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture*
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  id: SetRenderTarget(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: SetRenderTarget(DepthTexture, RenderTarget[])
  nameWithType: IRenderTargetManager.SetRenderTarget(DepthTexture, RenderTarget[])
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.DepthTexture, WaveEngine.Common.Graphics.RenderTarget[])
  type: Method
  source:
    id: SetRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 84
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nSets the render target.\n"
  example: []
  syntax:
    content: void SetRenderTarget(DepthTexture depthTexture, params RenderTarget[] renderTarget)
    parameters:
    - id: depthTexture
      type: WaveEngine.Common.Graphics.DepthTexture
      description: The depthTexture
    - id: renderTarget
      type: WaveEngine.Common.Graphics.RenderTarget[]
      description: The render target.
    content.vb: Sub SetRenderTarget(depthTexture As DepthTexture, ParamArray renderTarget As RenderTarget())
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget*
  nameWithType.vb: IRenderTargetManager.SetRenderTarget(DepthTexture, RenderTarget())
  fullName.vb: WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.DepthTexture, WaveEngine.Common.Graphics.RenderTarget())
  name.vb: SetRenderTarget(DepthTexture, RenderTarget())
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle``1(System.UInt32)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle``1(System.UInt32)
  id: TargetFromHandle``1(System.UInt32)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: TargetFromHandle<T>(UInt32)
  nameWithType: IRenderTargetManager.TargetFromHandle<T>(UInt32)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle<T>(System.UInt32)
  type: Method
  source:
    id: TargetFromHandle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 92
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nTargets from handle.\n"
  example: []
  syntax:
    content: T TargetFromHandle<T>(uint handle)
    parameters:
    - id: handle
      type: System.UInt32
      description: The handle.
    typeParameters:
    - id: T
      description: Type of the render target.
    return:
      type: '{T}'
      description: The render target.
    content.vb: Function TargetFromHandle(Of T)(handle As UInteger) As T
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle*
  nameWithType.vb: IRenderTargetManager.TargetFromHandle(Of T)(UInt32)
  fullName.vb: WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle(Of T)(System.UInt32)
  name.vb: TargetFromHandle(Of T)(UInt32)
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle``1(System.UInt32)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle``1(System.UInt32)
  id: DepthFromHandle``1(System.UInt32)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: DepthFromHandle<T>(UInt32)
  nameWithType: IRenderTargetManager.DepthFromHandle<T>(UInt32)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle<T>(System.UInt32)
  type: Method
  source:
    id: DepthFromHandle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 100
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nDepth from handle.\n"
  example: []
  syntax:
    content: T DepthFromHandle<T>(uint handle)
    parameters:
    - id: handle
      type: System.UInt32
      description: The handle.
    typeParameters:
    - id: T
      description: Type of the depth texture.
    return:
      type: '{T}'
      description: The Depth.
    content.vb: Function DepthFromHandle(Of T)(handle As UInteger) As T
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle*
  nameWithType.vb: IRenderTargetManager.DepthFromHandle(Of T)(UInt32)
  fullName.vb: WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle(Of T)(System.UInt32)
  name.vb: DepthFromHandle(Of T)(UInt32)
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  id: PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: PixelFormatSupported(PixelFormat)
  nameWithType: IRenderTargetManager.PixelFormatSupported(PixelFormat)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  type: Method
  source:
    id: PixelFormatSupported
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 107
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nChecks if the specified pixel format is supported by this device\n"
  example: []
  syntax:
    content: bool PixelFormatSupported(PixelFormat pixelFormat)
    parameters:
    - id: pixelFormat
      type: WaveEngine.Common.Graphics.PixelFormat
      description: The pixel format
    return:
      type: System.Boolean
      description: If the pixel is supported
    content.vb: Function PixelFormatSupported(pixelFormat As PixelFormat) As Boolean
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported*
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  commentId: M:WaveEngine.Common.Graphics.IRenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  id: GetData(WaveEngine.Common.Graphics.RenderTarget)
  parent: WaveEngine.Common.Graphics.IRenderTargetManager
  langs:
  - csharp
  - vb
  name: GetData(RenderTarget)
  nameWithType: IRenderTargetManager.GetData(RenderTarget)
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  type: Method
  source:
    id: GetData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Graphics\IRenderTargetManager.cs
    startLine: 114
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Graphics
  summary: "\nGets the rendertarget data.\n"
  example: []
  syntax:
    content: Color[] GetData(RenderTarget renderTarget)
    parameters:
    - id: renderTarget
      type: WaveEngine.Common.Graphics.RenderTarget
      description: RenderTarget object
    return:
      type: WaveEngine.Common.Graphics.Color[]
      description: Buffer of the data
    content.vb: Function GetData(renderTarget As RenderTarget) As Color()
  overload: WaveEngine.Common.Graphics.IRenderTargetManager.GetData*
references:
- uid: WaveEngine.Common.Graphics
  commentId: N:WaveEngine.Common.Graphics
  name: WaveEngine.Common.Graphics
  nameWithType: WaveEngine.Common.Graphics
  fullName: WaveEngine.Common.Graphics
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture
  name: DefaultDepthTexture
  nameWithType: IRenderTargetManager.DefaultDepthTexture
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DefaultDepthTexture
- uid: WaveEngine.Common.Graphics.DepthTexture
  commentId: T:WaveEngine.Common.Graphics.DepthTexture
  parent: WaveEngine.Common.Graphics
  name: DepthTexture
  nameWithType: DepthTexture
  fullName: WaveEngine.Common.Graphics.DepthTexture
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported
  name: IsMRTsupported
  nameWithType: IRenderTargetManager.IsMRTsupported
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.IsMRTsupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported
  name: IsDepthAsTextureSupported
  nameWithType: IRenderTargetManager.IsDepthAsTextureSupported
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.IsDepthAsTextureSupported
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles
  name: RenderTargetHandles
  nameWithType: IRenderTargetManager.RenderTargetHandles
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetHandles
- uid: System.Collections.Generic.Dictionary{System.UInt32,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.UInt32,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<UInt32, Object>
  nameWithType: Dictionary<UInt32, Object>
  fullName: System.Collections.Generic.Dictionary<System.UInt32, System.Object>
  nameWithType.vb: Dictionary(Of UInt32, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.UInt32, System.Object)
  name.vb: Dictionary(Of UInt32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles
  name: DepthTextureHandles
  nameWithType: IRenderTargetManager.DepthTextureHandles
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DepthTextureHandles
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive
  name: RenderTargetActive
  nameWithType: IRenderTargetManager.RenderTargetActive
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.RenderTargetActive
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget
  name: CreateRenderTarget
  nameWithType: IRenderTargetManager.CreateRenderTarget
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.CreateRenderTarget
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Graphics.PixelFormat
  commentId: T:WaveEngine.Common.Graphics.PixelFormat
  parent: WaveEngine.Common.Graphics
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: WaveEngine.Common.Graphics.PixelFormat
- uid: WaveEngine.Common.Graphics.RenderTarget
  commentId: T:WaveEngine.Common.Graphics.RenderTarget
  parent: WaveEngine.Common.Graphics
  name: RenderTarget
  nameWithType: RenderTarget
  fullName: WaveEngine.Common.Graphics.RenderTarget
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture
  name: CreateDepthTexture
  nameWithType: IRenderTargetManager.CreateDepthTexture
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.CreateDepthTexture
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget
  name: DestroyRenderTarget
  nameWithType: IRenderTargetManager.DestroyRenderTarget
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyRenderTarget
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture
  name: DestroyDepthTexture
  nameWithType: IRenderTargetManager.DestroyDepthTexture
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DestroyDepthTexture
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget
  name: SetRenderTarget
  nameWithType: IRenderTargetManager.SetRenderTarget
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.SetRenderTarget
- uid: WaveEngine.Common.Graphics.RenderTarget[]
  isExternal: true
  name: RenderTarget[]
  nameWithType: RenderTarget[]
  fullName: WaveEngine.Common.Graphics.RenderTarget[]
  nameWithType.vb: RenderTarget()
  fullName.vb: WaveEngine.Common.Graphics.RenderTarget()
  name.vb: RenderTarget()
  spec.csharp:
  - uid: WaveEngine.Common.Graphics.RenderTarget
    name: RenderTarget
    nameWithType: RenderTarget
    fullName: WaveEngine.Common.Graphics.RenderTarget
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Graphics.RenderTarget
    name: RenderTarget
    nameWithType: RenderTarget
    fullName: WaveEngine.Common.Graphics.RenderTarget
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle
  name: TargetFromHandle
  nameWithType: IRenderTargetManager.TargetFromHandle
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.TargetFromHandle
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle
  name: DepthFromHandle
  nameWithType: IRenderTargetManager.DepthFromHandle
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.DepthFromHandle
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported
  name: PixelFormatSupported
  nameWithType: IRenderTargetManager.PixelFormatSupported
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.PixelFormatSupported
- uid: WaveEngine.Common.Graphics.IRenderTargetManager.GetData*
  commentId: Overload:WaveEngine.Common.Graphics.IRenderTargetManager.GetData
  name: GetData
  nameWithType: IRenderTargetManager.GetData
  fullName: WaveEngine.Common.Graphics.IRenderTargetManager.GetData
- uid: WaveEngine.Common.Graphics.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: WaveEngine.Common.Graphics.Color[]
  nameWithType.vb: Color()
  fullName.vb: WaveEngine.Common.Graphics.Color()
  name.vb: Color()
  spec.csharp:
  - uid: WaveEngine.Common.Graphics.Color
    name: Color
    nameWithType: Color
    fullName: WaveEngine.Common.Graphics.Color
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Graphics.Color
    name: Color
    nameWithType: Color
    fullName: WaveEngine.Common.Graphics.Color
  - name: ()
    nameWithType: ()
    fullName: ()
