### YamlMime:ManagedReference
items:
- uid: WaveEngine.AI.BehaviorTrees.Node`1
  commentId: T:WaveEngine.AI.BehaviorTrees.Node`1
  id: Node`1
  parent: WaveEngine.AI.BehaviorTrees
  children:
  - WaveEngine.AI.BehaviorTrees.Node`1.AddChild(WaveEngine.AI.BehaviorTrees.Node{`0})
  - WaveEngine.AI.BehaviorTrees.Node`1.Children
  - WaveEngine.AI.BehaviorTrees.Node`1.Evaluate(`0)
  - WaveEngine.AI.BehaviorTrees.Node`1.Execute(`0)
  langs:
  - csharp
  - vb
  name: Node<T>
  nameWithType: Node<T>
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>
  type: Class
  source:
    id: Node
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\Node`1.cs
    startLine: 14
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nRepresent the base class a tree behavior node must inherit\n"
  example: []
  syntax:
    content: >-
      public abstract class Node<T>

          where T : NodeInfo
    typeParameters:
    - id: T
      description: The type of elements a tree behavior will contain
    content.vb: Public MustInherit Class Node(Of T As NodeInfo)
  inheritance:
  - System.Object
  derivedClasses:
  - WaveEngine.AI.BehaviorTrees.InitNode`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  nameWithType.vb: Node(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T)
  name.vb: Node(Of T)
- uid: WaveEngine.AI.BehaviorTrees.Node`1.Children
  commentId: F:WaveEngine.AI.BehaviorTrees.Node`1.Children
  id: Children
  parent: WaveEngine.AI.BehaviorTrees.Node`1
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: Node<T>.Children
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.Children
  type: Field
  source:
    id: Children
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\Node`1.cs
    startLine: 20
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nThe children of the node\n"
  example: []
  syntax:
    content: public List<Node<T>> Children
    return:
      type: System.Collections.Generic.List{WaveEngine.AI.BehaviorTrees.Node`1}
    content.vb: Public Children As List(Of Node(Of T))
  nameWithType.vb: Node(Of T).Children
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).Children
- uid: WaveEngine.AI.BehaviorTrees.Node`1.AddChild(WaveEngine.AI.BehaviorTrees.Node{`0})
  commentId: M:WaveEngine.AI.BehaviorTrees.Node`1.AddChild(WaveEngine.AI.BehaviorTrees.Node{`0})
  id: AddChild(WaveEngine.AI.BehaviorTrees.Node{`0})
  parent: WaveEngine.AI.BehaviorTrees.Node`1
  langs:
  - csharp
  - vb
  name: AddChild(Node<T>)
  nameWithType: Node<T>.AddChild(Node<T>)
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.AddChild(WaveEngine.AI.BehaviorTrees.Node<T>)
  type: Method
  source:
    id: AddChild
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\Node`1.cs
    startLine: 27
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nAdds a child to the node\n"
  example: []
  syntax:
    content: public Node<T> AddChild(Node<T> children)
    parameters:
    - id: children
      type: WaveEngine.AI.BehaviorTrees.Node`1
      description: The children to be added
    return:
      type: WaveEngine.AI.BehaviorTrees.Node`1
      description: The Node with the children added
    content.vb: Public Function AddChild(children As Node(Of T)) As Node(Of T)
  overload: WaveEngine.AI.BehaviorTrees.Node`1.AddChild*
  nameWithType.vb: Node(Of T).AddChild(Node(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).AddChild(WaveEngine.AI.BehaviorTrees.Node(Of T))
  name.vb: AddChild(Node(Of T))
- uid: WaveEngine.AI.BehaviorTrees.Node`1.Execute(`0)
  commentId: M:WaveEngine.AI.BehaviorTrees.Node`1.Execute(`0)
  id: Execute(`0)
  parent: WaveEngine.AI.BehaviorTrees.Node`1
  langs:
  - csharp
  - vb
  name: Execute(T)
  nameWithType: Node<T>.Execute(T)
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.Execute(T)
  type: Method
  source:
    id: Execute
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\Node`1.cs
    startLine: 42
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nExecutes the logic of the node\n"
  example: []
  syntax:
    content: public abstract void Execute(T nodeInfo)
    parameters:
    - id: nodeInfo
      type: '{T}'
      description: The node information.
    content.vb: Public MustOverride Sub Execute(nodeInfo As T)
  overload: WaveEngine.AI.BehaviorTrees.Node`1.Execute*
  nameWithType.vb: Node(Of T).Execute(T)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).Execute(T)
- uid: WaveEngine.AI.BehaviorTrees.Node`1.Evaluate(`0)
  commentId: M:WaveEngine.AI.BehaviorTrees.Node`1.Evaluate(`0)
  id: Evaluate(`0)
  parent: WaveEngine.AI.BehaviorTrees.Node`1
  langs:
  - csharp
  - vb
  name: Evaluate(T)
  nameWithType: Node<T>.Evaluate(T)
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.Evaluate(T)
  type: Method
  source:
    id: Evaluate
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\Node`1.cs
    startLine: 51
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nEvaluates the node\n"
  example: []
  syntax:
    content: public abstract bool Evaluate(T nodeInfo)
    parameters:
    - id: nodeInfo
      type: '{T}'
      description: The node information.
    return:
      type: System.Boolean
      description: "\nTrue if evaluation of the node success, false in other case\n"
    content.vb: Public MustOverride Function Evaluate(nodeInfo As T) As Boolean
  overload: WaveEngine.AI.BehaviorTrees.Node`1.Evaluate*
  nameWithType.vb: Node(Of T).Evaluate(T)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).Evaluate(T)
references:
- uid: WaveEngine.AI.BehaviorTrees
  commentId: N:WaveEngine.AI.BehaviorTrees
  name: WaveEngine.AI.BehaviorTrees
  nameWithType: WaveEngine.AI.BehaviorTrees
  fullName: WaveEngine.AI.BehaviorTrees
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Collections.Generic.List{WaveEngine.AI.BehaviorTrees.Node`1}
  commentId: T:System.Collections.Generic.List{WaveEngine.AI.BehaviorTrees.Node`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Node<T>>
  nameWithType: List<Node<T>>
  fullName: System.Collections.Generic.List<WaveEngine.AI.BehaviorTrees.Node<T>>
  nameWithType.vb: List(Of Node(Of T))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.AI.BehaviorTrees.Node(Of T))
  name.vb: List(Of Node(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.AI.BehaviorTrees.Node`1.AddChild*
  commentId: Overload:WaveEngine.AI.BehaviorTrees.Node`1.AddChild
  name: AddChild
  nameWithType: Node<T>.AddChild
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.AddChild
  nameWithType.vb: Node(Of T).AddChild
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).AddChild
- uid: WaveEngine.AI.BehaviorTrees.Node`1
  commentId: T:WaveEngine.AI.BehaviorTrees.Node`1
  parent: WaveEngine.AI.BehaviorTrees
  name: Node<T>
  nameWithType: Node<T>
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>
  nameWithType.vb: Node(Of T)
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T)
  name.vb: Node(Of T)
  spec.csharp:
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.AI.BehaviorTrees.Node`1.Execute*
  commentId: Overload:WaveEngine.AI.BehaviorTrees.Node`1.Execute
  name: Execute
  nameWithType: Node<T>.Execute
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.Execute
  nameWithType.vb: Node(Of T).Execute
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).Execute
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.AI.BehaviorTrees.Node`1.Evaluate*
  commentId: Overload:WaveEngine.AI.BehaviorTrees.Node`1.Evaluate
  name: Evaluate
  nameWithType: Node<T>.Evaluate
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>.Evaluate
  nameWithType.vb: Node(Of T).Evaluate
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T).Evaluate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
