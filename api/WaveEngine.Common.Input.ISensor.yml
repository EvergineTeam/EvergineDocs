### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Input.ISensor
  commentId: T:WaveEngine.Common.Input.ISensor
  id: ISensor
  parent: WaveEngine.Common.Input
  children:
  - WaveEngine.Common.Input.ISensor.Exist
  - WaveEngine.Common.Input.ISensor.Start
  - WaveEngine.Common.Input.ISensor.Started
  - WaveEngine.Common.Input.ISensor.Stop
  langs:
  - csharp
  - vb
  name: ISensor
  nameWithType: ISensor
  fullName: WaveEngine.Common.Input.ISensor
  type: Interface
  source:
    id: ISensor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\ISensor.cs
    startLine: 11
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nSensors interface\n"
  example: []
  syntax:
    content: 'public interface ISensor : IDisposable'
    content.vb: >-
      Public Interface ISensor

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Input.ISensor.Exist
  commentId: M:WaveEngine.Common.Input.ISensor.Exist
  id: Exist
  parent: WaveEngine.Common.Input.ISensor
  langs:
  - csharp
  - vb
  name: Exist()
  nameWithType: ISensor.Exist()
  fullName: WaveEngine.Common.Input.ISensor.Exist()
  type: Method
  source:
    id: Exist
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\ISensor.cs
    startLine: 17
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nCheck if the sensor exist\n"
  example: []
  syntax:
    content: bool Exist()
    return:
      type: System.Boolean
      description: True if sensor exist, false in other case
    content.vb: Function Exist As Boolean
  overload: WaveEngine.Common.Input.ISensor.Exist*
- uid: WaveEngine.Common.Input.ISensor.Start
  commentId: M:WaveEngine.Common.Input.ISensor.Start
  id: Start
  parent: WaveEngine.Common.Input.ISensor
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: ISensor.Start()
  fullName: WaveEngine.Common.Input.ISensor.Start()
  type: Method
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\ISensor.cs
    startLine: 22
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nStarts the sensor.\n"
  example: []
  syntax:
    content: void Start()
    content.vb: Sub Start
  overload: WaveEngine.Common.Input.ISensor.Start*
- uid: WaveEngine.Common.Input.ISensor.Stop
  commentId: M:WaveEngine.Common.Input.ISensor.Stop
  id: Stop
  parent: WaveEngine.Common.Input.ISensor
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: ISensor.Stop()
  fullName: WaveEngine.Common.Input.ISensor.Stop()
  type: Method
  source:
    id: Stop
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\ISensor.cs
    startLine: 27
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nStops the sensor.\n"
  example: []
  syntax:
    content: void Stop()
    content.vb: Sub Stop
  overload: WaveEngine.Common.Input.ISensor.Stop*
- uid: WaveEngine.Common.Input.ISensor.Started
  commentId: P:WaveEngine.Common.Input.ISensor.Started
  id: Started
  parent: WaveEngine.Common.Input.ISensor
  langs:
  - csharp
  - vb
  name: Started
  nameWithType: ISensor.Started
  fullName: WaveEngine.Common.Input.ISensor.Started
  type: Property
  source:
    id: Started
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Input\ISensor.cs
    startLine: 35
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Input
  summary: "\nGets a value indicating whether Sensor is started.\n"
  example: []
  syntax:
    content: bool Started { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if sensor; otherwise, <code>false</code>.\n"
    content.vb: ReadOnly Property Started As Boolean
  overload: WaveEngine.Common.Input.ISensor.Started*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: WaveEngine.Common.Input
  commentId: N:WaveEngine.Common.Input
  name: WaveEngine.Common.Input
  nameWithType: WaveEngine.Common.Input
  fullName: WaveEngine.Common.Input
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Input.ISensor.Exist*
  commentId: Overload:WaveEngine.Common.Input.ISensor.Exist
  name: Exist
  nameWithType: ISensor.Exist
  fullName: WaveEngine.Common.Input.ISensor.Exist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Input.ISensor.Start*
  commentId: Overload:WaveEngine.Common.Input.ISensor.Start
  name: Start
  nameWithType: ISensor.Start
  fullName: WaveEngine.Common.Input.ISensor.Start
- uid: WaveEngine.Common.Input.ISensor.Stop*
  commentId: Overload:WaveEngine.Common.Input.ISensor.Stop
  name: Stop
  nameWithType: ISensor.Stop
  fullName: WaveEngine.Common.Input.ISensor.Stop
- uid: WaveEngine.Common.Input.ISensor.Started*
  commentId: Overload:WaveEngine.Common.Input.ISensor.Started
  name: Started
  nameWithType: ISensor.Started
  fullName: WaveEngine.Common.Input.ISensor.Started
