### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D
  commentId: T:WaveEngine.Common.Physics3D.IPhysicBody3D
  id: IPhysicBody3D
  parent: WaveEngine.Common.Physics3D
  children:
  - WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  - WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  - WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  - WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  - WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  - WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  - WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  langs:
  - csharp
  - vb
  name: IPhysicBody3D
  nameWithType: IPhysicBody3D
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D
  type: Interface
  source:
    id: IPhysicBody3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nInterface for body of 3D physics.\n"
  example: []
  syntax:
    content: public interface IPhysicBody3D
    content.vb: Public Interface IPhysicBody3D
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  id: UserData
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: IPhysicBody3D.UserData
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  type: Property
  source:
    id: UserData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 19
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the user data\n"
  example: []
  syntax:
    content: object UserData { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property UserData As Object
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  id: InternalBody
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: InternalBody
  nameWithType: IPhysicBody3D.InternalBody
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  type: Property
  source:
    id: InternalBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 24
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the internal body\n"
  example: []
  syntax:
    content: object InternalBody { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property InternalBody As Object
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  id: IsSensor
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: IsSensor
  nameWithType: IPhysicBody3D.IsSensor
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  type: Property
  source:
    id: IsSensor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 29
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets a value indicating whether this body collects contact information but never generates a collision response.\n"
  example: []
  syntax:
    content: bool IsSensor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsSensor As Boolean
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  id: Friction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: Friction
  nameWithType: IPhysicBody3D.Friction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  type: Property
  source:
    id: Friction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 34
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the friction of the rigid body\n"
  example: []
  syntax:
    content: float Friction { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Friction As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  id: Restitution
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: Restitution
  nameWithType: IPhysicBody3D.Restitution
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  type: Property
  source:
    id: Restitution
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 39
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the restitution of the rigid body\n"
  example: []
  syntax:
    content: float Restitution { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Restitution As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  id: Flags
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IPhysicBody3D.Flags
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  type: Property
  source:
    id: Flags
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 44
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the static body flags\n"
  example: []
  syntax:
    content: StaticBody3DFlags Flags { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics3D.StaticBody3DFlags
    content.vb: Property Flags As StaticBody3DFlags
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  id: CollisionCategories
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: CollisionCategories
  nameWithType: IPhysicBody3D.CollisionCategories
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  type: Property
  source:
    id: CollisionCategories
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 49
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the collision category bits.\n"
  example: []
  syntax:
    content: CollisionCategory3D CollisionCategories { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics3D.CollisionCategory3D
    content.vb: Property CollisionCategories As CollisionCategory3D
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  id: MaskBits
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: MaskBits
  nameWithType: IPhysicBody3D.MaskBits
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  type: Property
  source:
    id: MaskBits
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 54
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the collision mask bits.\n"
  example: []
  syntax:
    content: CollisionCategory3D MaskBits { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics3D.CollisionCategory3D
    content.vb: Property MaskBits As CollisionCategory3D
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  id: ColliderShapes
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: ColliderShapes
  nameWithType: IPhysicBody3D.ColliderShapes
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  type: Property
  source:
    id: ColliderShapes
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 59
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the colliders enumerable\n"
  example: []
  syntax:
    content: IEnumerable<IColliderShape3D> ColliderShapes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics3D.IColliderShape3D}
    content.vb: ReadOnly Property ColliderShapes As IEnumerable(Of IColliderShape3D)
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  id: Transform
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: Transform
  nameWithType: IPhysicBody3D.Transform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  type: Property
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the wolrd transform of the body.\n"
  example: []
  syntax:
    content: Matrix Transform { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
    content.vb: ReadOnly Property Transform As Matrix
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  id: AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: AddColliderShape(IColliderShape3D)
  nameWithType: IPhysicBody3D.AddColliderShape(IColliderShape3D)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  type: Method
  source:
    id: AddColliderShape
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 70
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nAdd collider shape to the body\n"
  example: []
  syntax:
    content: void AddColliderShape(IColliderShape3D shape)
    parameters:
    - id: shape
      type: WaveEngine.Common.Physics3D.IColliderShape3D
      description: The shape
    content.vb: Sub AddColliderShape(shape As IColliderShape3D)
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape*
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  id: RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: RemoveColliderShape(IColliderShape3D)
  nameWithType: IPhysicBody3D.RemoveColliderShape(IColliderShape3D)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  type: Method
  source:
    id: RemoveColliderShape
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 76
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nRemove collider shape to the body\n"
  example: []
  syntax:
    content: void RemoveColliderShape(IColliderShape3D shape)
    parameters:
    - id: shape
      type: WaveEngine.Common.Physics3D.IColliderShape3D
      description: The shape to remove
    content.vb: Sub RemoveColliderShape(shape As IColliderShape3D)
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape*
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  id: GetColliderShapeByIndex(System.Int32)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: GetColliderShapeByIndex(Int32)
  nameWithType: IPhysicBody3D.GetColliderShapeByIndex(Int32)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  type: Method
  source:
    id: GetColliderShapeByIndex
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 83
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets collider shape by index\n"
  example: []
  syntax:
    content: IColliderShape3D GetColliderShapeByIndex(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index
    return:
      type: WaveEngine.Common.Physics3D.IColliderShape3D
      description: The collider shape
    content.vb: Function GetColliderShapeByIndex(index As Integer) As IColliderShape3D
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex*
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: SetTransform(Vector3, Quaternion, Vector3)
  nameWithType: IPhysicBody3D.SetTransform(Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: SetTransform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 91
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nSet the position of the body&apos;s origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body&apos;s transform may cause non-physical behavior.\n"
  example: []
  syntax:
    content: void SetTransform(Vector3 position, Quaternion orientation, Vector3 scale)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: the world position of the body&apos;s local origin.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: the world rotation as a quaternion.
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: the world scale
    content.vb: Sub SetTransform(position As Vector3, orientation As Quaternion, scale As Vector3)
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform*
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  id: AnisotropicFriction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: AnisotropicFriction
  nameWithType: IPhysicBody3D.AnisotropicFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  type: Property
  source:
    id: AnisotropicFriction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 96
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the anisotropic friction\n"
  example: []
  syntax:
    content: Vector3 AnisotropicFriction { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property AnisotropicFriction As Vector3
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  id: CcdMotionThreshold
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: CcdMotionThreshold
  nameWithType: IPhysicBody3D.CcdMotionThreshold
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  type: Property
  source:
    id: CcdMotionThreshold
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 105
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the CCD motion threshold\n"
  remarks: "\nCCD motion clamping activates for convex objects that exceed a (squared to avoid taking square roots)\nvelocity threshold. By default this threshold is zero, which means this feature is disabled for rigid bodies.\n"
  example: []
  syntax:
    content: float CcdMotionThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property CcdMotionThreshold As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  id: CcdSweptSphereRadius
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: CcdSweptSphereRadius
  nameWithType: IPhysicBody3D.CcdSweptSphereRadius
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  type: Property
  source:
    id: CcdSweptSphereRadius
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 113
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the CCD swept shere radius\n"
  remarks: "\nCCD works on an embedded sphere of radius, make sure this radius is embedded inside the convex objects, preferably smaller\n"
  example: []
  syntax:
    content: float CcdSweptSphereRadius { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property CcdSweptSphereRadius As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  id: CompanionId
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: CompanionId
  nameWithType: IPhysicBody3D.CompanionId
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  type: Property
  source:
    id: CompanionId
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 118
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the Companion ID\n"
  example: []
  syntax:
    content: int CompanionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property CompanionId As Integer
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  id: ContactDamping
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: ContactDamping
  nameWithType: IPhysicBody3D.ContactDamping
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  type: Property
  source:
    id: ContactDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 123
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the contact damping\n"
  example: []
  syntax:
    content: float ContactDamping { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property ContactDamping As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  id: ContactProcessingThreshold
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: ContactProcessingThreshold
  nameWithType: IPhysicBody3D.ContactProcessingThreshold
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  type: Property
  source:
    id: ContactProcessingThreshold
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 128
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the contact processing threshold\n"
  example: []
  syntax:
    content: float ContactProcessingThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property ContactProcessingThreshold As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  id: ContactStiffness
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: ContactStiffness
  nameWithType: IPhysicBody3D.ContactStiffness
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  type: Property
  source:
    id: ContactStiffness
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 133
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the contact stiffness\n"
  example: []
  syntax:
    content: float ContactStiffness { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property ContactStiffness As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  id: DeactivationTime
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: DeactivationTime
  nameWithType: IPhysicBody3D.DeactivationTime
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  type: Property
  source:
    id: DeactivationTime
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 138
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the deactivation time\n"
  example: []
  syntax:
    content: float DeactivationTime { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property DeactivationTime As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  id: HasContactResponse
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: HasContactResponse
  nameWithType: IPhysicBody3D.HasContactResponse
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  type: Property
  source:
    id: HasContactResponse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 143
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets a value indicating whether has contact response\n"
  example: []
  syntax:
    content: bool HasContactResponse { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasContactResponse As Boolean
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  id: HitFraction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: HitFraction
  nameWithType: IPhysicBody3D.HitFraction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  type: Property
  source:
    id: HitFraction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 148
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the hit fraction\n"
  example: []
  syntax:
    content: float HitFraction { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property HitFraction As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  id: InterpolationAngularVelocity
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: InterpolationAngularVelocity
  nameWithType: IPhysicBody3D.InterpolationAngularVelocity
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  type: Property
  source:
    id: InterpolationAngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 153
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the angular velocity interpolated\n"
  example: []
  syntax:
    content: Vector3 InterpolationAngularVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property InterpolationAngularVelocity As Vector3
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  id: InterpolationLinearVelocity
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: InterpolationLinearVelocity
  nameWithType: IPhysicBody3D.InterpolationLinearVelocity
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  type: Property
  source:
    id: InterpolationLinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 158
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the linear velocity interpolated\n"
  example: []
  syntax:
    content: Vector3 InterpolationLinearVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property InterpolationLinearVelocity As Vector3
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  id: InterpolationWorldTransform
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: InterpolationWorldTransform
  nameWithType: IPhysicBody3D.InterpolationWorldTransform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  type: Property
  source:
    id: InterpolationWorldTransform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 163
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the world transform interpolated\n"
  example: []
  syntax:
    content: Matrix InterpolationWorldTransform { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
    content.vb: Property InterpolationWorldTransform As Matrix
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  id: IsActive
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: IPhysicBody3D.IsActive
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  type: Property
  source:
    id: IsActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 168
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets a value indicating whether this body is active\n"
  example: []
  syntax:
    content: bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsActive As Boolean
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  id: IslandTag
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: IslandTag
  nameWithType: IPhysicBody3D.IslandTag
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  type: Property
  source:
    id: IslandTag
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 173
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the island tag\n"
  example: []
  syntax:
    content: int IslandTag { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property IslandTag As Integer
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  id: IsStaticObject
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: IsStaticObject
  nameWithType: IPhysicBody3D.IsStaticObject
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  type: Property
  source:
    id: IsStaticObject
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 178
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets a value indicating whether this body is static\n"
  example: []
  syntax:
    content: bool IsStaticObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsStaticObject As Boolean
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  id: RollingFriction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: RollingFriction
  nameWithType: IPhysicBody3D.RollingFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  type: Property
  source:
    id: RollingFriction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 183
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the rolling friction\n"
  example: []
  syntax:
    content: float RollingFriction { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property RollingFriction As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  id: SpinningFriction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  langs:
  - csharp
  - vb
  name: SpinningFriction
  nameWithType: IPhysicBody3D.SpinningFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  type: Property
  source:
    id: SpinningFriction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IPhysicBody3D.cs
    startLine: 188
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the spinning fraction\n"
  example: []
  syntax:
    content: float SpinningFriction { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property SpinningFriction As Single
  overload: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction*
  modifiers.csharp:
  - get
  - set
references:
- uid: WaveEngine.Common.Physics3D
  commentId: N:WaveEngine.Common.Physics3D
  name: WaveEngine.Common.Physics3D
  nameWithType: WaveEngine.Common.Physics3D
  fullName: WaveEngine.Common.Physics3D
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  name: UserData
  nameWithType: IPhysicBody3D.UserData
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  name: InternalBody
  nameWithType: IPhysicBody3D.InternalBody
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  name: IsSensor
  nameWithType: IPhysicBody3D.IsSensor
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  name: Friction
  nameWithType: IPhysicBody3D.Friction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  name: Restitution
  nameWithType: IPhysicBody3D.Restitution
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  name: Flags
  nameWithType: IPhysicBody3D.Flags
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
- uid: WaveEngine.Common.Physics3D.StaticBody3DFlags
  commentId: T:WaveEngine.Common.Physics3D.StaticBody3DFlags
  parent: WaveEngine.Common.Physics3D
  name: StaticBody3DFlags
  nameWithType: StaticBody3DFlags
  fullName: WaveEngine.Common.Physics3D.StaticBody3DFlags
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  name: CollisionCategories
  nameWithType: IPhysicBody3D.CollisionCategories
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
- uid: WaveEngine.Common.Physics3D.CollisionCategory3D
  commentId: T:WaveEngine.Common.Physics3D.CollisionCategory3D
  parent: WaveEngine.Common.Physics3D
  name: CollisionCategory3D
  nameWithType: CollisionCategory3D
  fullName: WaveEngine.Common.Physics3D.CollisionCategory3D
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  name: MaskBits
  nameWithType: IPhysicBody3D.MaskBits
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  name: ColliderShapes
  nameWithType: IPhysicBody3D.ColliderShapes
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics3D.IColliderShape3D}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Common.Physics3D.IColliderShape3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IColliderShape3D>
  nameWithType: IEnumerable<IColliderShape3D>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Physics3D.IColliderShape3D>
  nameWithType.vb: IEnumerable(Of IColliderShape3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Physics3D.IColliderShape3D)
  name.vb: IEnumerable(Of IColliderShape3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Physics3D.IColliderShape3D
    name: IColliderShape3D
    nameWithType: IColliderShape3D
    fullName: WaveEngine.Common.Physics3D.IColliderShape3D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Physics3D.IColliderShape3D
    name: IColliderShape3D
    nameWithType: IColliderShape3D
    fullName: WaveEngine.Common.Physics3D.IColliderShape3D
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  name: Transform
  nameWithType: IPhysicBody3D.Transform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape
  name: AddColliderShape
  nameWithType: IPhysicBody3D.AddColliderShape
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape
- uid: WaveEngine.Common.Physics3D.IColliderShape3D
  commentId: T:WaveEngine.Common.Physics3D.IColliderShape3D
  parent: WaveEngine.Common.Physics3D
  name: IColliderShape3D
  nameWithType: IColliderShape3D
  fullName: WaveEngine.Common.Physics3D.IColliderShape3D
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape
  name: RemoveColliderShape
  nameWithType: IPhysicBody3D.RemoveColliderShape
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex
  name: GetColliderShapeByIndex
  nameWithType: IPhysicBody3D.GetColliderShapeByIndex
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform
  name: SetTransform
  nameWithType: IPhysicBody3D.SetTransform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  name: AnisotropicFriction
  nameWithType: IPhysicBody3D.AnisotropicFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  name: CcdMotionThreshold
  nameWithType: IPhysicBody3D.CcdMotionThreshold
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  name: CcdSweptSphereRadius
  nameWithType: IPhysicBody3D.CcdSweptSphereRadius
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  name: CompanionId
  nameWithType: IPhysicBody3D.CompanionId
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  name: ContactDamping
  nameWithType: IPhysicBody3D.ContactDamping
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  name: ContactProcessingThreshold
  nameWithType: IPhysicBody3D.ContactProcessingThreshold
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  name: ContactStiffness
  nameWithType: IPhysicBody3D.ContactStiffness
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  name: DeactivationTime
  nameWithType: IPhysicBody3D.DeactivationTime
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  name: HasContactResponse
  nameWithType: IPhysicBody3D.HasContactResponse
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  name: HitFraction
  nameWithType: IPhysicBody3D.HitFraction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  name: InterpolationAngularVelocity
  nameWithType: IPhysicBody3D.InterpolationAngularVelocity
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  name: InterpolationLinearVelocity
  nameWithType: IPhysicBody3D.InterpolationLinearVelocity
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  name: InterpolationWorldTransform
  nameWithType: IPhysicBody3D.InterpolationWorldTransform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  name: IsActive
  nameWithType: IPhysicBody3D.IsActive
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  name: IslandTag
  nameWithType: IPhysicBody3D.IslandTag
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  name: IsStaticObject
  nameWithType: IPhysicBody3D.IsStaticObject
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  name: RollingFriction
  nameWithType: IPhysicBody3D.RollingFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction*
  commentId: Overload:WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  name: SpinningFriction
  nameWithType: IPhysicBody3D.SpinningFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
