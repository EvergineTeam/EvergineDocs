### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  id: Vector3
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.Vector3.#ctor(System.Single)
  - WaveEngine.Common.Math.Vector3.#ctor(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector3.#ctor(WaveEngine.Common.Math.Vector2,System.Single)
  - WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3*)
  - WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Backward
  - WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.ClampMagnitude(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  - WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  - WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,System.Single@)
  - WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  - WaveEngine.Common.Math.Vector3.Down
  - WaveEngine.Common.Math.Vector3.Equals(System.Object)
  - WaveEngine.Common.Math.Vector3.Equals(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Forward
  - WaveEngine.Common.Math.Vector3.FromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.GetHashCode
  - WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Item(System.Int32)
  - WaveEngine.Common.Math.Vector3.Left
  - WaveEngine.Common.Math.Vector3.Length
  - WaveEngine.Common.Math.Vector3.LengthSquared
  - WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3*,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Normalize
  - WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.One
  - WaveEngine.Common.Math.Vector3.op_Addition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_Division(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.op_Division(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_Equality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_Inequality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_Multiply(System.Single,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.op_Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_Subtraction(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.op_UnaryNegation(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Right
  - WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.ToString
  - WaveEngine.Common.Math.Vector3.ToVector2
  - WaveEngine.Common.Math.Vector3.ToVector2(WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  - WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3[])
  - WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  - WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  - WaveEngine.Common.Math.Vector3.UnitX
  - WaveEngine.Common.Math.Vector3.UnitY
  - WaveEngine.Common.Math.Vector3.UnitZ
  - WaveEngine.Common.Math.Vector3.Up
  - WaveEngine.Common.Math.Vector3.X
  - WaveEngine.Common.Math.Vector3.Y
  - WaveEngine.Common.Math.Vector3.Z
  - WaveEngine.Common.Math.Vector3.Zero
  langs:
  - csharp
  - vb
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
  type: Struct
  source:
    id: Vector3
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents a 3D vector.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "Vector3", Namespace = "WaveEngine.Common.Math")]

      public struct Vector3 : IEquatable<Vector3>
    content.vb: >-
      <DataContract(Name:="Vector3", Namespace:="WaveEngine.Common.Math")>

      Public Structure Vector3

          Implements IEquatable(Of Vector3)
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Vector3}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Vector3
    - name: Namespace
      type: System.String
      value: WaveEngine.Common.Math
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.Vector3.X
  commentId: F:WaveEngine.Common.Math.Vector3.X
  id: X
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3.X
  fullName: WaveEngine.Common.Math.Vector3.X
  type: Field
  source:
    id: X
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 82
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nX component.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float X
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public X As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Y
  commentId: F:WaveEngine.Common.Math.Vector3.Y
  id: Y
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3.Y
  fullName: WaveEngine.Common.Math.Vector3.Y
  type: Field
  source:
    id: Y
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 90
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nY component.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Y
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Y As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Z
  commentId: F:WaveEngine.Common.Math.Vector3.Z
  id: Z
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3.Z
  fullName: WaveEngine.Common.Math.Vector3.Z
  type: Field
  source:
    id: Z
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 98
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nZ component.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Z
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Z As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Zero
  commentId: P:WaveEngine.Common.Math.Vector3.Zero
  id: Zero
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3.Zero
  fullName: WaveEngine.Common.Math.Vector3.Zero
  type: Property
  source:
    id: Zero
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 105
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the zero.\n"
  example: []
  syntax:
    content: public static Vector3 Zero { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Zero As Vector3
  overload: WaveEngine.Common.Math.Vector3.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.One
  commentId: P:WaveEngine.Common.Math.Vector3.One
  id: One
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3.One
  fullName: WaveEngine.Common.Math.Vector3.One
  type: Property
  source:
    id: One
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 116
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the one.\n"
  example: []
  syntax:
    content: public static Vector3 One { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property One As Vector3
  overload: WaveEngine.Common.Math.Vector3.One*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.UnitX
  commentId: P:WaveEngine.Common.Math.Vector3.UnitX
  id: UnitX
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: WaveEngine.Common.Math.Vector3.UnitX
  type: Property
  source:
    id: UnitX
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 127
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the unit X.\n"
  example: []
  syntax:
    content: public static Vector3 UnitX { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property UnitX As Vector3
  overload: WaveEngine.Common.Math.Vector3.UnitX*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.UnitY
  commentId: P:WaveEngine.Common.Math.Vector3.UnitY
  id: UnitY
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: WaveEngine.Common.Math.Vector3.UnitY
  type: Property
  source:
    id: UnitY
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 138
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the unit Y.\n"
  example: []
  syntax:
    content: public static Vector3 UnitY { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property UnitY As Vector3
  overload: WaveEngine.Common.Math.Vector3.UnitY*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.UnitZ
  commentId: P:WaveEngine.Common.Math.Vector3.UnitZ
  id: UnitZ
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: WaveEngine.Common.Math.Vector3.UnitZ
  type: Property
  source:
    id: UnitZ
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 149
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the unit Z.\n"
  example: []
  syntax:
    content: public static Vector3 UnitZ { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property UnitZ As Vector3
  overload: WaveEngine.Common.Math.Vector3.UnitZ*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.Up
  commentId: P:WaveEngine.Common.Math.Vector3.Up
  id: Up
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: Vector3.Up
  fullName: WaveEngine.Common.Math.Vector3.Up
  type: Property
  source:
    id: Up
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 160
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets up.\n"
  example: []
  syntax:
    content: public static Vector3 Up { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Up As Vector3
  overload: WaveEngine.Common.Math.Vector3.Up*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.Down
  commentId: P:WaveEngine.Common.Math.Vector3.Down
  id: Down
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: Vector3.Down
  fullName: WaveEngine.Common.Math.Vector3.Down
  type: Property
  source:
    id: Down
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 171
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets down.\n"
  example: []
  syntax:
    content: public static Vector3 Down { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Down As Vector3
  overload: WaveEngine.Common.Math.Vector3.Down*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.Right
  commentId: P:WaveEngine.Common.Math.Vector3.Right
  id: Right
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Vector3.Right
  fullName: WaveEngine.Common.Math.Vector3.Right
  type: Property
  source:
    id: Right
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 182
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the right.\n"
  example: []
  syntax:
    content: public static Vector3 Right { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Right As Vector3
  overload: WaveEngine.Common.Math.Vector3.Right*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.Left
  commentId: P:WaveEngine.Common.Math.Vector3.Left
  id: Left
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Vector3.Left
  fullName: WaveEngine.Common.Math.Vector3.Left
  type: Property
  source:
    id: Left
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 193
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the left.\n"
  example: []
  syntax:
    content: public static Vector3 Left { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Left As Vector3
  overload: WaveEngine.Common.Math.Vector3.Left*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.Forward
  commentId: P:WaveEngine.Common.Math.Vector3.Forward
  id: Forward
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: Vector3.Forward
  fullName: WaveEngine.Common.Math.Vector3.Forward
  type: Property
  source:
    id: Forward
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 204
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the forward.\n"
  example: []
  syntax:
    content: public static Vector3 Forward { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Forward As Vector3
  overload: WaveEngine.Common.Math.Vector3.Forward*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.Backward
  commentId: P:WaveEngine.Common.Math.Vector3.Backward
  id: Backward
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Backward
  nameWithType: Vector3.Backward
  fullName: WaveEngine.Common.Math.Vector3.Backward
  type: Property
  source:
    id: Backward
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 215
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the backward.\n"
  example: []
  syntax:
    content: public static Vector3 Backward { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public Shared ReadOnly Property Backward As Vector3
  overload: WaveEngine.Common.Math.Vector3.Backward*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Vector3.#ctor(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Single, Single, Single)
  nameWithType: Vector3.Vector3(Single, Single, Single)
  fullName: WaveEngine.Common.Math.Vector3.Vector3(System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 251
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Vector3(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: The x.
    - id: y
      type: System.Single
      description: The y.
    - id: z
      type: System.Single
      description: The z.
    content.vb: Public Sub New(x As Single, y As Single, z As Single)
  overload: WaveEngine.Common.Math.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.#ctor(System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Single)
  nameWithType: Vector3.Vector3(Single)
  fullName: WaveEngine.Common.Math.Vector3.Vector3(System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 262
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Vector3(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value.
    content.vb: Public Sub New(value As Single)
  overload: WaveEngine.Common.Math.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.#ctor(WaveEngine.Common.Math.Vector2,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.#ctor(WaveEngine.Common.Math.Vector2,System.Single)
  id: '#ctor(WaveEngine.Common.Math.Vector2,System.Single)'
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Vector2, Single)
  nameWithType: Vector3.Vector3(Vector2, Single)
  fullName: WaveEngine.Common.Math.Vector3.Vector3(WaveEngine.Common.Math.Vector2, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 272
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Vector3\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Vector3(Vector2 value, float z)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector2
      description: The value.
    - id: z
      type: System.Single
      description: The z.
    content.vb: Public Sub New(value As Vector2, z As Single)
  overload: WaveEngine.Common.Math.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.ToString
  commentId: M:WaveEngine.Common.Math.Vector3.ToString
  id: ToString
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: WaveEngine.Common.Math.Vector3.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 289
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: WaveEngine.Common.Math.Vector3.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Vector3.Equals(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Equals(WaveEngine.Common.Math.Vector3)
  id: Equals(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Equals(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 303
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(Vector3 other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Vector3
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(other As Vector3) As Boolean
  overload: WaveEngine.Common.Math.Vector3.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Vector3}.Equals(WaveEngine.Common.Math.Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Equals(System.Object)
  commentId: M:WaveEngine.Common.Math.Vector3.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector3.Equals(Object)
  fullName: WaveEngine.Common.Math.Vector3.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 325
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Math.Vector3.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Vector3.GetHashCode
  commentId: M:WaveEngine.Common.Math.Vector3.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: WaveEngine.Common.Math.Vector3.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 342
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Math.Vector3.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Vector3.Length
  commentId: M:WaveEngine.Common.Math.Vector3.Length
  id: Length
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Vector3.Length()
  fullName: WaveEngine.Common.Math.Vector3.Length()
  type: Method
  source:
    id: Length
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 355
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLengthes this instance.\n"
  example: []
  syntax:
    content: public float Length()
    return:
      type: System.Single
      description: The result.
    content.vb: Public Function Length As Single
  overload: WaveEngine.Common.Math.Vector3.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.LengthSquared
  commentId: M:WaveEngine.Common.Math.Vector3.LengthSquared
  id: LengthSquared
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Vector3.LengthSquared()
  fullName: WaveEngine.Common.Math.Vector3.LengthSquared()
  type: Method
  source:
    id: LengthSquared
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 365
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLengthes the squared.\n"
  example: []
  syntax:
    content: public float LengthSquared()
    return:
      type: System.Single
      description: The result.
    content.vb: Public Function LengthSquared As Single
  overload: WaveEngine.Common.Math.Vector3.LengthSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.ToVector2
  commentId: M:WaveEngine.Common.Math.Vector3.ToVector2
  id: ToVector2
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: ToVector2()
  nameWithType: Vector3.ToVector2()
  fullName: WaveEngine.Common.Math.Vector3.ToVector2()
  type: Method
  source:
    id: ToVector2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 374
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConvert the Vector3 into a Vector2\n"
  example: []
  syntax:
    content: public Vector2 ToVector2()
    return:
      type: WaveEngine.Common.Math.Vector2
      description: Return a Vector2 with the X and Y components
    content.vb: Public Function ToVector2 As Vector2
  overload: WaveEngine.Common.Math.Vector3.ToVector2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.ToVector2(WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Math.Vector3.ToVector2(WaveEngine.Common.Math.Vector2@)
  id: ToVector2(WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: ToVector2(out Vector2)
  nameWithType: Vector3.ToVector2(out Vector2)
  fullName: WaveEngine.Common.Math.Vector3.ToVector2(out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: ToVector2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 383
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConvert a Vector3 into a Vector2\n"
  example: []
  syntax:
    content: public void ToVector2(out Vector2 result)
    parameters:
    - id: result
      type: WaveEngine.Common.Math.Vector2
      description: The converted vector
    content.vb: Public Sub ToVector2(ByRef result As Vector2)
  overload: WaveEngine.Common.Math.Vector3.ToVector2*
  nameWithType.vb: Vector3.ToVector2(ByRef Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector3.ToVector2(ByRef WaveEngine.Common.Math.Vector2)
  name.vb: ToVector2(ByRef Vector2)
- uid: WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Distance(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Distance(Vector3, Vector3)
  nameWithType: Vector3.Distance(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Distance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 395
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the specified value1.\n"
  example: []
  syntax:
    content: public static float Distance(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Distance(value1 As Vector3, value2 As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.FromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.FromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  id: FromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: FromQuaternion(ref Quaternion, out Vector3)
  nameWithType: Vector3.FromQuaternion(ref Quaternion, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.FromQuaternion(ref WaveEngine.Common.Math.Quaternion, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: FromQuaternion
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 409
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFroms the quaternion.\n"
  example: []
  syntax:
    content: public static void FromQuaternion(ref Quaternion q, out Vector3 result)
    parameters:
    - id: q
      type: WaveEngine.Common.Math.Quaternion
      description: The q.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub FromQuaternion(ByRef q As Quaternion, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.FromQuaternion*
  nameWithType.vb: Vector3.FromQuaternion(ByRef Quaternion, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.FromQuaternion(ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: FromQuaternion(ByRef Quaternion, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector3.Distance(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  id: Distance(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Distance(ref Vector3, ref Vector3, out Single)
  nameWithType: Vector3.Distance(ref Vector3, ref Vector3, out Single)
  fullName: WaveEngine.Common.Math.Vector3.Distance(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out System.Single)
  type: Method
  source:
    id: Distance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 422
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the specified value1.\n"
  example: []
  syntax:
    content: public static void Distance(ref Vector3 value1, ref Vector3 value2, out float result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub Distance(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector3.Distance*
  nameWithType.vb: Vector3.Distance(ByRef Vector3, ByRef Vector3, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Distance(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef System.Single)
  name.vb: Distance(ByRef Vector3, ByRef Vector3, ByRef Single)
- uid: WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: DistanceSquared(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector3, Vector3)
  nameWithType: Vector3.DistanceSquared(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: DistanceSquared
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 438
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the squared.\n"
  example: []
  syntax:
    content: public static float DistanceSquared(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function DistanceSquared(value1 As Vector3, value2 As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector3.DistanceSquared(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  id: DistanceSquared(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: DistanceSquared(ref Vector3, ref Vector3, out Single)
  nameWithType: Vector3.DistanceSquared(ref Vector3, ref Vector3, out Single)
  fullName: WaveEngine.Common.Math.Vector3.DistanceSquared(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out System.Single)
  type: Method
  source:
    id: DistanceSquared
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 453
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDistances the squared.\n"
  example: []
  syntax:
    content: public static void DistanceSquared(ref Vector3 value1, ref Vector3 value2, out float result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub DistanceSquared(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector3.DistanceSquared*
  nameWithType.vb: Vector3.DistanceSquared(ByRef Vector3, ByRef Vector3, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.DistanceSquared(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef System.Single)
  name.vb: DistanceSquared(ByRef Vector3, ByRef Vector3, ByRef Single)
- uid: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Dot(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Dot(Vector3, Vector3)
  nameWithType: Vector3.Dot(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 468
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDots the specified vector1.\n"
  example: []
  syntax:
    content: public static float Dot(Vector3 vector1, Vector3 vector2)
    parameters:
    - id: vector1
      type: WaveEngine.Common.Math.Vector3
      description: The vector1.
    - id: vector2
      type: WaveEngine.Common.Math.Vector3
      description: The vector2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Dot(vector1 As Vector3, vector2 As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Dot(ref Vector3, ref Vector3)
  nameWithType: Vector3.Dot(ref Vector3, ref Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Dot(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 479
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDots the specified vector1.\n"
  example: []
  syntax:
    content: public static float Dot(ref Vector3 vector1, ref Vector3 vector2)
    parameters:
    - id: vector1
      type: WaveEngine.Common.Math.Vector3
      description: The vector1.
    - id: vector2
      type: WaveEngine.Common.Math.Vector3
      description: The vector2.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Shared Function Dot(ByRef vector1 As Vector3, ByRef vector2 As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Dot*
  nameWithType.vb: Vector3.Dot(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Dot(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Dot(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  id: Dot(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Dot(ref Vector3, ref Vector3, out Single)
  nameWithType: Vector3.Dot(ref Vector3, ref Vector3, out Single)
  fullName: WaveEngine.Common.Math.Vector3.Dot(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out System.Single)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 490
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDots the specified vector1.\n"
  example: []
  syntax:
    content: public static void Dot(ref Vector3 vector1, ref Vector3 vector2, out float result)
    parameters:
    - id: vector1
      type: WaveEngine.Common.Math.Vector3
      description: The vector1.
    - id: vector2
      type: WaveEngine.Common.Math.Vector3
      description: The vector2.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Shared Sub Dot(ByRef vector1 As Vector3, ByRef vector2 As Vector3, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector3.Dot*
  nameWithType.vb: Vector3.Dot(ByRef Vector3, ByRef Vector3, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Dot(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef System.Single)
  name.vb: Dot(ByRef Vector3, ByRef Vector3, ByRef Single)
- uid: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3)
  id: Dot(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Dot(Vector3)
  nameWithType: Vector3.Dot(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 500
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDot product with a vector.\n"
  example: []
  syntax:
    content: public float Dot(Vector3 vector)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector.
    return:
      type: System.Single
      description: The result.
    content.vb: Public Function Dot(vector As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,System.Single@)
  commentId: M:WaveEngine.Common.Math.Vector3.Dot(WaveEngine.Common.Math.Vector3@,System.Single@)
  id: Dot(WaveEngine.Common.Math.Vector3@,System.Single@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Dot(ref Vector3, out Single)
  nameWithType: Vector3.Dot(ref Vector3, out Single)
  fullName: WaveEngine.Common.Math.Vector3.Dot(ref WaveEngine.Common.Math.Vector3, out System.Single)
  type: Method
  source:
    id: Dot
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 512
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDot product with a vector.\n"
  example: []
  syntax:
    content: public void Dot(ref Vector3 vector, out float result)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector.
    - id: result
      type: System.Single
      description: The result.
    content.vb: Public Sub Dot(ByRef vector As Vector3, ByRef result As Single)
  overload: WaveEngine.Common.Math.Vector3.Dot*
  nameWithType.vb: Vector3.Dot(ByRef Vector3, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector3.Dot(ByRef WaveEngine.Common.Math.Vector3, ByRef System.Single)
  name.vb: Dot(ByRef Vector3, ByRef Single)
- uid: WaveEngine.Common.Math.Vector3.Normalize
  commentId: M:WaveEngine.Common.Math.Vector3.Normalize
  id: Normalize
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector3.Normalize()
  fullName: WaveEngine.Common.Math.Vector3.Normalize()
  type: Method
  source:
    id: Normalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 521
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNormalizes this instance.\n"
  example: []
  syntax:
    content: public float Normalize()
    return:
      type: System.Single
      description: The previous vector length
    content.vb: Public Function Normalize As Single
  overload: WaveEngine.Common.Math.Vector3.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3)
  id: Normalize(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Normalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 540
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNormalizes the specified value.\n"
  example: []
  syntax:
    content: public static Vector3 Normalize(Vector3 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The normalized vector.
    content.vb: Public Shared Function Normalize(value As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Normalize(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Normalize(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Normalize(ref Vector3, out Vector3)
  nameWithType: Vector3.Normalize(ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Normalize(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Normalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 567
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNormalizes the specified value.\n"
  example: []
  syntax:
    content: public static float Normalize(ref Vector3 value, out Vector3 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    return:
      type: System.Single
      description: The previous vector length
    content.vb: Public Shared Function Normalize(ByRef value As Vector3, ByRef result As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Normalize*
  nameWithType.vb: Vector3.Normalize(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Normalize(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Normalize(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Cross(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Cross(Vector3, Vector3)
  nameWithType: Vector3.Cross(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 593
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCrosses the specified vector1.\n"
  example: []
  syntax:
    content: public static Vector3 Cross(Vector3 vector1, Vector3 vector2)
    parameters:
    - id: vector1
      type: WaveEngine.Common.Math.Vector3
      description: The vector1.
    - id: vector2
      type: WaveEngine.Common.Math.Vector3
      description: The vector2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Cross(vector1 As Vector3, vector2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Cross(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Cross(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Cross(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 609
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCrosses the specified vector1.\n"
  example: []
  syntax:
    content: public static void Cross(ref Vector3 vector1, ref Vector3 vector2, out Vector3 result)
    parameters:
    - id: vector1
      type: WaveEngine.Common.Math.Vector3
      description: The vector1.
    - id: vector2
      type: WaveEngine.Common.Math.Vector3
      description: The vector2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Cross(ByRef vector1 As Vector3, ByRef vector2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Cross*
  nameWithType.vb: Vector3.Cross(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Cross(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Cross(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3)
  id: Cross(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Cross(Vector3)
  nameWithType: Vector3.Cross(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 625
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCross product.\n"
  example: []
  syntax:
    content: public Vector3 Cross(Vector3 vector)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Function Cross(vector As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Cross*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Cross(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Cross(ref Vector3, out Vector3)
  nameWithType: Vector3.Cross(ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Cross(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Cross
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 638
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCrosses the specified vector1.\n"
  example: []
  syntax:
    content: public void Cross(ref Vector3 vector, out Vector3 result)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Sub Cross(ByRef vector As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Cross*
  nameWithType.vb: Vector3.Cross(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector3.Cross(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Cross(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Reflect(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Reflect(Vector3, Vector3)
  nameWithType: Vector3.Reflect(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Reflect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 649
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReflects the specified vector.\n"
  example: []
  syntax:
    content: public static Vector3 Reflect(Vector3 vector, Vector3 normal)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector.
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Reflect(vector As Vector3, normal As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Reflect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Reflect(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Reflect(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Reflect(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Reflect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 666
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReflects the specified vector.\n"
  example: []
  syntax:
    content: public static void Reflect(ref Vector3 vector, ref Vector3 normal, out Vector3 result)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector.
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Reflect(ByRef vector As Vector3, ByRef normal As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Reflect*
  nameWithType.vb: Vector3.Reflect(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Reflect(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Reflect(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3)
  id: Reflect(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Reflect(Vector3)
  nameWithType: Vector3.Reflect(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Reflect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 680
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReflects the specified vector.\n"
  example: []
  syntax:
    content: public Vector3 Reflect(Vector3 normal)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Function Reflect(normal As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Reflect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Reflect(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Reflect(ref Vector3, out Vector3)
  nameWithType: Vector3.Reflect(ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Reflect(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Reflect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 693
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReflects the specified vector.\n"
  example: []
  syntax:
    content: public void Reflect(ref Vector3 normal, out Vector3 result)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Sub Reflect(ByRef normal As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Reflect*
  nameWithType.vb: Vector3.Reflect(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector3.Reflect(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Reflect(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Min(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Min(Vector3, Vector3)
  nameWithType: Vector3.Min(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 704
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMins the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Min(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Min(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Min(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Min(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Min(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Min(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Min(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Min
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 720
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMins the specified value1.\n"
  example: []
  syntax:
    content: public static void Min(ref Vector3 value1, ref Vector3 value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Min(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Min*
  nameWithType.vb: Vector3.Min(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Min(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Min(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Max(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Max(Vector3, Vector3)
  nameWithType: Vector3.Max(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 733
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMaxes the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Max(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Max(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Max(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Max(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Max(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Max(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Max(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Max
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 749
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMaxes the specified value1.\n"
  example: []
  syntax:
    content: public static void Max(ref Vector3 value1, ref Vector3 value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Max(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Max*
  nameWithType.vb: Vector3.Max(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Max(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Max(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3)
  id: Abs(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Abs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 761
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a vector whose elements are the absolute values of each of the specified vector&apos;s elements.\n"
  example: []
  syntax:
    content: public static Vector3 Abs(Vector3 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: A vector.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The absolute value vector.
    content.vb: Public Shared Function Abs(value As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Abs(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Abs(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Abs(ref Vector3, out Vector3)
  nameWithType: Vector3.Abs(ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Abs(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Abs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 775
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a vector whose elements are the absolute values of each of the specified vector&apos;s elements.\n"
  example: []
  syntax:
    content: public static void Abs(ref Vector3 value, out Vector3 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: A vector.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: When this method returns, contains the absolute value vector.
    content.vb: Public Shared Sub Abs(ByRef value As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Abs*
  nameWithType.vb: Vector3.Abs(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Abs(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Abs(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Clamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Clamp(Vector3, Vector3, Vector3)
  nameWithType: Vector3.Clamp(Vector3, Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Clamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 789
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClamps the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Clamp(Vector3 value1, Vector3 min, Vector3 max)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: min
      type: WaveEngine.Common.Math.Vector3
      description: The min.
    - id: max
      type: WaveEngine.Common.Math.Vector3
      description: The max.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Clamp(value1 As Vector3, min As Vector3, max As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Clamp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Clamp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Clamp(ref Vector3, ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Clamp(ref Vector3, ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Clamp(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Clamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 818
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nClamps the specified value1.\n"
  example: []
  syntax:
    content: public static void Clamp(ref Vector3 value1, ref Vector3 min, ref Vector3 max, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: min
      type: WaveEngine.Common.Math.Vector3
      description: The min.
    - id: max
      type: WaveEngine.Common.Math.Vector3
      description: The max.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Clamp(ByRef value1 As Vector3, ByRef min As Vector3, ByRef max As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Clamp*
  nameWithType.vb: Vector3.Clamp(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Clamp(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Clamp(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  id: Lerp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(Vector3, Vector3, Single)
  nameWithType: Vector3.Lerp(Vector3, Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 844
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Lerp(Vector3 value1, Vector3 value2, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Lerp(value1 As Vector3, value2 As Vector3, amount As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Lerp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  id: Lerp(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(ref Vector3, ref Vector3, Single, out Vector3)
  nameWithType: Vector3.Lerp(ref Vector3, ref Vector3, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Lerp(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 861
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified value1.\n"
  example: []
  syntax:
    content: public static void Lerp(ref Vector3 value1, ref Vector3 value2, float amount, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Lerp(ByRef value1 As Vector3, ByRef value2 As Vector3, amount As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Lerp*
  nameWithType.vb: Vector3.Lerp(ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Lerp(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Lerp(ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  id: Barycentric(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Barycentric(Vector3, Vector3, Vector3, Single, Single)
  nameWithType: Vector3.Barycentric(Vector3, Vector3, Vector3, Single, Single)
  fullName: WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Single, System.Single)
  type: Method
  source:
    id: Barycentric
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 877
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBarycentrics the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Barycentric(Vector3 value1, Vector3 value2, Vector3 value3, float amount1, float amount2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector3
      description: The value3.
    - id: amount1
      type: System.Single
      description: The amount1.
    - id: amount2
      type: System.Single
      description: The amount2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Barycentric(value1 As Vector3, value2 As Vector3, value3 As Vector3, amount1 As Single, amount2 As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Barycentric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Barycentric(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,WaveEngine.Common.Math.Vector3@)
  id: Barycentric(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Barycentric(ref Vector3, ref Vector3, ref Vector3, Single, Single, out Vector3)
  nameWithType: Vector3.Barycentric(ref Vector3, ref Vector3, ref Vector3, Single, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Barycentric(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Barycentric
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 896
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nBarycentrics the specified value1.\n"
  example: []
  syntax:
    content: public static void Barycentric(ref Vector3 value1, ref Vector3 value2, ref Vector3 value3, float amount1, float amount2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector3
      description: The value3.
    - id: amount1
      type: System.Single
      description: The amount1.
    - id: amount2
      type: System.Single
      description: The amount2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Barycentric(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef value3 As Vector3, amount1 As Single, amount2 As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Barycentric*
  nameWithType.vb: Vector3.Barycentric(ByRef Vector3, ByRef Vector3, ByRef Vector3, Single, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Barycentric(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Barycentric(ByRef Vector3, ByRef Vector3, ByRef Vector3, Single, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  id: SmoothStep(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: SmoothStep(Vector3, Vector3, Single)
  nameWithType: Vector3.SmoothStep(Vector3, Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: SmoothStep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 910
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSmoothes the step.\n"
  example: []
  syntax:
    content: public static Vector3 SmoothStep(Vector3 value1, Vector3 value2, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function SmoothStep(value1 As Vector3, value2 As Vector3, amount As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.SmoothStep(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  id: SmoothStep(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: SmoothStep(ref Vector3, ref Vector3, Single, out Vector3)
  nameWithType: Vector3.SmoothStep(ref Vector3, ref Vector3, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.SmoothStep(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: SmoothStep
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 929
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSmoothes the step.\n"
  example: []
  syntax:
    content: public static void SmoothStep(ref Vector3 value1, ref Vector3 value2, float amount, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub SmoothStep(ByRef value1 As Vector3, ByRef value2 As Vector3, amount As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.SmoothStep*
  nameWithType.vb: Vector3.SmoothStep(ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.SmoothStep(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: SmoothStep(ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single)
  id: SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: SmoothDamp(Vector3, Vector3, ref Vector3, Single, Single)
  nameWithType: Vector3.SmoothDamp(Vector3, Vector3, ref Vector3, Single, Single)
  fullName: WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, System.Single)
  type: Method
  source:
    id: SmoothDamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 948
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChanges a vector towards a desired goal over time\n"
  example: []
  syntax:
    content: public static Vector3 SmoothDamp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float gameTime)
    parameters:
    - id: current
      type: WaveEngine.Common.Math.Vector3
      description: The current position
    - id: target
      type: WaveEngine.Common.Math.Vector3
      description: The target position we are trying to reach
    - id: currentVelocity
      type: WaveEngine.Common.Math.Vector3
      description: The current velocity, modified by the function
    - id: smoothTime
      type: System.Single
      description: The time it will take to reach the target.
    - id: gameTime
      type: System.Single
      description: The current game time (time between last frame)
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The smooth vector
    content.vb: Public Shared Function SmoothDamp(current As Vector3, target As Vector3, ByRef currentVelocity As Vector3, smoothTime As Single, gameTime As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.SmoothDamp*
  nameWithType.vb: Vector3.SmoothDamp(Vector3, Vector3, ByRef Vector3, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, System.Single)
  name.vb: SmoothDamp(Vector3, Vector3, ByRef Vector3, Single, Single)
- uid: WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,System.Single)
  id: SmoothDamp(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3@,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: SmoothDamp(Vector3, Vector3, ref Vector3, Single, Single, Single)
  nameWithType: Vector3.SmoothDamp(Vector3, Vector3, ref Vector3, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: SmoothDamp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 983
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nChanges a vector towards a desired goal over time\n"
  example: []
  syntax:
    content: public static Vector3 SmoothDamp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed, float gameTime)
    parameters:
    - id: current
      type: WaveEngine.Common.Math.Vector3
      description: The current position
    - id: target
      type: WaveEngine.Common.Math.Vector3
      description: The target position we are trying to reach
    - id: currentVelocity
      type: WaveEngine.Common.Math.Vector3
      description: The current velocity, modified by the function
    - id: smoothTime
      type: System.Single
      description: The time it will take to reach the target.
    - id: maxSpeed
      type: System.Single
      description: The maximum speed
    - id: gameTime
      type: System.Single
      description: The current game time (time between last frame)
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The smooth vector
    content.vb: Public Shared Function SmoothDamp(current As Vector3, target As Vector3, ByRef currentVelocity As Vector3, smoothTime As Single, maxSpeed As Single, gameTime As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.SmoothDamp*
  nameWithType.vb: Vector3.SmoothDamp(Vector3, Vector3, ByRef Vector3, Single, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.SmoothDamp(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, System.Single, System.Single)
  name.vb: SmoothDamp(Vector3, Vector3, ByRef Vector3, Single, Single, Single)
- uid: WaveEngine.Common.Math.Vector3.ClampMagnitude(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.ClampMagnitude(WaveEngine.Common.Math.Vector3,System.Single)
  id: ClampMagnitude(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: ClampMagnitude(Vector3, Single)
  nameWithType: Vector3.ClampMagnitude(Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.ClampMagnitude(WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: ClampMagnitude
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1016
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a vector with its magnitude clamped to maxLength.\n"
  example: []
  syntax:
    content: public static Vector3 ClampMagnitude(Vector3 vector, float maxLength)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector3
      description: The vector
    - id: maxLength
      type: System.Single
      description: The max length
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The clamped vector
    content.vb: Public Shared Function ClampMagnitude(vector As Vector3, maxLength As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.ClampMagnitude*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  id: CatmullRom(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: CatmullRom(Vector3, Vector3, Vector3, Vector3, Single)
  nameWithType: Vector3.CatmullRom(Vector3, Vector3, Vector3, Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: CatmullRom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1036
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCatmulls the rom.\n"
  example: []
  syntax:
    content: public static Vector3 CatmullRom(Vector3 value1, Vector3 value2, Vector3 value3, Vector3 value4, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector3
      description: The value3.
    - id: value4
      type: WaveEngine.Common.Math.Vector3
      description: The value4.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function CatmullRom(value1 As Vector3, value2 As Vector3, value3 As Vector3, value4 As Vector3, amount As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.CatmullRom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.CatmullRom(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  id: CatmullRom(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: CatmullRom(ref Vector3, ref Vector3, ref Vector3, ref Vector3, Single, out Vector3)
  nameWithType: Vector3.CatmullRom(ref Vector3, ref Vector3, ref Vector3, ref Vector3, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.CatmullRom(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CatmullRom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1058
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCatmulls the rom.\n"
  example: []
  syntax:
    content: public static void CatmullRom(ref Vector3 value1, ref Vector3 value2, ref Vector3 value3, ref Vector3 value4, float amount, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: value3
      type: WaveEngine.Common.Math.Vector3
      description: The value3.
    - id: value4
      type: WaveEngine.Common.Math.Vector3
      description: The value4.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub CatmullRom(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef value3 As Vector3, ByRef value4 As Vector3, amount As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.CatmullRom*
  nameWithType.vb: Vector3.CatmullRom(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.CatmullRom(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: CatmullRom(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  id: Hermite(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Hermite(Vector3, Vector3, Vector3, Vector3, Single)
  nameWithType: Vector3.Hermite(Vector3, Vector3, Vector3, Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: Hermite
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1076
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nHermites the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Hermite(Vector3 value1, Vector3 tangent1, Vector3 value2, Vector3 tangent2, float amount)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: tangent1
      type: WaveEngine.Common.Math.Vector3
      description: The tangent1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: tangent2
      type: WaveEngine.Common.Math.Vector3
      description: The tangent2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Hermite(value1 As Vector3, tangent1 As Vector3, value2 As Vector3, tangent2 As Vector3, amount As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Hermite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Hermite(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  id: Hermite(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Hermite(ref Vector3, ref Vector3, ref Vector3, ref Vector3, Single, out Vector3)
  nameWithType: Vector3.Hermite(ref Vector3, ref Vector3, ref Vector3, ref Vector3, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Hermite(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Hermite
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1102
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nHermites the specified value1.\n"
  example: []
  syntax:
    content: public static void Hermite(ref Vector3 value1, ref Vector3 tangent1, ref Vector3 value2, ref Vector3 tangent2, float amount, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: tangent1
      type: WaveEngine.Common.Math.Vector3
      description: The tangent1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: tangent2
      type: WaveEngine.Common.Math.Vector3
      description: The tangent2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Hermite(ByRef value1 As Vector3, ByRef tangent1 As Vector3, ByRef value2 As Vector3, ByRef tangent2 As Vector3, amount As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Hermite*
  nameWithType.vb: Vector3.Hermite(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Hermite(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Hermite(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  id: Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Matrix)
  nameWithType: Vector3.Transform(Vector3, Matrix)
  fullName: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1122
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified position.\n"
  example: []
  syntax:
    content: public static Vector3 Transform(Vector3 position, Matrix matrix)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The position.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Transform(position As Vector3, matrix As Matrix) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  id: Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Transform(ref Vector3, ref Matrix, out Vector3)
  nameWithType: Vector3.Transform(ref Vector3, ref Matrix, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Transform(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1142
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified position.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector3 position, ref Matrix matrix, out Vector3 result)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The position.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Transform(ByRef position As Vector3, ByRef matrix As Matrix, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Transform*
  nameWithType.vb: Vector3.Transform(ByRef Vector3, ByRef Matrix, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Transform(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Transform(ByRef Vector3, ByRef Matrix, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  commentId: M:WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  id: Transform(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3*, ref Matrix, Vector3*)
  nameWithType: Vector3.Transform(Vector3*, ref Matrix, Vector3*)
  fullName: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3*, ref WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector3*)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1159
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified position.\n"
  example: []
  syntax:
    content: public static void Transform(Vector3*position, ref Matrix matrix, Vector3*result)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3*
      description: The position.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Vector3*
      description: The result.
    content.vb: Public Shared Sub Transform(position As Vector3 *, ByRef matrix As Matrix, result As Vector3 *)
  overload: WaveEngine.Common.Math.Vector3.Transform*
  nameWithType.vb: Vector3.Transform(Vector3*, ByRef Matrix, Vector3*)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3*, ByRef WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector3*)
  name.vb: Transform(Vector3*, ByRef Matrix, Vector3*)
- uid: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3[])
  commentId: M:WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3[])
  id: Transform(WaveEngine.Common.Math.Vector3[],WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3[])
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3[], ref Matrix, Vector3[])
  nameWithType: Vector3.Transform(Vector3[], ref Matrix, Vector3[])
  fullName: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3[], ref WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector3[])
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1176
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified positions.\n"
  example: []
  syntax:
    content: public static void Transform(Vector3[] positions, ref Matrix matrix, Vector3[] results)
    parameters:
    - id: positions
      type: WaveEngine.Common.Math.Vector3[]
      description: The positions.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: results
      type: WaveEngine.Common.Math.Vector3[]
      description: The results.
    content.vb: Public Shared Sub Transform(positions As Vector3(), ByRef matrix As Matrix, results As Vector3())
  overload: WaveEngine.Common.Math.Vector3.Transform*
  nameWithType.vb: Vector3.Transform(Vector3(), ByRef Matrix, Vector3())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3(), ByRef WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector3())
  name.vb: Transform(Vector3(), ByRef Matrix, Vector3())
- uid: WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  id: TransformNormal(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(Vector3, Matrix)
  nameWithType: Vector3.TransformNormal(Vector3, Matrix)
  fullName: WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: TransformNormal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1190
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the normal.\n"
  example: []
  syntax:
    content: public static Vector3 TransformNormal(Vector3 normal, Matrix matrix)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function TransformNormal(normal As Vector3, matrix As Matrix) As Vector3
  overload: WaveEngine.Common.Math.Vector3.TransformNormal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  id: TransformNormal(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(ref Vector3, ref Matrix, out Vector3)
  nameWithType: Vector3.TransformNormal(ref Vector3, ref Matrix, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.TransformNormal(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: TransformNormal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1210
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the normal.\n"
  example: []
  syntax:
    content: public static void TransformNormal(ref Vector3 normal, ref Matrix matrix, out Vector3 result)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub TransformNormal(ByRef normal As Vector3, ByRef matrix As Matrix, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.TransformNormal*
  nameWithType.vb: Vector3.TransformNormal(ByRef Vector3, ByRef Matrix, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.TransformNormal(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: TransformNormal(ByRef Vector3, ByRef Matrix, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  commentId: M:WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  id: TransformNormal(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3*)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(Vector3*, ref Matrix, Vector3*)
  nameWithType: Vector3.TransformNormal(Vector3*, ref Matrix, Vector3*)
  fullName: WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3*, ref WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector3*)
  type: Method
  source:
    id: TransformNormal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1227
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the normal.\n"
  example: []
  syntax:
    content: public static void TransformNormal(Vector3*normal, ref Matrix matrix, Vector3*result)
    parameters:
    - id: normal
      type: WaveEngine.Common.Math.Vector3*
      description: The normal.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Vector3*
      description: The result.
    content.vb: Public Shared Sub TransformNormal(normal As Vector3 *, ByRef matrix As Matrix, result As Vector3 *)
  overload: WaveEngine.Common.Math.Vector3.TransformNormal*
  nameWithType.vb: Vector3.TransformNormal(Vector3*, ByRef Matrix, Vector3*)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.TransformNormal(WaveEngine.Common.Math.Vector3*, ByRef WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Vector3*)
  name.vb: TransformNormal(Vector3*, ByRef Matrix, Vector3*)
- uid: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  id: Transform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Quaternion)
  nameWithType: Vector3.Transform(Vector3, Quaternion)
  fullName: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1244
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified value.\n"
  example: []
  syntax:
    content: public static Vector3 Transform(Vector3 value, Quaternion rotation)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Transform(value As Vector3, rotation As Quaternion) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  id: Transform(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Transform(ref Vector3, ref Quaternion, out Vector3)
  nameWithType: Vector3.Transform(ref Vector3, ref Quaternion, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Transform(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Quaternion, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1276
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified value.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector3 value, ref Quaternion rotation, out Vector3 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Transform(ByRef value As Vector3, ByRef rotation As Quaternion, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Transform*
  nameWithType.vb: Vector3.Transform(ByRef Vector3, ByRef Quaternion, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Transform(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Transform(ByRef Vector3, ByRef Quaternion, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  id: TransformCoordinate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: TransformCoordinate(ref Vector3, ref Matrix, out Vector3)
  nameWithType: Vector3.TransformCoordinate(ref Vector3, ref Matrix, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.TransformCoordinate(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: TransformCoordinate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1312
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nPerforms a coordinate transformation using the given <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nA coordinate transform performs the transformation with the assumption that the w component\nis one. The four dimensional vector obtained from the transformation operation has each\ncomponent in the vector divided by the w component. This forces the wcomponent to be one and\ntherefore makes the vector homogeneous. The homogeneous vector is often prefered when working\nwith coordinates as the w component can safely be ignored.\n"
  example: []
  syntax:
    content: public static void TransformCoordinate(ref Vector3 coordinate, ref Matrix transform, out Vector3 result)
    parameters:
    - id: coordinate
      type: WaveEngine.Common.Math.Vector3
      description: The coordinate vector to transform.
    - id: transform
      type: WaveEngine.Common.Math.Matrix
      description: The transformation <xref href="WaveEngine.Common.Math.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: When the method completes, contains the transformed coordinates.
    content.vb: Public Shared Sub TransformCoordinate(ByRef coordinate As Vector3, ByRef transform As Matrix, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.TransformCoordinate*
  nameWithType.vb: Vector3.TransformCoordinate(ByRef Vector3, ByRef Matrix, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.TransformCoordinate(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: TransformCoordinate(ByRef Vector3, ByRef Matrix, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  id: TransformCoordinate(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: TransformCoordinate(Vector3, Matrix)
  nameWithType: Vector3.TransformCoordinate(Vector3, Matrix)
  fullName: WaveEngine.Common.Math.Vector3.TransformCoordinate(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: TransformCoordinate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1335
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nPerforms a coordinate transformation using the given <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nA coordinate transform performs the transformation with the assumption that the w component\nis one. The four dimensional vector obtained from the transformation operation has each\ncomponent in the vector divided by the w component. This forces the wcomponent to be one and\ntherefore makes the vector homogeneous. The homogeneous vector is often prefered when working\nwith coordinates as the w component can safely be ignored.\n"
  example: []
  syntax:
    content: public static Vector3 TransformCoordinate(Vector3 coordinate, Matrix transform)
    parameters:
    - id: coordinate
      type: WaveEngine.Common.Math.Vector3
      description: The coordinate vector to transform.
    - id: transform
      type: WaveEngine.Common.Math.Matrix
      description: The transformation <xref href="WaveEngine.Common.Math.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The transformed coordinates.
    content.vb: Public Shared Function TransformCoordinate(coordinate As Vector3, transform As Matrix) As Vector3
  overload: WaveEngine.Common.Math.Vector3.TransformCoordinate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3)
  id: Negate(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Negate(Vector3)
  nameWithType: Vector3.Negate(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Negate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1347
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNegates the specified value.\n"
  example: []
  syntax:
    content: public static Vector3 Negate(Vector3 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Negate(value As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Negate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Negate(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Negate(ref Vector3, out Vector3)
  nameWithType: Vector3.Negate(ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Negate(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Negate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1362
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNegates the specified value.\n"
  example: []
  syntax:
    content: public static void Negate(ref Vector3 value, out Vector3 result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Negate(ByRef value As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Negate*
  nameWithType.vb: Vector3.Negate(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Negate(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Negate(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Add(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Add(Vector3, Vector3)
  nameWithType: Vector3.Add(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1375
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Add(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Add(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Add(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Add(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Add(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Add(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1391
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified value1.\n"
  example: []
  syntax:
    content: public static void Add(ref Vector3 value1, ref Vector3 value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Add(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Add*
  nameWithType.vb: Vector3.Add(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Add(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Add(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3*)
  commentId: M:WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3*)
  id: Add(WaveEngine.Common.Math.Vector3*,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3*)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Add(Vector3*, ref Vector3, Vector3*)
  nameWithType: Vector3.Add(Vector3*, ref Vector3, Vector3*)
  fullName: WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3*, ref WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3*)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1404
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified value1.\n"
  example: []
  syntax:
    content: public static void Add(Vector3*value1, ref Vector3 value2, Vector3*result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3*
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3*
      description: The result.
    content.vb: Public Shared Sub Add(value1 As Vector3 *, ByRef value2 As Vector3, result As Vector3 *)
  overload: WaveEngine.Common.Math.Vector3.Add*
  nameWithType.vb: Vector3.Add(Vector3*, ByRef Vector3, Vector3*)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Add(WaveEngine.Common.Math.Vector3*, ByRef WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3*)
  name.vb: Add(Vector3*, ByRef Vector3, Vector3*)
- uid: WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Subtract(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Subtract(Vector3, Vector3)
  nameWithType: Vector3.Subtract(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Subtract
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1417
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSubtracts the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Subtract(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Subtract(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Subtract(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Subtract(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Subtract(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Subtract(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Subtract(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Subtract
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1433
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSubtracts the specified value1.\n"
  example: []
  syntax:
    content: public static void Subtract(ref Vector3 value1, ref Vector3 value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Subtract(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Subtract*
  nameWithType.vb: Vector3.Subtract(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Subtract(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Subtract(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Vector3)
  nameWithType: Vector3.Multiply(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1446
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Multiply(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Multiply(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Multiply(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Multiply(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1462
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Vector3 value1, ref Vector3 value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Multiply(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Multiply*
  nameWithType.vb: Vector3.Multiply(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Multiply(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Multiply(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  id: Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Single)
  nameWithType: Vector3.Multiply(Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1475
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Multiply(Vector3 value1, float scaleFactor)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Multiply(value1 As Vector3, scaleFactor As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  id: Multiply(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(ref Vector3, Single, out Vector3)
  nameWithType: Vector3.Multiply(ref Vector3, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1491
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Vector3 value1, float scaleFactor, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Multiply(ByRef value1 As Vector3, scaleFactor As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Multiply*
  nameWithType.vb: Vector3.Multiply(ByRef Vector3, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Multiply(ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Multiply(ByRef Vector3, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3*,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3*,System.Single,WaveEngine.Common.Math.Vector3@)
  id: Multiply(WaveEngine.Common.Math.Vector3*,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3*, Single, out Vector3)
  nameWithType: Vector3.Multiply(Vector3*, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3*, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1504
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified value1.\n"
  example: []
  syntax:
    content: public static void Multiply(Vector3*value1, float scaleFactor, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3*
      description: The value1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Multiply(value1 As Vector3 *, scaleFactor As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Multiply*
  nameWithType.vb: Vector3.Multiply(Vector3*, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3*, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Multiply(Vector3*, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Divide(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Divide(Vector3, Vector3)
  nameWithType: Vector3.Divide(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1517
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Divide(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Divide(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Divide(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Divide(ref Vector3, ref Vector3, out Vector3)
  nameWithType: Vector3.Divide(ref Vector3, ref Vector3, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Divide(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1533
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static void Divide(ref Vector3 value1, ref Vector3 value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Divide(ByRef value1 As Vector3, ByRef value2 As Vector3, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Divide*
  nameWithType.vb: Vector3.Divide(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Divide(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Divide(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3,System.Single)
  id: Divide(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Divide(Vector3, Single)
  nameWithType: Vector3.Divide(Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1546
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static Vector3 Divide(Vector3 value1, float value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: System.Single
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Function Divide(value1 As Vector3, value2 As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Divide(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  id: Divide(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Divide(ref Vector3, Single, out Vector3)
  nameWithType: Vector3.Divide(ref Vector3, Single, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Divide(ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1564
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified value1.\n"
  example: []
  syntax:
    content: public static void Divide(ref Vector3 value1, float value2, out Vector3 result)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: System.Single
      description: The value2.
    - id: result
      type: WaveEngine.Common.Math.Vector3
      description: The result.
    content.vb: Public Shared Sub Divide(ByRef value1 As Vector3, value2 As Single, ByRef result As Vector3)
  overload: WaveEngine.Common.Math.Vector3.Divide*
  nameWithType.vb: Vector3.Divide(ByRef Vector3, Single, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Divide(ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Divide(ByRef Vector3, Single, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: Angle(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Angle(Vector3, Vector3)
  nameWithType: Vector3.Angle(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1579
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturn the angle in radians between from and to.\n"
  example: []
  syntax:
    content: public static float Angle(Vector3 from, Vector3 to)
    parameters:
    - id: from
      type: WaveEngine.Common.Math.Vector3
      description: The angle extends round from this vector.
    - id: to
      type: WaveEngine.Common.Math.Vector3
      description: The angle extends round to this vector.
    return:
      type: System.Single
      description: The angle in radians.
    content.vb: Public Shared Function Angle(from As Vector3, to As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Angle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.Angle(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  id: Angle(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Angle(ref Vector3, ref Vector3)
  nameWithType: Vector3.Angle(ref Vector3, ref Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Angle(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: Angle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1590
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturn the angle in radians between from and to.\n"
  example: []
  syntax:
    content: public static float Angle(ref Vector3 from, ref Vector3 to)
    parameters:
    - id: from
      type: WaveEngine.Common.Math.Vector3
      description: The angle extends round from this vector.
    - id: to
      type: WaveEngine.Common.Math.Vector3
      description: The angle extends round to this vector.
    return:
      type: System.Single
      description: The angle in radians.
    content.vb: Public Shared Function Angle(ByRef from As Vector3, ByRef to As Vector3) As Single
  overload: WaveEngine.Common.Math.Vector3.Angle*
  nameWithType.vb: Vector3.Angle(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.Angle(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: Angle(ByRef Vector3, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  id: RotateAround(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: RotateAround(Vector3, Vector3, Quaternion)
  nameWithType: Vector3.RotateAround(Vector3, Vector3, Quaternion)
  fullName: WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: RotateAround
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1612
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nApply a rotation to a point using a pivot as origin.\n"
  example: []
  syntax:
    content: public static Vector3 RotateAround(Vector3 point, Vector3 pivot, Quaternion rotation)
    parameters:
    - id: point
      type: WaveEngine.Common.Math.Vector3
      description: The point to rotate.
    - id: pivot
      type: WaveEngine.Common.Math.Vector3
      description: The pivot used as origin.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The angle as quaternion.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The point vector rotated.
    content.vb: Public Shared Function RotateAround(point As Vector3, pivot As Vector3, rotation As Quaternion) As Vector3
  overload: WaveEngine.Common.Math.Vector3.RotateAround*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  commentId: M:WaveEngine.Common.Math.Vector3.RotateAround(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  id: RotateAround(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: RotateAround(ref Vector3, ref Vector3, ref Quaternion, out Vector3)
  nameWithType: Vector3.RotateAround(ref Vector3, ref Vector3, ref Quaternion, out Vector3)
  fullName: WaveEngine.Common.Math.Vector3.RotateAround(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Quaternion, out WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: RotateAround
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1627
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nApply a rotation to a point using a pivot as origin.\n"
  example: []
  syntax:
    content: public static void RotateAround(ref Vector3 point, ref Vector3 pivot, ref Quaternion rotation, out Vector3 rotatePoint)
    parameters:
    - id: point
      type: WaveEngine.Common.Math.Vector3
      description: The point to rotate.
    - id: pivot
      type: WaveEngine.Common.Math.Vector3
      description: The pivot used as origin.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The angle as quaternion.
    - id: rotatePoint
      type: WaveEngine.Common.Math.Vector3
      description: The point vector rotated.
    content.vb: Public Shared Sub RotateAround(ByRef point As Vector3, ByRef pivot As Vector3, ByRef rotation As Quaternion, ByRef rotatePoint As Vector3)
  overload: WaveEngine.Common.Math.Vector3.RotateAround*
  nameWithType.vb: Vector3.RotateAround(ByRef Vector3, ByRef Vector3, ByRef Quaternion, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Vector3.RotateAround(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Vector3)
  name.vb: RotateAround(ByRef Vector3, ByRef Vector3, ByRef Quaternion, ByRef Vector3)
- uid: WaveEngine.Common.Math.Vector3.op_UnaryNegation(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_UnaryNegation(WaveEngine.Common.Math.Vector3)
  id: op_UnaryNegation(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector3)
  nameWithType: Vector3.UnaryNegation(Vector3)
  fullName: WaveEngine.Common.Math.Vector3.UnaryNegation(WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_UnaryNegation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1639
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator -.\n"
  example: []
  syntax:
    content: public static Vector3 operator -(Vector3 value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator -(value As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Equality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Equality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: op_Equality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Equality(Vector3, Vector3)
  nameWithType: Vector3.Equality(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Equality(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Equality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1656
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator ==.\n"
  example: []
  syntax:
    content: public static bool operator ==(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator =(value1 As Vector3, value2 As Vector3) As Boolean
  overload: WaveEngine.Common.Math.Vector3.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Inequality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Inequality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: op_Inequality(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Inequality(Vector3, Vector3)
  nameWithType: Vector3.Inequality(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Inequality(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1669
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator !=.\n"
  example: []
  syntax:
    content: public static bool operator !=(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator <>(value1 As Vector3, value2 As Vector3) As Boolean
  overload: WaveEngine.Common.Math.Vector3.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Addition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Addition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: op_Addition(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Addition(Vector3, Vector3)
  nameWithType: Vector3.Addition(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Addition(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Addition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1682
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator +.\n"
  example: []
  syntax:
    content: public static Vector3 operator +(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator +(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Subtraction(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Subtraction(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: op_Subtraction(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Subtraction(Vector3, Vector3)
  nameWithType: Vector3.Subtraction(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Subtraction(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Subtraction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1700
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator -.\n"
  example: []
  syntax:
    content: public static Vector3 operator -(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator -(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: op_Multiply(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Vector3)
  nameWithType: Vector3.Multiply(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1718
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Vector3 operator *(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  id: op_Multiply(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Single)
  nameWithType: Vector3.Multiply(Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(WaveEngine.Common.Math.Vector3, System.Single)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1736
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Vector3 operator *(Vector3 value, float scaleFactor)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(value As Vector3, scaleFactor As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Multiply(System.Single,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Multiply(System.Single,WaveEngine.Common.Math.Vector3)
  id: op_Multiply(System.Single,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector3)
  nameWithType: Vector3.Multiply(Single, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Multiply(System.Single, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1754
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Vector3 operator *(float scaleFactor, Vector3 value)
    parameters:
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(scaleFactor As Single, value As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Division(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Division(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: op_Division(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Division(Vector3, Vector3)
  nameWithType: Vector3.Division(Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Vector3.Division(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Operator
  source:
    id: op_Division
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1772
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator /.\n"
  example: []
  syntax:
    content: public static Vector3 operator /(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: WaveEngine.Common.Math.Vector3
      description: The value1.
    - id: value2
      type: WaveEngine.Common.Math.Vector3
      description: The value2.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator /(value1 As Vector3, value2 As Vector3) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.op_Division(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Vector3.op_Division(WaveEngine.Common.Math.Vector3,System.Single)
  id: op_Division(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Division(Vector3, Single)
  nameWithType: Vector3.Division(Vector3, Single)
  fullName: WaveEngine.Common.Math.Vector3.Division(WaveEngine.Common.Math.Vector3, System.Single)
  type: Operator
  source:
    id: op_Division
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1790
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator /.\n"
  example: []
  syntax:
    content: public static Vector3 operator /(Vector3 value, float divider)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Vector3
      description: The value.
    - id: divider
      type: System.Single
      description: The divider.
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator /(value As Vector3, divider As Single) As Vector3
  overload: WaveEngine.Common.Math.Vector3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Vector3.Item(System.Int32)
  commentId: P:WaveEngine.Common.Math.Vector3.Item(System.Int32)
  id: Item(System.Int32)
  parent: WaveEngine.Common.Math.Vector3
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Vector3.Item[Int32]
  fullName: WaveEngine.Common.Math.Vector3.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Vector3.cs
    startLine: 1807
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the component at the specified index.\n"
  example: []
  syntax:
    content: public float this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component to access. Use 0 for the X component, 1 for the Y component, and 2 for the Z component.
    return:
      type: System.Single
      description: The value of the X, Y, or Z component, depending on the index.
    content.vb: Public Property Item(index As Integer) As Single
  overload: WaveEngine.Common.Math.Vector3.Item*
  nameWithType.vb: Vector3.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Vector3.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.IEquatable{WaveEngine.Common.Math.Vector3}
  commentId: T:System.IEquatable{WaveEngine.Common.Math.Vector3}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Vector3>
  nameWithType: IEquatable<Vector3>
  fullName: System.IEquatable<WaveEngine.Common.Math.Vector3>
  nameWithType.vb: IEquatable(Of Vector3)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Vector3)
  name.vb: IEquatable(Of Vector3)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.Vector3.Zero*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Zero
  name: Zero
  nameWithType: Vector3.Zero
  fullName: WaveEngine.Common.Math.Vector3.Zero
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.Vector3.One*
  commentId: Overload:WaveEngine.Common.Math.Vector3.One
  name: One
  nameWithType: Vector3.One
  fullName: WaveEngine.Common.Math.Vector3.One
- uid: WaveEngine.Common.Math.Vector3.UnitX*
  commentId: Overload:WaveEngine.Common.Math.Vector3.UnitX
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: WaveEngine.Common.Math.Vector3.UnitX
- uid: WaveEngine.Common.Math.Vector3.UnitY*
  commentId: Overload:WaveEngine.Common.Math.Vector3.UnitY
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: WaveEngine.Common.Math.Vector3.UnitY
- uid: WaveEngine.Common.Math.Vector3.UnitZ*
  commentId: Overload:WaveEngine.Common.Math.Vector3.UnitZ
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: WaveEngine.Common.Math.Vector3.UnitZ
- uid: WaveEngine.Common.Math.Vector3.Up*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Up
  name: Up
  nameWithType: Vector3.Up
  fullName: WaveEngine.Common.Math.Vector3.Up
- uid: WaveEngine.Common.Math.Vector3.Down*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Down
  name: Down
  nameWithType: Vector3.Down
  fullName: WaveEngine.Common.Math.Vector3.Down
- uid: WaveEngine.Common.Math.Vector3.Right*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Right
  name: Right
  nameWithType: Vector3.Right
  fullName: WaveEngine.Common.Math.Vector3.Right
- uid: WaveEngine.Common.Math.Vector3.Left*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Left
  name: Left
  nameWithType: Vector3.Left
  fullName: WaveEngine.Common.Math.Vector3.Left
- uid: WaveEngine.Common.Math.Vector3.Forward*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Forward
  name: Forward
  nameWithType: Vector3.Forward
  fullName: WaveEngine.Common.Math.Vector3.Forward
- uid: WaveEngine.Common.Math.Vector3.Backward*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Backward
  name: Backward
  nameWithType: Vector3.Backward
  fullName: WaveEngine.Common.Math.Vector3.Backward
- uid: WaveEngine.Common.Math.Vector3.#ctor*
  commentId: Overload:WaveEngine.Common.Math.Vector3.#ctor
  name: Vector3
  nameWithType: Vector3.Vector3
  fullName: WaveEngine.Common.Math.Vector3.Vector3
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector3.ToString*
  commentId: Overload:WaveEngine.Common.Math.Vector3.ToString
  name: ToString
  nameWithType: Vector3.ToString
  fullName: WaveEngine.Common.Math.Vector3.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: WaveEngine.Common.Math.Vector3.Equals*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Equals
  name: Equals
  nameWithType: Vector3.Equals
  fullName: WaveEngine.Common.Math.Vector3.Equals
- uid: System.IEquatable{WaveEngine.Common.Math.Vector3}.Equals(WaveEngine.Common.Math.Vector3)
  commentId: M:System.IEquatable{WaveEngine.Common.Math.Vector3}.Equals(WaveEngine.Common.Math.Vector3)
  parent: System.IEquatable{WaveEngine.Common.Math.Vector3}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Vector3)
  nameWithType: IEquatable<Vector3>.Equals(Vector3)
  fullName: System.IEquatable<WaveEngine.Common.Math.Vector3>.Equals(WaveEngine.Common.Math.Vector3)
  nameWithType.vb: IEquatable(Of Vector3).Equals(Vector3)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Vector3).Equals(WaveEngine.Common.Math.Vector3)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Vector3>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Math.Vector3>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Vector3).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Math.Vector3).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Vector3.GetHashCode*
  commentId: Overload:WaveEngine.Common.Math.Vector3.GetHashCode
  name: GetHashCode
  nameWithType: Vector3.GetHashCode
  fullName: WaveEngine.Common.Math.Vector3.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Math.Vector3.Length*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Length
  name: Length
  nameWithType: Vector3.Length
  fullName: WaveEngine.Common.Math.Vector3.Length
- uid: WaveEngine.Common.Math.Vector3.LengthSquared*
  commentId: Overload:WaveEngine.Common.Math.Vector3.LengthSquared
  name: LengthSquared
  nameWithType: Vector3.LengthSquared
  fullName: WaveEngine.Common.Math.Vector3.LengthSquared
- uid: WaveEngine.Common.Math.Vector3.ToVector2*
  commentId: Overload:WaveEngine.Common.Math.Vector3.ToVector2
  name: ToVector2
  nameWithType: Vector3.ToVector2
  fullName: WaveEngine.Common.Math.Vector3.ToVector2
- uid: WaveEngine.Common.Math.Vector3.Distance*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Distance
  name: Distance
  nameWithType: Vector3.Distance
  fullName: WaveEngine.Common.Math.Vector3.Distance
- uid: WaveEngine.Common.Math.Vector3.FromQuaternion*
  commentId: Overload:WaveEngine.Common.Math.Vector3.FromQuaternion
  name: FromQuaternion
  nameWithType: Vector3.FromQuaternion
  fullName: WaveEngine.Common.Math.Vector3.FromQuaternion
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Common.Math.Vector3.DistanceSquared*
  commentId: Overload:WaveEngine.Common.Math.Vector3.DistanceSquared
  name: DistanceSquared
  nameWithType: Vector3.DistanceSquared
  fullName: WaveEngine.Common.Math.Vector3.DistanceSquared
- uid: WaveEngine.Common.Math.Vector3.Dot*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Dot
  name: Dot
  nameWithType: Vector3.Dot
  fullName: WaveEngine.Common.Math.Vector3.Dot
- uid: WaveEngine.Common.Math.Vector3.Normalize*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Normalize
  name: Normalize
  nameWithType: Vector3.Normalize
  fullName: WaveEngine.Common.Math.Vector3.Normalize
- uid: WaveEngine.Common.Math.Vector3.Cross*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Cross
  name: Cross
  nameWithType: Vector3.Cross
  fullName: WaveEngine.Common.Math.Vector3.Cross
- uid: WaveEngine.Common.Math.Vector3.Reflect*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Reflect
  name: Reflect
  nameWithType: Vector3.Reflect
  fullName: WaveEngine.Common.Math.Vector3.Reflect
- uid: WaveEngine.Common.Math.Vector3.Min*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Min
  name: Min
  nameWithType: Vector3.Min
  fullName: WaveEngine.Common.Math.Vector3.Min
- uid: WaveEngine.Common.Math.Vector3.Max*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Max
  name: Max
  nameWithType: Vector3.Max
  fullName: WaveEngine.Common.Math.Vector3.Max
- uid: WaveEngine.Common.Math.Vector3.Abs*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Abs
  name: Abs
  nameWithType: Vector3.Abs
  fullName: WaveEngine.Common.Math.Vector3.Abs
- uid: WaveEngine.Common.Math.Vector3.Clamp*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Clamp
  name: Clamp
  nameWithType: Vector3.Clamp
  fullName: WaveEngine.Common.Math.Vector3.Clamp
- uid: WaveEngine.Common.Math.Vector3.Lerp*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Lerp
  name: Lerp
  nameWithType: Vector3.Lerp
  fullName: WaveEngine.Common.Math.Vector3.Lerp
- uid: WaveEngine.Common.Math.Vector3.Barycentric*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Barycentric
  name: Barycentric
  nameWithType: Vector3.Barycentric
  fullName: WaveEngine.Common.Math.Vector3.Barycentric
- uid: WaveEngine.Common.Math.Vector3.SmoothStep*
  commentId: Overload:WaveEngine.Common.Math.Vector3.SmoothStep
  name: SmoothStep
  nameWithType: Vector3.SmoothStep
  fullName: WaveEngine.Common.Math.Vector3.SmoothStep
- uid: WaveEngine.Common.Math.Vector3.SmoothDamp*
  commentId: Overload:WaveEngine.Common.Math.Vector3.SmoothDamp
  name: SmoothDamp
  nameWithType: Vector3.SmoothDamp
  fullName: WaveEngine.Common.Math.Vector3.SmoothDamp
- uid: WaveEngine.Common.Math.Vector3.ClampMagnitude*
  commentId: Overload:WaveEngine.Common.Math.Vector3.ClampMagnitude
  name: ClampMagnitude
  nameWithType: Vector3.ClampMagnitude
  fullName: WaveEngine.Common.Math.Vector3.ClampMagnitude
- uid: WaveEngine.Common.Math.Vector3.CatmullRom*
  commentId: Overload:WaveEngine.Common.Math.Vector3.CatmullRom
  name: CatmullRom
  nameWithType: Vector3.CatmullRom
  fullName: WaveEngine.Common.Math.Vector3.CatmullRom
- uid: WaveEngine.Common.Math.Vector3.Hermite*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Hermite
  name: Hermite
  nameWithType: Vector3.Hermite
  fullName: WaveEngine.Common.Math.Vector3.Hermite
- uid: WaveEngine.Common.Math.Vector3.Transform*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Transform
  name: Transform
  nameWithType: Vector3.Transform
  fullName: WaveEngine.Common.Math.Vector3.Transform
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Math.Vector3*
  isExternal: true
  name: Vector3*
  nameWithType: Vector3*
  fullName: WaveEngine.Common.Math.Vector3*
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: WaveEngine.Common.Math.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: WaveEngine.Common.Math.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: WaveEngine.Common.Math.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Math.Vector3.TransformNormal*
  commentId: Overload:WaveEngine.Common.Math.Vector3.TransformNormal
  name: TransformNormal
  nameWithType: Vector3.TransformNormal
  fullName: WaveEngine.Common.Math.Vector3.TransformNormal
- uid: WaveEngine.Common.Math.Vector3.TransformCoordinate*
  commentId: Overload:WaveEngine.Common.Math.Vector3.TransformCoordinate
  name: TransformCoordinate
  nameWithType: Vector3.TransformCoordinate
  fullName: WaveEngine.Common.Math.Vector3.TransformCoordinate
- uid: WaveEngine.Common.Math.Vector3.Negate*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Negate
  name: Negate
  nameWithType: Vector3.Negate
  fullName: WaveEngine.Common.Math.Vector3.Negate
- uid: WaveEngine.Common.Math.Vector3.Add*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Add
  name: Add
  nameWithType: Vector3.Add
  fullName: WaveEngine.Common.Math.Vector3.Add
- uid: WaveEngine.Common.Math.Vector3.Subtract*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Subtract
  name: Subtract
  nameWithType: Vector3.Subtract
  fullName: WaveEngine.Common.Math.Vector3.Subtract
- uid: WaveEngine.Common.Math.Vector3.Multiply*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Multiply
  name: Multiply
  nameWithType: Vector3.Multiply
  fullName: WaveEngine.Common.Math.Vector3.Multiply
- uid: WaveEngine.Common.Math.Vector3.Divide*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Divide
  name: Divide
  nameWithType: Vector3.Divide
  fullName: WaveEngine.Common.Math.Vector3.Divide
- uid: WaveEngine.Common.Math.Vector3.Angle*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Angle
  name: Angle
  nameWithType: Vector3.Angle
  fullName: WaveEngine.Common.Math.Vector3.Angle
- uid: WaveEngine.Common.Math.Vector3.RotateAround*
  commentId: Overload:WaveEngine.Common.Math.Vector3.RotateAround
  name: RotateAround
  nameWithType: Vector3.RotateAround
  fullName: WaveEngine.Common.Math.Vector3.RotateAround
- uid: WaveEngine.Common.Math.Vector3.op_UnaryNegation*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector3.UnaryNegation
  fullName: WaveEngine.Common.Math.Vector3.UnaryNegation
- uid: WaveEngine.Common.Math.Vector3.op_Equality*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_Equality
  name: Equality
  nameWithType: Vector3.Equality
  fullName: WaveEngine.Common.Math.Vector3.Equality
- uid: WaveEngine.Common.Math.Vector3.op_Inequality*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_Inequality
  name: Inequality
  nameWithType: Vector3.Inequality
  fullName: WaveEngine.Common.Math.Vector3.Inequality
- uid: WaveEngine.Common.Math.Vector3.op_Addition*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_Addition
  name: Addition
  nameWithType: Vector3.Addition
  fullName: WaveEngine.Common.Math.Vector3.Addition
- uid: WaveEngine.Common.Math.Vector3.op_Subtraction*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_Subtraction
  name: Subtraction
  nameWithType: Vector3.Subtraction
  fullName: WaveEngine.Common.Math.Vector3.Subtraction
- uid: WaveEngine.Common.Math.Vector3.op_Multiply*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_Multiply
  name: Multiply
  nameWithType: Vector3.Multiply
  fullName: WaveEngine.Common.Math.Vector3.Multiply
- uid: WaveEngine.Common.Math.Vector3.op_Division*
  commentId: Overload:WaveEngine.Common.Math.Vector3.op_Division
  name: Division
  nameWithType: Vector3.Division
  fullName: WaveEngine.Common.Math.Vector3.Division
- uid: WaveEngine.Common.Math.Vector3.Item*
  commentId: Overload:WaveEngine.Common.Math.Vector3.Item
  name: Item
  nameWithType: Vector3.Item
  fullName: WaveEngine.Common.Math.Vector3.Item
