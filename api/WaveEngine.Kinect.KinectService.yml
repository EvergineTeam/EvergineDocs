### YamlMime:ManagedReference
items:
- uid: WaveEngine.Kinect.KinectService
  commentId: T:WaveEngine.Kinect.KinectService
  id: KinectService
  parent: WaveEngine.Kinect
  children:
  - WaveEngine.Kinect.KinectService.Bodies
  - WaveEngine.Kinect.KinectService.BodyCount
  - WaveEngine.Kinect.KinectService.ColorTexture
  - WaveEngine.Kinect.KinectService.CurrentSource
  - WaveEngine.Kinect.KinectService.DepthTexture
  - WaveEngine.Kinect.KinectService.FaceFrameResults
  - WaveEngine.Kinect.KinectService.FaceFrameSources
  - WaveEngine.Kinect.KinectService.InfraredTexture
  - WaveEngine.Kinect.KinectService.Initialize
  - WaveEngine.Kinect.KinectService.IsAvailable
  - WaveEngine.Kinect.KinectService.IsPaused
  - WaveEngine.Kinect.KinectService.Mapper
  - WaveEngine.Kinect.KinectService.StartSensor(WaveEngine.Kinect.Enums.KinectSources)
  - WaveEngine.Kinect.KinectService.StopSensor
  - WaveEngine.Kinect.KinectService.Terminate
  - WaveEngine.Kinect.KinectService.Update(System.TimeSpan)
  - WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance
  - WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance
  langs:
  - csharp
  - vb
  name: KinectService
  nameWithType: KinectService
  fullName: WaveEngine.Kinect.KinectService
  type: Class
  source:
    id: KinectService
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 22
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nKinect Integration Service\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Kinect")]

      public class KinectService : UpdatableService
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Kinect")>

      Public Class KinectService

          Inherits UpdatableService
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Common.Service
  - WaveEngine.Common.UpdatableService
  inheritedMembers:
  - WaveEngine.Common.Service.IsInitialized
  - WaveEngine.Common.Service.IsTerminated
  - WaveEngine.Common.Service.BaseInitialize
  - WaveEngine.Common.Service.BaseTerminate
  - WaveEngine.Common.Service.OnActivated
  - WaveEngine.Common.Service.OnDeactivated
  - WaveEngine.Common.IO.SerializableObject.DefaultValues
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Kinect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Kinect.KinectService.CurrentSource
  commentId: P:WaveEngine.Kinect.KinectService.CurrentSource
  id: CurrentSource
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: CurrentSource
  nameWithType: KinectService.CurrentSource
  fullName: WaveEngine.Kinect.KinectService.CurrentSource
  type: Property
  source:
    id: CurrentSource
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 112
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the current source.\n"
  example: []
  syntax:
    content: public KinectSources CurrentSource { get; }
    parameters: []
    return:
      type: WaveEngine.Kinect.Enums.KinectSources
      description: "\nThe current source.\n"
    content.vb: Public ReadOnly Property CurrentSource As KinectSources
  overload: WaveEngine.Kinect.KinectService.CurrentSource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.BodyCount
  commentId: P:WaveEngine.Kinect.KinectService.BodyCount
  id: BodyCount
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: BodyCount
  nameWithType: KinectService.BodyCount
  fullName: WaveEngine.Kinect.KinectService.BodyCount
  type: Property
  source:
    id: BodyCount
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 177
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the body count.\n"
  example: []
  syntax:
    content: public int BodyCount { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe body count.\n"
    content.vb: Public ReadOnly Property BodyCount As Integer
  overload: WaveEngine.Kinect.KinectService.BodyCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.FaceFrameSources
  commentId: P:WaveEngine.Kinect.KinectService.FaceFrameSources
  id: FaceFrameSources
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: FaceFrameSources
  nameWithType: KinectService.FaceFrameSources
  fullName: WaveEngine.Kinect.KinectService.FaceFrameSources
  type: Property
  source:
    id: FaceFrameSources
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 186
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the face frame sources.\n"
  example: []
  syntax:
    content: public FaceFrameSource[] FaceFrameSources { get; }
    parameters: []
    return:
      type: Microsoft.Kinect.Face.FaceFrameSource[]
      description: "\nThe face frame sources.\n"
    content.vb: Public ReadOnly Property FaceFrameSources As FaceFrameSource()
  overload: WaveEngine.Kinect.KinectService.FaceFrameSources*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.FaceFrameResults
  commentId: P:WaveEngine.Kinect.KinectService.FaceFrameResults
  id: FaceFrameResults
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: FaceFrameResults
  nameWithType: KinectService.FaceFrameResults
  fullName: WaveEngine.Kinect.KinectService.FaceFrameResults
  type: Property
  source:
    id: FaceFrameResults
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 201
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the face frame results.\n"
  example: []
  syntax:
    content: public FaceFrameResult[] FaceFrameResults { get; }
    parameters: []
    return:
      type: Microsoft.Kinect.Face.FaceFrameResult[]
      description: "\nThe face frame results.\n"
    content.vb: Public ReadOnly Property FaceFrameResults As FaceFrameResult()
  overload: WaveEngine.Kinect.KinectService.FaceFrameResults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.Mapper
  commentId: P:WaveEngine.Kinect.KinectService.Mapper
  id: Mapper
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: Mapper
  nameWithType: KinectService.Mapper
  fullName: WaveEngine.Kinect.KinectService.Mapper
  type: Property
  source:
    id: Mapper
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 215
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets or sets the mapper.\n"
  example: []
  syntax:
    content: public CoordinateMapper Mapper { get; set; }
    parameters: []
    return:
      type: Microsoft.Kinect.CoordinateMapper
      description: "\nThe mapper.\n"
    content.vb: Public Property Mapper As CoordinateMapper
  overload: WaveEngine.Kinect.KinectService.Mapper*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Kinect.KinectService.ColorTexture
  commentId: P:WaveEngine.Kinect.KinectService.ColorTexture
  id: ColorTexture
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: ColorTexture
  nameWithType: KinectService.ColorTexture
  fullName: WaveEngine.Kinect.KinectService.ColorTexture
  type: Property
  source:
    id: ColorTexture
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 224
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the color texture.\n"
  example: []
  syntax:
    content: public Texture2D ColorTexture { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Graphics.Texture2D
      description: "\nThe color texture.\n"
    content.vb: Public ReadOnly Property ColorTexture As Texture2D
  overload: WaveEngine.Kinect.KinectService.ColorTexture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.InfraredTexture
  commentId: P:WaveEngine.Kinect.KinectService.InfraredTexture
  id: InfraredTexture
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: InfraredTexture
  nameWithType: KinectService.InfraredTexture
  fullName: WaveEngine.Kinect.KinectService.InfraredTexture
  type: Property
  source:
    id: InfraredTexture
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 239
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the infrared texture.\n"
  example: []
  syntax:
    content: public Texture2D InfraredTexture { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Graphics.Texture2D
      description: "\nThe infrared texture.\n"
    content.vb: Public ReadOnly Property InfraredTexture As Texture2D
  overload: WaveEngine.Kinect.KinectService.InfraredTexture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.DepthTexture
  commentId: P:WaveEngine.Kinect.KinectService.DepthTexture
  id: DepthTexture
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: DepthTexture
  nameWithType: KinectService.DepthTexture
  fullName: WaveEngine.Kinect.KinectService.DepthTexture
  type: Property
  source:
    id: DepthTexture
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 254
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets the depth texture.\n"
  example: []
  syntax:
    content: public Texture2D DepthTexture { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Graphics.Texture2D
      description: "\nThe depth texture.\n"
    content.vb: Public ReadOnly Property DepthTexture As Texture2D
  overload: WaveEngine.Kinect.KinectService.DepthTexture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.IsAvailable
  commentId: P:WaveEngine.Kinect.KinectService.IsAvailable
  id: IsAvailable
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: KinectService.IsAvailable
  fullName: WaveEngine.Kinect.KinectService.IsAvailable
  type: Property
  source:
    id: IsAvailable
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 269
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets a value indicating whether this instance is available.\n"
  example: []
  syntax:
    content: public bool IsAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is available; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsAvailable As Boolean
  overload: WaveEngine.Kinect.KinectService.IsAvailable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance
  commentId: P:WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance
  id: UseDepthMinReliableDistance
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: UseDepthMinReliableDistance
  nameWithType: KinectService.UseDepthMinReliableDistance
  fullName: WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance
  type: Property
  source:
    id: UseDepthMinReliableDistance
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 284
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets or sets a value indicating whether [use depth minimum reliable distance].\n"
  example: []
  syntax:
    content: public bool UseDepthMinReliableDistance { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [use depth minimum reliable distance]; otherwise, <code>false</code>.\n"
    content.vb: Public Property UseDepthMinReliableDistance As Boolean
  overload: WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance
  commentId: P:WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance
  id: UseDepthMaxReliableDistance
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: UseDepthMaxReliableDistance
  nameWithType: KinectService.UseDepthMaxReliableDistance
  fullName: WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance
  type: Property
  source:
    id: UseDepthMaxReliableDistance
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 304
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets or sets a value indicating whether [use depth maximum reliable distance].\n"
  example: []
  syntax:
    content: public bool UseDepthMaxReliableDistance { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [use depth maximum reliable distance]; otherwise, <code>false</code>.\n"
    content.vb: Public Property UseDepthMaxReliableDistance As Boolean
  overload: WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Kinect.KinectService.IsPaused
  commentId: P:WaveEngine.Kinect.KinectService.IsPaused
  id: IsPaused
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: KinectService.IsPaused
  fullName: WaveEngine.Kinect.KinectService.IsPaused
  type: Property
  source:
    id: IsPaused
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 324
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets a value indicating whether this instance is paused.\n"
  example: []
  syntax:
    content: public bool IsPaused { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is paused; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsPaused As Boolean
  overload: WaveEngine.Kinect.KinectService.IsPaused*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Kinect.KinectService.Bodies
  commentId: P:WaveEngine.Kinect.KinectService.Bodies
  id: Bodies
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: Bodies
  nameWithType: KinectService.Bodies
  fullName: WaveEngine.Kinect.KinectService.Bodies
  type: Property
  source:
    id: Bodies
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 346
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nGets or sets the bodies.\n"
  example: []
  syntax:
    content: public Body[] Bodies { get; set; }
    parameters: []
    return:
      type: Microsoft.Kinect.Body[]
      description: "\nThe bodies.\n"
    content.vb: Public Property Bodies As Body()
  overload: WaveEngine.Kinect.KinectService.Bodies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Kinect.KinectService.StartSensor(WaveEngine.Kinect.Enums.KinectSources)
  commentId: M:WaveEngine.Kinect.KinectService.StartSensor(WaveEngine.Kinect.Enums.KinectSources)
  id: StartSensor(WaveEngine.Kinect.Enums.KinectSources)
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: StartSensor(KinectSources)
  nameWithType: KinectService.StartSensor(KinectSources)
  fullName: WaveEngine.Kinect.KinectService.StartSensor(WaveEngine.Kinect.Enums.KinectSources)
  type: Method
  source:
    id: StartSensor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 355
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nStarts the sensor.\n"
  example: []
  syntax:
    content: public void StartSensor(KinectSources sources)
    parameters:
    - id: sources
      type: WaveEngine.Kinect.Enums.KinectSources
      description: The sources. (flags)
    content.vb: Public Sub StartSensor(sources As KinectSources)
  overload: WaveEngine.Kinect.KinectService.StartSensor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Kinect.KinectService.StopSensor
  commentId: M:WaveEngine.Kinect.KinectService.StopSensor
  id: StopSensor
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: StopSensor()
  nameWithType: KinectService.StopSensor()
  fullName: WaveEngine.Kinect.KinectService.StopSensor()
  type: Method
  source:
    id: StopSensor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 405
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nStops the sensor.\n"
  example: []
  syntax:
    content: public void StopSensor()
    content.vb: Public Sub StopSensor
  overload: WaveEngine.Kinect.KinectService.StopSensor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Kinect.KinectService.Update(System.TimeSpan)
  commentId: M:WaveEngine.Kinect.KinectService.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: KinectService.Update(TimeSpan)
  fullName: WaveEngine.Kinect.KinectService.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 435
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nUpdates this instance.\n"
  example: []
  syntax:
    content: public override void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: The elapsed game time since the last update.
    content.vb: Public Overrides Sub Update(gameTime As TimeSpan)
  overridden: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  overload: WaveEngine.Kinect.KinectService.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Kinect.KinectService.Initialize
  commentId: M:WaveEngine.Kinect.KinectService.Initialize
  id: Initialize
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: KinectService.Initialize()
  fullName: WaveEngine.Kinect.KinectService.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 462
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nAllows to execute custom logic during the initialization of this instance.\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Common.Service.Initialize
  overload: WaveEngine.Kinect.KinectService.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Kinect.KinectService.Terminate
  commentId: M:WaveEngine.Kinect.KinectService.Terminate
  id: Terminate
  parent: WaveEngine.Kinect.KinectService
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: KinectService.Terminate()
  fullName: WaveEngine.Kinect.KinectService.Terminate()
  type: Method
  source:
    id: Terminate
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Kinect\KinectService.cs
    startLine: 566
  assemblies:
  - WaveEngine.Kinect
  namespace: WaveEngine.Kinect
  summary: "\nAllow to execute custom logic during the finalization of this instance.\n"
  example: []
  syntax:
    content: protected override void Terminate()
    content.vb: Protected Overrides Sub Terminate
  overridden: WaveEngine.Common.Service.Terminate
  overload: WaveEngine.Kinect.KinectService.Terminate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: WaveEngine.Kinect
  commentId: N:WaveEngine.Kinect
  name: WaveEngine.Kinect
  nameWithType: WaveEngine.Kinect
  fullName: WaveEngine.Kinect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: WaveEngine.Common.UpdatableService
  commentId: T:WaveEngine.Common.UpdatableService
  parent: WaveEngine.Common
  name: UpdatableService
  nameWithType: UpdatableService
  fullName: WaveEngine.Common.UpdatableService
- uid: WaveEngine.Common.Service.IsInitialized
  commentId: P:WaveEngine.Common.Service.IsInitialized
  parent: WaveEngine.Common.Service
  name: IsInitialized
  nameWithType: Service.IsInitialized
  fullName: WaveEngine.Common.Service.IsInitialized
- uid: WaveEngine.Common.Service.IsTerminated
  commentId: P:WaveEngine.Common.Service.IsTerminated
  parent: WaveEngine.Common.Service
  name: IsTerminated
  nameWithType: Service.IsTerminated
  fullName: WaveEngine.Common.Service.IsTerminated
- uid: WaveEngine.Common.Service.BaseInitialize
  commentId: M:WaveEngine.Common.Service.BaseInitialize
  parent: WaveEngine.Common.Service
  name: BaseInitialize()
  nameWithType: Service.BaseInitialize()
  fullName: WaveEngine.Common.Service.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.BaseTerminate
  commentId: M:WaveEngine.Common.Service.BaseTerminate
  parent: WaveEngine.Common.Service
  name: BaseTerminate()
  nameWithType: Service.BaseTerminate()
  fullName: WaveEngine.Common.Service.BaseTerminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnActivated
  commentId: M:WaveEngine.Common.Service.OnActivated
  parent: WaveEngine.Common.Service
  name: OnActivated()
  nameWithType: Service.OnActivated()
  fullName: WaveEngine.Common.Service.OnActivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnDeactivated
  commentId: M:WaveEngine.Common.Service.OnDeactivated
  parent: WaveEngine.Common.Service
  name: OnDeactivated()
  nameWithType: Service.OnDeactivated()
  fullName: WaveEngine.Common.Service.OnDeactivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Kinect.KinectService.CurrentSource*
  commentId: Overload:WaveEngine.Kinect.KinectService.CurrentSource
  name: CurrentSource
  nameWithType: KinectService.CurrentSource
  fullName: WaveEngine.Kinect.KinectService.CurrentSource
- uid: WaveEngine.Kinect.Enums.KinectSources
  commentId: T:WaveEngine.Kinect.Enums.KinectSources
  parent: WaveEngine.Kinect.Enums
  name: KinectSources
  nameWithType: KinectSources
  fullName: WaveEngine.Kinect.Enums.KinectSources
- uid: WaveEngine.Kinect.Enums
  commentId: N:WaveEngine.Kinect.Enums
  name: WaveEngine.Kinect.Enums
  nameWithType: WaveEngine.Kinect.Enums
  fullName: WaveEngine.Kinect.Enums
- uid: WaveEngine.Kinect.KinectService.BodyCount*
  commentId: Overload:WaveEngine.Kinect.KinectService.BodyCount
  name: BodyCount
  nameWithType: KinectService.BodyCount
  fullName: WaveEngine.Kinect.KinectService.BodyCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Kinect.KinectService.FaceFrameSources*
  commentId: Overload:WaveEngine.Kinect.KinectService.FaceFrameSources
  name: FaceFrameSources
  nameWithType: KinectService.FaceFrameSources
  fullName: WaveEngine.Kinect.KinectService.FaceFrameSources
- uid: Microsoft.Kinect.Face.FaceFrameSource[]
  isExternal: true
  name: FaceFrameSource[]
  nameWithType: FaceFrameSource[]
  fullName: Microsoft.Kinect.Face.FaceFrameSource[]
  nameWithType.vb: FaceFrameSource()
  fullName.vb: Microsoft.Kinect.Face.FaceFrameSource()
  name.vb: FaceFrameSource()
  spec.csharp:
  - uid: Microsoft.Kinect.Face.FaceFrameSource
    name: FaceFrameSource
    nameWithType: FaceFrameSource
    fullName: Microsoft.Kinect.Face.FaceFrameSource
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Kinect.Face.FaceFrameSource
    name: FaceFrameSource
    nameWithType: FaceFrameSource
    fullName: Microsoft.Kinect.Face.FaceFrameSource
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Kinect.KinectService.FaceFrameResults*
  commentId: Overload:WaveEngine.Kinect.KinectService.FaceFrameResults
  name: FaceFrameResults
  nameWithType: KinectService.FaceFrameResults
  fullName: WaveEngine.Kinect.KinectService.FaceFrameResults
- uid: Microsoft.Kinect.Face.FaceFrameResult[]
  isExternal: true
  name: FaceFrameResult[]
  nameWithType: FaceFrameResult[]
  fullName: Microsoft.Kinect.Face.FaceFrameResult[]
  nameWithType.vb: FaceFrameResult()
  fullName.vb: Microsoft.Kinect.Face.FaceFrameResult()
  name.vb: FaceFrameResult()
  spec.csharp:
  - uid: Microsoft.Kinect.Face.FaceFrameResult
    name: FaceFrameResult
    nameWithType: FaceFrameResult
    fullName: Microsoft.Kinect.Face.FaceFrameResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Kinect.Face.FaceFrameResult
    name: FaceFrameResult
    nameWithType: FaceFrameResult
    fullName: Microsoft.Kinect.Face.FaceFrameResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Kinect.KinectService.Mapper*
  commentId: Overload:WaveEngine.Kinect.KinectService.Mapper
  name: Mapper
  nameWithType: KinectService.Mapper
  fullName: WaveEngine.Kinect.KinectService.Mapper
- uid: Microsoft.Kinect.CoordinateMapper
  commentId: T:Microsoft.Kinect.CoordinateMapper
  parent: Microsoft.Kinect
  isExternal: true
  name: CoordinateMapper
  nameWithType: CoordinateMapper
  fullName: Microsoft.Kinect.CoordinateMapper
- uid: Microsoft.Kinect
  commentId: N:Microsoft.Kinect
  isExternal: true
  name: Microsoft.Kinect
  nameWithType: Microsoft.Kinect
  fullName: Microsoft.Kinect
- uid: WaveEngine.Kinect.KinectService.ColorTexture*
  commentId: Overload:WaveEngine.Kinect.KinectService.ColorTexture
  name: ColorTexture
  nameWithType: KinectService.ColorTexture
  fullName: WaveEngine.Kinect.KinectService.ColorTexture
- uid: WaveEngine.Framework.Graphics.Texture2D
  commentId: T:WaveEngine.Framework.Graphics.Texture2D
  parent: WaveEngine.Framework.Graphics
  name: Texture2D
  nameWithType: Texture2D
  fullName: WaveEngine.Framework.Graphics.Texture2D
- uid: WaveEngine.Framework.Graphics
  commentId: N:WaveEngine.Framework.Graphics
  name: WaveEngine.Framework.Graphics
  nameWithType: WaveEngine.Framework.Graphics
  fullName: WaveEngine.Framework.Graphics
- uid: WaveEngine.Kinect.KinectService.InfraredTexture*
  commentId: Overload:WaveEngine.Kinect.KinectService.InfraredTexture
  name: InfraredTexture
  nameWithType: KinectService.InfraredTexture
  fullName: WaveEngine.Kinect.KinectService.InfraredTexture
- uid: WaveEngine.Kinect.KinectService.DepthTexture*
  commentId: Overload:WaveEngine.Kinect.KinectService.DepthTexture
  name: DepthTexture
  nameWithType: KinectService.DepthTexture
  fullName: WaveEngine.Kinect.KinectService.DepthTexture
- uid: WaveEngine.Kinect.KinectService.IsAvailable*
  commentId: Overload:WaveEngine.Kinect.KinectService.IsAvailable
  name: IsAvailable
  nameWithType: KinectService.IsAvailable
  fullName: WaveEngine.Kinect.KinectService.IsAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance*
  commentId: Overload:WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance
  name: UseDepthMinReliableDistance
  nameWithType: KinectService.UseDepthMinReliableDistance
  fullName: WaveEngine.Kinect.KinectService.UseDepthMinReliableDistance
- uid: WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance*
  commentId: Overload:WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance
  name: UseDepthMaxReliableDistance
  nameWithType: KinectService.UseDepthMaxReliableDistance
  fullName: WaveEngine.Kinect.KinectService.UseDepthMaxReliableDistance
- uid: WaveEngine.Kinect.KinectService.IsPaused*
  commentId: Overload:WaveEngine.Kinect.KinectService.IsPaused
  name: IsPaused
  nameWithType: KinectService.IsPaused
  fullName: WaveEngine.Kinect.KinectService.IsPaused
- uid: WaveEngine.Kinect.KinectService.Bodies*
  commentId: Overload:WaveEngine.Kinect.KinectService.Bodies
  name: Bodies
  nameWithType: KinectService.Bodies
  fullName: WaveEngine.Kinect.KinectService.Bodies
- uid: Microsoft.Kinect.Body[]
  isExternal: true
  name: Body[]
  nameWithType: Body[]
  fullName: Microsoft.Kinect.Body[]
  nameWithType.vb: Body()
  fullName.vb: Microsoft.Kinect.Body()
  name.vb: Body()
  spec.csharp:
  - uid: Microsoft.Kinect.Body
    name: Body
    nameWithType: Body
    fullName: Microsoft.Kinect.Body
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Kinect.Body
    name: Body
    nameWithType: Body
    fullName: Microsoft.Kinect.Body
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Kinect.KinectService.StartSensor*
  commentId: Overload:WaveEngine.Kinect.KinectService.StartSensor
  name: StartSensor
  nameWithType: KinectService.StartSensor
  fullName: WaveEngine.Kinect.KinectService.StartSensor
- uid: WaveEngine.Kinect.KinectService.StopSensor*
  commentId: Overload:WaveEngine.Kinect.KinectService.StopSensor
  name: StopSensor
  nameWithType: KinectService.StopSensor
  fullName: WaveEngine.Kinect.KinectService.StopSensor
- uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  commentId: M:WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  parent: WaveEngine.Common.UpdatableService
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: UpdatableService.Update(TimeSpan)
  fullName: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
    name: Update
    nameWithType: UpdatableService.Update
    fullName: WaveEngine.Common.UpdatableService.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
    name: Update
    nameWithType: UpdatableService.Update
    fullName: WaveEngine.Common.UpdatableService.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Kinect.KinectService.Update*
  commentId: Overload:WaveEngine.Kinect.KinectService.Update
  name: Update
  nameWithType: KinectService.Update
  fullName: WaveEngine.Kinect.KinectService.Update
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Common.Service.Initialize
  commentId: M:WaveEngine.Common.Service.Initialize
  parent: WaveEngine.Common.Service
  name: Initialize()
  nameWithType: Service.Initialize()
  fullName: WaveEngine.Common.Service.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Kinect.KinectService.Initialize*
  commentId: Overload:WaveEngine.Kinect.KinectService.Initialize
  name: Initialize
  nameWithType: KinectService.Initialize
  fullName: WaveEngine.Kinect.KinectService.Initialize
- uid: WaveEngine.Common.Service.Terminate
  commentId: M:WaveEngine.Common.Service.Terminate
  parent: WaveEngine.Common.Service
  name: Terminate()
  nameWithType: Service.Terminate()
  fullName: WaveEngine.Common.Service.Terminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Kinect.KinectService.Terminate*
  commentId: Overload:WaveEngine.Kinect.KinectService.Terminate
  name: Terminate
  nameWithType: KinectService.Terminate
  fullName: WaveEngine.Kinect.KinectService.Terminate
