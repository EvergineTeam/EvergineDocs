### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Managers.PhysicsManager
  commentId: T:WaveEngine.Framework.Managers.PhysicsManager
  id: PhysicsManager
  parent: WaveEngine.Framework.Managers
  children:
  - WaveEngine.Framework.Managers.PhysicsManager.AddBehavior(WaveEngine.Framework.Behavior)
  - WaveEngine.Framework.Managers.PhysicsManager.Dispose
  - WaveEngine.Framework.Managers.PhysicsManager.Dispose(System.Boolean)
  - WaveEngine.Framework.Managers.PhysicsManager.Initialize
  - WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior(WaveEngine.Framework.Behavior)
  - WaveEngine.Framework.Managers.PhysicsManager.Simulation2D
  - WaveEngine.Framework.Managers.PhysicsManager.Simulation3D
  - WaveEngine.Framework.Managers.PhysicsManager.updatables2D
  - WaveEngine.Framework.Managers.PhysicsManager.updatables3D
  langs:
  - csharp
  - vb
  name: PhysicsManager
  nameWithType: PhysicsManager
  fullName: WaveEngine.Framework.Managers.PhysicsManager
  type: Class
  source:
    id: PhysicsManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 19
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nClass that holds the responsibility of updating lists of physics entities in the correct order.\n"
  example: []
  syntax:
    content: 'public class PhysicsManager : Manager, IDisposable'
    content.vb: >-
      Public Class PhysicsManager

          Inherits Manager

          Implements IDisposable
  inheritance:
  - System.Object
  - WaveEngine.Common.Manager
  implements:
  - System.IDisposable
  inheritedMembers:
  - WaveEngine.Common.Manager.IsInitialized
  - WaveEngine.Common.Manager.BaseInitialize
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Managers.PhysicsManager.updatables3D
  commentId: F:WaveEngine.Framework.Managers.PhysicsManager.updatables3D
  id: updatables3D
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: updatables3D
  nameWithType: PhysicsManager.updatables3D
  fullName: WaveEngine.Framework.Managers.PhysicsManager.updatables3D
  type: Field
  source:
    id: updatables3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 34
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nList of 3D physics behaviors.\n"
  example: []
  syntax:
    content: protected List<Behavior> updatables3D
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Behavior}
    content.vb: Protected updatables3D As List(Of Behavior)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Managers.PhysicsManager.updatables2D
  commentId: F:WaveEngine.Framework.Managers.PhysicsManager.updatables2D
  id: updatables2D
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: updatables2D
  nameWithType: PhysicsManager.updatables2D
  fullName: WaveEngine.Framework.Managers.PhysicsManager.updatables2D
  type: Field
  source:
    id: updatables2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 39
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nList of 2D physics behaviors.\n"
  example: []
  syntax:
    content: protected List<Behavior> updatables2D
    return:
      type: System.Collections.Generic.List{WaveEngine.Framework.Behavior}
    content.vb: Protected updatables2D As List(Of Behavior)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Managers.PhysicsManager.Simulation2D
  commentId: P:WaveEngine.Framework.Managers.PhysicsManager.Simulation2D
  id: Simulation2D
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: Simulation2D
  nameWithType: PhysicsManager.Simulation2D
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Simulation2D
  type: Property
  source:
    id: Simulation2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 56
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nGets the 2D simulation\n"
  example: []
  syntax:
    content: public ISimulation2D Simulation2D { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.ISimulation2D
    content.vb: Public ReadOnly Property Simulation2D As ISimulation2D
  overload: WaveEngine.Framework.Managers.PhysicsManager.Simulation2D*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Managers.PhysicsManager.Simulation3D
  commentId: P:WaveEngine.Framework.Managers.PhysicsManager.Simulation3D
  id: Simulation3D
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: Simulation3D
  nameWithType: PhysicsManager.Simulation3D
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Simulation3D
  type: Property
  source:
    id: Simulation3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 67
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nGets the 3D simulation\n"
  example: []
  syntax:
    content: public ISimulation3D Simulation3D { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics3D.ISimulation3D
    content.vb: Public ReadOnly Property Simulation3D As ISimulation3D
  overload: WaveEngine.Framework.Managers.PhysicsManager.Simulation3D*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Managers.PhysicsManager.AddBehavior(WaveEngine.Framework.Behavior)
  commentId: M:WaveEngine.Framework.Managers.PhysicsManager.AddBehavior(WaveEngine.Framework.Behavior)
  id: AddBehavior(WaveEngine.Framework.Behavior)
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: AddBehavior(Behavior)
  nameWithType: PhysicsManager.AddBehavior(Behavior)
  fullName: WaveEngine.Framework.Managers.PhysicsManager.AddBehavior(WaveEngine.Framework.Behavior)
  type: Method
  source:
    id: AddBehavior
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 103
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nAdds the behavior.\n"
  example: []
  syntax:
    content: public void AddBehavior(Behavior behavior)
    parameters:
    - id: behavior
      type: WaveEngine.Framework.Behavior
      description: The behavior.
    content.vb: Public Sub AddBehavior(behavior As Behavior)
  overload: WaveEngine.Framework.Managers.PhysicsManager.AddBehavior*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Behavior cannot be null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior(WaveEngine.Framework.Behavior)
  commentId: M:WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior(WaveEngine.Framework.Behavior)
  id: RemoveBehavior(WaveEngine.Framework.Behavior)
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: RemoveBehavior(Behavior)
  nameWithType: PhysicsManager.RemoveBehavior(Behavior)
  fullName: WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior(WaveEngine.Framework.Behavior)
  type: Method
  source:
    id: RemoveBehavior
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 145
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nRemoves the behavior.\n"
  example: []
  syntax:
    content: public void RemoveBehavior(Behavior behavior)
    parameters:
    - id: behavior
      type: WaveEngine.Framework.Behavior
      description: The behavior.
    content.vb: Public Sub RemoveBehavior(behavior As Behavior)
  overload: WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Behavior cannot be null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Managers.PhysicsManager.Dispose
  commentId: M:WaveEngine.Framework.Managers.PhysicsManager.Dispose
  id: Dispose
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PhysicsManager.Dispose()
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 170
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: WaveEngine.Framework.Managers.PhysicsManager.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Managers.PhysicsManager.Initialize
  commentId: M:WaveEngine.Framework.Managers.PhysicsManager.Initialize
  id: Initialize
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: PhysicsManager.Initialize()
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 231
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nAllows to execute custom logic during the initialization of this instance.\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Common.Manager.Initialize
  overload: WaveEngine.Framework.Managers.PhysicsManager.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Managers.PhysicsManager.Dispose(System.Boolean)
  commentId: M:WaveEngine.Framework.Managers.PhysicsManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: WaveEngine.Framework.Managers.PhysicsManager
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: PhysicsManager.Dispose(Boolean)
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Managers\PhysicsManager.cs
    startLine: 239
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Managers
  summary: "\nReleases unmanaged and - optionally - managed resources\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: <code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: WaveEngine.Framework.Managers.PhysicsManager.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: WaveEngine.Framework.Managers
  commentId: N:WaveEngine.Framework.Managers
  name: WaveEngine.Framework.Managers
  nameWithType: WaveEngine.Framework.Managers
  fullName: WaveEngine.Framework.Managers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Manager
  commentId: T:WaveEngine.Common.Manager
  parent: WaveEngine.Common
  name: Manager
  nameWithType: Manager
  fullName: WaveEngine.Common.Manager
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Common.Manager.IsInitialized
  commentId: P:WaveEngine.Common.Manager.IsInitialized
  parent: WaveEngine.Common.Manager
  name: IsInitialized
  nameWithType: Manager.IsInitialized
  fullName: WaveEngine.Common.Manager.IsInitialized
- uid: WaveEngine.Common.Manager.BaseInitialize
  commentId: M:WaveEngine.Common.Manager.BaseInitialize
  parent: WaveEngine.Common.Manager
  name: BaseInitialize()
  nameWithType: Manager.BaseInitialize()
  fullName: WaveEngine.Common.Manager.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Manager.BaseInitialize
    name: BaseInitialize
    nameWithType: Manager.BaseInitialize
    fullName: WaveEngine.Common.Manager.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Manager.BaseInitialize
    name: BaseInitialize
    nameWithType: Manager.BaseInitialize
    fullName: WaveEngine.Common.Manager.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Collections.Generic.List{WaveEngine.Framework.Behavior}
  commentId: T:System.Collections.Generic.List{WaveEngine.Framework.Behavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Behavior>
  nameWithType: List<Behavior>
  fullName: System.Collections.Generic.List<WaveEngine.Framework.Behavior>
  nameWithType.vb: List(Of Behavior)
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.Framework.Behavior)
  name.vb: List(Of Behavior)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Framework.Behavior
    name: Behavior
    nameWithType: Behavior
    fullName: WaveEngine.Framework.Behavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Framework.Behavior
    name: Behavior
    nameWithType: Behavior
    fullName: WaveEngine.Framework.Behavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Managers.PhysicsManager.Simulation2D*
  commentId: Overload:WaveEngine.Framework.Managers.PhysicsManager.Simulation2D
  name: Simulation2D
  nameWithType: PhysicsManager.Simulation2D
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Simulation2D
- uid: WaveEngine.Common.Physics2D.ISimulation2D
  commentId: T:WaveEngine.Common.Physics2D.ISimulation2D
  parent: WaveEngine.Common.Physics2D
  name: ISimulation2D
  nameWithType: ISimulation2D
  fullName: WaveEngine.Common.Physics2D.ISimulation2D
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: WaveEngine.Framework.Managers.PhysicsManager.Simulation3D*
  commentId: Overload:WaveEngine.Framework.Managers.PhysicsManager.Simulation3D
  name: Simulation3D
  nameWithType: PhysicsManager.Simulation3D
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Simulation3D
- uid: WaveEngine.Common.Physics3D.ISimulation3D
  commentId: T:WaveEngine.Common.Physics3D.ISimulation3D
  parent: WaveEngine.Common.Physics3D
  name: ISimulation3D
  nameWithType: ISimulation3D
  fullName: WaveEngine.Common.Physics3D.ISimulation3D
- uid: WaveEngine.Common.Physics3D
  commentId: N:WaveEngine.Common.Physics3D
  name: WaveEngine.Common.Physics3D
  nameWithType: WaveEngine.Common.Physics3D
  fullName: WaveEngine.Common.Physics3D
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: WaveEngine.Framework.Managers.PhysicsManager.AddBehavior*
  commentId: Overload:WaveEngine.Framework.Managers.PhysicsManager.AddBehavior
  name: AddBehavior
  nameWithType: PhysicsManager.AddBehavior
  fullName: WaveEngine.Framework.Managers.PhysicsManager.AddBehavior
- uid: WaveEngine.Framework.Behavior
  commentId: T:WaveEngine.Framework.Behavior
  parent: WaveEngine.Framework
  name: Behavior
  nameWithType: Behavior
  fullName: WaveEngine.Framework.Behavior
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior*
  commentId: Overload:WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior
  name: RemoveBehavior
  nameWithType: PhysicsManager.RemoveBehavior
  fullName: WaveEngine.Framework.Managers.PhysicsManager.RemoveBehavior
- uid: WaveEngine.Framework.Managers.PhysicsManager.Dispose*
  commentId: Overload:WaveEngine.Framework.Managers.PhysicsManager.Dispose
  name: Dispose
  nameWithType: PhysicsManager.Dispose
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Manager.Initialize
  commentId: M:WaveEngine.Common.Manager.Initialize
  parent: WaveEngine.Common.Manager
  name: Initialize()
  nameWithType: Manager.Initialize()
  fullName: WaveEngine.Common.Manager.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Manager.Initialize
    name: Initialize
    nameWithType: Manager.Initialize
    fullName: WaveEngine.Common.Manager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Manager.Initialize
    name: Initialize
    nameWithType: Manager.Initialize
    fullName: WaveEngine.Common.Manager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Managers.PhysicsManager.Initialize*
  commentId: Overload:WaveEngine.Framework.Managers.PhysicsManager.Initialize
  name: Initialize
  nameWithType: PhysicsManager.Initialize
  fullName: WaveEngine.Framework.Managers.PhysicsManager.Initialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
