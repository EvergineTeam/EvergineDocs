### YamlMime:ManagedReference
items:
- uid: WaveEngine.Networking.Rooms.RoomInfo
  commentId: T:WaveEngine.Networking.Rooms.RoomInfo
  id: RoomInfo
  parent: WaveEngine.Networking.Rooms
  children:
  - WaveEngine.Networking.Rooms.RoomInfo.IsFull
  - WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers
  - WaveEngine.Networking.Rooms.RoomInfo.Name
  - WaveEngine.Networking.Rooms.RoomInfo.PlayerCount
  - WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby
  - WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags)
  langs:
  - csharp
  - vb
  name: RoomInfo
  nameWithType: RoomInfo
  fullName: WaveEngine.Networking.Rooms.RoomInfo
  type: Class
  source:
    id: RoomInfo
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 14
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nThis class represents the info of a room in the lobby\n"
  example: []
  syntax:
    content: 'public class RoomInfo : IRoomInfo'
    content.vb: >-
      Public Class RoomInfo

          Implements IRoomInfo
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Networking.Rooms.IRoomInfo
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Networking.Rooms.RoomInfo.Name
  commentId: P:WaveEngine.Networking.Rooms.RoomInfo.Name
  id: Name
  parent: WaveEngine.Networking.Rooms.RoomInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoomInfo.Name
  fullName: WaveEngine.Networking.Rooms.RoomInfo.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 76
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: WaveEngine.Networking.Rooms.RoomInfo.Name*
  implements:
  - WaveEngine.Networking.Rooms.IRoomInfo.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.RoomInfo.PlayerCount
  commentId: P:WaveEngine.Networking.Rooms.RoomInfo.PlayerCount
  id: PlayerCount
  parent: WaveEngine.Networking.Rooms.RoomInfo
  langs:
  - csharp
  - vb
  name: PlayerCount
  nameWithType: RoomInfo.PlayerCount
  fullName: WaveEngine.Networking.Rooms.RoomInfo.PlayerCount
  type: Property
  source:
    id: PlayerCount
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 79
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  example: []
  syntax:
    content: public byte PlayerCount { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property PlayerCount As Byte
  overload: WaveEngine.Networking.Rooms.RoomInfo.PlayerCount*
  implements:
  - WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.RoomInfo.IsFull
  commentId: P:WaveEngine.Networking.Rooms.RoomInfo.IsFull
  id: IsFull
  parent: WaveEngine.Networking.Rooms.RoomInfo
  langs:
  - csharp
  - vb
  name: IsFull
  nameWithType: RoomInfo.IsFull
  fullName: WaveEngine.Networking.Rooms.RoomInfo.IsFull
  type: Property
  source:
    id: IsFull
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 97
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  example: []
  syntax:
    content: public bool IsFull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFull As Boolean
  overload: WaveEngine.Networking.Rooms.RoomInfo.IsFull*
  implements:
  - WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers
  commentId: P:WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers
  id: MaxPlayers
  parent: WaveEngine.Networking.Rooms.RoomInfo
  langs:
  - csharp
  - vb
  name: MaxPlayers
  nameWithType: RoomInfo.MaxPlayers
  fullName: WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers
  type: Property
  source:
    id: MaxPlayers
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 107
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  example: []
  syntax:
    content: public byte MaxPlayers { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property MaxPlayers As Byte
  overload: WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers*
  implements:
  - WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby
  commentId: P:WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby
  id: PropertiesListedInLobby
  parent: WaveEngine.Networking.Rooms.RoomInfo
  langs:
  - csharp
  - vb
  name: PropertiesListedInLobby
  nameWithType: RoomInfo.PropertiesListedInLobby
  fullName: WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby
  type: Property
  source:
    id: PropertiesListedInLobby
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 125
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  example: []
  syntax:
    content: public HashSet<string> PropertiesListedInLobby { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property PropertiesListedInLobby As HashSet(Of String)
  overload: WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby*
  implements:
  - WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags)
  commentId: M:WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags)
  id: WriteSyncMessage(WaveEngine.Networking.Connection.Messages.OutgoingMessage,WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags)
  parent: WaveEngine.Networking.Rooms.RoomInfo
  langs:
  - csharp
  - vb
  name: WriteSyncMessage(OutgoingMessage, RoomInfo.RoomInfoFieldsFlags)
  nameWithType: RoomInfo.WriteSyncMessage(OutgoingMessage, RoomInfo.RoomInfoFieldsFlags)
  fullName: WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage(WaveEngine.Networking.Connection.Messages.OutgoingMessage, WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags)
  type: Method
  source:
    id: WriteSyncMessage
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Networking\Shared\Rooms\RoomInfo.cs
    startLine: 256
  assemblies:
  - WaveEngine.Networking
  namespace: WaveEngine.Networking.Rooms
  summary: "\nWrites the properties to be sync on an outgoing message.\n"
  example: []
  syntax:
    content: protected void WriteSyncMessage(OutgoingMessage message, RoomInfo.RoomInfoFieldsFlags includedFields)
    parameters:
    - id: message
      type: WaveEngine.Networking.Connection.Messages.OutgoingMessage
      description: The outgoing message
    - id: includedFields
      type: WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags
      description: Indicates the fields that must synchronized
    content.vb: Protected Sub WriteSyncMessage(message As OutgoingMessage, includedFields As RoomInfo.RoomInfoFieldsFlags)
  overload: WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: WaveEngine.Networking.Rooms
  commentId: N:WaveEngine.Networking.Rooms
  name: WaveEngine.Networking.Rooms
  nameWithType: WaveEngine.Networking.Rooms
  fullName: WaveEngine.Networking.Rooms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Networking.Rooms.IRoomInfo
  commentId: T:WaveEngine.Networking.Rooms.IRoomInfo
  parent: WaveEngine.Networking.Rooms
  name: IRoomInfo
  nameWithType: IRoomInfo
  fullName: WaveEngine.Networking.Rooms.IRoomInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Networking.Rooms.RoomInfo.Name*
  commentId: Overload:WaveEngine.Networking.Rooms.RoomInfo.Name
  name: Name
  nameWithType: RoomInfo.Name
  fullName: WaveEngine.Networking.Rooms.RoomInfo.Name
- uid: WaveEngine.Networking.Rooms.IRoomInfo.Name
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.Name
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  name: Name
  nameWithType: IRoomInfo.Name
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Networking.Rooms.RoomInfo.PlayerCount*
  commentId: Overload:WaveEngine.Networking.Rooms.RoomInfo.PlayerCount
  name: PlayerCount
  nameWithType: RoomInfo.PlayerCount
  fullName: WaveEngine.Networking.Rooms.RoomInfo.PlayerCount
- uid: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  name: PlayerCount
  nameWithType: IRoomInfo.PlayerCount
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.PlayerCount
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: WaveEngine.Networking.Rooms.RoomInfo.IsFull*
  commentId: Overload:WaveEngine.Networking.Rooms.RoomInfo.IsFull
  name: IsFull
  nameWithType: RoomInfo.IsFull
  fullName: WaveEngine.Networking.Rooms.RoomInfo.IsFull
- uid: WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.IsFull
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  name: IsFull
  nameWithType: IRoomInfo.IsFull
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.IsFull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers*
  commentId: Overload:WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers
  name: MaxPlayers
  nameWithType: RoomInfo.MaxPlayers
  fullName: WaveEngine.Networking.Rooms.RoomInfo.MaxPlayers
- uid: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  name: MaxPlayers
  nameWithType: IRoomInfo.MaxPlayers
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.MaxPlayers
- uid: WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby*
  commentId: Overload:WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby
  name: PropertiesListedInLobby
  nameWithType: RoomInfo.PropertiesListedInLobby
  fullName: WaveEngine.Networking.Rooms.RoomInfo.PropertiesListedInLobby
- uid: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  commentId: P:WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
  parent: WaveEngine.Networking.Rooms.IRoomInfo
  name: PropertiesListedInLobby
  nameWithType: IRoomInfo.PropertiesListedInLobby
  fullName: WaveEngine.Networking.Rooms.IRoomInfo.PropertiesListedInLobby
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage*
  commentId: Overload:WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage
  name: WriteSyncMessage
  nameWithType: RoomInfo.WriteSyncMessage
  fullName: WaveEngine.Networking.Rooms.RoomInfo.WriteSyncMessage
- uid: WaveEngine.Networking.Connection.Messages.OutgoingMessage
  commentId: T:WaveEngine.Networking.Connection.Messages.OutgoingMessage
  parent: WaveEngine.Networking.Connection.Messages
  name: OutgoingMessage
  nameWithType: OutgoingMessage
  fullName: WaveEngine.Networking.Connection.Messages.OutgoingMessage
- uid: WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags
  commentId: T:WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags
  parent: WaveEngine.Networking.Rooms
  name: RoomInfo.RoomInfoFieldsFlags
  nameWithType: RoomInfo.RoomInfoFieldsFlags
  fullName: WaveEngine.Networking.Rooms.RoomInfo.RoomInfoFieldsFlags
- uid: WaveEngine.Networking.Connection.Messages
  commentId: N:WaveEngine.Networking.Connection.Messages
  name: WaveEngine.Networking.Connection.Messages
  nameWithType: WaveEngine.Networking.Connection.Messages
  fullName: WaveEngine.Networking.Connection.Messages
