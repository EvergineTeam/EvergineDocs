### YamlMime:ManagedReference
items:
- uid: WaveEngine.TiledMap.Tileset
  commentId: T:WaveEngine.TiledMap.Tileset
  id: Tileset
  parent: WaveEngine.TiledMap
  children:
  - WaveEngine.TiledMap.Tileset.#ctor(TiledSharp.TmxTileset,WaveEngine.TiledMap.TiledMap)
  - WaveEngine.TiledMap.Tileset.Colums
  - WaveEngine.TiledMap.Tileset.Dispose
  - WaveEngine.TiledMap.Tileset.FirstGid
  - WaveEngine.TiledMap.Tileset.Image
  - WaveEngine.TiledMap.Tileset.LastGid
  - WaveEngine.TiledMap.Tileset.Margin
  - WaveEngine.TiledMap.Tileset.Name
  - WaveEngine.TiledMap.Tileset.Spacing
  - WaveEngine.TiledMap.Tileset.Terrains
  - WaveEngine.TiledMap.Tileset.TileHeight
  - WaveEngine.TiledMap.Tileset.TilesTable
  - WaveEngine.TiledMap.Tileset.TileWidth
  - WaveEngine.TiledMap.Tileset.XDrawingOffset
  - WaveEngine.TiledMap.Tileset.XTilesCount
  - WaveEngine.TiledMap.Tileset.YDrawingOffset
  - WaveEngine.TiledMap.Tileset.YTilesCount
  langs:
  - csharp
  - vb
  name: Tileset
  nameWithType: Tileset
  fullName: WaveEngine.TiledMap.Tileset
  type: Class
  source:
    id: Tileset
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 20
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nA TMX tileset wrapper class\n"
  example: []
  syntax:
    content: 'public class Tileset : IDisposable'
    content.vb: >-
      Public Class Tileset

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.TiledMap.Tileset.Name
  commentId: P:WaveEngine.TiledMap.Tileset.Name
  id: Name
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Tileset.Name
  fullName: WaveEngine.TiledMap.Tileset.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 42
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the name of the tileset.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: WaveEngine.TiledMap.Tileset.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.TileWidth
  commentId: P:WaveEngine.TiledMap.Tileset.TileWidth
  id: TileWidth
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: TileWidth
  nameWithType: Tileset.TileWidth
  fullName: WaveEngine.TiledMap.Tileset.TileWidth
  type: Property
  source:
    id: TileWidth
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 51
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the (maximum) width of the tiles in this tileset.\n"
  example: []
  syntax:
    content: public int TileWidth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TileWidth As Integer
  overload: WaveEngine.TiledMap.Tileset.TileWidth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.TileHeight
  commentId: P:WaveEngine.TiledMap.Tileset.TileHeight
  id: TileHeight
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: TileHeight
  nameWithType: Tileset.TileHeight
  fullName: WaveEngine.TiledMap.Tileset.TileHeight
  type: Property
  source:
    id: TileHeight
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 60
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the (maximum) height of the tiles in this tileset.\n"
  example: []
  syntax:
    content: public int TileHeight { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TileHeight As Integer
  overload: WaveEngine.TiledMap.Tileset.TileHeight*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.FirstGid
  commentId: P:WaveEngine.TiledMap.Tileset.FirstGid
  id: FirstGid
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: FirstGid
  nameWithType: Tileset.FirstGid
  fullName: WaveEngine.TiledMap.Tileset.FirstGid
  type: Property
  source:
    id: FirstGid
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 69
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the first global tile ID of this tileset (this global ID maps to the first tile in this tileset).\n"
  example: []
  syntax:
    content: public int FirstGid { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FirstGid As Integer
  overload: WaveEngine.TiledMap.Tileset.FirstGid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.LastGid
  commentId: P:WaveEngine.TiledMap.Tileset.LastGid
  id: LastGid
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: LastGid
  nameWithType: Tileset.LastGid
  fullName: WaveEngine.TiledMap.Tileset.LastGid
  type: Property
  source:
    id: LastGid
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 78
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the last global tile ID of this tileset (this global ID maps to the last tile in this tileset).\n"
  example: []
  syntax:
    content: public int LastGid { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LastGid As Integer
  overload: WaveEngine.TiledMap.Tileset.LastGid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.Spacing
  commentId: P:WaveEngine.TiledMap.Tileset.Spacing
  id: Spacing
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Spacing
  nameWithType: Tileset.Spacing
  fullName: WaveEngine.TiledMap.Tileset.Spacing
  type: Property
  source:
    id: Spacing
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 87
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the spacing in pixels between the tiles in this tileset (applies to the tileset image).\n"
  example: []
  syntax:
    content: public int Spacing { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Spacing As Integer
  overload: WaveEngine.TiledMap.Tileset.Spacing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.Margin
  commentId: P:WaveEngine.TiledMap.Tileset.Margin
  id: Margin
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Margin
  nameWithType: Tileset.Margin
  fullName: WaveEngine.TiledMap.Tileset.Margin
  type: Property
  source:
    id: Margin
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 96
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the margin around the tiles in this tileset (applies to the tileset image).\n"
  example: []
  syntax:
    content: public int Margin { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Margin As Integer
  overload: WaveEngine.TiledMap.Tileset.Margin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.XTilesCount
  commentId: P:WaveEngine.TiledMap.Tileset.XTilesCount
  id: XTilesCount
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: XTilesCount
  nameWithType: Tileset.XTilesCount
  fullName: WaveEngine.TiledMap.Tileset.XTilesCount
  type: Property
  source:
    id: XTilesCount
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 105
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the number of tiles in the X axis\n"
  example: []
  syntax:
    content: public int XTilesCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property XTilesCount As Integer
  overload: WaveEngine.TiledMap.Tileset.XTilesCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.YTilesCount
  commentId: P:WaveEngine.TiledMap.Tileset.YTilesCount
  id: YTilesCount
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: YTilesCount
  nameWithType: Tileset.YTilesCount
  fullName: WaveEngine.TiledMap.Tileset.YTilesCount
  type: Property
  source:
    id: YTilesCount
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 114
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the number of tiles in the Y axis\n"
  example: []
  syntax:
    content: public int YTilesCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property YTilesCount As Integer
  overload: WaveEngine.TiledMap.Tileset.YTilesCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.XDrawingOffset
  commentId: P:WaveEngine.TiledMap.Tileset.XDrawingOffset
  id: XDrawingOffset
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: XDrawingOffset
  nameWithType: Tileset.XDrawingOffset
  fullName: WaveEngine.TiledMap.Tileset.XDrawingOffset
  type: Property
  source:
    id: XDrawingOffset
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 123
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the drawing offset in the X axis.\n"
  example: []
  syntax:
    content: public int XDrawingOffset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property XDrawingOffset As Integer
  overload: WaveEngine.TiledMap.Tileset.XDrawingOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.YDrawingOffset
  commentId: P:WaveEngine.TiledMap.Tileset.YDrawingOffset
  id: YDrawingOffset
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: YDrawingOffset
  nameWithType: Tileset.YDrawingOffset
  fullName: WaveEngine.TiledMap.Tileset.YDrawingOffset
  type: Property
  source:
    id: YDrawingOffset
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 132
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the drawing offset in the Y axis.\n"
  example: []
  syntax:
    content: public int YDrawingOffset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property YDrawingOffset As Integer
  overload: WaveEngine.TiledMap.Tileset.YDrawingOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.Colums
  commentId: P:WaveEngine.TiledMap.Tileset.Colums
  id: Colums
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Colums
  nameWithType: Tileset.Colums
  fullName: WaveEngine.TiledMap.Tileset.Colums
  type: Property
  source:
    id: Colums
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 141
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the number of tile columns in the tileset.\n"
  example: []
  syntax:
    content: public int Colums { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Colums As Integer
  overload: WaveEngine.TiledMap.Tileset.Colums*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.Image
  commentId: P:WaveEngine.TiledMap.Tileset.Image
  id: Image
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: Tileset.Image
  fullName: WaveEngine.TiledMap.Tileset.Image
  type: Property
  source:
    id: Image
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 150
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the tileset image texture.\n"
  example: []
  syntax:
    content: public Texture2D Image { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Graphics.Texture2D
    content.vb: Public ReadOnly Property Image As Texture2D
  overload: WaveEngine.TiledMap.Tileset.Image*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.Terrains
  commentId: P:WaveEngine.TiledMap.Tileset.Terrains
  id: Terrains
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Terrains
  nameWithType: Tileset.Terrains
  fullName: WaveEngine.TiledMap.Tileset.Terrains
  type: Property
  source:
    id: Terrains
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 159
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets thetileset terrains\n"
  example: []
  syntax:
    content: public ReadOnlyDictionary<string, TilesetTerrain> Terrains { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,WaveEngine.TiledMap.TilesetTerrain}
    content.vb: Public ReadOnly Property Terrains As ReadOnlyDictionary(Of String, TilesetTerrain)
  overload: WaveEngine.TiledMap.Tileset.Terrains*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.TilesTable
  commentId: P:WaveEngine.TiledMap.Tileset.TilesTable
  id: TilesTable
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: TilesTable
  nameWithType: Tileset.TilesTable
  fullName: WaveEngine.TiledMap.Tileset.TilesTable
  type: Property
  source:
    id: TilesTable
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 168
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the tileset tiles arranged in a table\n"
  example: []
  syntax:
    content: public TilesetTile[] TilesTable { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.TilesetTile[]
    content.vb: Public ReadOnly Property TilesTable As TilesetTile()
  overload: WaveEngine.TiledMap.Tileset.TilesTable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.Tileset.#ctor(TiledSharp.TmxTileset,WaveEngine.TiledMap.TiledMap)
  commentId: M:WaveEngine.TiledMap.Tileset.#ctor(TiledSharp.TmxTileset,WaveEngine.TiledMap.TiledMap)
  id: '#ctor(TiledSharp.TmxTileset,WaveEngine.TiledMap.TiledMap)'
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Tileset(TmxTileset, TiledMap)
  nameWithType: Tileset.Tileset(TmxTileset, TiledMap)
  fullName: WaveEngine.TiledMap.Tileset.Tileset(TiledSharp.TmxTileset, WaveEngine.TiledMap.TiledMap)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 178
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.TiledMap.Tileset\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Tileset(TmxTileset tmxTileset, TiledMap tiledMap)
    parameters:
    - id: tmxTileset
      type: TiledSharp.TmxTileset
      description: The TMX parsed tileset
    - id: tiledMap
      type: WaveEngine.TiledMap.TiledMap
      description: The tiled map
    content.vb: Public Sub New(tmxTileset As TmxTileset, tiledMap As TiledMap)
  overload: WaveEngine.TiledMap.Tileset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.TiledMap.Tileset.Dispose
  commentId: M:WaveEngine.TiledMap.Tileset.Dispose
  id: Dispose
  parent: WaveEngine.TiledMap.Tileset
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Tileset.Dispose()
  fullName: WaveEngine.TiledMap.Tileset.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TileSet.cs
    startLine: 228
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nDispose this tileset instance\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: WaveEngine.TiledMap.Tileset.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.TiledMap
  commentId: N:WaveEngine.TiledMap
  name: WaveEngine.TiledMap
  nameWithType: WaveEngine.TiledMap
  fullName: WaveEngine.TiledMap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.TiledMap.Tileset.Name*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Name
  name: Name
  nameWithType: Tileset.Name
  fullName: WaveEngine.TiledMap.Tileset.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.TiledMap.Tileset.TileWidth*
  commentId: Overload:WaveEngine.TiledMap.Tileset.TileWidth
  name: TileWidth
  nameWithType: Tileset.TileWidth
  fullName: WaveEngine.TiledMap.Tileset.TileWidth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.TiledMap.Tileset.TileHeight*
  commentId: Overload:WaveEngine.TiledMap.Tileset.TileHeight
  name: TileHeight
  nameWithType: Tileset.TileHeight
  fullName: WaveEngine.TiledMap.Tileset.TileHeight
- uid: WaveEngine.TiledMap.Tileset.FirstGid*
  commentId: Overload:WaveEngine.TiledMap.Tileset.FirstGid
  name: FirstGid
  nameWithType: Tileset.FirstGid
  fullName: WaveEngine.TiledMap.Tileset.FirstGid
- uid: WaveEngine.TiledMap.Tileset.LastGid*
  commentId: Overload:WaveEngine.TiledMap.Tileset.LastGid
  name: LastGid
  nameWithType: Tileset.LastGid
  fullName: WaveEngine.TiledMap.Tileset.LastGid
- uid: WaveEngine.TiledMap.Tileset.Spacing*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Spacing
  name: Spacing
  nameWithType: Tileset.Spacing
  fullName: WaveEngine.TiledMap.Tileset.Spacing
- uid: WaveEngine.TiledMap.Tileset.Margin*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Margin
  name: Margin
  nameWithType: Tileset.Margin
  fullName: WaveEngine.TiledMap.Tileset.Margin
- uid: WaveEngine.TiledMap.Tileset.XTilesCount*
  commentId: Overload:WaveEngine.TiledMap.Tileset.XTilesCount
  name: XTilesCount
  nameWithType: Tileset.XTilesCount
  fullName: WaveEngine.TiledMap.Tileset.XTilesCount
- uid: WaveEngine.TiledMap.Tileset.YTilesCount*
  commentId: Overload:WaveEngine.TiledMap.Tileset.YTilesCount
  name: YTilesCount
  nameWithType: Tileset.YTilesCount
  fullName: WaveEngine.TiledMap.Tileset.YTilesCount
- uid: WaveEngine.TiledMap.Tileset.XDrawingOffset*
  commentId: Overload:WaveEngine.TiledMap.Tileset.XDrawingOffset
  name: XDrawingOffset
  nameWithType: Tileset.XDrawingOffset
  fullName: WaveEngine.TiledMap.Tileset.XDrawingOffset
- uid: WaveEngine.TiledMap.Tileset.YDrawingOffset*
  commentId: Overload:WaveEngine.TiledMap.Tileset.YDrawingOffset
  name: YDrawingOffset
  nameWithType: Tileset.YDrawingOffset
  fullName: WaveEngine.TiledMap.Tileset.YDrawingOffset
- uid: WaveEngine.TiledMap.Tileset.Colums*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Colums
  name: Colums
  nameWithType: Tileset.Colums
  fullName: WaveEngine.TiledMap.Tileset.Colums
- uid: WaveEngine.TiledMap.Tileset.Image*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Image
  name: Image
  nameWithType: Tileset.Image
  fullName: WaveEngine.TiledMap.Tileset.Image
- uid: WaveEngine.Framework.Graphics.Texture2D
  commentId: T:WaveEngine.Framework.Graphics.Texture2D
  parent: WaveEngine.Framework.Graphics
  name: Texture2D
  nameWithType: Texture2D
  fullName: WaveEngine.Framework.Graphics.Texture2D
- uid: WaveEngine.Framework.Graphics
  commentId: N:WaveEngine.Framework.Graphics
  name: WaveEngine.Framework.Graphics
  nameWithType: WaveEngine.Framework.Graphics
  fullName: WaveEngine.Framework.Graphics
- uid: WaveEngine.TiledMap.Tileset.Terrains*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Terrains
  name: Terrains
  nameWithType: Tileset.Terrains
  fullName: WaveEngine.TiledMap.Tileset.Terrains
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,WaveEngine.TiledMap.TilesetTerrain}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,WaveEngine.TiledMap.TilesetTerrain}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  name: ReadOnlyDictionary<String, TilesetTerrain>
  nameWithType: ReadOnlyDictionary<String, TilesetTerrain>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<System.String, WaveEngine.TiledMap.TilesetTerrain>
  nameWithType.vb: ReadOnlyDictionary(Of String, TilesetTerrain)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of System.String, WaveEngine.TiledMap.TilesetTerrain)
  name.vb: ReadOnlyDictionary(Of String, TilesetTerrain)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.TiledMap.TilesetTerrain
    name: TilesetTerrain
    nameWithType: TilesetTerrain
    fullName: WaveEngine.TiledMap.TilesetTerrain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.TiledMap.TilesetTerrain
    name: TilesetTerrain
    nameWithType: TilesetTerrain
    fullName: WaveEngine.TiledMap.TilesetTerrain
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    nameWithType: ReadOnlyDictionary
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: WaveEngine.TiledMap.Tileset.TilesTable*
  commentId: Overload:WaveEngine.TiledMap.Tileset.TilesTable
  name: TilesTable
  nameWithType: Tileset.TilesTable
  fullName: WaveEngine.TiledMap.Tileset.TilesTable
- uid: WaveEngine.TiledMap.TilesetTile[]
  isExternal: true
  name: TilesetTile[]
  nameWithType: TilesetTile[]
  fullName: WaveEngine.TiledMap.TilesetTile[]
  nameWithType.vb: TilesetTile()
  fullName.vb: WaveEngine.TiledMap.TilesetTile()
  name.vb: TilesetTile()
  spec.csharp:
  - uid: WaveEngine.TiledMap.TilesetTile
    name: TilesetTile
    nameWithType: TilesetTile
    fullName: WaveEngine.TiledMap.TilesetTile
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.TiledMap.TilesetTile
    name: TilesetTile
    nameWithType: TilesetTile
    fullName: WaveEngine.TiledMap.TilesetTile
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.TiledMap.Tileset
  commentId: T:WaveEngine.TiledMap.Tileset
  parent: WaveEngine.TiledMap
  name: Tileset
  nameWithType: Tileset
  fullName: WaveEngine.TiledMap.Tileset
- uid: WaveEngine.TiledMap.Tileset.#ctor*
  commentId: Overload:WaveEngine.TiledMap.Tileset.#ctor
  name: Tileset
  nameWithType: Tileset.Tileset
  fullName: WaveEngine.TiledMap.Tileset.Tileset
- uid: TiledSharp.TmxTileset
  commentId: T:TiledSharp.TmxTileset
  parent: TiledSharp
  isExternal: true
  name: TmxTileset
  nameWithType: TmxTileset
  fullName: TiledSharp.TmxTileset
- uid: WaveEngine.TiledMap.TiledMap
  commentId: T:WaveEngine.TiledMap.TiledMap
  parent: WaveEngine.TiledMap
  name: TiledMap
  nameWithType: TiledMap
  fullName: WaveEngine.TiledMap.TiledMap
- uid: TiledSharp
  commentId: N:TiledSharp
  isExternal: true
  name: TiledSharp
  nameWithType: TiledSharp
  fullName: TiledSharp
- uid: WaveEngine.TiledMap.Tileset.Dispose*
  commentId: Overload:WaveEngine.TiledMap.Tileset.Dispose
  name: Dispose
  nameWithType: Tileset.Dispose
  fullName: WaveEngine.TiledMap.Tileset.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
