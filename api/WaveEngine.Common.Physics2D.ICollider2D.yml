### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics2D.ICollider2D
  commentId: T:WaveEngine.Common.Physics2D.ICollider2D
  id: ICollider2D
  parent: WaveEngine.Common.Physics2D
  children:
  - WaveEngine.Common.Physics2D.ICollider2D.BeginCollision
  - WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories
  - WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single@,WaveEngine.Common.Math.Vector2@)
  - WaveEngine.Common.Physics2D.ICollider2D.Density
  - WaveEngine.Common.Physics2D.ICollider2D.EndCollision
  - WaveEngine.Common.Physics2D.ICollider2D.Friction
  - WaveEngine.Common.Physics2D.ICollider2D.GroupIndex
  - WaveEngine.Common.Physics2D.ICollider2D.InternalCollider
  - WaveEngine.Common.Physics2D.ICollider2D.IsSensor
  - WaveEngine.Common.Physics2D.ICollider2D.MaskBits
  - WaveEngine.Common.Physics2D.ICollider2D.Restitution
  - WaveEngine.Common.Physics2D.ICollider2D.RigidBody
  - WaveEngine.Common.Physics2D.ICollider2D.Shape
  - WaveEngine.Common.Physics2D.ICollider2D.UserData
  langs:
  - csharp
  - vb
  name: ICollider2D
  nameWithType: ICollider2D
  fullName: WaveEngine.Common.Physics2D.ICollider2D
  type: Interface
  source:
    id: ICollider2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 23
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nInterface for a Collider Shape of 2D physics.\n"
  example: []
  syntax:
    content: public interface ICollider2D
    content.vb: Public Interface ICollider2D
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Physics2D.ICollider2D.BeginCollision
  commentId: E:WaveEngine.Common.Physics2D.ICollider2D.BeginCollision
  id: BeginCollision
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: BeginCollision
  nameWithType: ICollider2D.BeginCollision
  fullName: WaveEngine.Common.Physics2D.ICollider2D.BeginCollision
  type: Event
  source:
    id: BeginCollision
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 28
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nCalled when two fixtures begin to touch.\n"
  example: []
  syntax:
    content: event ContactDelegate BeginCollision
    return:
      type: WaveEngine.Common.Physics2D.ContactDelegate
    content.vb: Event BeginCollision As ContactDelegate
- uid: WaveEngine.Common.Physics2D.ICollider2D.EndCollision
  commentId: E:WaveEngine.Common.Physics2D.ICollider2D.EndCollision
  id: EndCollision
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: EndCollision
  nameWithType: ICollider2D.EndCollision
  fullName: WaveEngine.Common.Physics2D.ICollider2D.EndCollision
  type: Event
  source:
    id: EndCollision
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 33
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nCalled when two fixtures cease to touch.\n"
  example: []
  syntax:
    content: event ContactDelegate EndCollision
    return:
      type: WaveEngine.Common.Physics2D.ContactDelegate
    content.vb: Event EndCollision As ContactDelegate
- uid: WaveEngine.Common.Physics2D.ICollider2D.Density
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.Density
  id: Density
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: Density
  nameWithType: ICollider2D.Density
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Density
  type: Property
  source:
    id: Density
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 40
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the density, usually in kg/m^2.\n"
  example: []
  syntax:
    content: float Density { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Density As Single
  overload: WaveEngine.Common.Physics2D.ICollider2D.Density*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.Friction
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.Friction
  id: Friction
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: Friction
  nameWithType: ICollider2D.Friction
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Friction
  type: Property
  source:
    id: Friction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 45
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the friction coefficient, usually in the range [0,1].\n"
  example: []
  syntax:
    content: float Friction { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Friction As Single
  overload: WaveEngine.Common.Physics2D.ICollider2D.Friction*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.IsSensor
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.IsSensor
  id: IsSensor
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: IsSensor
  nameWithType: ICollider2D.IsSensor
  fullName: WaveEngine.Common.Physics2D.ICollider2D.IsSensor
  type: Property
  source:
    id: IsSensor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 50
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this sensor shape collects contact information but never generates a collision response.\n"
  example: []
  syntax:
    content: bool IsSensor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsSensor As Boolean
  overload: WaveEngine.Common.Physics2D.ICollider2D.IsSensor*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.Restitution
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.Restitution
  id: Restitution
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: Restitution
  nameWithType: ICollider2D.Restitution
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Restitution
  type: Property
  source:
    id: Restitution
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 55
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the restitution (elasticity) usually in the range [0,1].\n"
  example: []
  syntax:
    content: float Restitution { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Restitution As Single
  overload: WaveEngine.Common.Physics2D.ICollider2D.Restitution*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.Shape
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.Shape
  id: Shape
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: Shape
  nameWithType: ICollider2D.Shape
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Shape
  type: Property
  source:
    id: Shape
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 60
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the Collider shape\n"
  example: []
  syntax:
    content: IColliderShape2D Shape { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.IColliderShape2D
    content.vb: ReadOnly Property Shape As IColliderShape2D
  overload: WaveEngine.Common.Physics2D.ICollider2D.Shape*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollider2D.RigidBody
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.RigidBody
  id: RigidBody
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: RigidBody
  nameWithType: ICollider2D.RigidBody
  fullName: WaveEngine.Common.Physics2D.ICollider2D.RigidBody
  type: Property
  source:
    id: RigidBody
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 65
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the parent body of this collider\n"
  example: []
  syntax:
    content: IRigidBody2D RigidBody { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.IRigidBody2D
    content.vb: ReadOnly Property RigidBody As IRigidBody2D
  overload: WaveEngine.Common.Physics2D.ICollider2D.RigidBody*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollider2D.UserData
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.UserData
  id: UserData
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: ICollider2D.UserData
  fullName: WaveEngine.Common.Physics2D.ICollider2D.UserData
  type: Property
  source:
    id: UserData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 70
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the object user data\n"
  example: []
  syntax:
    content: object UserData { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property UserData As Object
  overload: WaveEngine.Common.Physics2D.ICollider2D.UserData*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.InternalCollider
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.InternalCollider
  id: InternalCollider
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: InternalCollider
  nameWithType: ICollider2D.InternalCollider
  fullName: WaveEngine.Common.Physics2D.ICollider2D.InternalCollider
  type: Property
  source:
    id: InternalCollider
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 75
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the internal Box2D fixture instance.\n"
  example: []
  syntax:
    content: object InternalCollider { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property InternalCollider As Object
  overload: WaveEngine.Common.Physics2D.ICollider2D.InternalCollider*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollider2D.GroupIndex
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.GroupIndex
  id: GroupIndex
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: GroupIndex
  nameWithType: ICollider2D.GroupIndex
  fullName: WaveEngine.Common.Physics2D.ICollider2D.GroupIndex
  type: Property
  source:
    id: GroupIndex
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 80
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the collision groups allow a certain group of objects to never collide (negative) or always collide (positive).\n"
  example: []
  syntax:
    content: short GroupIndex { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Property GroupIndex As Short
  overload: WaveEngine.Common.Physics2D.ICollider2D.GroupIndex*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories
  id: CollisionCategories
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: CollisionCategories
  nameWithType: ICollider2D.CollisionCategories
  fullName: WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories
  type: Property
  source:
    id: CollisionCategories
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 85
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the collision category bits.\n"
  example: []
  syntax:
    content: ColliderCategory2D CollisionCategories { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.ColliderCategory2D
    content.vb: Property CollisionCategories As ColliderCategory2D
  overload: WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.MaskBits
  commentId: P:WaveEngine.Common.Physics2D.ICollider2D.MaskBits
  id: MaskBits
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: MaskBits
  nameWithType: ICollider2D.MaskBits
  fullName: WaveEngine.Common.Physics2D.ICollider2D.MaskBits
  type: Property
  source:
    id: MaskBits
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 90
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the collision mask bits.\n"
  example: []
  syntax:
    content: ColliderCategory2D MaskBits { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.ColliderCategory2D
    content.vb: Property MaskBits As ColliderCategory2D
  overload: WaveEngine.Common.Physics2D.ICollider2D.MaskBits*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single@,WaveEngine.Common.Math.Vector2@)
  commentId: M:WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single@,WaveEngine.Common.Math.Vector2@)
  id: ComputeDistance(WaveEngine.Common.Math.Vector2@,WaveEngine.Common.Math.Vector2@,System.Single,System.Single@,WaveEngine.Common.Math.Vector2@)
  parent: WaveEngine.Common.Physics2D.ICollider2D
  langs:
  - csharp
  - vb
  name: ComputeDistance(ref Vector2, ref Vector2, Single, out Single, out Vector2)
  nameWithType: ICollider2D.ComputeDistance(ref Vector2, ref Vector2, Single, out Single, out Vector2)
  fullName: WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance(ref WaveEngine.Common.Math.Vector2, ref WaveEngine.Common.Math.Vector2, System.Single, out System.Single, out WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: ComputeDistance
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\Colliders\ICollider2D.cs
    startLine: 103
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nCompute the distance from the current shape to the specified point. This only works for convex shapes.\n"
  example: []
  syntax:
    content: void ComputeDistance(ref Vector2 point, ref Vector2 shapePosition, float shapeAngle, out float distance, out Vector2 normal)
    parameters:
    - id: point
      type: WaveEngine.Common.Math.Vector2
      description: a point in world coordinates
    - id: shapePosition
      type: WaveEngine.Common.Math.Vector2
      description: the shape world position
    - id: shapeAngle
      type: System.Single
      description: the shape world angle
    - id: distance
      type: System.Single
      description: the distance from the current shape
    - id: normal
      type: WaveEngine.Common.Math.Vector2
      description: the direction in which the distance increases
    content.vb: Sub ComputeDistance(ByRef point As Vector2, ByRef shapePosition As Vector2, shapeAngle As Single, ByRef distance As Single, ByRef normal As Vector2)
  overload: WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance*
  nameWithType.vb: ICollider2D.ComputeDistance(ByRef Vector2, ByRef Vector2, Single, ByRef Single, ByRef Vector2)
  fullName.vb: WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance(ByRef WaveEngine.Common.Math.Vector2, ByRef WaveEngine.Common.Math.Vector2, System.Single, ByRef System.Single, ByRef WaveEngine.Common.Math.Vector2)
  name.vb: ComputeDistance(ByRef Vector2, ByRef Vector2, Single, ByRef Single, ByRef Vector2)
references:
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Physics2D.ContactDelegate
  commentId: T:WaveEngine.Common.Physics2D.ContactDelegate
  parent: WaveEngine.Common.Physics2D
  name: ContactDelegate
  nameWithType: ContactDelegate
  fullName: WaveEngine.Common.Physics2D.ContactDelegate
- uid: WaveEngine.Common.Physics2D.ICollider2D.Density*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.Density
  name: Density
  nameWithType: ICollider2D.Density
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Density
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics2D.ICollider2D.Friction*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.Friction
  name: Friction
  nameWithType: ICollider2D.Friction
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Friction
- uid: WaveEngine.Common.Physics2D.ICollider2D.IsSensor*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.IsSensor
  name: IsSensor
  nameWithType: ICollider2D.IsSensor
  fullName: WaveEngine.Common.Physics2D.ICollider2D.IsSensor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Physics2D.ICollider2D.Restitution*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.Restitution
  name: Restitution
  nameWithType: ICollider2D.Restitution
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Restitution
- uid: WaveEngine.Common.Physics2D.ICollider2D.Shape*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.Shape
  name: Shape
  nameWithType: ICollider2D.Shape
  fullName: WaveEngine.Common.Physics2D.ICollider2D.Shape
- uid: WaveEngine.Common.Physics2D.IColliderShape2D
  commentId: T:WaveEngine.Common.Physics2D.IColliderShape2D
  parent: WaveEngine.Common.Physics2D
  name: IColliderShape2D
  nameWithType: IColliderShape2D
  fullName: WaveEngine.Common.Physics2D.IColliderShape2D
- uid: WaveEngine.Common.Physics2D.ICollider2D.RigidBody*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.RigidBody
  name: RigidBody
  nameWithType: ICollider2D.RigidBody
  fullName: WaveEngine.Common.Physics2D.ICollider2D.RigidBody
- uid: WaveEngine.Common.Physics2D.IRigidBody2D
  commentId: T:WaveEngine.Common.Physics2D.IRigidBody2D
  parent: WaveEngine.Common.Physics2D
  name: IRigidBody2D
  nameWithType: IRigidBody2D
  fullName: WaveEngine.Common.Physics2D.IRigidBody2D
- uid: WaveEngine.Common.Physics2D.ICollider2D.UserData*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.UserData
  name: UserData
  nameWithType: ICollider2D.UserData
  fullName: WaveEngine.Common.Physics2D.ICollider2D.UserData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Physics2D.ICollider2D.InternalCollider*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.InternalCollider
  name: InternalCollider
  nameWithType: ICollider2D.InternalCollider
  fullName: WaveEngine.Common.Physics2D.ICollider2D.InternalCollider
- uid: WaveEngine.Common.Physics2D.ICollider2D.GroupIndex*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.GroupIndex
  name: GroupIndex
  nameWithType: ICollider2D.GroupIndex
  fullName: WaveEngine.Common.Physics2D.ICollider2D.GroupIndex
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories
  name: CollisionCategories
  nameWithType: ICollider2D.CollisionCategories
  fullName: WaveEngine.Common.Physics2D.ICollider2D.CollisionCategories
- uid: WaveEngine.Common.Physics2D.ColliderCategory2D
  commentId: T:WaveEngine.Common.Physics2D.ColliderCategory2D
  parent: WaveEngine.Common.Physics2D
  name: ColliderCategory2D
  nameWithType: ColliderCategory2D
  fullName: WaveEngine.Common.Physics2D.ColliderCategory2D
- uid: WaveEngine.Common.Physics2D.ICollider2D.MaskBits*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.MaskBits
  name: MaskBits
  nameWithType: ICollider2D.MaskBits
  fullName: WaveEngine.Common.Physics2D.ICollider2D.MaskBits
- uid: WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance
  name: ComputeDistance
  nameWithType: ICollider2D.ComputeDistance
  fullName: WaveEngine.Common.Physics2D.ICollider2D.ComputeDistance
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
