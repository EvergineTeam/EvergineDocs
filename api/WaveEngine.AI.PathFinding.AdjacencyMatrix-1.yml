### YamlMime:ManagedReference
items:
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  commentId: T:WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  id: AdjacencyMatrix`1
  parent: WaveEngine.AI.PathFinding
  children:
  - WaveEngine.AI.PathFinding.AdjacencyMatrix`1.#ctor
  - WaveEngine.AI.PathFinding.AdjacencyMatrix`1.AddAdjacent(`0,`0,System.Int32)
  - WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetAdjacents(`0)
  - WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetBiggerArist
  - WaveEngine.AI.PathFinding.AdjacencyMatrix`1.NodesCount
  - WaveEngine.AI.PathFinding.AdjacencyMatrix`1.RemoveNode(`0)
  langs:
  - csharp
  - vb
  name: AdjacencyMatrix<T>
  nameWithType: AdjacencyMatrix<T>
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>
  type: Class
  source:
    id: AdjacencyMatrix
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 15
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nRepresents an adjacency Matrix\n"
  example: []
  syntax:
    content: public class AdjacencyMatrix<T>
    typeParameters:
    - id: T
      description: Type of nodes in the adjacency matrixc
    content.vb: Public Class AdjacencyMatrix(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  nameWithType.vb: AdjacencyMatrix(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T)
  name.vb: AdjacencyMatrix(Of T)
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.NodesCount
  commentId: P:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.NodesCount
  id: NodesCount
  parent: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  langs:
  - csharp
  - vb
  name: NodesCount
  nameWithType: AdjacencyMatrix<T>.NodesCount
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.NodesCount
  type: Property
  source:
    id: NodesCount
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 33
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nGets the nodes count.\n"
  example: []
  syntax:
    content: public int NodesCount { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe nodes count.\n"
    content.vb: Public ReadOnly Property NodesCount As Integer
  overload: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.NodesCount*
  nameWithType.vb: AdjacencyMatrix(Of T).NodesCount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).NodesCount
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.#ctor
  commentId: M:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.#ctor
  id: '#ctor'
  parent: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  langs:
  - csharp
  - vb
  name: AdjacencyMatrix()
  nameWithType: AdjacencyMatrix<T>.AdjacencyMatrix()
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.AdjacencyMatrix()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 47
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.AI.PathFinding.AdjacencyMatrix%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AdjacencyMatrix()
    content.vb: Public Sub New
  overload: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.#ctor*
  nameWithType.vb: AdjacencyMatrix(Of T).AdjacencyMatrix()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).AdjacencyMatrix()
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.AddAdjacent(`0,`0,System.Int32)
  commentId: M:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.AddAdjacent(`0,`0,System.Int32)
  id: AddAdjacent(`0,`0,System.Int32)
  parent: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  langs:
  - csharp
  - vb
  name: AddAdjacent(T, T, Int32)
  nameWithType: AdjacencyMatrix<T>.AddAdjacent(T, T, Int32)
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.AddAdjacent(T, T, System.Int32)
  type: Method
  source:
    id: AddAdjacent
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 62
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nAdds the adjacent.\n"
  example: []
  syntax:
    content: public void AddAdjacent(T node, T adjacent, int weight)
    parameters:
    - id: node
      type: '{T}'
      description: The node.
    - id: adjacent
      type: '{T}'
      description: The adjacent.
    - id: weight
      type: System.Int32
      description: The weight.
    content.vb: Public Sub AddAdjacent(node As T, adjacent As T, weight As Integer)
  overload: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.AddAdjacent*
  nameWithType.vb: AdjacencyMatrix(Of T).AddAdjacent(T, T, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).AddAdjacent(T, T, System.Int32)
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.RemoveNode(`0)
  commentId: M:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.RemoveNode(`0)
  id: RemoveNode(`0)
  parent: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  langs:
  - csharp
  - vb
  name: RemoveNode(T)
  nameWithType: AdjacencyMatrix<T>.RemoveNode(T)
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.RemoveNode(T)
  type: Method
  source:
    id: RemoveNode
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 77
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nRemoves the node.\n"
  example: []
  syntax:
    content: public void RemoveNode(T node)
    parameters:
    - id: node
      type: '{T}'
      description: The node.
    content.vb: Public Sub RemoveNode(node As T)
  overload: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.RemoveNode*
  nameWithType.vb: AdjacencyMatrix(Of T).RemoveNode(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).RemoveNode(T)
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetAdjacents(`0)
  commentId: M:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetAdjacents(`0)
  id: GetAdjacents(`0)
  parent: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  langs:
  - csharp
  - vb
  name: GetAdjacents(T)
  nameWithType: AdjacencyMatrix<T>.GetAdjacents(T)
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.GetAdjacents(T)
  type: Method
  source:
    id: GetAdjacents
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 92
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nGets the adjacents.\n"
  example: []
  syntax:
    content: public List<Adjacency<T>> GetAdjacents(T node)
    parameters:
    - id: node
      type: '{T}'
      description: The node.
    return:
      type: System.Collections.Generic.List{WaveEngine.AI.PathFinding.Adjacency{{T}}}
      description: Adjacents of the node
    content.vb: Public Function GetAdjacents(node As T) As List(Of Adjacency(Of T))
  overload: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetAdjacents*
  nameWithType.vb: AdjacencyMatrix(Of T).GetAdjacents(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).GetAdjacents(T)
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetBiggerArist
  commentId: M:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetBiggerArist
  id: GetBiggerArist
  parent: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  langs:
  - csharp
  - vb
  name: GetBiggerArist()
  nameWithType: AdjacencyMatrix<T>.GetBiggerArist()
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.GetBiggerArist()
  type: Method
  source:
    id: GetBiggerArist
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\PathFinding\AdjacencyMatrix`1.cs
    startLine: 108
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.PathFinding
  summary: "\nGets the bigger arist.\n"
  example: []
  syntax:
    content: public int GetBiggerArist()
    return:
      type: System.Int32
      description: The bigger arist
    content.vb: Public Function GetBiggerArist As Integer
  overload: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetBiggerArist*
  nameWithType.vb: AdjacencyMatrix(Of T).GetBiggerArist()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).GetBiggerArist()
references:
- uid: WaveEngine.AI.PathFinding
  commentId: N:WaveEngine.AI.PathFinding
  name: WaveEngine.AI.PathFinding
  nameWithType: WaveEngine.AI.PathFinding
  fullName: WaveEngine.AI.PathFinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.NodesCount*
  commentId: Overload:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.NodesCount
  name: NodesCount
  nameWithType: AdjacencyMatrix<T>.NodesCount
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.NodesCount
  nameWithType.vb: AdjacencyMatrix(Of T).NodesCount
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).NodesCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  commentId: T:WaveEngine.AI.PathFinding.AdjacencyMatrix`1
  name: AdjacencyMatrix<T>
  nameWithType: AdjacencyMatrix<T>
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>
  nameWithType.vb: AdjacencyMatrix(Of T)
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T)
  name.vb: AdjacencyMatrix(Of T)
  spec.csharp:
  - uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
    name: AdjacencyMatrix
    nameWithType: AdjacencyMatrix
    fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1
    name: AdjacencyMatrix
    nameWithType: AdjacencyMatrix
    fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.#ctor*
  commentId: Overload:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.#ctor
  name: AdjacencyMatrix
  nameWithType: AdjacencyMatrix<T>.AdjacencyMatrix
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.AdjacencyMatrix
  nameWithType.vb: AdjacencyMatrix(Of T).AdjacencyMatrix
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).AdjacencyMatrix
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.AddAdjacent*
  commentId: Overload:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.AddAdjacent
  name: AddAdjacent
  nameWithType: AdjacencyMatrix<T>.AddAdjacent
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.AddAdjacent
  nameWithType.vb: AdjacencyMatrix(Of T).AddAdjacent
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).AddAdjacent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.RemoveNode*
  commentId: Overload:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.RemoveNode
  name: RemoveNode
  nameWithType: AdjacencyMatrix<T>.RemoveNode
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.RemoveNode
  nameWithType.vb: AdjacencyMatrix(Of T).RemoveNode
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).RemoveNode
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetAdjacents*
  commentId: Overload:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetAdjacents
  name: GetAdjacents
  nameWithType: AdjacencyMatrix<T>.GetAdjacents
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.GetAdjacents
  nameWithType.vb: AdjacencyMatrix(Of T).GetAdjacents
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).GetAdjacents
- uid: System.Collections.Generic.List{WaveEngine.AI.PathFinding.Adjacency{{T}}}
  commentId: T:System.Collections.Generic.List{WaveEngine.AI.PathFinding.Adjacency{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Adjacency<T>>
  nameWithType: List<Adjacency<T>>
  fullName: System.Collections.Generic.List<WaveEngine.AI.PathFinding.Adjacency<T>>
  nameWithType.vb: List(Of Adjacency(Of T))
  fullName.vb: System.Collections.Generic.List(Of WaveEngine.AI.PathFinding.Adjacency(Of T))
  name.vb: List(Of Adjacency(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.AI.PathFinding.Adjacency`1
    name: Adjacency
    nameWithType: Adjacency
    fullName: WaveEngine.AI.PathFinding.Adjacency
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.AI.PathFinding.Adjacency`1
    name: Adjacency
    nameWithType: Adjacency
    fullName: WaveEngine.AI.PathFinding.Adjacency
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetBiggerArist*
  commentId: Overload:WaveEngine.AI.PathFinding.AdjacencyMatrix`1.GetBiggerArist
  name: GetBiggerArist
  nameWithType: AdjacencyMatrix<T>.GetBiggerArist
  fullName: WaveEngine.AI.PathFinding.AdjacencyMatrix<T>.GetBiggerArist
  nameWithType.vb: AdjacencyMatrix(Of T).GetBiggerArist
  fullName.vb: WaveEngine.AI.PathFinding.AdjacencyMatrix(Of T).GetBiggerArist
