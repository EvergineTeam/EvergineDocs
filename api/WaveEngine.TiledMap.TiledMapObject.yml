### YamlMime:ManagedReference
items:
- uid: WaveEngine.TiledMap.TiledMapObject
  commentId: T:WaveEngine.TiledMap.TiledMapObject
  id: TiledMapObject
  parent: WaveEngine.TiledMap
  children:
  - WaveEngine.TiledMap.TiledMapObject.#ctor(TiledSharp.TmxObject)
  - WaveEngine.TiledMap.TiledMapObject.Height
  - WaveEngine.TiledMap.TiledMapObject.Name
  - WaveEngine.TiledMap.TiledMapObject.ObjectType
  - WaveEngine.TiledMap.TiledMapObject.Points
  - WaveEngine.TiledMap.TiledMapObject.Properties
  - WaveEngine.TiledMap.TiledMapObject.Rotation
  - WaveEngine.TiledMap.TiledMapObject.Tile
  - WaveEngine.TiledMap.TiledMapObject.Type
  - WaveEngine.TiledMap.TiledMapObject.Visible
  - WaveEngine.TiledMap.TiledMapObject.Width
  - WaveEngine.TiledMap.TiledMapObject.X
  - WaveEngine.TiledMap.TiledMapObject.Y
  langs:
  - csharp
  - vb
  name: TiledMapObject
  nameWithType: TiledMapObject
  fullName: WaveEngine.TiledMap.TiledMapObject
  type: Class
  source:
    id: TiledMapObject
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 16
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nTiledMapObject\n"
  example: []
  syntax:
    content: public class TiledMapObject
    content.vb: Public Class TiledMapObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.TiledMap.TiledMapObject.Name
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Name
  id: Name
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TiledMapObject.Name
  fullName: WaveEngine.TiledMap.TiledMapObject.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 23
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object name\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: WaveEngine.TiledMap.TiledMapObject.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.ObjectType
  commentId: P:WaveEngine.TiledMap.TiledMapObject.ObjectType
  id: ObjectType
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: ObjectType
  nameWithType: TiledMapObject.ObjectType
  fullName: WaveEngine.TiledMap.TiledMapObject.ObjectType
  type: Property
  source:
    id: ObjectType
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 28
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object type\n"
  example: []
  syntax:
    content: public TiledMapObjectType ObjectType { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.TiledMapObjectType
    content.vb: Public ReadOnly Property ObjectType As TiledMapObjectType
  overload: WaveEngine.TiledMap.TiledMapObject.ObjectType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Type
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Type
  id: Type
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TiledMapObject.Type
  fullName: WaveEngine.TiledMap.TiledMapObject.Type
  type: Property
  source:
    id: Type
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 33
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object type property\n"
  example: []
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: WaveEngine.TiledMap.TiledMapObject.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.X
  commentId: P:WaveEngine.TiledMap.TiledMapObject.X
  id: X
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: X
  nameWithType: TiledMapObject.X
  fullName: WaveEngine.TiledMap.TiledMapObject.X
  type: Property
  source:
    id: X
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 38
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the X position\n"
  example: []
  syntax:
    content: public float X { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property X As Single
  overload: WaveEngine.TiledMap.TiledMapObject.X*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Y
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Y
  id: Y
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: TiledMapObject.Y
  fullName: WaveEngine.TiledMap.TiledMapObject.Y
  type: Property
  source:
    id: Y
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 43
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the Y position\n"
  example: []
  syntax:
    content: public float Y { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Y As Single
  overload: WaveEngine.TiledMap.TiledMapObject.Y*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Width
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Width
  id: Width
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: TiledMapObject.Width
  fullName: WaveEngine.TiledMap.TiledMapObject.Width
  type: Property
  source:
    id: Width
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 48
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the With size\n"
  example: []
  syntax:
    content: public float Width { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Width As Single
  overload: WaveEngine.TiledMap.TiledMapObject.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Height
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Height
  id: Height
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: TiledMapObject.Height
  fullName: WaveEngine.TiledMap.TiledMapObject.Height
  type: Property
  source:
    id: Height
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 53
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the Height size\n"
  example: []
  syntax:
    content: public float Height { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Height As Single
  overload: WaveEngine.TiledMap.TiledMapObject.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Rotation
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Rotation
  id: Rotation
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: TiledMapObject.Rotation
  fullName: WaveEngine.TiledMap.TiledMapObject.Rotation
  type: Property
  source:
    id: Rotation
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 58
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the rotation\n"
  example: []
  syntax:
    content: public double Rotation { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Rotation As Double
  overload: WaveEngine.TiledMap.TiledMapObject.Rotation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Tile
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Tile
  id: Tile
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: TiledMapObject.Tile
  fullName: WaveEngine.TiledMap.TiledMapObject.Tile
  type: Property
  source:
    id: Tile
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 63
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the asociated tile\n"
  example: []
  syntax:
    content: public LayerTile Tile { get; }
    parameters: []
    return:
      type: WaveEngine.TiledMap.LayerTile
    content.vb: Public ReadOnly Property Tile As LayerTile
  overload: WaveEngine.TiledMap.TiledMapObject.Tile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Visible
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Visible
  id: Visible
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: TiledMapObject.Visible
  fullName: WaveEngine.TiledMap.TiledMapObject.Visible
  type: Property
  source:
    id: Visible
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 68
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets a value indicating whether this object is visible\n"
  example: []
  syntax:
    content: public bool Visible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Visible As Boolean
  overload: WaveEngine.TiledMap.TiledMapObject.Visible*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Points
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Points
  id: Points
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: TiledMapObject.Points
  fullName: WaveEngine.TiledMap.TiledMapObject.Points
  type: Property
  source:
    id: Points
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 73
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the point list\n"
  example: []
  syntax:
    content: public List<TmxObjectPoint> Points { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TiledSharp.TmxObjectPoint}
    content.vb: Public ReadOnly Property Points As List(Of TmxObjectPoint)
  overload: WaveEngine.TiledMap.TiledMapObject.Points*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.Properties
  commentId: P:WaveEngine.TiledMap.TiledMapObject.Properties
  id: Properties
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: TiledMapObject.Properties
  fullName: WaveEngine.TiledMap.TiledMapObject.Properties
  type: Property
  source:
    id: Properties
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 78
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nGets the object property list\n"
  example: []
  syntax:
    content: public IReadOnlyDictionary<string, string> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Properties As IReadOnlyDictionary(Of String, String)
  overload: WaveEngine.TiledMap.TiledMapObject.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.TiledMap.TiledMapObject.#ctor(TiledSharp.TmxObject)
  commentId: M:WaveEngine.TiledMap.TiledMapObject.#ctor(TiledSharp.TmxObject)
  id: '#ctor(TiledSharp.TmxObject)'
  parent: WaveEngine.TiledMap.TiledMapObject
  langs:
  - csharp
  - vb
  name: TiledMapObject(TmxObject)
  nameWithType: TiledMapObject.TiledMapObject(TmxObject)
  fullName: WaveEngine.TiledMap.TiledMapObject.TiledMapObject(TiledSharp.TmxObject)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.TiledMap\Shared\TiledMapObject.cs
    startLine: 87
  assemblies:
  - WaveEngine.TiledMap
  namespace: WaveEngine.TiledMap
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.TiledMap.TiledMapObject\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TiledMapObject(TmxObject tmxObject)
    parameters:
    - id: tmxObject
      type: TiledSharp.TmxObject
      description: The TMX parsed object
    content.vb: Public Sub New(tmxObject As TmxObject)
  overload: WaveEngine.TiledMap.TiledMapObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.TiledMap
  commentId: N:WaveEngine.TiledMap
  name: WaveEngine.TiledMap
  nameWithType: WaveEngine.TiledMap
  fullName: WaveEngine.TiledMap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.TiledMap.TiledMapObject.Name*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Name
  name: Name
  nameWithType: TiledMapObject.Name
  fullName: WaveEngine.TiledMap.TiledMapObject.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.TiledMap.TiledMapObject.ObjectType*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.ObjectType
  name: ObjectType
  nameWithType: TiledMapObject.ObjectType
  fullName: WaveEngine.TiledMap.TiledMapObject.ObjectType
- uid: WaveEngine.TiledMap.TiledMapObjectType
  commentId: T:WaveEngine.TiledMap.TiledMapObjectType
  parent: WaveEngine.TiledMap
  name: TiledMapObjectType
  nameWithType: TiledMapObjectType
  fullName: WaveEngine.TiledMap.TiledMapObjectType
- uid: WaveEngine.TiledMap.TiledMapObject.Type*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Type
  name: Type
  nameWithType: TiledMapObject.Type
  fullName: WaveEngine.TiledMap.TiledMapObject.Type
- uid: WaveEngine.TiledMap.TiledMapObject.X*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.X
  name: X
  nameWithType: TiledMapObject.X
  fullName: WaveEngine.TiledMap.TiledMapObject.X
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.TiledMap.TiledMapObject.Y*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Y
  name: Y
  nameWithType: TiledMapObject.Y
  fullName: WaveEngine.TiledMap.TiledMapObject.Y
- uid: WaveEngine.TiledMap.TiledMapObject.Width*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Width
  name: Width
  nameWithType: TiledMapObject.Width
  fullName: WaveEngine.TiledMap.TiledMapObject.Width
- uid: WaveEngine.TiledMap.TiledMapObject.Height*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Height
  name: Height
  nameWithType: TiledMapObject.Height
  fullName: WaveEngine.TiledMap.TiledMapObject.Height
- uid: WaveEngine.TiledMap.TiledMapObject.Rotation*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Rotation
  name: Rotation
  nameWithType: TiledMapObject.Rotation
  fullName: WaveEngine.TiledMap.TiledMapObject.Rotation
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: WaveEngine.TiledMap.TiledMapObject.Tile*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Tile
  name: Tile
  nameWithType: TiledMapObject.Tile
  fullName: WaveEngine.TiledMap.TiledMapObject.Tile
- uid: WaveEngine.TiledMap.LayerTile
  commentId: T:WaveEngine.TiledMap.LayerTile
  parent: WaveEngine.TiledMap
  name: LayerTile
  nameWithType: LayerTile
  fullName: WaveEngine.TiledMap.LayerTile
- uid: WaveEngine.TiledMap.TiledMapObject.Visible*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Visible
  name: Visible
  nameWithType: TiledMapObject.Visible
  fullName: WaveEngine.TiledMap.TiledMapObject.Visible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.TiledMap.TiledMapObject.Points*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Points
  name: Points
  nameWithType: TiledMapObject.Points
  fullName: WaveEngine.TiledMap.TiledMapObject.Points
- uid: System.Collections.Generic.List{TiledSharp.TmxObjectPoint}
  commentId: T:System.Collections.Generic.List{TiledSharp.TmxObjectPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TmxObjectPoint>
  nameWithType: List<TmxObjectPoint>
  fullName: System.Collections.Generic.List<TiledSharp.TmxObjectPoint>
  nameWithType.vb: List(Of TmxObjectPoint)
  fullName.vb: System.Collections.Generic.List(Of TiledSharp.TmxObjectPoint)
  name.vb: List(Of TmxObjectPoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TiledSharp.TmxObjectPoint
    name: TmxObjectPoint
    nameWithType: TmxObjectPoint
    fullName: TiledSharp.TmxObjectPoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TiledSharp.TmxObjectPoint
    name: TmxObjectPoint
    nameWithType: TmxObjectPoint
    fullName: TiledSharp.TmxObjectPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.TiledMap.TiledMapObject.Properties*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.Properties
  name: Properties
  nameWithType: TiledMapObject.Properties
  fullName: WaveEngine.TiledMap.TiledMapObject.Properties
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.TiledMap.TiledMapObject
  commentId: T:WaveEngine.TiledMap.TiledMapObject
  parent: WaveEngine.TiledMap
  name: TiledMapObject
  nameWithType: TiledMapObject
  fullName: WaveEngine.TiledMap.TiledMapObject
- uid: WaveEngine.TiledMap.TiledMapObject.#ctor*
  commentId: Overload:WaveEngine.TiledMap.TiledMapObject.#ctor
  name: TiledMapObject
  nameWithType: TiledMapObject.TiledMapObject
  fullName: WaveEngine.TiledMap.TiledMapObject.TiledMapObject
- uid: TiledSharp.TmxObject
  commentId: T:TiledSharp.TmxObject
  parent: TiledSharp
  isExternal: true
  name: TmxObject
  nameWithType: TmxObject
  fullName: TiledSharp.TmxObject
- uid: TiledSharp
  commentId: N:TiledSharp
  isExternal: true
  name: TiledSharp
  nameWithType: TiledSharp
  fullName: TiledSharp
