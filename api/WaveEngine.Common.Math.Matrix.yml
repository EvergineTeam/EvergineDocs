### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  id: Matrix
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.#ctor(System.Single[])
  - WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Backward
  - WaveEngine.Common.Math.Matrix.Basis
  - WaveEngine.Common.Math.Matrix.Column1
  - WaveEngine.Common.Math.Matrix.Column2
  - WaveEngine.Common.Math.Matrix.Column3
  - WaveEngine.Common.Math.Matrix.Column4
  - WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3})
  - WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3})
  - WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3,System.Single)
  - WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane)
  - WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single)
  - WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single)
  - WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single)
  - WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateScale(System.Single)
  - WaveEngine.Common.Math.Matrix.CreateScale(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreateScale(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateScale(System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Plane)
  - WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Determinant
  - WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix,System.Single)
  - WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Down
  - WaveEngine.Common.Math.Matrix.Equals(System.Object)
  - WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Forward
  - WaveEngine.Common.Math.Matrix.GetHashCode
  - WaveEngine.Common.Math.Matrix.Identity
  - WaveEngine.Common.Math.Matrix.Invert
  - WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Item(System.Int32)
  - WaveEngine.Common.Math.Matrix.Item(System.Int32,System.Int32)
  - WaveEngine.Common.Math.Matrix.Left
  - WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix,System.Single)
  - WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.M11
  - WaveEngine.Common.Math.Matrix.M12
  - WaveEngine.Common.Math.Matrix.M13
  - WaveEngine.Common.Math.Matrix.M14
  - WaveEngine.Common.Math.Matrix.M21
  - WaveEngine.Common.Math.Matrix.M22
  - WaveEngine.Common.Math.Matrix.M23
  - WaveEngine.Common.Math.Matrix.M24
  - WaveEngine.Common.Math.Matrix.M31
  - WaveEngine.Common.Math.Matrix.M32
  - WaveEngine.Common.Math.Matrix.M33
  - WaveEngine.Common.Math.Matrix.M34
  - WaveEngine.Common.Math.Matrix.M41
  - WaveEngine.Common.Math.Matrix.M42
  - WaveEngine.Common.Math.Matrix.M43
  - WaveEngine.Common.Math.Matrix.M44
  - WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  - WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.op_Addition(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_Division(WaveEngine.Common.Math.Matrix,System.Single)
  - WaveEngine.Common.Math.Matrix.op_Division(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_Equality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_Inequality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_Multiply(System.Single,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  - WaveEngine.Common.Math.Matrix.op_Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_Subtraction(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.op_UnaryNegation(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Orientation
  - WaveEngine.Common.Math.Matrix.Right
  - WaveEngine.Common.Math.Matrix.Rotation
  - WaveEngine.Common.Math.Matrix.Row1
  - WaveEngine.Common.Math.Matrix.Row2
  - WaveEngine.Common.Math.Matrix.Row3
  - WaveEngine.Common.Math.Matrix.Row4
  - WaveEngine.Common.Math.Matrix.Scale
  - WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix(WaveEngine.Common.Math.Matrix@,System.Single[])
  - WaveEngine.Common.Math.Matrix.ToString
  - WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Quaternion)
  - WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Translation
  - WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix)
  - WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  - WaveEngine.Common.Math.Matrix.Up
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
  type: Struct
  source:
    id: Matrix
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 15
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nRepresents a 4x4 matrix.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct Matrix : IEquatable<Matrix>
    content.vb: >-
      <DataContract>

      Public Structure Matrix

          Implements IEquatable(Of Matrix)
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Matrix}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - WaveEngine.Common.Math.Matrix.WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.VR.VRPose@)
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.Matrix.M11
  commentId: F:WaveEngine.Common.Math.Matrix.M11
  id: M11
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M11
  nameWithType: Matrix.M11
  fullName: WaveEngine.Common.Math.Matrix.M11
  type: Field
  source:
    id: M11
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 28
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFirst row, first column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M11
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M11 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M12
  commentId: F:WaveEngine.Common.Math.Matrix.M12
  id: M12
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M12
  nameWithType: Matrix.M12
  fullName: WaveEngine.Common.Math.Matrix.M12
  type: Field
  source:
    id: M12
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 34
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFirst row, second column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M12
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M12 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M13
  commentId: F:WaveEngine.Common.Math.Matrix.M13
  id: M13
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M13
  nameWithType: Matrix.M13
  fullName: WaveEngine.Common.Math.Matrix.M13
  type: Field
  source:
    id: M13
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 40
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFirst row, third column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M13
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M13 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M14
  commentId: F:WaveEngine.Common.Math.Matrix.M14
  id: M14
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M14
  nameWithType: Matrix.M14
  fullName: WaveEngine.Common.Math.Matrix.M14
  type: Field
  source:
    id: M14
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFirst row, fourth column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M14
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M14 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M21
  commentId: F:WaveEngine.Common.Math.Matrix.M21
  id: M21
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M21
  nameWithType: Matrix.M21
  fullName: WaveEngine.Common.Math.Matrix.M21
  type: Field
  source:
    id: M21
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 52
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSecond row, first column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M21
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M21 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M22
  commentId: F:WaveEngine.Common.Math.Matrix.M22
  id: M22
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M22
  nameWithType: Matrix.M22
  fullName: WaveEngine.Common.Math.Matrix.M22
  type: Field
  source:
    id: M22
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 58
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSecond row, second column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M22
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M22 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M23
  commentId: F:WaveEngine.Common.Math.Matrix.M23
  id: M23
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M23
  nameWithType: Matrix.M23
  fullName: WaveEngine.Common.Math.Matrix.M23
  type: Field
  source:
    id: M23
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSecond row, third column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M23
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M23 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M24
  commentId: F:WaveEngine.Common.Math.Matrix.M24
  id: M24
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M24
  nameWithType: Matrix.M24
  fullName: WaveEngine.Common.Math.Matrix.M24
  type: Field
  source:
    id: M24
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 70
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSecond row, fourth column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M24
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M24 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M31
  commentId: F:WaveEngine.Common.Math.Matrix.M31
  id: M31
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M31
  nameWithType: Matrix.M31
  fullName: WaveEngine.Common.Math.Matrix.M31
  type: Field
  source:
    id: M31
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 76
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nThird row, first column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M31
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M31 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M32
  commentId: F:WaveEngine.Common.Math.Matrix.M32
  id: M32
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M32
  nameWithType: Matrix.M32
  fullName: WaveEngine.Common.Math.Matrix.M32
  type: Field
  source:
    id: M32
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 82
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nThird row, second column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M32
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M32 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M33
  commentId: F:WaveEngine.Common.Math.Matrix.M33
  id: M33
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M33
  nameWithType: Matrix.M33
  fullName: WaveEngine.Common.Math.Matrix.M33
  type: Field
  source:
    id: M33
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 88
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nThird row, third column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M33
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M33 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M34
  commentId: F:WaveEngine.Common.Math.Matrix.M34
  id: M34
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M34
  nameWithType: Matrix.M34
  fullName: WaveEngine.Common.Math.Matrix.M34
  type: Field
  source:
    id: M34
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 94
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nThird row, fourth column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M34
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M34 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M41
  commentId: F:WaveEngine.Common.Math.Matrix.M41
  id: M41
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M41
  nameWithType: Matrix.M41
  fullName: WaveEngine.Common.Math.Matrix.M41
  type: Field
  source:
    id: M41
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 100
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFourth row, first column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M41
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M41 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M42
  commentId: F:WaveEngine.Common.Math.Matrix.M42
  id: M42
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M42
  nameWithType: Matrix.M42
  fullName: WaveEngine.Common.Math.Matrix.M42
  type: Field
  source:
    id: M42
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 106
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFourth row, second column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M42
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M42 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M43
  commentId: F:WaveEngine.Common.Math.Matrix.M43
  id: M43
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M43
  nameWithType: Matrix.M43
  fullName: WaveEngine.Common.Math.Matrix.M43
  type: Field
  source:
    id: M43
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 112
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFourth row, third column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M43
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M43 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.M44
  commentId: F:WaveEngine.Common.Math.Matrix.M44
  id: M44
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: M44
  nameWithType: Matrix.M44
  fullName: WaveEngine.Common.Math.Matrix.M44
  type: Field
  source:
    id: M44
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 118
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nFourth row, fourth column.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M44
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M44 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Identity
  commentId: P:WaveEngine.Common.Math.Matrix.Identity
  id: Identity
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Matrix.Identity
  fullName: WaveEngine.Common.Math.Matrix.Identity
  type: Property
  source:
    id: Identity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 125
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the identity.\n"
  example: []
  syntax:
    content: public static Matrix Identity { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
    content.vb: Public Shared ReadOnly Property Identity As Matrix
  overload: WaveEngine.Common.Math.Matrix.Identity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.Matrix.Up
  commentId: P:WaveEngine.Common.Math.Matrix.Up
  id: Up
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: Matrix.Up
  fullName: WaveEngine.Common.Math.Matrix.Up
  type: Property
  source:
    id: Up
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 136
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets up.\n"
  example: []
  syntax:
    content: public Vector3 Up { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nUp vector.\n"
    content.vb: Public Property Up As Vector3
  overload: WaveEngine.Common.Math.Matrix.Up*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Down
  commentId: P:WaveEngine.Common.Math.Matrix.Down
  id: Down
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: Matrix.Down
  fullName: WaveEngine.Common.Math.Matrix.Down
  type: Property
  source:
    id: Down
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 161
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets down.\n"
  example: []
  syntax:
    content: public Vector3 Down { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nDown vector.\n"
    content.vb: Public Property Down As Vector3
  overload: WaveEngine.Common.Math.Matrix.Down*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Right
  commentId: P:WaveEngine.Common.Math.Matrix.Right
  id: Right
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Matrix.Right
  fullName: WaveEngine.Common.Math.Matrix.Right
  type: Property
  source:
    id: Right
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 186
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the right.\n"
  example: []
  syntax:
    content: public Vector3 Right { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe right.\n"
    content.vb: Public Property Right As Vector3
  overload: WaveEngine.Common.Math.Matrix.Right*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Left
  commentId: P:WaveEngine.Common.Math.Matrix.Left
  id: Left
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Matrix.Left
  fullName: WaveEngine.Common.Math.Matrix.Left
  type: Property
  source:
    id: Left
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 211
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the left.\n"
  example: []
  syntax:
    content: public Vector3 Left { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe left.\n"
    content.vb: Public Property Left As Vector3
  overload: WaveEngine.Common.Math.Matrix.Left*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Forward
  commentId: P:WaveEngine.Common.Math.Matrix.Forward
  id: Forward
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: Matrix.Forward
  fullName: WaveEngine.Common.Math.Matrix.Forward
  type: Property
  source:
    id: Forward
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 236
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the forward.\n"
  example: []
  syntax:
    content: public Vector3 Forward { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe forward.\n"
    content.vb: Public Property Forward As Vector3
  overload: WaveEngine.Common.Math.Matrix.Forward*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Backward
  commentId: P:WaveEngine.Common.Math.Matrix.Backward
  id: Backward
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Backward
  nameWithType: Matrix.Backward
  fullName: WaveEngine.Common.Math.Matrix.Backward
  type: Property
  source:
    id: Backward
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 261
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the backward.\n"
  example: []
  syntax:
    content: public Vector3 Backward { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe backward.\n"
    content.vb: Public Property Backward As Vector3
  overload: WaveEngine.Common.Math.Matrix.Backward*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Translation
  commentId: P:WaveEngine.Common.Math.Matrix.Translation
  id: Translation
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Translation
  nameWithType: Matrix.Translation
  fullName: WaveEngine.Common.Math.Matrix.Translation
  type: Property
  source:
    id: Translation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 286
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the translation.\n"
  example: []
  syntax:
    content: public Vector3 Translation { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
      description: "\nThe translation.\n"
    content.vb: Public Property Translation As Vector3
  overload: WaveEngine.Common.Math.Matrix.Translation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Rotation
  commentId: P:WaveEngine.Common.Math.Matrix.Rotation
  id: Rotation
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Matrix.Rotation
  fullName: WaveEngine.Common.Math.Matrix.Rotation
  type: Property
  source:
    id: Rotation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 308
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the euler angles.\n"
  example: []
  syntax:
    content: public Vector3 Rotation { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public ReadOnly Property Rotation As Vector3
  overload: WaveEngine.Common.Math.Matrix.Rotation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.Matrix.Orientation
  commentId: P:WaveEngine.Common.Math.Matrix.Orientation
  id: Orientation
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: Matrix.Orientation
  fullName: WaveEngine.Common.Math.Matrix.Orientation
  type: Property
  source:
    id: Orientation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 322
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets a quaternion from the Matrix.\n"
  example: []
  syntax:
    content: public Quaternion Orientation { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Quaternion
    content.vb: Public ReadOnly Property Orientation As Quaternion
  overload: WaveEngine.Common.Math.Matrix.Orientation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.Matrix.Scale
  commentId: P:WaveEngine.Common.Math.Matrix.Scale
  id: Scale
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Matrix.Scale
  fullName: WaveEngine.Common.Math.Matrix.Scale
  type: Property
  source:
    id: Scale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 336
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the scale vector from the matrix.\n"
  example: []
  syntax:
    content: public Vector3 Scale { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Public ReadOnly Property Scale As Vector3
  overload: WaveEngine.Common.Math.Matrix.Scale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.Matrix.Basis
  commentId: P:WaveEngine.Common.Math.Matrix.Basis
  id: Basis
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Basis
  nameWithType: Matrix.Basis
  fullName: WaveEngine.Common.Math.Matrix.Basis
  type: Property
  source:
    id: Basis
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 350
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the basis matrix for the rotation.\n"
  example: []
  syntax:
    content: public Matrix Basis { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
    content.vb: Public Property Basis As Matrix
  overload: WaveEngine.Common.Math.Matrix.Basis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Row1
  commentId: P:WaveEngine.Common.Math.Matrix.Row1
  id: Row1
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Row1
  nameWithType: Matrix.Row1
  fullName: WaveEngine.Common.Math.Matrix.Row1
  type: Property
  source:
    id: Row1
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 390
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the first row in the matrix; that is M11, M12, M13, and M14.\n"
  example: []
  syntax:
    content: public Vector4 Row1 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Row1 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Row1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Row2
  commentId: P:WaveEngine.Common.Math.Matrix.Row2
  id: Row2
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Row2
  nameWithType: Matrix.Row2
  fullName: WaveEngine.Common.Math.Matrix.Row2
  type: Property
  source:
    id: Row2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 409
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the second row in the matrix; that is M21, M22, M23, and M24.\n"
  example: []
  syntax:
    content: public Vector4 Row2 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Row2 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Row2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Row3
  commentId: P:WaveEngine.Common.Math.Matrix.Row3
  id: Row3
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Row3
  nameWithType: Matrix.Row3
  fullName: WaveEngine.Common.Math.Matrix.Row3
  type: Property
  source:
    id: Row3
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 428
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the third row in the matrix; that is M31, M32, M33, and M34.\n"
  example: []
  syntax:
    content: public Vector4 Row3 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Row3 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Row3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Row4
  commentId: P:WaveEngine.Common.Math.Matrix.Row4
  id: Row4
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Row4
  nameWithType: Matrix.Row4
  fullName: WaveEngine.Common.Math.Matrix.Row4
  type: Property
  source:
    id: Row4
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 447
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the fourth row in the matrix; that is M41, M42, M43, and M44.\n"
  example: []
  syntax:
    content: public Vector4 Row4 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Row4 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Row4*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Column1
  commentId: P:WaveEngine.Common.Math.Matrix.Column1
  id: Column1
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Column1
  nameWithType: Matrix.Column1
  fullName: WaveEngine.Common.Math.Matrix.Column1
  type: Property
  source:
    id: Column1
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 466
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the first column in the matrix; that is M11, M21, M31, and M41.\n"
  example: []
  syntax:
    content: public Vector4 Column1 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Column1 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Column1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Column2
  commentId: P:WaveEngine.Common.Math.Matrix.Column2
  id: Column2
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Column2
  nameWithType: Matrix.Column2
  fullName: WaveEngine.Common.Math.Matrix.Column2
  type: Property
  source:
    id: Column2
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 485
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the second column in the matrix; that is M12, M22, M32, and M42.\n"
  example: []
  syntax:
    content: public Vector4 Column2 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Column2 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Column2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Column3
  commentId: P:WaveEngine.Common.Math.Matrix.Column3
  id: Column3
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Column3
  nameWithType: Matrix.Column3
  fullName: WaveEngine.Common.Math.Matrix.Column3
  type: Property
  source:
    id: Column3
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 504
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the third column in the matrix; that is M13, M23, M33, and M43.\n"
  example: []
  syntax:
    content: public Vector4 Column3 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Column3 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Column3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Column4
  commentId: P:WaveEngine.Common.Math.Matrix.Column4
  id: Column4
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Column4
  nameWithType: Matrix.Column4
  fullName: WaveEngine.Common.Math.Matrix.Column4
  type: Property
  source:
    id: Column4
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 523
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the fourth column in the matrix; that is M14, M24, M34, and M44.\n"
  example: []
  syntax:
    content: public Vector4 Column4 { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector4
    content.vb: Public Property Column4 As Vector4
  overload: WaveEngine.Common.Math.Matrix.Column4*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single)
  nameWithType: Matrix.Matrix(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.Matrix(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 562
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Matrix(float m11, float m12, float m13, float m14, float m21, float m22, float m23, float m24, float m31, float m32, float m33, float m34, float m41, float m42, float m43, float m44)
    parameters:
    - id: m11
      type: System.Single
      description: The M11.
    - id: m12
      type: System.Single
      description: The M12.
    - id: m13
      type: System.Single
      description: The M13.
    - id: m14
      type: System.Single
      description: The M14.
    - id: m21
      type: System.Single
      description: The M21.
    - id: m22
      type: System.Single
      description: The M22.
    - id: m23
      type: System.Single
      description: The M23.
    - id: m24
      type: System.Single
      description: The M24.
    - id: m31
      type: System.Single
      description: The M31.
    - id: m32
      type: System.Single
      description: The M32.
    - id: m33
      type: System.Single
      description: The M33.
    - id: m34
      type: System.Single
      description: The M34.
    - id: m41
      type: System.Single
      description: The M41.
    - id: m42
      type: System.Single
      description: The M42.
    - id: m43
      type: System.Single
      description: The M43.
    - id: m44
      type: System.Single
      description: The M44.
    content.vb: Public Sub New(m11 As Single, m12 As Single, m13 As Single, m14 As Single, m21 As Single, m22 As Single, m23 As Single, m24 As Single, m31 As Single, m32 As Single, m33 As Single, m34 As Single, m41 As Single, m42 As Single, m43 As Single, m44 As Single)
  overload: WaveEngine.Common.Math.Matrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.#ctor(System.Single[])
  commentId: M:WaveEngine.Common.Math.Matrix.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(Single[])
  nameWithType: Matrix.Matrix(Single[])
  fullName: WaveEngine.Common.Math.Matrix.Matrix(System.Single[])
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 586
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.Matrix\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Matrix(float[] values)
    parameters:
    - id: values
      type: System.Single[]
      description: The array values.
    content.vb: Public Sub New(values As Single())
  overload: WaveEngine.Common.Math.Matrix.#ctor*
  nameWithType.vb: Matrix.Matrix(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Matrix.Matrix(System.Single())
  name.vb: Matrix(Single())
- uid: WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3})
  commentId: M:WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3})
  id: CreateBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3})
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>)
  nameWithType: Matrix.CreateBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>)
  fullName: WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Nullable<WaveEngine.Common.Math.Vector3>)
  type: Method
  source:
    id: CreateBillboard
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 630
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the billboard.\n"
  example: []
  syntax:
    content: public static Matrix CreateBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3? cameraForwardVector)
    parameters:
    - id: objectPosition
      type: WaveEngine.Common.Math.Vector3
      description: The object position.
    - id: cameraPosition
      type: WaveEngine.Common.Math.Vector3
      description: The camera position.
    - id: cameraUpVector
      type: WaveEngine.Common.Math.Vector3
      description: The camera up vector.
    - id: cameraForwardVector
      type: System.Nullable{WaveEngine.Common.Math.Vector3}
      description: The camera forward vector.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateBillboard(objectPosition As Vector3, cameraPosition As Vector3, cameraUpVector As Vector3, cameraForwardVector As Vector3?) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateBillboard*
  nameWithType.vb: Matrix.CreateBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Nullable(Of WaveEngine.Common.Math.Vector3))
  name.vb: CreateBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3))
- uid: WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  id: CreateBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, out Matrix)
  nameWithType: Matrix.CreateBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateBillboard(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Nullable<WaveEngine.Common.Math.Vector3>, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateBillboard
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 646
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the billboard.\n"
  example: []
  syntax:
    content: public static void CreateBillboard(ref Vector3 objectPosition, ref Vector3 cameraPosition, ref Vector3 cameraUpVector, Vector3? cameraForwardVector, out Matrix result)
    parameters:
    - id: objectPosition
      type: WaveEngine.Common.Math.Vector3
      description: The object position.
    - id: cameraPosition
      type: WaveEngine.Common.Math.Vector3
      description: The camera position.
    - id: cameraUpVector
      type: WaveEngine.Common.Math.Vector3
      description: The camera up vector.
    - id: cameraForwardVector
      type: System.Nullable{WaveEngine.Common.Math.Vector3}
      description: The camera forward vector.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateBillboard(ByRef objectPosition As Vector3, ByRef cameraPosition As Vector3, ByRef cameraUpVector As Vector3, cameraForwardVector As Vector3?, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateBillboard*
  nameWithType.vb: Matrix.CreateBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateBillboard(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Nullable(Of WaveEngine.Common.Math.Vector3), ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3})
  commentId: M:WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3})
  id: CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3})
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>, Nullable<Vector3>)
  nameWithType: Matrix.CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>, Nullable<Vector3>)
  fullName: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Nullable<WaveEngine.Common.Math.Vector3>, System.Nullable<WaveEngine.Common.Math.Vector3>)
  type: Method
  source:
    id: CreateConstrainedBillboard
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 698
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the constrained billboard.\n"
  example: []
  syntax:
    content: public static Matrix CreateConstrainedBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 rotateAxis, Vector3? cameraForwardVector, Vector3? objectForwardVector)
    parameters:
    - id: objectPosition
      type: WaveEngine.Common.Math.Vector3
      description: The object position.
    - id: cameraPosition
      type: WaveEngine.Common.Math.Vector3
      description: The camera position.
    - id: rotateAxis
      type: WaveEngine.Common.Math.Vector3
      description: The rotate axis.
    - id: cameraForwardVector
      type: System.Nullable{WaveEngine.Common.Math.Vector3}
      description: The camera forward vector.
    - id: objectForwardVector
      type: System.Nullable{WaveEngine.Common.Math.Vector3}
      description: The object forward vector.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateConstrainedBillboard(objectPosition As Vector3, cameraPosition As Vector3, rotateAxis As Vector3, cameraForwardVector As Vector3?, objectForwardVector As Vector3?) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard*
  nameWithType.vb: Matrix.CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3), Nullable(Of Vector3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, System.Nullable(Of WaveEngine.Common.Math.Vector3), System.Nullable(Of WaveEngine.Common.Math.Vector3))
  name.vb: CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3), Nullable(Of Vector3))
- uid: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  id: CreateConstrainedBillboard(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Nullable{WaveEngine.Common.Math.Vector3},System.Nullable{WaveEngine.Common.Math.Vector3},WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateConstrainedBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, Nullable<Vector3>, out Matrix)
  nameWithType: Matrix.CreateConstrainedBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, Nullable<Vector3>, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, System.Nullable<WaveEngine.Common.Math.Vector3>, System.Nullable<WaveEngine.Common.Math.Vector3>, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateConstrainedBillboard
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 715
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the constrained billboard.\n"
  example: []
  syntax:
    content: public static void CreateConstrainedBillboard(ref Vector3 objectPosition, ref Vector3 cameraPosition, ref Vector3 rotateAxis, Vector3? cameraForwardVector, Vector3? objectForwardVector, out Matrix result)
    parameters:
    - id: objectPosition
      type: WaveEngine.Common.Math.Vector3
      description: The object position.
    - id: cameraPosition
      type: WaveEngine.Common.Math.Vector3
      description: The camera position.
    - id: rotateAxis
      type: WaveEngine.Common.Math.Vector3
      description: The rotate axis.
    - id: cameraForwardVector
      type: System.Nullable{WaveEngine.Common.Math.Vector3}
      description: The camera forward vector.
    - id: objectForwardVector
      type: System.Nullable{WaveEngine.Common.Math.Vector3}
      description: The object forward vector.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateConstrainedBillboard(ByRef objectPosition As Vector3, ByRef cameraPosition As Vector3, ByRef rotateAxis As Vector3, cameraForwardVector As Vector3?, objectForwardVector As Vector3?, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard*
  nameWithType.vb: Matrix.CreateConstrainedBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), Nullable(Of Vector3), ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, System.Nullable(Of WaveEngine.Common.Math.Vector3), System.Nullable(Of WaveEngine.Common.Math.Vector3), ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateConstrainedBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), Nullable(Of Vector3), ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3)
  id: CreateTranslation(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(Vector3)
  nameWithType: Matrix.CreateTranslation(Vector3)
  fullName: WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateTranslation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 794
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the translation.\n"
  example: []
  syntax:
    content: public static Matrix CreateTranslation(Vector3 position)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The position.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateTranslation(position As Vector3) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateTranslation(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: CreateTranslation(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(ref Vector3, out Matrix)
  nameWithType: Matrix.CreateTranslation(ref Vector3, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateTranslation(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateTranslation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 807
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the translation.\n"
  example: []
  syntax:
    content: public static void CreateTranslation(ref Vector3 position, out Matrix result)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The position.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateTranslation(ByRef position As Vector3, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateTranslation*
  nameWithType.vb: Matrix.CreateTranslation(ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateTranslation(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateTranslation(ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single,System.Single,System.Single)
  id: CreateTranslation(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(Single, Single, Single)
  nameWithType: Matrix.CreateTranslation(Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreateTranslation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 834
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the translation.\n"
  example: []
  syntax:
    content: public static Matrix CreateTranslation(float xPosition, float yPosition, float zPosition)
    parameters:
    - id: xPosition
      type: System.Single
      description: The x position.
    - id: yPosition
      type: System.Single
      description: The y position.
    - id: zPosition
      type: System.Single
      description: The z position.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateTranslation(xPosition As Single, yPosition As Single, zPosition As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateTranslation(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateTranslation(Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateTranslation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 849
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the translation.\n"
  example: []
  syntax:
    content: public static void CreateTranslation(float xPosition, float yPosition, float zPosition, out Matrix result)
    parameters:
    - id: xPosition
      type: System.Single
      description: The x position.
    - id: yPosition
      type: System.Single
      description: The y position.
    - id: zPosition
      type: System.Single
      description: The z position.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateTranslation(xPosition As Single, yPosition As Single, zPosition As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateTranslation*
  nameWithType.vb: Matrix.CreateTranslation(Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateTranslation(System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateTranslation(Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateScale(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateScale(System.Single,System.Single,System.Single)
  id: CreateScale(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Single, Single)
  nameWithType: Matrix.CreateScale(Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateScale(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreateScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 876
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the scale.\n"
  example: []
  syntax:
    content: public static Matrix CreateScale(float xScale, float yScale, float zScale)
    parameters:
    - id: xScale
      type: System.Single
      description: The x scale.
    - id: yScale
      type: System.Single
      description: The y scale.
    - id: zScale
      type: System.Single
      description: The z scale.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateScale(xScale As Single, yScale As Single, zScale As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateScale(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateScale(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateScale(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateScale(Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateScale(System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 891
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the scale.\n"
  example: []
  syntax:
    content: public static void CreateScale(float xScale, float yScale, float zScale, out Matrix result)
    parameters:
    - id: xScale
      type: System.Single
      description: The x scale.
    - id: yScale
      type: System.Single
      description: The y scale.
    - id: zScale
      type: System.Single
      description: The z scale.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateScale(xScale As Single, yScale As Single, zScale As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateScale*
  nameWithType.vb: Matrix.CreateScale(Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateScale(System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateScale(Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3)
  id: CreateScale(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Vector3)
  nameWithType: Matrix.CreateScale(Vector3)
  fullName: WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 916
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the scale.\n"
  example: []
  syntax:
    content: public static Matrix CreateScale(Vector3 scales)
    parameters:
    - id: scales
      type: WaveEngine.Common.Math.Vector3
      description: The scales.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateScale(scales As Vector3) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateScale(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: CreateScale(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(ref Vector3, out Matrix)
  nameWithType: Matrix.CreateScale(ref Vector3, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateScale(ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 929
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the scale.\n"
  example: []
  syntax:
    content: public static void CreateScale(ref Vector3 scales, out Matrix result)
    parameters:
    - id: scales
      type: WaveEngine.Common.Math.Vector3
      description: The scales.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateScale(ByRef scales As Vector3, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateScale*
  nameWithType.vb: Matrix.CreateScale(ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateScale(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateScale(ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateScale(System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateScale(System.Single)
  id: CreateScale(System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single)
  nameWithType: Matrix.CreateScale(Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateScale(System.Single)
  type: Method
  source:
    id: CreateScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 954
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the scale.\n"
  example: []
  syntax:
    content: public static Matrix CreateScale(float scale)
    parameters:
    - id: scale
      type: System.Single
      description: The scale.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateScale(scale As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateScale(System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateScale(System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateScale(System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single, out Matrix)
  nameWithType: Matrix.CreateScale(Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateScale(System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateScale
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 967
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the scale.\n"
  example: []
  syntax:
    content: public static void CreateScale(float scale, out Matrix result)
    parameters:
    - id: scale
      type: System.Single
      description: The scale.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateScale(scale As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateScale*
  nameWithType.vb: Matrix.CreateScale(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateScale(System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateScale(Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single)
  id: CreateRotationX(System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationX(Single)
  nameWithType: Matrix.CreateRotationX(Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single)
  type: Method
  source:
    id: CreateRotationX
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 992
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the rotation X.\n"
  example: []
  syntax:
    content: public static Matrix CreateRotationX(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: The radians.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateRotationX(radians As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateRotationX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateRotationX(System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationX(Single, out Matrix)
  nameWithType: Matrix.CreateRotationX(Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateRotationX
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1005
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the rotation X.\n"
  example: []
  syntax:
    content: public static void CreateRotationX(float radians, out Matrix result)
    parameters:
    - id: radians
      type: System.Single
      description: The radians.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateRotationX(radians As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateRotationX*
  nameWithType.vb: Matrix.CreateRotationX(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateRotationX(System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateRotationX(Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single)
  id: CreateRotationY(System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationY(Single)
  nameWithType: Matrix.CreateRotationY(Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single)
  type: Method
  source:
    id: CreateRotationY
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1033
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the rotation Y.\n"
  example: []
  syntax:
    content: public static Matrix CreateRotationY(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: The radians.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateRotationY(radians As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateRotationY*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateRotationY(System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationY(Single, out Matrix)
  nameWithType: Matrix.CreateRotationY(Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateRotationY
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1046
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the rotation Y.\n"
  example: []
  syntax:
    content: public static void CreateRotationY(float radians, out Matrix result)
    parameters:
    - id: radians
      type: System.Single
      description: The radians.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateRotationY(radians As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateRotationY*
  nameWithType.vb: Matrix.CreateRotationY(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateRotationY(System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateRotationY(Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single)
  id: CreateRotationZ(System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationZ(Single)
  nameWithType: Matrix.CreateRotationZ(Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single)
  type: Method
  source:
    id: CreateRotationZ
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1074
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the rotation Z.\n"
  example: []
  syntax:
    content: public static Matrix CreateRotationZ(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: The radians.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateRotationZ(radians As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateRotationZ*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateRotationZ(System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationZ(Single, out Matrix)
  nameWithType: Matrix.CreateRotationZ(Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateRotationZ
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1087
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the rotation Z.\n"
  example: []
  syntax:
    content: public static void CreateRotationZ(float radians, out Matrix result)
    parameters:
    - id: radians
      type: System.Single
      description: The radians.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateRotationZ(radians As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateRotationZ*
  nameWithType.vb: Matrix.CreateRotationZ(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateRotationZ(System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateRotationZ(Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromTRS(Vector3, Vector3, Vector3)
  nameWithType: Matrix.CreateFromTRS(Vector3, Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateFromTRS
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1117
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreate a translation, rotation and scaling matrix.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromTRS(Vector3 translate, Vector3 rotation, Vector3 scale)
    parameters:
    - id: translate
      type: WaveEngine.Common.Math.Vector3
      description: Translate vector.
    - id: rotation
      type: WaveEngine.Common.Math.Vector3
      description: The euler angles (Pitch, Yaw, Roll).
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: Scale vector.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The TRS matrix.
    content.vb: Public Shared Function CreateFromTRS(translate As Vector3, rotation As Vector3, scale As Vector3) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateFromTRS*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromTRS(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  nameWithType: Matrix.CreateFromTRS(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromTRS(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateFromTRS
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1132
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreate a translation, rotation and scaling matrix.\n"
  example: []
  syntax:
    content: public static void CreateFromTRS(ref Vector3 translate, ref Vector3 rotation, ref Vector3 scale, out Matrix matrix)
    parameters:
    - id: translate
      type: WaveEngine.Common.Math.Vector3
      description: Translate vector.
    - id: rotation
      type: WaveEngine.Common.Math.Vector3
      description: The euler angles (Pitch, Yaw, Roll).
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: Scale vector.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The TRS matrix.
    content.vb: Public Shared Sub CreateFromTRS(ByRef translate As Vector3, ByRef rotation As Vector3, ByRef scale As Vector3, ByRef matrix As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateFromTRS*
  nameWithType.vb: Matrix.CreateFromTRS(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateFromTRS(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateFromTRS(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  id: CreateFromTRS(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromTRS(Vector3, Quaternion, Vector3)
  nameWithType: Matrix.CreateFromTRS(Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateFromTRS
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1147
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreate a translation, rotation and scaling matrix.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromTRS(Vector3 translate, Quaternion orientation, Vector3 scale)
    parameters:
    - id: translate
      type: WaveEngine.Common.Math.Vector3
      description: Translate vector.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: Orientation quaternion.
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: Scale vector.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The TRS matrix.
    content.vb: Public Shared Function CreateFromTRS(translate As Vector3, orientation As Quaternion, scale As Vector3) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateFromTRS*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: CreateFromTRS(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromTRS(ref Vector3, ref Quaternion, ref Vector3, out Matrix)
  nameWithType: Matrix.CreateFromTRS(ref Vector3, ref Quaternion, ref Vector3, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromTRS(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Quaternion, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateFromTRS
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1162
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreate a translation, rotation and scaling matrix.\n"
  example: []
  syntax:
    content: public static void CreateFromTRS(ref Vector3 translate, ref Quaternion orientation, ref Vector3 scale, out Matrix matrix)
    parameters:
    - id: translate
      type: WaveEngine.Common.Math.Vector3
      description: Translate vector.
    - id: orientation
      type: WaveEngine.Common.Math.Quaternion
      description: Orientation quaternion.
    - id: scale
      type: WaveEngine.Common.Math.Vector3
      description: Scale vector.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The TRS Matrix.
    content.vb: Public Shared Sub CreateFromTRS(ByRef translate As Vector3, ByRef orientation As Quaternion, ByRef scale As Vector3, ByRef matrix As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateFromTRS*
  nameWithType.vb: Matrix.CreateFromTRS(ByRef Vector3, ByRef Quaternion, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateFromTRS(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateFromTRS(ByRef Vector3, ByRef Quaternion, ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3,System.Single)
  id: CreateFromAxisAngle(WaveEngine.Common.Math.Vector3,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromAxisAngle(Vector3, Single)
  nameWithType: Matrix.CreateFromAxisAngle(Vector3, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3, System.Single)
  type: Method
  source:
    id: CreateFromAxisAngle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1198
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates from axis angle.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromAxisAngle(Vector3 axis, float angle)
    parameters:
    - id: axis
      type: WaveEngine.Common.Math.Vector3
      description: The axis.
    - id: angle
      type: System.Single
      description: The angle.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateFromAxisAngle(axis As Vector3, angle As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateFromAxisAngle(WaveEngine.Common.Math.Vector3@,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromAxisAngle(ref Vector3, Single, out Matrix)
  nameWithType: Matrix.CreateFromAxisAngle(ref Vector3, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(ref WaveEngine.Common.Math.Vector3, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateFromAxisAngle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1212
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates from axis angle.\n"
  example: []
  syntax:
    content: public static void CreateFromAxisAngle(ref Vector3 axis, float angle, out Matrix result)
    parameters:
    - id: axis
      type: WaveEngine.Common.Math.Vector3
      description: The axis.
    - id: angle
      type: System.Single
      description: The angle.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateFromAxisAngle(ByRef axis As Vector3, angle As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle*
  nameWithType.vb: Matrix.CreateFromAxisAngle(ByRef Vector3, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle(ByRef WaveEngine.Common.Math.Vector3, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateFromAxisAngle(ByRef Vector3, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  id: CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveFieldOfView(Single, Single, Single, Single)
  nameWithType: Matrix.CreatePerspectiveFieldOfView(Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreatePerspectiveFieldOfView
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1252
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the perspective field of view.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspectiveFieldOfView(float fieldOfView, float aspectRatio, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: fieldOfView
      type: System.Single
      description: The field of view.
    - id: aspectRatio
      type: System.Single
      description: The aspect ratio.
    - id: nearPlaneDistance
      type: System.Single
      description: The near plane distance.
    - id: farPlaneDistance
      type: System.Single
      description: The far plane distance.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreatePerspectiveFieldOfView(fieldOfView As Single, aspectRatio As Single, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveFieldOfView(Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreatePerspectiveFieldOfView(Single, Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreatePerspectiveFieldOfView
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1268
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the perspective field of view.\n"
  example: []
  syntax:
    content: public static void CreatePerspectiveFieldOfView(float fieldOfView, float aspectRatio, float nearPlaneDistance, float farPlaneDistance, out Matrix result)
    parameters:
    - id: fieldOfView
      type: System.Single
      description: The field of view.
    - id: aspectRatio
      type: System.Single
      description: The aspect ratio.
    - id: nearPlaneDistance
      type: System.Single
      description: The near plane distance.
    - id: farPlaneDistance
      type: System.Single
      description: The far plane distance.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreatePerspectiveFieldOfView(fieldOfView As Single, aspectRatio As Single, nearPlaneDistance As Single, farPlaneDistance As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView*
  nameWithType.vb: Matrix.CreatePerspectiveFieldOfView(Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreatePerspectiveFieldOfView(Single, Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  id: CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspective(Single, Single, Single, Single)
  nameWithType: Matrix.CreatePerspective(Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreatePerspective
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1312
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the perspective.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspective(float width, float height, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: width
      type: System.Single
      description: The width.
    - id: height
      type: System.Single
      description: The height.
    - id: nearPlaneDistance
      type: System.Single
      description: The near plane distance.
    - id: farPlaneDistance
      type: System.Single
      description: The far plane distance.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreatePerspective(width As Single, height As Single, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreatePerspective*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreatePerspective(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspective(Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreatePerspective(Single, Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single, System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreatePerspective
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1328
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the perspective.\n"
  example: []
  syntax:
    content: public static void CreatePerspective(float width, float height, float nearPlaneDistance, float farPlaneDistance, out Matrix result)
    parameters:
    - id: width
      type: System.Single
      description: The width.
    - id: height
      type: System.Single
      description: The height.
    - id: nearPlaneDistance
      type: System.Single
      description: The near plane distance.
    - id: farPlaneDistance
      type: System.Single
      description: The far plane distance.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreatePerspective(width As Single, height As Single, nearPlaneDistance As Single, farPlaneDistance As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreatePerspective*
  nameWithType.vb: Matrix.CreatePerspective(Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreatePerspective(System.Single, System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreatePerspective(Single, Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single)
  nameWithType: Matrix.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreatePerspectiveOffCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1366
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the perspective off center.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspectiveOffCenter(float left, float right, float bottom, float top, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: left
      type: System.Single
      description: The left.
    - id: right
      type: System.Single
      description: The right.
    - id: bottom
      type: System.Single
      description: The bottom.
    - id: top
      type: System.Single
      description: The top.
    - id: nearPlaneDistance
      type: System.Single
      description: The near plane distance.
    - id: farPlaneDistance
      type: System.Single
      description: The far plane distance.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreatePerspectiveOffCenter(left As Single, right As Single, bottom As Single, top As Single, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreatePerspectiveOffCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1384
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the perspective off center.\n"
  example: []
  syntax:
    content: public static void CreatePerspectiveOffCenter(float left, float right, float bottom, float top, float nearPlaneDistance, float farPlaneDistance, out Matrix result)
    parameters:
    - id: left
      type: System.Single
      description: The left.
    - id: right
      type: System.Single
      description: The right.
    - id: bottom
      type: System.Single
      description: The bottom.
    - id: top
      type: System.Single
      description: The top.
    - id: nearPlaneDistance
      type: System.Single
      description: The near plane distance.
    - id: farPlaneDistance
      type: System.Single
      description: The far plane distance.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreatePerspectiveOffCenter(left As Single, right As Single, bottom As Single, top As Single, nearPlaneDistance As Single, farPlaneDistance As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter*
  nameWithType.vb: Matrix.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  id: CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographic(Single, Single, Single, Single)
  nameWithType: Matrix.CreateOrthographic(Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreateOrthographic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1421
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the orthographic.\n"
  example: []
  syntax:
    content: public static Matrix CreateOrthographic(float width, float height, float zNearPlane, float zFarPlane)
    parameters:
    - id: width
      type: System.Single
      description: The width.
    - id: height
      type: System.Single
      description: The height.
    - id: zNearPlane
      type: System.Single
      description: The z near plane.
    - id: zFarPlane
      type: System.Single
      description: The z far plane.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateOrthographic(width As Single, height As Single, zNearPlane As Single, zFarPlane As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateOrthographic*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateOrthographic(System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographic(Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateOrthographic(Single, Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single, System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateOrthographic
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1437
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the orthographic.\n"
  example: []
  syntax:
    content: public static void CreateOrthographic(float width, float height, float zNearPlane, float zFarPlane, out Matrix result)
    parameters:
    - id: width
      type: System.Single
      description: The width.
    - id: height
      type: System.Single
      description: The height.
    - id: zNearPlane
      type: System.Single
      description: The z near plane.
    - id: zFarPlane
      type: System.Single
      description: The z far plane.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateOrthographic(width As Single, height As Single, zNearPlane As Single, zFarPlane As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateOrthographic*
  nameWithType.vb: Matrix.CreateOrthographic(Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateOrthographic(System.Single, System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateOrthographic(Single, Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single)
  nameWithType: Matrix.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreateOrthographicOffCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1460
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the orthographic off center.\n"
  example: []
  syntax:
    content: public static Matrix CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNearPlane, float zFarPlane)
    parameters:
    - id: left
      type: System.Single
      description: The left.
    - id: right
      type: System.Single
      description: The right.
    - id: bottom
      type: System.Single
      description: The bottom.
    - id: top
      type: System.Single
      description: The top.
    - id: zNearPlane
      type: System.Single
      description: The z near plane.
    - id: zFarPlane
      type: System.Single
      description: The z far plane.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateOrthographicOffCenter(left As Single, right As Single, bottom As Single, top As Single, zNearPlane As Single, zFarPlane As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateOrthographicOffCenter
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1478
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the orthographic off center.\n"
  example: []
  syntax:
    content: public static void CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNearPlane, float zFarPlane, out Matrix result)
    parameters:
    - id: left
      type: System.Single
      description: The left.
    - id: right
      type: System.Single
      description: The right.
    - id: bottom
      type: System.Single
      description: The bottom.
    - id: top
      type: System.Single
      description: The top.
    - id: zNearPlane
      type: System.Single
      description: The z near plane.
    - id: zFarPlane
      type: System.Single
      description: The z far plane.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateOrthographicOffCenter(left As Single, right As Single, bottom As Single, top As Single, zNearPlane As Single, zFarPlane As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter*
  nameWithType.vb: Matrix.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreateLookAt(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateLookAt(Vector3, Vector3, Vector3)
  nameWithType: Matrix.CreateLookAt(Vector3, Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateLookAt
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1499
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the look at.\n"
  example: []
  syntax:
    content: public static Matrix CreateLookAt(Vector3 position, Vector3 target, Vector3 upVector)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The init position.
    - id: target
      type: WaveEngine.Common.Math.Vector3
      description: The target.
    - id: upVector
      type: WaveEngine.Common.Math.Vector3
      description: The up vector.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateLookAt(position As Vector3, target As Vector3, upVector As Vector3) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateLookAt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateLookAt(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: CreateLookAt(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateLookAt(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  nameWithType: Matrix.CreateLookAt(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateLookAt(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateLookAt
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1514
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the look at.\n"
  example: []
  syntax:
    content: public static void CreateLookAt(ref Vector3 position, ref Vector3 target, ref Vector3 upVector, out Matrix result)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The init position.
    - id: target
      type: WaveEngine.Common.Math.Vector3
      description: The look target.
    - id: upVector
      type: WaveEngine.Common.Math.Vector3
      description: The up vector.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateLookAt(ByRef position As Vector3, ByRef target As Vector3, ByRef upVector As Vector3, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateLookAt*
  nameWithType.vb: Matrix.CreateLookAt(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateLookAt(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateLookAt(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: CreateWorld(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateWorld(Vector3, Vector3, Vector3)
  nameWithType: Matrix.CreateWorld(Vector3, Vector3, Vector3)
  fullName: WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: CreateWorld
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1545
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the world.\n"
  example: []
  syntax:
    content: public static Matrix CreateWorld(Vector3 position, Vector3 forward, Vector3 up)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The position.
    - id: forward
      type: WaveEngine.Common.Math.Vector3
      description: The forward.
    - id: up
      type: WaveEngine.Common.Math.Vector3
      description: Up vector.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateWorld(position As Vector3, forward As Vector3, up As Vector3) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateWorld*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateWorld(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  id: CreateWorld(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateWorld(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  nameWithType: Matrix.CreateWorld(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateWorld(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Vector3, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateWorld
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1560
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the world.\n"
  example: []
  syntax:
    content: public static void CreateWorld(ref Vector3 position, ref Vector3 forward, ref Vector3 up, out Matrix result)
    parameters:
    - id: position
      type: WaveEngine.Common.Math.Vector3
      description: The position.
    - id: forward
      type: WaveEngine.Common.Math.Vector3
      description: The forward.
    - id: up
      type: WaveEngine.Common.Math.Vector3
      description: Up vector.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateWorld(ByRef position As Vector3, ByRef forward As Vector3, ByRef up As Vector3, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateWorld*
  nameWithType.vb: Matrix.CreateWorld(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateWorld(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateWorld(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion)
  id: CreateFromQuaternion(WaveEngine.Common.Math.Quaternion)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromQuaternion(Quaternion)
  nameWithType: Matrix.CreateFromQuaternion(Quaternion)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: CreateFromQuaternion
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1589
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates from quaternion.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromQuaternion(Quaternion quaternion)
    parameters:
    - id: quaternion
      type: WaveEngine.Common.Math.Quaternion
      description: The quaternion.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateFromQuaternion(quaternion As Quaternion) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateFromQuaternion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  id: CreateFromQuaternion(WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromQuaternion(ref Quaternion, out Matrix)
  nameWithType: Matrix.CreateFromQuaternion(ref Quaternion, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromQuaternion(ref WaveEngine.Common.Math.Quaternion, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateFromQuaternion
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1602
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates from quaternion.\n"
  example: []
  syntax:
    content: public static void CreateFromQuaternion(ref Quaternion quaternion, out Matrix result)
    parameters:
    - id: quaternion
      type: WaveEngine.Common.Math.Quaternion
      description: The quaternion.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateFromQuaternion(ByRef quaternion As Quaternion, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateFromQuaternion*
  nameWithType.vb: Matrix.CreateFromQuaternion(ByRef Quaternion, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateFromQuaternion(ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateFromQuaternion(ByRef Quaternion, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromYawPitchRoll(Single, Single, Single)
  nameWithType: Matrix.CreateFromYawPitchRoll(Single, Single, Single)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: CreateFromYawPitchRoll
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1639
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates from yaw pitch roll.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromYawPitchRoll(float yaw, float pitch, float roll)
    parameters:
    - id: yaw
      type: System.Single
      description: The yaw.
    - id: pitch
      type: System.Single
      description: The pitch.
    - id: roll
      type: System.Single
      description: The roll.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateFromYawPitchRoll(yaw As Single, pitch As Single, roll As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromYawPitchRoll(Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateFromYawPitchRoll(Single, Single, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single, System.Single, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateFromYawPitchRoll
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1654
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates from yaw pitch roll.\n"
  example: []
  syntax:
    content: public static void CreateFromYawPitchRoll(float yaw, float pitch, float roll, out Matrix result)
    parameters:
    - id: yaw
      type: System.Single
      description: The yaw.
    - id: pitch
      type: System.Single
      description: The pitch.
    - id: roll
      type: System.Single
      description: The roll.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateFromYawPitchRoll(yaw As Single, pitch As Single, roll As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll*
  nameWithType.vb: Matrix.CreateFromYawPitchRoll(Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll(System.Single, System.Single, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateFromYawPitchRoll(Single, Single, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Plane)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Plane)
  id: CreateShadow(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Plane)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateShadow(Vector3, Plane)
  nameWithType: Matrix.CreateShadow(Vector3, Plane)
  fullName: WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Plane)
  type: Method
  source:
    id: CreateShadow
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1667
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the shadow.\n"
  example: []
  syntax:
    content: public static Matrix CreateShadow(Vector3 lightDirection, Plane plane)
    parameters:
    - id: lightDirection
      type: WaveEngine.Common.Math.Vector3
      description: The light direction.
    - id: plane
      type: WaveEngine.Common.Math.Plane
      description: The plane.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateShadow(lightDirection As Vector3, plane As Plane) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateShadow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateShadow(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  id: CreateShadow(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateShadow(ref Vector3, ref Plane, out Matrix)
  nameWithType: Matrix.CreateShadow(ref Vector3, ref Plane, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateShadow(ref WaveEngine.Common.Math.Vector3, ref WaveEngine.Common.Math.Plane, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateShadow
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1681
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the shadow.\n"
  example: []
  syntax:
    content: public static void CreateShadow(ref Vector3 lightDirection, ref Plane plane, out Matrix result)
    parameters:
    - id: lightDirection
      type: WaveEngine.Common.Math.Vector3
      description: The light direction.
    - id: plane
      type: WaveEngine.Common.Math.Plane
      description: The plane.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateShadow(ByRef lightDirection As Vector3, ByRef plane As Plane, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateShadow*
  nameWithType.vb: Matrix.CreateShadow(ByRef Vector3, ByRef Plane, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateShadow(ByRef WaveEngine.Common.Math.Vector3, ByRef WaveEngine.Common.Math.Plane, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateShadow(ByRef Vector3, ByRef Plane, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane)
  id: CreateReflection(WaveEngine.Common.Math.Plane)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateReflection(Plane)
  nameWithType: Matrix.CreateReflection(Plane)
  fullName: WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane)
  type: Method
  source:
    id: CreateReflection
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1715
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the reflection.\n"
  example: []
  syntax:
    content: public static Matrix CreateReflection(Plane value)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Plane
      description: The value.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function CreateReflection(value As Plane) As Matrix
  overload: WaveEngine.Common.Math.Matrix.CreateReflection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.CreateReflection(WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  id: CreateReflection(WaveEngine.Common.Math.Plane@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: CreateReflection(ref Plane, out Matrix)
  nameWithType: Matrix.CreateReflection(ref Plane, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.CreateReflection(ref WaveEngine.Common.Math.Plane, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: CreateReflection
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1728
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the reflection.\n"
  example: []
  syntax:
    content: public static void CreateReflection(ref Plane value, out Matrix result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Plane
      description: The value.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub CreateReflection(ByRef value As Plane, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.CreateReflection*
  nameWithType.vb: Matrix.CreateReflection(ByRef Plane, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.CreateReflection(ByRef WaveEngine.Common.Math.Plane, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: CreateReflection(ByRef Plane, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Quaternion)
  commentId: M:WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Quaternion)
  id: Transform(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Quaternion)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Transform(Matrix, Quaternion)
  nameWithType: Matrix.Transform(Matrix, Quaternion)
  fullName: WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Quaternion)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1766
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified value.\n"
  example: []
  syntax:
    content: public static Matrix Transform(Matrix value, Quaternion rotation)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Matrix
      description: The value.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Transform(value As Matrix, rotation As Quaternion) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Transform(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  id: Transform(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Quaternion@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Transform(ref Matrix, ref Quaternion, out Matrix)
  nameWithType: Matrix.Transform(ref Matrix, ref Quaternion, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Transform(ref WaveEngine.Common.Math.Matrix, ref WaveEngine.Common.Math.Quaternion, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1780
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransforms the specified value.\n"
  example: []
  syntax:
    content: public static void Transform(ref Matrix value, ref Quaternion rotation, out Matrix result)
    parameters:
    - id: value
      type: WaveEngine.Common.Math.Matrix
      description: The value.
    - id: rotation
      type: WaveEngine.Common.Math.Quaternion
      description: The rotation.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Transform(ByRef value As Matrix, ByRef rotation As Quaternion, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Transform*
  nameWithType.vb: Matrix.Transform(ByRef Matrix, ByRef Quaternion, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Transform(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Quaternion, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Transform(ByRef Matrix, ByRef Quaternion, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.ToString
  commentId: M:WaveEngine.Common.Math.Matrix.ToString
  id: ToString
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: WaveEngine.Common.Math.Matrix.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1845
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: WaveEngine.Common.Math.Matrix.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix)
  id: Equals(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1861
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(Matrix other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Matrix
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(other As Matrix) As Boolean
  overload: WaveEngine.Common.Math.Matrix.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Math.Matrix}.Equals(WaveEngine.Common.Math.Matrix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Equals(WaveEngine.Common.Math.Matrix@)
  id: Equals(WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Equals(ref Matrix)
  nameWithType: Matrix.Equals(ref Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Equals(ref WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1871
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEqualses the specified other.\n"
  example: []
  syntax:
    content: public bool Equals(ref Matrix other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.Matrix
      description: The other.
    return:
      type: System.Boolean
      description: The result.
    content.vb: Public Function Equals(ByRef other As Matrix) As Boolean
  overload: WaveEngine.Common.Math.Matrix.Equals*
  nameWithType.vb: Matrix.Equals(ByRef Matrix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Matrix.Equals(ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Equals(ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Equals(System.Object)
  commentId: M:WaveEngine.Common.Math.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: WaveEngine.Common.Math.Matrix.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1898
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Math.Matrix.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Matrix.GetHashCode
  commentId: M:WaveEngine.Common.Math.Matrix.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: WaveEngine.Common.Math.Matrix.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1916
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Math.Matrix.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix)
  id: Transpose(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Transpose(Matrix)
  nameWithType: Matrix.Transpose(Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transpose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1941
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransposes the specified matrix.\n"
  example: []
  syntax:
    content: public static Matrix Transpose(Matrix matrix)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Transpose(matrix As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Transpose*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Transpose(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Transpose(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Transpose(ref Matrix, out Matrix)
  nameWithType: Matrix.Transpose(ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Transpose(ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Transpose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1954
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTransposes the specified matrix.\n"
  example: []
  syntax:
    content: public static void Transpose(ref Matrix matrix, out Matrix result)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Transpose(ByRef matrix As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Transpose*
  nameWithType.vb: Matrix.Transpose(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Transpose(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Transpose(ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Determinant
  commentId: M:WaveEngine.Common.Math.Matrix.Determinant
  id: Determinant
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Determinant()
  nameWithType: Matrix.Determinant()
  fullName: WaveEngine.Common.Math.Matrix.Determinant()
  type: Method
  source:
    id: Determinant
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 1995
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDeterminants this instance.\n"
  example: []
  syntax:
    content: public float Determinant()
    return:
      type: System.Single
      description: The result.
    content.vb: Public Function Determinant As Single
  overload: WaveEngine.Common.Math.Matrix.Determinant*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Invert
  commentId: M:WaveEngine.Common.Math.Matrix.Invert
  id: Invert
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: WaveEngine.Common.Math.Matrix.Invert()
  type: Method
  source:
    id: Invert
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2027
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInverts the specified matrix.\n"
  example: []
  syntax:
    content: public void Invert()
    content.vb: Public Sub Invert
  overload: WaveEngine.Common.Math.Matrix.Invert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix)
  id: Invert(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Invert(Matrix)
  nameWithType: Matrix.Invert(Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Invert
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2037
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInverts the specified matrix.\n"
  example: []
  syntax:
    content: public static Matrix Invert(Matrix matrix)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Invert(matrix As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Invert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Invert(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Invert(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Invert(ref Matrix, out Matrix)
  nameWithType: Matrix.Invert(ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Invert(ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Invert
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2050
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInverts the specified matrix.\n"
  example: []
  syntax:
    content: public static void Invert(ref Matrix matrix, out Matrix result)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Invert(ByRef matrix As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Invert*
  nameWithType.vb: Matrix.Invert(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Invert(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Invert(ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix,System.Single)
  id: Lerp(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Lerp(Matrix, Matrix, Single)
  nameWithType: Matrix.Lerp(Matrix, Matrix, Single)
  fullName: WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix, System.Single)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2122
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Lerp(Matrix matrix1, Matrix matrix2, float amount)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    - id: amount
      type: System.Single
      description: The amount.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Lerp(matrix1 As Matrix, matrix2 As Matrix, amount As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Lerp(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  id: Lerp(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Lerp(ref Matrix, ref Matrix, Single, out Matrix)
  nameWithType: Matrix.Lerp(ref Matrix, ref Matrix, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Lerp(ref WaveEngine.Common.Math.Matrix, ref WaveEngine.Common.Math.Matrix, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Lerp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2137
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nLerps the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Lerp(ref Matrix matrix1, ref Matrix matrix2, float amount, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    - id: amount
      type: System.Single
      description: The amount.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Lerp(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, amount As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Lerp*
  nameWithType.vb: Matrix.Lerp(ByRef Matrix, ByRef Matrix, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Lerp(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Lerp(ByRef Matrix, ByRef Matrix, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix)
  id: Negate(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Negate(Matrix)
  nameWithType: Matrix.Negate(Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Negate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2162
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNegates the specified matrix.\n"
  example: []
  syntax:
    content: public static Matrix Negate(Matrix matrix)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Negate(matrix As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Negate(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Negate(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Negate(ref Matrix, out Matrix)
  nameWithType: Matrix.Negate(ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Negate(ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Negate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2175
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nNegates the specified matrix.\n"
  example: []
  syntax:
    content: public static void Negate(ref Matrix matrix, out Matrix result)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Negate(ByRef matrix As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Negate*
  nameWithType.vb: Matrix.Negate(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Negate(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Negate(ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: Add(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Add(Matrix, Matrix)
  nameWithType: Matrix.Add(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2201
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Add(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Add(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Add(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Add(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Add(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Add(ref Matrix, ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Add(ref WaveEngine.Common.Math.Matrix, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Add
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2215
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdds the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Add(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Add(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Add*
  nameWithType.vb: Matrix.Add(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Add(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Add(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: Subtract(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(Matrix, Matrix)
  nameWithType: Matrix.Subtract(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Subtract
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2241
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSubtracts the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Subtract(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Subtract(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Subtract(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Subtract(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Subtract(ref Matrix, ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Subtract(ref WaveEngine.Common.Math.Matrix, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Subtract
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2255
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nSubtracts the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Subtract(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Subtract(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Subtract*
  nameWithType.vb: Matrix.Subtract(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Subtract(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Subtract(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2281
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Multiply(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Multiply(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Multiply(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Multiply(ref Matrix, ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(ref WaveEngine.Common.Math.Matrix, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2295
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Multiply(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Multiply*
  nameWithType.vb: Matrix.Multiply(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Multiply(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Multiply(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  id: Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Single)
  nameWithType: Matrix.Multiply(Matrix, Single)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix, System.Single)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2338
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Multiply(Matrix matrix1, float scaleFactor)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Multiply(matrix1 As Matrix, scaleFactor As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  id: Multiply(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(ref Matrix, Single, out Matrix)
  nameWithType: Matrix.Multiply(ref Matrix, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(ref WaveEngine.Common.Math.Matrix, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2352
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nMultiplies the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Matrix matrix1, float scaleFactor, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Multiply(ByRef matrix1 As Matrix, scaleFactor As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Multiply*
  nameWithType.vb: Matrix.Multiply(ByRef Matrix, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Multiply(ByRef WaveEngine.Common.Math.Matrix, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Multiply(ByRef Matrix, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: Divide(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, Matrix)
  nameWithType: Matrix.Divide(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2378
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Divide(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Divide(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Divide(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Divide(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Divide(ref Matrix, ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Divide(ref WaveEngine.Common.Math.Matrix, ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2392
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Divide(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Divide(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Divide*
  nameWithType.vb: Matrix.Divide(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Divide(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Divide(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix,System.Single)
  id: Divide(WaveEngine.Common.Math.Matrix,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, Single)
  nameWithType: Matrix.Divide(Matrix, Single)
  fullName: WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix, System.Single)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2418
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Divide(Matrix matrix1, float divider)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: divider
      type: System.Single
      description: The divider.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Function Divide(matrix1 As Matrix, divider As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Divide(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  id: Divide(WaveEngine.Common.Math.Matrix@,System.Single,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Divide(ref Matrix, Single, out Matrix)
  nameWithType: Matrix.Divide(ref Matrix, Single, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Divide(ref WaveEngine.Common.Math.Matrix, System.Single, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Divide
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2432
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Divide(ref Matrix matrix1, float divider, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: divider
      type: System.Single
      description: The divider.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Divide(ByRef matrix1 As Matrix, divider As Single, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Divide*
  nameWithType.vb: Matrix.Divide(ByRef Matrix, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Divide(ByRef WaveEngine.Common.Math.Matrix, System.Single, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Divide(ByRef Matrix, Single, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix)
  id: Abs(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Abs(Matrix)
  nameWithType: Matrix.Abs(Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Abs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2459
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified matrix1.\n"
  example: []
  syntax:
    content: public static Matrix Abs(Matrix matrix)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: The absolute matrix
    content.vb: Public Shared Function Abs(matrix As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  commentId: M:WaveEngine.Common.Math.Matrix.Abs(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  id: Abs(WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Abs(ref Matrix, out Matrix)
  nameWithType: Matrix.Abs(ref Matrix, out Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Abs(ref WaveEngine.Common.Math.Matrix, out WaveEngine.Common.Math.Matrix)
  type: Method
  source:
    id: Abs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2487
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDivides the specified matrix1.\n"
  example: []
  syntax:
    content: public static void Abs(ref Matrix matrix1, out Matrix result)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: result
      type: WaveEngine.Common.Math.Matrix
      description: The result.
    content.vb: Public Shared Sub Abs(ByRef matrix1 As Matrix, ByRef result As Matrix)
  overload: WaveEngine.Common.Math.Matrix.Abs*
  nameWithType.vb: Matrix.Abs(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.Abs(ByRef WaveEngine.Common.Math.Matrix, ByRef WaveEngine.Common.Math.Matrix)
  name.vb: Abs(ByRef Matrix, ByRef Matrix)
- uid: WaveEngine.Common.Math.Matrix.op_UnaryNegation(WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_UnaryNegation(WaveEngine.Common.Math.Matrix)
  id: op_UnaryNegation(WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: UnaryNegation(Matrix)
  nameWithType: Matrix.UnaryNegation(Matrix)
  fullName: WaveEngine.Common.Math.Matrix.UnaryNegation(WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_UnaryNegation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2514
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator -.\n"
  example: []
  syntax:
    content: public static Matrix operator -(Matrix matrix1)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator -(matrix1 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Equality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Equality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: op_Equality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Equality(Matrix, Matrix)
  nameWithType: Matrix.Equality(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Equality(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Equality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2546
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator ==.\n"
  example: []
  syntax:
    content: public static bool operator ==(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator =(matrix1 As Matrix, matrix2 As Matrix) As Boolean
  overload: WaveEngine.Common.Math.Matrix.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Inequality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Inequality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: op_Inequality(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Inequality(Matrix, Matrix)
  nameWithType: Matrix.Inequality(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Inequality(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2559
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator !=.\n"
  example: []
  syntax:
    content: public static bool operator !=(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: System.Boolean
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator <>(matrix1 As Matrix, matrix2 As Matrix) As Boolean
  overload: WaveEngine.Common.Math.Matrix.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Addition(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Addition(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: op_Addition(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Addition(Matrix, Matrix)
  nameWithType: Matrix.Addition(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Addition(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Addition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2572
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator +.\n"
  example: []
  syntax:
    content: public static Matrix operator +(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator +(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Subtraction(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Subtraction(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: op_Subtraction(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix, Matrix)
  nameWithType: Matrix.Subtraction(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Subtraction(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Subtraction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2604
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator -.\n"
  example: []
  syntax:
    content: public static Matrix operator -(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator -(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: op_Multiply(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2636
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Matrix operator *(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  id: op_Multiply(WaveEngine.Common.Math.Matrix,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Single)
  nameWithType: Matrix.Multiply(Matrix, Single)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(WaveEngine.Common.Math.Matrix, System.Single)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2668
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Matrix operator *(Matrix matrix, float scaleFactor)
    parameters:
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(matrix As Matrix, scaleFactor As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Multiply(System.Single,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Multiply(System.Single,WaveEngine.Common.Math.Matrix)
  id: op_Multiply(System.Single,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Single, Matrix)
  nameWithType: Matrix.Multiply(Single, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Multiply(System.Single, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Multiply
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2699
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator *.\n"
  example: []
  syntax:
    content: public static Matrix operator *(float scaleFactor, Matrix matrix)
    parameters:
    - id: scaleFactor
      type: System.Single
      description: The scale factor.
    - id: matrix
      type: WaveEngine.Common.Math.Matrix
      description: The matrix.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator *(scaleFactor As Single, matrix As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Division(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Division(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  id: op_Division(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Division(Matrix, Matrix)
  nameWithType: Matrix.Division(Matrix, Matrix)
  fullName: WaveEngine.Common.Math.Matrix.Division(WaveEngine.Common.Math.Matrix, WaveEngine.Common.Math.Matrix)
  type: Operator
  source:
    id: op_Division
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2731
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator /.\n"
  example: []
  syntax:
    content: public static Matrix operator /(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: matrix2
      type: WaveEngine.Common.Math.Matrix
      description: The matrix2.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator /(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.op_Division(WaveEngine.Common.Math.Matrix,System.Single)
  commentId: M:WaveEngine.Common.Math.Matrix.op_Division(WaveEngine.Common.Math.Matrix,System.Single)
  id: op_Division(WaveEngine.Common.Math.Matrix,System.Single)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Division(Matrix, Single)
  nameWithType: Matrix.Division(Matrix, Single)
  fullName: WaveEngine.Common.Math.Matrix.Division(WaveEngine.Common.Math.Matrix, System.Single)
  type: Operator
  source:
    id: op_Division
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2763
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nImplements the operator /.\n"
  example: []
  syntax:
    content: public static Matrix operator /(Matrix matrix1, float divider)
    parameters:
    - id: matrix1
      type: WaveEngine.Common.Math.Matrix
      description: The matrix1.
    - id: divider
      type: System.Single
      description: The divider.
    return:
      type: WaveEngine.Common.Math.Matrix
      description: "\nThe result of the operator.\n"
    content.vb: Public Shared Operator /(matrix1 As Matrix, divider As Single) As Matrix
  overload: WaveEngine.Common.Math.Matrix.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.Matrix.Item(System.Int32)
  commentId: P:WaveEngine.Common.Math.Matrix.Item(System.Int32)
  id: Item(System.Int32)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Matrix.Item[Int32]
  fullName: WaveEngine.Common.Math.Matrix.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2794
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the component at the specified index.\n"
  example: []
  syntax:
    content: public float this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the component to access.
    return:
      type: System.Single
      description: The value of the matrix component, depending on the index.
    content.vb: Public Property Item(index As Integer) As Single
  overload: WaveEngine.Common.Math.Matrix.Item*
  nameWithType.vb: Matrix.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Matrix.Item(System.Int32)
  name.vb: Item(Int32)
- uid: WaveEngine.Common.Math.Matrix.Item(System.Int32,System.Int32)
  commentId: P:WaveEngine.Common.Math.Matrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: Matrix.Item[Int32, Int32]
  fullName: WaveEngine.Common.Math.Matrix.Item[System.Int32, System.Int32]
  type: Property
  source:
    id: this[]
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2902
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the component at the specified index.\n"
  example: []
  syntax:
    content: public float this[int row, int column] { get; set; }
    parameters:
    - id: row
      type: System.Int32
      description: The row of the matrix to access.
    - id: column
      type: System.Int32
      description: The column of the matrix to access.
    return:
      type: System.Single
      description: The value of the matrix component, depending on the index.
    content.vb: Public Property Item(row As Integer, column As Integer) As Single
  overload: WaveEngine.Common.Math.Matrix.Item*
  nameWithType.vb: Matrix.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.Matrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix(WaveEngine.Common.Math.Matrix@,System.Single[])
  commentId: M:WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix(WaveEngine.Common.Math.Matrix@,System.Single[])
  id: ToEngineFlippedYMatrix(WaveEngine.Common.Math.Matrix@,System.Single[])
  parent: WaveEngine.Common.Math.Matrix
  langs:
  - csharp
  - vb
  name: ToEngineFlippedYMatrix(ref Matrix, Single[])
  nameWithType: Matrix.ToEngineFlippedYMatrix(ref Matrix, Single[])
  fullName: WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix(ref WaveEngine.Common.Math.Matrix, System.Single[])
  type: Method
  source:
    id: ToEngineFlippedYMatrix
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\Matrix.cs
    startLine: 2940
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConvert to a Flipped Y WaveEngine matrix.\n"
  example: []
  syntax:
    content: public static void ToEngineFlippedYMatrix(ref Matrix m, float[] mat)
    parameters:
    - id: m
      type: WaveEngine.Common.Math.Matrix
      description: reference to a Wave Engine matrix.
    - id: mat
      type: System.Single[]
      description: OpenGL matrix.
    content.vb: Public Shared Sub ToEngineFlippedYMatrix(ByRef m As Matrix, mat As Single())
  overload: WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix*
  nameWithType.vb: Matrix.ToEngineFlippedYMatrix(ByRef Matrix, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix(ByRef WaveEngine.Common.Math.Matrix, System.Single())
  name.vb: ToEngineFlippedYMatrix(ByRef Matrix, Single())
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.IEquatable{WaveEngine.Common.Math.Matrix}
  commentId: T:System.IEquatable{WaveEngine.Common.Math.Matrix}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Matrix>
  nameWithType: IEquatable<Matrix>
  fullName: System.IEquatable<WaveEngine.Common.Math.Matrix>
  nameWithType.vb: IEquatable(Of Matrix)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Matrix)
  name.vb: IEquatable(Of Matrix)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Matrix.WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.VR.VRPose@)
  commentId: M:WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix,WaveEngine.Common.VR.VRPose@)
  parent: WaveEngine.OpenVR.Helpers.OpenVRHelper
  definition: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix,WaveEngine.Common.VR.VRPose@)
  name: ToVRPose(VRPose)
  nameWithType: OpenVRHelper.ToVRPose(VRPose)
  fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.VR.VRPose)
  spec.csharp:
  - uid: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.VR.VRPose@)
    name: ToVRPose
    nameWithType: OpenVRHelper.ToVRPose
    fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.VR.VRPose
    name: VRPose
    nameWithType: VRPose
    fullName: WaveEngine.Common.VR.VRPose
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.VR.VRPose@)
    name: ToVRPose
    nameWithType: OpenVRHelper.ToVRPose
    fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.VR.VRPose
    name: VRPose
    nameWithType: VRPose
    fullName: WaveEngine.Common.VR.VRPose
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix,WaveEngine.Common.VR.VRPose@)
  commentId: M:WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix,WaveEngine.Common.VR.VRPose@)
  name: ToVRPose(Matrix, VRPose)
  nameWithType: OpenVRHelper.ToVRPose(Matrix, VRPose)
  fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix, WaveEngine.Common.VR.VRPose)
  spec.csharp:
  - uid: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix,WaveEngine.Common.VR.VRPose@)
    name: ToVRPose
    nameWithType: OpenVRHelper.ToVRPose
    fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.VR.VRPose
    name: VRPose
    nameWithType: VRPose
    fullName: WaveEngine.Common.VR.VRPose
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose(WaveEngine.Common.Math.Matrix,WaveEngine.Common.VR.VRPose@)
    name: ToVRPose
    nameWithType: OpenVRHelper.ToVRPose
    fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper.ToVRPose
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.VR.VRPose
    name: VRPose
    nameWithType: VRPose
    fullName: WaveEngine.Common.VR.VRPose
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.OpenVR.Helpers.OpenVRHelper
  commentId: T:WaveEngine.OpenVR.Helpers.OpenVRHelper
  parent: WaveEngine.OpenVR.Helpers
  name: OpenVRHelper
  nameWithType: OpenVRHelper
  fullName: WaveEngine.OpenVR.Helpers.OpenVRHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.OpenVR.Helpers
  commentId: N:WaveEngine.OpenVR.Helpers
  name: WaveEngine.OpenVR.Helpers
  nameWithType: WaveEngine.OpenVR.Helpers
  fullName: WaveEngine.OpenVR.Helpers
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.Matrix.Identity*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Identity
  name: Identity
  nameWithType: Matrix.Identity
  fullName: WaveEngine.Common.Math.Matrix.Identity
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Math.Matrix.Up*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Up
  name: Up
  nameWithType: Matrix.Up
  fullName: WaveEngine.Common.Math.Matrix.Up
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math.Matrix.Down*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Down
  name: Down
  nameWithType: Matrix.Down
  fullName: WaveEngine.Common.Math.Matrix.Down
- uid: WaveEngine.Common.Math.Matrix.Right*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Right
  name: Right
  nameWithType: Matrix.Right
  fullName: WaveEngine.Common.Math.Matrix.Right
- uid: WaveEngine.Common.Math.Matrix.Left*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Left
  name: Left
  nameWithType: Matrix.Left
  fullName: WaveEngine.Common.Math.Matrix.Left
- uid: WaveEngine.Common.Math.Matrix.Forward*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Forward
  name: Forward
  nameWithType: Matrix.Forward
  fullName: WaveEngine.Common.Math.Matrix.Forward
- uid: WaveEngine.Common.Math.Matrix.Backward*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Backward
  name: Backward
  nameWithType: Matrix.Backward
  fullName: WaveEngine.Common.Math.Matrix.Backward
- uid: WaveEngine.Common.Math.Matrix.Translation*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Translation
  name: Translation
  nameWithType: Matrix.Translation
  fullName: WaveEngine.Common.Math.Matrix.Translation
- uid: WaveEngine.Common.Math.Matrix.Rotation*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Rotation
  name: Rotation
  nameWithType: Matrix.Rotation
  fullName: WaveEngine.Common.Math.Matrix.Rotation
- uid: WaveEngine.Common.Math.Matrix.Orientation*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Orientation
  name: Orientation
  nameWithType: Matrix.Orientation
  fullName: WaveEngine.Common.Math.Matrix.Orientation
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Common.Math.Matrix.Scale*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Scale
  name: Scale
  nameWithType: Matrix.Scale
  fullName: WaveEngine.Common.Math.Matrix.Scale
- uid: WaveEngine.Common.Math.Matrix.Basis*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Basis
  name: Basis
  nameWithType: Matrix.Basis
  fullName: WaveEngine.Common.Math.Matrix.Basis
- uid: WaveEngine.Common.Math.Matrix.Row1*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Row1
  name: Row1
  nameWithType: Matrix.Row1
  fullName: WaveEngine.Common.Math.Matrix.Row1
- uid: WaveEngine.Common.Math.Vector4
  commentId: T:WaveEngine.Common.Math.Vector4
  parent: WaveEngine.Common.Math
  name: Vector4
  nameWithType: Vector4
  fullName: WaveEngine.Common.Math.Vector4
- uid: WaveEngine.Common.Math.Matrix.Row2*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Row2
  name: Row2
  nameWithType: Matrix.Row2
  fullName: WaveEngine.Common.Math.Matrix.Row2
- uid: WaveEngine.Common.Math.Matrix.Row3*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Row3
  name: Row3
  nameWithType: Matrix.Row3
  fullName: WaveEngine.Common.Math.Matrix.Row3
- uid: WaveEngine.Common.Math.Matrix.Row4*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Row4
  name: Row4
  nameWithType: Matrix.Row4
  fullName: WaveEngine.Common.Math.Matrix.Row4
- uid: WaveEngine.Common.Math.Matrix.Column1*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Column1
  name: Column1
  nameWithType: Matrix.Column1
  fullName: WaveEngine.Common.Math.Matrix.Column1
- uid: WaveEngine.Common.Math.Matrix.Column2*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Column2
  name: Column2
  nameWithType: Matrix.Column2
  fullName: WaveEngine.Common.Math.Matrix.Column2
- uid: WaveEngine.Common.Math.Matrix.Column3*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Column3
  name: Column3
  nameWithType: Matrix.Column3
  fullName: WaveEngine.Common.Math.Matrix.Column3
- uid: WaveEngine.Common.Math.Matrix.Column4*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Column4
  name: Column4
  nameWithType: Matrix.Column4
  fullName: WaveEngine.Common.Math.Matrix.Column4
- uid: WaveEngine.Common.Math.Matrix.#ctor*
  commentId: Overload:WaveEngine.Common.Math.Matrix.#ctor
  name: Matrix
  nameWithType: Matrix.Matrix
  fullName: WaveEngine.Common.Math.Matrix.Matrix
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Math.Matrix.CreateBillboard*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateBillboard
  name: CreateBillboard
  nameWithType: Matrix.CreateBillboard
  fullName: WaveEngine.Common.Math.Matrix.CreateBillboard
- uid: System.Nullable{WaveEngine.Common.Math.Vector3}
  commentId: T:System.Nullable{WaveEngine.Common.Math.Vector3}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Vector3>
  nameWithType: Nullable<Vector3>
  fullName: System.Nullable<WaveEngine.Common.Math.Vector3>
  nameWithType.vb: Nullable(Of Vector3)
  fullName.vb: System.Nullable(Of WaveEngine.Common.Math.Vector3)
  name.vb: Nullable(Of Vector3)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard
  name: CreateConstrainedBillboard
  nameWithType: Matrix.CreateConstrainedBillboard
  fullName: WaveEngine.Common.Math.Matrix.CreateConstrainedBillboard
- uid: WaveEngine.Common.Math.Matrix.CreateTranslation*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateTranslation
  name: CreateTranslation
  nameWithType: Matrix.CreateTranslation
  fullName: WaveEngine.Common.Math.Matrix.CreateTranslation
- uid: WaveEngine.Common.Math.Matrix.CreateScale*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateScale
  name: CreateScale
  nameWithType: Matrix.CreateScale
  fullName: WaveEngine.Common.Math.Matrix.CreateScale
- uid: WaveEngine.Common.Math.Matrix.CreateRotationX*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateRotationX
  name: CreateRotationX
  nameWithType: Matrix.CreateRotationX
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationX
- uid: WaveEngine.Common.Math.Matrix.CreateRotationY*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateRotationY
  name: CreateRotationY
  nameWithType: Matrix.CreateRotationY
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationY
- uid: WaveEngine.Common.Math.Matrix.CreateRotationZ*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateRotationZ
  name: CreateRotationZ
  nameWithType: Matrix.CreateRotationZ
  fullName: WaveEngine.Common.Math.Matrix.CreateRotationZ
- uid: WaveEngine.Common.Math.Matrix.CreateFromTRS*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateFromTRS
  name: CreateFromTRS
  nameWithType: Matrix.CreateFromTRS
  fullName: WaveEngine.Common.Math.Matrix.CreateFromTRS
- uid: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateFromAxisAngle
  name: CreateFromAxisAngle
  nameWithType: Matrix.CreateFromAxisAngle
  fullName: WaveEngine.Common.Math.Matrix.CreateFromAxisAngle
- uid: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView
  name: CreatePerspectiveFieldOfView
  nameWithType: Matrix.CreatePerspectiveFieldOfView
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspectiveFieldOfView
- uid: WaveEngine.Common.Math.Matrix.CreatePerspective*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreatePerspective
  name: CreatePerspective
  nameWithType: Matrix.CreatePerspective
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspective
- uid: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter
  name: CreatePerspectiveOffCenter
  nameWithType: Matrix.CreatePerspectiveOffCenter
  fullName: WaveEngine.Common.Math.Matrix.CreatePerspectiveOffCenter
- uid: WaveEngine.Common.Math.Matrix.CreateOrthographic*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateOrthographic
  name: CreateOrthographic
  nameWithType: Matrix.CreateOrthographic
  fullName: WaveEngine.Common.Math.Matrix.CreateOrthographic
- uid: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter
  name: CreateOrthographicOffCenter
  nameWithType: Matrix.CreateOrthographicOffCenter
  fullName: WaveEngine.Common.Math.Matrix.CreateOrthographicOffCenter
- uid: WaveEngine.Common.Math.Matrix.CreateLookAt*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateLookAt
  name: CreateLookAt
  nameWithType: Matrix.CreateLookAt
  fullName: WaveEngine.Common.Math.Matrix.CreateLookAt
- uid: WaveEngine.Common.Math.Matrix.CreateWorld*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateWorld
  name: CreateWorld
  nameWithType: Matrix.CreateWorld
  fullName: WaveEngine.Common.Math.Matrix.CreateWorld
- uid: WaveEngine.Common.Math.Matrix.CreateFromQuaternion*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateFromQuaternion
  name: CreateFromQuaternion
  nameWithType: Matrix.CreateFromQuaternion
  fullName: WaveEngine.Common.Math.Matrix.CreateFromQuaternion
- uid: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll
  name: CreateFromYawPitchRoll
  nameWithType: Matrix.CreateFromYawPitchRoll
  fullName: WaveEngine.Common.Math.Matrix.CreateFromYawPitchRoll
- uid: WaveEngine.Common.Math.Matrix.CreateShadow*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateShadow
  name: CreateShadow
  nameWithType: Matrix.CreateShadow
  fullName: WaveEngine.Common.Math.Matrix.CreateShadow
- uid: WaveEngine.Common.Math.Plane
  commentId: T:WaveEngine.Common.Math.Plane
  parent: WaveEngine.Common.Math
  name: Plane
  nameWithType: Plane
  fullName: WaveEngine.Common.Math.Plane
- uid: WaveEngine.Common.Math.Matrix.CreateReflection*
  commentId: Overload:WaveEngine.Common.Math.Matrix.CreateReflection
  name: CreateReflection
  nameWithType: Matrix.CreateReflection
  fullName: WaveEngine.Common.Math.Matrix.CreateReflection
- uid: WaveEngine.Common.Math.Matrix.Transform*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Transform
  name: Transform
  nameWithType: Matrix.Transform
  fullName: WaveEngine.Common.Math.Matrix.Transform
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Matrix.ToString*
  commentId: Overload:WaveEngine.Common.Math.Matrix.ToString
  name: ToString
  nameWithType: Matrix.ToString
  fullName: WaveEngine.Common.Math.Matrix.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: WaveEngine.Common.Math.Matrix.Equals*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Equals
  name: Equals
  nameWithType: Matrix.Equals
  fullName: WaveEngine.Common.Math.Matrix.Equals
- uid: System.IEquatable{WaveEngine.Common.Math.Matrix}.Equals(WaveEngine.Common.Math.Matrix)
  commentId: M:System.IEquatable{WaveEngine.Common.Math.Matrix}.Equals(WaveEngine.Common.Math.Matrix)
  parent: System.IEquatable{WaveEngine.Common.Math.Matrix}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Matrix)
  nameWithType: IEquatable<Matrix>.Equals(Matrix)
  fullName: System.IEquatable<WaveEngine.Common.Math.Matrix>.Equals(WaveEngine.Common.Math.Matrix)
  nameWithType.vb: IEquatable(Of Matrix).Equals(Matrix)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.Matrix).Equals(WaveEngine.Common.Math.Matrix)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Matrix>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Math.Matrix>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Matrix).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Math.Matrix).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: WaveEngine.Common.Math.Matrix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.Matrix.GetHashCode*
  commentId: Overload:WaveEngine.Common.Math.Matrix.GetHashCode
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
  fullName: WaveEngine.Common.Math.Matrix.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Math.Matrix.Transpose*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Transpose
  name: Transpose
  nameWithType: Matrix.Transpose
  fullName: WaveEngine.Common.Math.Matrix.Transpose
- uid: WaveEngine.Common.Math.Matrix.Determinant*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Determinant
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: WaveEngine.Common.Math.Matrix.Determinant
- uid: WaveEngine.Common.Math.Matrix.Invert*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Invert
  name: Invert
  nameWithType: Matrix.Invert
  fullName: WaveEngine.Common.Math.Matrix.Invert
- uid: WaveEngine.Common.Math.Matrix.Lerp*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Lerp
  name: Lerp
  nameWithType: Matrix.Lerp
  fullName: WaveEngine.Common.Math.Matrix.Lerp
- uid: WaveEngine.Common.Math.Matrix.Negate*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Negate
  name: Negate
  nameWithType: Matrix.Negate
  fullName: WaveEngine.Common.Math.Matrix.Negate
- uid: WaveEngine.Common.Math.Matrix.Add*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Add
  name: Add
  nameWithType: Matrix.Add
  fullName: WaveEngine.Common.Math.Matrix.Add
- uid: WaveEngine.Common.Math.Matrix.Subtract*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Subtract
  name: Subtract
  nameWithType: Matrix.Subtract
  fullName: WaveEngine.Common.Math.Matrix.Subtract
- uid: WaveEngine.Common.Math.Matrix.Multiply*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Multiply
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: WaveEngine.Common.Math.Matrix.Multiply
- uid: WaveEngine.Common.Math.Matrix.Divide*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Divide
  name: Divide
  nameWithType: Matrix.Divide
  fullName: WaveEngine.Common.Math.Matrix.Divide
- uid: WaveEngine.Common.Math.Matrix.Abs*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Abs
  name: Abs
  nameWithType: Matrix.Abs
  fullName: WaveEngine.Common.Math.Matrix.Abs
- uid: WaveEngine.Common.Math.Matrix.op_UnaryNegation*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Matrix.UnaryNegation
  fullName: WaveEngine.Common.Math.Matrix.UnaryNegation
- uid: WaveEngine.Common.Math.Matrix.op_Equality*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_Equality
  name: Equality
  nameWithType: Matrix.Equality
  fullName: WaveEngine.Common.Math.Matrix.Equality
- uid: WaveEngine.Common.Math.Matrix.op_Inequality*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_Inequality
  name: Inequality
  nameWithType: Matrix.Inequality
  fullName: WaveEngine.Common.Math.Matrix.Inequality
- uid: WaveEngine.Common.Math.Matrix.op_Addition*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_Addition
  name: Addition
  nameWithType: Matrix.Addition
  fullName: WaveEngine.Common.Math.Matrix.Addition
- uid: WaveEngine.Common.Math.Matrix.op_Subtraction*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_Subtraction
  name: Subtraction
  nameWithType: Matrix.Subtraction
  fullName: WaveEngine.Common.Math.Matrix.Subtraction
- uid: WaveEngine.Common.Math.Matrix.op_Multiply*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_Multiply
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: WaveEngine.Common.Math.Matrix.Multiply
- uid: WaveEngine.Common.Math.Matrix.op_Division*
  commentId: Overload:WaveEngine.Common.Math.Matrix.op_Division
  name: Division
  nameWithType: Matrix.Division
  fullName: WaveEngine.Common.Math.Matrix.Division
- uid: WaveEngine.Common.Math.Matrix.Item*
  commentId: Overload:WaveEngine.Common.Math.Matrix.Item
  name: Item
  nameWithType: Matrix.Item
  fullName: WaveEngine.Common.Math.Matrix.Item
- uid: WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix*
  commentId: Overload:WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix
  name: ToEngineFlippedYMatrix
  nameWithType: Matrix.ToEngineFlippedYMatrix
  fullName: WaveEngine.Common.Math.Matrix.ToEngineFlippedYMatrix
