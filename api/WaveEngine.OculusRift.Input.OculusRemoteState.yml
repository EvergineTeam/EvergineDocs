### YamlMime:ManagedReference
items:
- uid: WaveEngine.OculusRift.Input.OculusRemoteState
  commentId: T:WaveEngine.OculusRift.Input.OculusRemoteState
  id: OculusRemoteState
  parent: WaveEngine.OculusRift.Input
  children:
  - WaveEngine.OculusRift.Input.OculusRemoteState.Back
  - WaveEngine.OculusRift.Input.OculusRemoteState.Down
  - WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected
  - WaveEngine.OculusRift.Input.OculusRemoteState.Left
  - WaveEngine.OculusRift.Input.OculusRemoteState.Right
  - WaveEngine.OculusRift.Input.OculusRemoteState.Start
  - WaveEngine.OculusRift.Input.OculusRemoteState.Up
  langs:
  - csharp
  - vb
  name: OculusRemoteState
  nameWithType: OculusRemoteState
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState
  type: Class
  source:
    id: OculusRemoteState
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 12
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nHolds the state of the Oculus Remote.\n"
  example: []
  syntax:
    content: 'public class OculusRemoteState : IController'
    content.vb: >-
      Public Class OculusRemoteState

          Implements IController
  inheritance:
  - System.Object
  implements:
  - WaveEngine.Common.Input.IController
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.Up
  commentId: F:WaveEngine.OculusRift.Input.OculusRemoteState.Up
  id: Up
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: OculusRemoteState.Up
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.Up
  type: Field
  source:
    id: Up
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 17
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nThe D-Pad up button.\n"
  example: []
  syntax:
    content: public ButtonState Up
    return:
      type: WaveEngine.Common.Input.ButtonState
    content.vb: Public Up As ButtonState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.Down
  commentId: F:WaveEngine.OculusRift.Input.OculusRemoteState.Down
  id: Down
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: OculusRemoteState.Down
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.Down
  type: Field
  source:
    id: Down
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 22
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nThe D-Pad down button.\n"
  example: []
  syntax:
    content: public ButtonState Down
    return:
      type: WaveEngine.Common.Input.ButtonState
    content.vb: Public Down As ButtonState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.Left
  commentId: F:WaveEngine.OculusRift.Input.OculusRemoteState.Left
  id: Left
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: OculusRemoteState.Left
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.Left
  type: Field
  source:
    id: Left
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 27
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nThe D-Pad left button.\n"
  example: []
  syntax:
    content: public ButtonState Left
    return:
      type: WaveEngine.Common.Input.ButtonState
    content.vb: Public Left As ButtonState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.Right
  commentId: F:WaveEngine.OculusRift.Input.OculusRemoteState.Right
  id: Right
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: OculusRemoteState.Right
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.Right
  type: Field
  source:
    id: Right
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 32
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nThe D-Pad right button.\n"
  example: []
  syntax:
    content: public ButtonState Right
    return:
      type: WaveEngine.Common.Input.ButtonState
    content.vb: Public Right As ButtonState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.Start
  commentId: F:WaveEngine.OculusRift.Input.OculusRemoteState.Start
  id: Start
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: OculusRemoteState.Start
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.Start
  type: Field
  source:
    id: Start
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 37
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nThe D-Pad central button.\n"
  example: []
  syntax:
    content: public ButtonState Start
    return:
      type: WaveEngine.Common.Input.ButtonState
    content.vb: Public Start As ButtonState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.Back
  commentId: F:WaveEngine.OculusRift.Input.OculusRemoteState.Back
  id: Back
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: Back
  nameWithType: OculusRemoteState.Back
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.Back
  type: Field
  source:
    id: Back
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 42
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nThe back button.\n"
  example: []
  syntax:
    content: public ButtonState Back
    return:
      type: WaveEngine.Common.Input.ButtonState
    content.vb: Public Back As ButtonState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected
  commentId: P:WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected
  id: IsConnected
  parent: WaveEngine.OculusRift.Input.OculusRemoteState
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: OculusRemoteState.IsConnected
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.OculusRift\Input\OculusRemoteState.cs
    startLine: 50
  assemblies:
  - WaveEngine.OculusRift
  namespace: WaveEngine.OculusRift.Input
  summary: "\nGets or sets a value indicating whether this instance is connected.\n"
  example: []
  syntax:
    content: public bool IsConnected { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is connected; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsConnected As Boolean
  overload: WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected*
  implements:
  - WaveEngine.Common.Input.IController.IsConnected
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.OculusRift.Input
  commentId: N:WaveEngine.OculusRift.Input
  name: WaveEngine.OculusRift.Input
  nameWithType: WaveEngine.OculusRift.Input
  fullName: WaveEngine.OculusRift.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Input.IController
  commentId: T:WaveEngine.Common.Input.IController
  parent: WaveEngine.Common.Input
  name: IController
  nameWithType: IController
  fullName: WaveEngine.Common.Input.IController
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Input
  commentId: N:WaveEngine.Common.Input
  name: WaveEngine.Common.Input
  nameWithType: WaveEngine.Common.Input
  fullName: WaveEngine.Common.Input
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Input.ButtonState
  commentId: T:WaveEngine.Common.Input.ButtonState
  parent: WaveEngine.Common.Input
  name: ButtonState
  nameWithType: ButtonState
  fullName: WaveEngine.Common.Input.ButtonState
- uid: WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected*
  commentId: Overload:WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected
  name: IsConnected
  nameWithType: OculusRemoteState.IsConnected
  fullName: WaveEngine.OculusRift.Input.OculusRemoteState.IsConnected
- uid: WaveEngine.Common.Input.IController.IsConnected
  commentId: P:WaveEngine.Common.Input.IController.IsConnected
  parent: WaveEngine.Common.Input.IController
  name: IsConnected
  nameWithType: IController.IsConnected
  fullName: WaveEngine.Common.Input.IController.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
