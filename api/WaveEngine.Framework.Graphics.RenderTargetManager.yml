### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Graphics.RenderTargetManager
  commentId: T:WaveEngine.Framework.Graphics.RenderTargetManager
  id: RenderTargetManager
  parent: WaveEngine.Framework.Graphics
  children:
  - WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture(System.Int32,System.Int32)
  - WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  - WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture
  - WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  - WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  - WaveEngine.Framework.Graphics.RenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  - WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  - WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported
  - WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported
  - WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  - WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  - WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive
  - WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.RenderTarget[])
  - WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  langs:
  - csharp
  - vb
  name: RenderTargetManager
  nameWithType: RenderTargetManager
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager
  type: Class
  source:
    id: RenderTargetManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 15
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nThis class is useful to create and set a render target.\n"
  example: []
  syntax:
    content: public sealed class RenderTargetManager
    content.vb: Public NotInheritable Class RenderTargetManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture
  commentId: P:WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture
  id: DefaultDepthTexture
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: DefaultDepthTexture
  nameWithType: RenderTargetManager.DefaultDepthTexture
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture
  type: Property
  source:
    id: DefaultDepthTexture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 42
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nGets the default depth texture\n"
  example: []
  syntax:
    content: public DepthTexture DefaultDepthTexture { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Graphics.DepthTexture
    content.vb: Public ReadOnly Property DefaultDepthTexture As DepthTexture
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported
  commentId: P:WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported
  id: IsDepthAsTextureSupported
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: IsDepthAsTextureSupported
  nameWithType: RenderTargetManager.IsDepthAsTextureSupported
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported
  type: Property
  source:
    id: IsDepthAsTextureSupported
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 53
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nGets a value indicating whether this device has support for Depth Buffer as texture\n"
  example: []
  syntax:
    content: public bool IsDepthAsTextureSupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDepthAsTextureSupported As Boolean
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported
  commentId: P:WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported
  id: IsMRTsupported
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: IsMRTsupported
  nameWithType: RenderTargetManager.IsMRTsupported
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported
  type: Property
  source:
    id: IsMRTsupported
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 64
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nGets a value indicating whether this device has support for MRT (Multi Render Target)\n"
  example: []
  syntax:
    content: public bool IsMRTsupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMRTsupported As Boolean
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive
  commentId: P:WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive
  id: RenderTargetActive
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: RenderTargetActive
  nameWithType: RenderTargetManager.RenderTargetActive
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive
  type: Property
  source:
    id: RenderTargetActive
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 78
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nGets a value indicating whether a render target is active.\n"
  example: []
  syntax:
    content: public bool RenderTargetActive { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if render target is active otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property RenderTargetActive As Boolean
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  id: PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: PixelFormatSupported(PixelFormat)
  nameWithType: RenderTargetManager.PixelFormatSupported(PixelFormat)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported(WaveEngine.Common.Graphics.PixelFormat)
  type: Method
  source:
    id: PixelFormatSupported
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 126
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nChecks if the specified pixel format is supported by this device\n"
  example: []
  syntax:
    content: public bool PixelFormatSupported(PixelFormat pixelFormat)
    parameters:
    - id: pixelFormat
      type: WaveEngine.Common.Graphics.PixelFormat
      description: The pixel format
    return:
      type: System.Boolean
      description: If the pixel is supported
    content.vb: Public Function PixelFormatSupported(pixelFormat As PixelFormat) As Boolean
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  id: CreateRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: CreateRenderTarget(Int32, Int32, PixelFormat)
  nameWithType: RenderTargetManager.CreateRenderTarget(Int32, Int32, PixelFormat)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget(System.Int32, System.Int32, WaveEngine.Common.Graphics.PixelFormat)
  type: Method
  source:
    id: CreateRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 138
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nCreates the render target.\n"
  example: []
  syntax:
    content: public RenderTarget CreateRenderTarget(int width, int height, PixelFormat pixelFormat = PixelFormat.R8G8B8A8)
    parameters:
    - id: width
      type: System.Int32
      description: The width.
    - id: height
      type: System.Int32
      description: The height.
    - id: pixelFormat
      type: WaveEngine.Common.Graphics.PixelFormat
      description: The pixel format
    return:
      type: WaveEngine.Common.Graphics.RenderTarget
      description: A new renderTarget.
    content.vb: Public Function CreateRenderTarget(width As Integer, height As Integer, pixelFormat As PixelFormat = PixelFormat.R8G8B8A8) As RenderTarget
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture(System.Int32,System.Int32)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture(System.Int32,System.Int32)
  id: CreateDepthTexture(System.Int32,System.Int32)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: CreateDepthTexture(Int32, Int32)
  nameWithType: RenderTargetManager.CreateDepthTexture(Int32, Int32)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture(System.Int32, System.Int32)
  type: Method
  source:
    id: CreateDepthTexture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 163
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nCreate a Depth Texture\n"
  example: []
  syntax:
    content: public DepthTexture CreateDepthTexture(int width, int height)
    parameters:
    - id: width
      type: System.Int32
      description: The width.
    - id: height
      type: System.Int32
      description: The height.
    return:
      type: WaveEngine.Common.Graphics.DepthTexture
      description: The new depth texture
    content.vb: Public Function CreateDepthTexture(width As Integer, height As Integer) As DepthTexture
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  id: SetRenderTargetAndDepth(WaveEngine.Common.Graphics.DepthTexture,WaveEngine.Common.Graphics.RenderTarget[])
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: SetRenderTargetAndDepth(DepthTexture, RenderTarget[])
  nameWithType: RenderTargetManager.SetRenderTargetAndDepth(DepthTexture, RenderTarget[])
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth(WaveEngine.Common.Graphics.DepthTexture, WaveEngine.Common.Graphics.RenderTarget[])
  type: Method
  source:
    id: SetRenderTargetAndDepth
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 173
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nSets the render target.\n"
  example: []
  syntax:
    content: public void SetRenderTargetAndDepth(DepthTexture depthTexture, params RenderTarget[] renderTargets)
    parameters:
    - id: depthTexture
      type: WaveEngine.Common.Graphics.DepthTexture
      description: The depth texture.
    - id: renderTargets
      type: WaveEngine.Common.Graphics.RenderTarget[]
      description: The render target.
    content.vb: Public Sub SetRenderTargetAndDepth(depthTexture As DepthTexture, ParamArray renderTargets As RenderTarget())
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth*
  nameWithType.vb: RenderTargetManager.SetRenderTargetAndDepth(DepthTexture, RenderTarget())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth(WaveEngine.Common.Graphics.DepthTexture, WaveEngine.Common.Graphics.RenderTarget())
  name.vb: SetRenderTargetAndDepth(DepthTexture, RenderTarget())
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.RenderTarget[])
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.RenderTarget[])
  id: SetRenderTarget(WaveEngine.Common.Graphics.RenderTarget[])
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: SetRenderTarget(RenderTarget[])
  nameWithType: RenderTargetManager.SetRenderTarget(RenderTarget[])
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.RenderTarget[])
  type: Method
  source:
    id: SetRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 190
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nSets the render target.\n"
  example: []
  syntax:
    content: public void SetRenderTarget(params RenderTarget[] renderTargets)
    parameters:
    - id: renderTargets
      type: WaveEngine.Common.Graphics.RenderTarget[]
      description: The render target.
    content.vb: Public Sub SetRenderTarget(ParamArray renderTargets As RenderTarget())
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget*
  nameWithType.vb: RenderTargetManager.SetRenderTarget(RenderTarget())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget(WaveEngine.Common.Graphics.RenderTarget())
  name.vb: SetRenderTarget(RenderTarget())
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  id: DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: DestroyRenderTarget(RenderTarget)
  nameWithType: RenderTargetManager.DestroyRenderTarget(RenderTarget)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  type: Method
  source:
    id: DestroyRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 214
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nDestroys the render target.\n"
  example: []
  syntax:
    content: public void DestroyRenderTarget(RenderTarget renderTarget)
    parameters:
    - id: renderTarget
      type: WaveEngine.Common.Graphics.RenderTarget
      description: The render target to remove.
    content.vb: Public Sub DestroyRenderTarget(renderTarget As RenderTarget)
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  id: DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: DestroyDepthTexture(DepthTexture)
  nameWithType: RenderTargetManager.DestroyDepthTexture(DepthTexture)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture(WaveEngine.Common.Graphics.DepthTexture)
  type: Method
  source:
    id: DestroyDepthTexture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 223
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nDestroys the depth texture.\n"
  example: []
  syntax:
    content: public void DestroyDepthTexture(DepthTexture depthTexture)
    parameters:
    - id: depthTexture
      type: WaveEngine.Common.Graphics.DepthTexture
      description: The depth texture to remove.
    content.vb: Public Sub DestroyDepthTexture(depthTexture As DepthTexture)
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  id: GetData(WaveEngine.Common.Graphics.RenderTarget)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: GetData(RenderTarget)
  nameWithType: RenderTargetManager.GetData(RenderTarget)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.GetData(WaveEngine.Common.Graphics.RenderTarget)
  type: Method
  source:
    id: GetData
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 233
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nGets the rendertarget data.\n"
  example: []
  syntax:
    content: public Color[] GetData(RenderTarget renderTarget)
    parameters:
    - id: renderTarget
      type: WaveEngine.Common.Graphics.RenderTarget
      description: RenderTarget object
    return:
      type: WaveEngine.Common.Graphics.Color[]
      description: Buffer of the data
    content.vb: Public Function GetData(renderTarget As RenderTarget) As Color()
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.GetData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  id: GetTemporalRenderTarget(System.Int32,System.Int32,WaveEngine.Common.Graphics.PixelFormat)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: GetTemporalRenderTarget(Int32, Int32, PixelFormat)
  nameWithType: RenderTargetManager.GetTemporalRenderTarget(Int32, Int32, PixelFormat)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget(System.Int32, System.Int32, WaveEngine.Common.Graphics.PixelFormat)
  type: Method
  source:
    id: GetTemporalRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 250
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nGets a temporal render target.\n"
  remarks: "\nThis method return a temporal render target. Internally Wave Engine kepps a pool\nof temporary render targets, so a call of GetTemporalRenderTarget can return an\nalready created render target.\n"
  example: []
  syntax:
    content: public RenderTarget GetTemporalRenderTarget(int width, int height, PixelFormat pixelFormat = PixelFormat.R8G8B8A8)
    parameters:
    - id: width
      type: System.Int32
      description: The width.
    - id: height
      type: System.Int32
      description: The height.
    - id: pixelFormat
      type: WaveEngine.Common.Graphics.PixelFormat
      description: The pixel format.
    return:
      type: WaveEngine.Common.Graphics.RenderTarget
      description: A temporal renderTarget.
    content.vb: Public Function GetTemporalRenderTarget(width As Integer, height As Integer, pixelFormat As PixelFormat = PixelFormat.R8G8B8A8) As RenderTarget
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  commentId: M:WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  id: ReleaseTemporalRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  parent: WaveEngine.Framework.Graphics.RenderTargetManager
  langs:
  - csharp
  - vb
  name: ReleaseTemporalRenderTarget(RenderTarget)
  nameWithType: RenderTargetManager.ReleaseTemporalRenderTarget(RenderTarget)
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget(WaveEngine.Common.Graphics.RenderTarget)
  type: Method
  source:
    id: ReleaseTemporalRenderTarget
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Graphics\RenderTargetManager.cs
    startLine: 260
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Graphics
  summary: "\nRelease a temporal render target\n"
  example: []
  syntax:
    content: public void ReleaseTemporalRenderTarget(RenderTarget temporalRenderTarget)
    parameters:
    - id: temporalRenderTarget
      type: WaveEngine.Common.Graphics.RenderTarget
      description: The temporal render target to release
    content.vb: Public Sub ReleaseTemporalRenderTarget(temporalRenderTarget As RenderTarget)
  overload: WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Graphics
  commentId: N:WaveEngine.Framework.Graphics
  name: WaveEngine.Framework.Graphics
  nameWithType: WaveEngine.Framework.Graphics
  fullName: WaveEngine.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture
  name: DefaultDepthTexture
  nameWithType: RenderTargetManager.DefaultDepthTexture
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.DefaultDepthTexture
- uid: WaveEngine.Common.Graphics.DepthTexture
  commentId: T:WaveEngine.Common.Graphics.DepthTexture
  parent: WaveEngine.Common.Graphics
  name: DepthTexture
  nameWithType: DepthTexture
  fullName: WaveEngine.Common.Graphics.DepthTexture
- uid: WaveEngine.Common.Graphics
  commentId: N:WaveEngine.Common.Graphics
  name: WaveEngine.Common.Graphics
  nameWithType: WaveEngine.Common.Graphics
  fullName: WaveEngine.Common.Graphics
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported
  name: IsDepthAsTextureSupported
  nameWithType: RenderTargetManager.IsDepthAsTextureSupported
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.IsDepthAsTextureSupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported
  name: IsMRTsupported
  nameWithType: RenderTargetManager.IsMRTsupported
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.IsMRTsupported
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive
  name: RenderTargetActive
  nameWithType: RenderTargetManager.RenderTargetActive
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.RenderTargetActive
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported
  name: PixelFormatSupported
  nameWithType: RenderTargetManager.PixelFormatSupported
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.PixelFormatSupported
- uid: WaveEngine.Common.Graphics.PixelFormat
  commentId: T:WaveEngine.Common.Graphics.PixelFormat
  parent: WaveEngine.Common.Graphics
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: WaveEngine.Common.Graphics.PixelFormat
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget
  name: CreateRenderTarget
  nameWithType: RenderTargetManager.CreateRenderTarget
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.CreateRenderTarget
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Graphics.RenderTarget
  commentId: T:WaveEngine.Common.Graphics.RenderTarget
  parent: WaveEngine.Common.Graphics
  name: RenderTarget
  nameWithType: RenderTarget
  fullName: WaveEngine.Common.Graphics.RenderTarget
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture
  name: CreateDepthTexture
  nameWithType: RenderTargetManager.CreateDepthTexture
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.CreateDepthTexture
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth
  name: SetRenderTargetAndDepth
  nameWithType: RenderTargetManager.SetRenderTargetAndDepth
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTargetAndDepth
- uid: WaveEngine.Common.Graphics.RenderTarget[]
  isExternal: true
  name: RenderTarget[]
  nameWithType: RenderTarget[]
  fullName: WaveEngine.Common.Graphics.RenderTarget[]
  nameWithType.vb: RenderTarget()
  fullName.vb: WaveEngine.Common.Graphics.RenderTarget()
  name.vb: RenderTarget()
  spec.csharp:
  - uid: WaveEngine.Common.Graphics.RenderTarget
    name: RenderTarget
    nameWithType: RenderTarget
    fullName: WaveEngine.Common.Graphics.RenderTarget
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Graphics.RenderTarget
    name: RenderTarget
    nameWithType: RenderTarget
    fullName: WaveEngine.Common.Graphics.RenderTarget
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget
  name: SetRenderTarget
  nameWithType: RenderTargetManager.SetRenderTarget
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.SetRenderTarget
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget
  name: DestroyRenderTarget
  nameWithType: RenderTargetManager.DestroyRenderTarget
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyRenderTarget
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture
  name: DestroyDepthTexture
  nameWithType: RenderTargetManager.DestroyDepthTexture
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.DestroyDepthTexture
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.GetData*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.GetData
  name: GetData
  nameWithType: RenderTargetManager.GetData
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.GetData
- uid: WaveEngine.Common.Graphics.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: WaveEngine.Common.Graphics.Color[]
  nameWithType.vb: Color()
  fullName.vb: WaveEngine.Common.Graphics.Color()
  name.vb: Color()
  spec.csharp:
  - uid: WaveEngine.Common.Graphics.Color
    name: Color
    nameWithType: Color
    fullName: WaveEngine.Common.Graphics.Color
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Graphics.Color
    name: Color
    nameWithType: Color
    fullName: WaveEngine.Common.Graphics.Color
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget
  name: GetTemporalRenderTarget
  nameWithType: RenderTargetManager.GetTemporalRenderTarget
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.GetTemporalRenderTarget
- uid: WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget*
  commentId: Overload:WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget
  name: ReleaseTemporalRenderTarget
  nameWithType: RenderTargetManager.ReleaseTemporalRenderTarget
  fullName: WaveEngine.Framework.Graphics.RenderTargetManager.ReleaseTemporalRenderTarget
