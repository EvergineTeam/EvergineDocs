### YamlMime:ManagedReference
items:
- uid: WaveEngine.Analytics.AnalyticsSystem
  commentId: T:WaveEngine.Analytics.AnalyticsSystem
  id: AnalyticsSystem
  parent: WaveEngine.Analytics
  children:
  - WaveEngine.Analytics.AnalyticsSystem.#ctor(WaveEngine.Analytics.AnalyticsInfo)
  - WaveEngine.Analytics.AnalyticsSystem.Close
  - WaveEngine.Analytics.AnalyticsSystem.Open
  - WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String,System.String,System.String)
  - WaveEngine.Analytics.AnalyticsSystem.Upload
  langs:
  - csharp
  - vb
  name: AnalyticsSystem
  nameWithType: AnalyticsSystem
  fullName: WaveEngine.Analytics.AnalyticsSystem
  type: Class
  source:
    id: AnalyticsSystem
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 18
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nThis class represent a generic analytics system.\n"
  example: []
  syntax:
    content: public abstract class AnalyticsSystem
    content.vb: Public MustInherit Class AnalyticsSystem
  inheritance:
  - System.Object
  derivedClasses:
  - WaveEngine.Analytics.Localytics
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Analytics.AnalyticsSystem.#ctor(WaveEngine.Analytics.AnalyticsInfo)
  commentId: M:WaveEngine.Analytics.AnalyticsSystem.#ctor(WaveEngine.Analytics.AnalyticsInfo)
  id: '#ctor(WaveEngine.Analytics.AnalyticsInfo)'
  parent: WaveEngine.Analytics.AnalyticsSystem
  langs:
  - csharp
  - vb
  name: AnalyticsSystem(AnalyticsInfo)
  nameWithType: AnalyticsSystem.AnalyticsSystem(AnalyticsInfo)
  fullName: WaveEngine.Analytics.AnalyticsSystem.AnalyticsSystem(WaveEngine.Analytics.AnalyticsInfo)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 29
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Analytics.AnalyticsSystem\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AnalyticsSystem(AnalyticsInfo info)
    parameters:
    - id: info
      type: WaveEngine.Analytics.AnalyticsInfo
      description: The info.
    content.vb: Public Sub New(info As AnalyticsInfo)
  overload: WaveEngine.Analytics.AnalyticsSystem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Analytics.AnalyticsSystem.Open
  commentId: M:WaveEngine.Analytics.AnalyticsSystem.Open
  id: Open
  parent: WaveEngine.Analytics.AnalyticsSystem
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: AnalyticsSystem.Open()
  fullName: WaveEngine.Analytics.AnalyticsSystem.Open()
  type: Method
  source:
    id: Open
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 39
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nOpens this instance.\n"
  example: []
  syntax:
    content: public abstract void Open()
    content.vb: Public MustOverride Sub Open
  overload: WaveEngine.Analytics.AnalyticsSystem.Open*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: WaveEngine.Analytics.AnalyticsSystem.Close
  commentId: M:WaveEngine.Analytics.AnalyticsSystem.Close
  id: Close
  parent: WaveEngine.Analytics.AnalyticsSystem
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: AnalyticsSystem.Close()
  fullName: WaveEngine.Analytics.AnalyticsSystem.Close()
  type: Method
  source:
    id: Close
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 44
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nCloses this instance.\n"
  example: []
  syntax:
    content: public abstract void Close()
    content.vb: Public MustOverride Sub Close
  overload: WaveEngine.Analytics.AnalyticsSystem.Close*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: WaveEngine.Analytics.AnalyticsSystem.Upload
  commentId: M:WaveEngine.Analytics.AnalyticsSystem.Upload
  id: Upload
  parent: WaveEngine.Analytics.AnalyticsSystem
  langs:
  - csharp
  - vb
  name: Upload()
  nameWithType: AnalyticsSystem.Upload()
  fullName: WaveEngine.Analytics.AnalyticsSystem.Upload()
  type: Method
  source:
    id: Upload
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 49
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nUploads this instance.\n"
  example: []
  syntax:
    content: public abstract void Upload()
    content.vb: Public MustOverride Sub Upload
  overload: WaveEngine.Analytics.AnalyticsSystem.Upload*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String,System.String,System.String)
  commentId: M:WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String,System.String,System.String)
  id: TagEvent(System.String,System.String,System.String)
  parent: WaveEngine.Analytics.AnalyticsSystem
  langs:
  - csharp
  - vb
  name: TagEvent(String, String, String)
  nameWithType: AnalyticsSystem.TagEvent(String, String, String)
  fullName: WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String, System.String, System.String)
  type: Method
  source:
    id: TagEvent
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 57
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nTags the event.\n"
  example: []
  syntax:
    content: public abstract void TagEvent(string eventName, string attribute, string value)
    parameters:
    - id: eventName
      type: System.String
      description: Name of the event.
    - id: attribute
      type: System.String
      description: The attribute.
    - id: value
      type: System.String
      description: The value.
    content.vb: Public MustOverride Sub TagEvent(eventName As String, attribute As String, value As String)
  overload: WaveEngine.Analytics.AnalyticsSystem.TagEvent*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: TagEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: WaveEngine.Analytics.AnalyticsSystem
  langs:
  - csharp
  - vb
  name: TagEvent(String, Dictionary<String, String>)
  nameWithType: AnalyticsSystem.TagEvent(String, Dictionary<String, String>)
  fullName: WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    id: TagEvent
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.Analytics\Shared\AnalyticsSystem.cs
    startLine: 64
  assemblies:
  - WaveEngine.Analytics
  namespace: WaveEngine.Analytics
  summary: "\nTags the event.\n"
  example: []
  syntax:
    content: public abstract void TagEvent(string eventName, Dictionary<string, string> attributes)
    parameters:
    - id: eventName
      type: System.String
      description: Name of the event.
    - id: attributes
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: The attributes.
    content.vb: Public MustOverride Sub TagEvent(eventName As String, attributes As Dictionary(Of String, String))
  overload: WaveEngine.Analytics.AnalyticsSystem.TagEvent*
  nameWithType.vb: AnalyticsSystem.TagEvent(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: WaveEngine.Analytics.AnalyticsSystem.TagEvent(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: TagEvent(String, Dictionary(Of String, String))
references:
- uid: WaveEngine.Analytics
  commentId: N:WaveEngine.Analytics
  name: WaveEngine.Analytics
  nameWithType: WaveEngine.Analytics
  fullName: WaveEngine.Analytics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Analytics.AnalyticsSystem
  commentId: T:WaveEngine.Analytics.AnalyticsSystem
  parent: WaveEngine.Analytics
  name: AnalyticsSystem
  nameWithType: AnalyticsSystem
  fullName: WaveEngine.Analytics.AnalyticsSystem
- uid: WaveEngine.Analytics.AnalyticsSystem.#ctor*
  commentId: Overload:WaveEngine.Analytics.AnalyticsSystem.#ctor
  name: AnalyticsSystem
  nameWithType: AnalyticsSystem.AnalyticsSystem
  fullName: WaveEngine.Analytics.AnalyticsSystem.AnalyticsSystem
- uid: WaveEngine.Analytics.AnalyticsInfo
  commentId: T:WaveEngine.Analytics.AnalyticsInfo
  parent: WaveEngine.Analytics
  name: AnalyticsInfo
  nameWithType: AnalyticsInfo
  fullName: WaveEngine.Analytics.AnalyticsInfo
- uid: WaveEngine.Analytics.AnalyticsSystem.Open*
  commentId: Overload:WaveEngine.Analytics.AnalyticsSystem.Open
  name: Open
  nameWithType: AnalyticsSystem.Open
  fullName: WaveEngine.Analytics.AnalyticsSystem.Open
- uid: WaveEngine.Analytics.AnalyticsSystem.Close*
  commentId: Overload:WaveEngine.Analytics.AnalyticsSystem.Close
  name: Close
  nameWithType: AnalyticsSystem.Close
  fullName: WaveEngine.Analytics.AnalyticsSystem.Close
- uid: WaveEngine.Analytics.AnalyticsSystem.Upload*
  commentId: Overload:WaveEngine.Analytics.AnalyticsSystem.Upload
  name: Upload
  nameWithType: AnalyticsSystem.Upload
  fullName: WaveEngine.Analytics.AnalyticsSystem.Upload
- uid: WaveEngine.Analytics.AnalyticsSystem.TagEvent*
  commentId: Overload:WaveEngine.Analytics.AnalyticsSystem.TagEvent
  name: TagEvent
  nameWithType: AnalyticsSystem.TagEvent
  fullName: WaveEngine.Analytics.AnalyticsSystem.TagEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
