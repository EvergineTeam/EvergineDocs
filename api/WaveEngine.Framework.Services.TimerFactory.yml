### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.TimerFactory
  commentId: T:WaveEngine.Framework.Services.TimerFactory
  id: TimerFactory
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String,System.TimeSpan,System.Action)
  - WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String,System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  - WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan,System.Action)
  - WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  - WaveEngine.Framework.Services.TimerFactory.Dispose
  - WaveEngine.Framework.Services.TimerFactory.Finalize
  - WaveEngine.Framework.Services.TimerFactory.Initialize
  - WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers(WaveEngine.Framework.Scene)
  - WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers
  - WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers(WaveEngine.Framework.Scene)
  - WaveEngine.Framework.Services.TimerFactory.RemoveTimer(System.String)
  - WaveEngine.Framework.Services.TimerFactory.RemoveTimer(WaveEngine.Framework.Services.Timer)
  - WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers(WaveEngine.Framework.Scene)
  - WaveEngine.Framework.Services.TimerFactory.Terminate
  - WaveEngine.Framework.Services.TimerFactory.Update(System.TimeSpan)
  - WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String,System.TimeSpan)
  - WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String,System.TimeSpan,System.Action)
  langs:
  - csharp
  - vb
  name: TimerFactory
  nameWithType: TimerFactory
  fullName: WaveEngine.Framework.Services.TimerFactory
  type: Class
  source:
    id: TimerFactory
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 13
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nFactory to create <xref href=\"WaveEngine.Framework.Services.Timer\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: 'public sealed class TimerFactory : UpdatableService, IDisposable'
    content.vb: >-
      Public NotInheritable Class TimerFactory

          Inherits UpdatableService

          Implements IDisposable
  inheritance:
  - System.Object
  - WaveEngine.Common.IO.SerializableObject
  - WaveEngine.Common.Service
  - WaveEngine.Common.UpdatableService
  implements:
  - System.IDisposable
  inheritedMembers:
  - WaveEngine.Common.Service.IsInitialized
  - WaveEngine.Common.Service.IsTerminated
  - WaveEngine.Common.Service.BaseInitialize
  - WaveEngine.Common.Service.BaseTerminate
  - WaveEngine.Common.Service.OnActivated
  - WaveEngine.Common.Service.OnDeactivated
  - WaveEngine.Common.IO.SerializableObject.DefaultValues
  - WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: WaveEngine.Framework.Services.TimerFactory.Finalize
  commentId: M:WaveEngine.Framework.Services.TimerFactory.Finalize
  id: Finalize
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: TimerFactory.Finalize()
  fullName: WaveEngine.Framework.Services.TimerFactory.Finalize()
  type: Method
  source:
    id: Finalize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 62
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nFinalizes an instance of the <xref href=\"WaveEngine.Framework.Services.TimerFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\n<xref href=\"WaveEngine.Framework.Services.TimerFactory\" data-throw-if-not-resolved=\"false\"></xref> is reclaimed by garbage collection.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: WaveEngine.Framework.Services.TimerFactory.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.Services.TimerFactory.Initialize
  commentId: M:WaveEngine.Framework.Services.TimerFactory.Initialize
  id: Initialize
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: TimerFactory.Initialize()
  fullName: WaveEngine.Framework.Services.TimerFactory.Initialize()
  type: Method
  source:
    id: Initialize
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 70
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllow to execute custom logic during the initialization of this instance.\n"
  example: []
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: WaveEngine.Common.Service.Initialize
  overload: WaveEngine.Framework.Services.TimerFactory.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.TimerFactory.Terminate
  commentId: M:WaveEngine.Framework.Services.TimerFactory.Terminate
  id: Terminate
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: TimerFactory.Terminate()
  fullName: WaveEngine.Framework.Services.TimerFactory.Terminate()
  type: Method
  source:
    id: Terminate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 79
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAllow to execute custom logic during the finalization of this instance.\n"
  example: []
  syntax:
    content: protected override void Terminate()
    content.vb: Protected Overrides Sub Terminate
  overridden: WaveEngine.Common.Service.Terminate
  overload: WaveEngine.Framework.Services.TimerFactory.Terminate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan,System.Action)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan,System.Action)
  id: CreateTimer(System.TimeSpan,System.Action)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: CreateTimer(TimeSpan, Action)
  nameWithType: TimerFactory.CreateTimer(TimeSpan, Action)
  fullName: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan, System.Action)
  type: Method
  source:
    id: CreateTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 97
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAdds a new timer. If there is already a timer with the selected name, this call will overwrite it.\n"
  remarks: "\nLooped is true by default, use the other overload to change it.\n"
  example: []
  syntax:
    content: public Timer CreateTimer(TimeSpan interval, Action action)
    parameters:
    - id: interval
      type: System.TimeSpan
      description: The interval between each timer firing.
    - id: action
      type: System.Action
      description: The action to execute when the timer fires.
    return:
      type: WaveEngine.Framework.Services.Timer
      description: The new timer.
    content.vb: Public Function CreateTimer(interval As TimeSpan, action As Action) As Timer
  overload: WaveEngine.Framework.Services.TimerFactory.CreateTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  id: CreateTimer(System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: CreateTimer(TimeSpan, Action, Boolean, Scene)
  nameWithType: TimerFactory.CreateTimer(TimeSpan, Action, Boolean, Scene)
  fullName: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.TimeSpan, System.Action, System.Boolean, WaveEngine.Framework.Scene)
  type: Method
  source:
    id: CreateTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 110
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAdds a new timer. If there is already a timer with the selected name, this call will overwrite it.\n"
  example: []
  syntax:
    content: public Timer CreateTimer(TimeSpan interval, Action action, bool looped, Scene scene = null)
    parameters:
    - id: interval
      type: System.TimeSpan
      description: The interval between each timer firing.
    - id: action
      type: System.Action
      description: The action to execute when the timer fires.
    - id: looped
      type: System.Boolean
      description: If set to <code>false</code> the timer will only fire one time.
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The timer scene.
    return:
      type: WaveEngine.Framework.Services.Timer
      description: The new timer.
    content.vb: Public Function CreateTimer(interval As TimeSpan, action As Action, looped As Boolean, scene As Scene = Nothing) As Timer
  overload: WaveEngine.Framework.Services.TimerFactory.CreateTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String,System.TimeSpan,System.Action)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String,System.TimeSpan,System.Action)
  id: CreateTimer(System.String,System.TimeSpan,System.Action)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: CreateTimer(String, TimeSpan, Action)
  nameWithType: TimerFactory.CreateTimer(String, TimeSpan, Action)
  fullName: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String, System.TimeSpan, System.Action)
  type: Method
  source:
    id: CreateTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 125
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAdds a new timer. If there is already a timer with the selected name, this call will overwrite it.\n"
  remarks: "\nLooped is true by default, use the other overload to change it.\n"
  example: []
  syntax:
    content: public Timer CreateTimer(string name, TimeSpan interval, Action action)
    parameters:
    - id: name
      type: System.String
      description: The name of the new timer.
    - id: interval
      type: System.TimeSpan
      description: The interval between each timer firing.
    - id: action
      type: System.Action
      description: The action to execute when the timer fires.
    return:
      type: WaveEngine.Framework.Services.Timer
      description: The new timer.
    content.vb: Public Function CreateTimer(name As String, interval As TimeSpan, action As Action) As Timer
  overload: WaveEngine.Framework.Services.TimerFactory.CreateTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String,System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String,System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  id: CreateTimer(System.String,System.TimeSpan,System.Action,System.Boolean,WaveEngine.Framework.Scene)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: CreateTimer(String, TimeSpan, Action, Boolean, Scene)
  nameWithType: TimerFactory.CreateTimer(String, TimeSpan, Action, Boolean, Scene)
  fullName: WaveEngine.Framework.Services.TimerFactory.CreateTimer(System.String, System.TimeSpan, System.Action, System.Boolean, WaveEngine.Framework.Scene)
  type: Method
  source:
    id: CreateTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 142
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nAdds a new timer. If there is already a timer with the selected name, this call will overwrite it.\n"
  example: []
  syntax:
    content: public Timer CreateTimer(string name, TimeSpan interval, Action action, bool looped, Scene scene = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the new timer.
    - id: interval
      type: System.TimeSpan
      description: The interval between each timer firing.
    - id: action
      type: System.Action
      description: The action to execute when the timer fires.
    - id: looped
      type: System.Boolean
      description: If set to <code>false</code> the timer will only fire one time.
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The timer scene.
    return:
      type: WaveEngine.Framework.Services.Timer
      description: The new timer.
    content.vb: Public Function CreateTimer(name As String, interval As TimeSpan, action As Action, looped As Boolean, scene As Scene = Nothing) As Timer
  overload: WaveEngine.Framework.Services.TimerFactory.CreateTimer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Already exists a timer with same name.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If name is null or empty.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If already exists a timer with same name.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveTimer(WaveEngine.Framework.Services.Timer)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.RemoveTimer(WaveEngine.Framework.Services.Timer)
  id: RemoveTimer(WaveEngine.Framework.Services.Timer)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: RemoveTimer(Timer)
  nameWithType: TimerFactory.RemoveTimer(Timer)
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveTimer(WaveEngine.Framework.Services.Timer)
  type: Method
  source:
    id: RemoveTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 209
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRemoves the timer.\n"
  example: []
  syntax:
    content: public bool RemoveTimer(Timer timer)
    parameters:
    - id: timer
      type: WaveEngine.Framework.Services.Timer
      description: The timer.
    return:
      type: System.Boolean
      description: "\nWhether timer was removed or not.\n"
    content.vb: Public Function RemoveTimer(timer As Timer) As Boolean
  overload: WaveEngine.Framework.Services.TimerFactory.RemoveTimer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Timer cannot be null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveTimer(System.String)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.RemoveTimer(System.String)
  id: RemoveTimer(System.String)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: RemoveTimer(String)
  nameWithType: TimerFactory.RemoveTimer(String)
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveTimer(System.String)
  type: Method
  source:
    id: RemoveTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 226
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRemoves a timer.\n"
  example: []
  syntax:
    content: public bool RemoveTimer(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the timer to remove.
    return:
      type: System.Boolean
      description: Whether timer was removed or not.
    content.vb: Public Function RemoveTimer(name As String) As Boolean
  overload: WaveEngine.Framework.Services.TimerFactory.RemoveTimer*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: TimerFactory was disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Parameter name cannot be null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers
  commentId: M:WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers
  id: RemoveAllTimers
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: RemoveAllTimers()
  nameWithType: TimerFactory.RemoveAllTimers()
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers()
  type: Method
  source:
    id: RemoveAllTimers
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 271
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRemoves all timers.\n"
  example: []
  syntax:
    content: public void RemoveAllTimers()
    content.vb: Public Sub RemoveAllTimers
  overload: WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: TimerFactory was disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers(WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers(WaveEngine.Framework.Scene)
  id: PauseSceneTimers(WaveEngine.Framework.Scene)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: PauseSceneTimers(Scene)
  nameWithType: TimerFactory.PauseSceneTimers(Scene)
  fullName: WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers(WaveEngine.Framework.Scene)
  type: Method
  source:
    id: PauseSceneTimers
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 295
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nPause all scene timers.\n"
  example: []
  syntax:
    content: public void PauseSceneTimers(Scene scene)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    content.vb: Public Sub PauseSceneTimers(scene As Scene)
  overload: WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: TimerFactory was disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers(WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers(WaveEngine.Framework.Scene)
  id: ResumeSceneTimers(WaveEngine.Framework.Scene)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: ResumeSceneTimers(Scene)
  nameWithType: TimerFactory.ResumeSceneTimers(Scene)
  fullName: WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers(WaveEngine.Framework.Scene)
  type: Method
  source:
    id: ResumeSceneTimers
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 325
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nResume all scene timers.\n"
  example: []
  syntax:
    content: public void ResumeSceneTimers(Scene scene)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    content.vb: Public Sub ResumeSceneTimers(scene As Scene)
  overload: WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: TimerFactory was disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers(WaveEngine.Framework.Scene)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers(WaveEngine.Framework.Scene)
  id: RemoveSceneTimers(WaveEngine.Framework.Scene)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: RemoveSceneTimers(Scene)
  nameWithType: TimerFactory.RemoveSceneTimers(Scene)
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers(WaveEngine.Framework.Scene)
  type: Method
  source:
    id: RemoveSceneTimers
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 355
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRemoves all scene timers.\n"
  example: []
  syntax:
    content: public void RemoveSceneTimers(Scene scene)
    parameters:
    - id: scene
      type: WaveEngine.Framework.Scene
      description: The scene.
    content.vb: Public Sub RemoveSceneTimers(scene As Scene)
  overload: WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: TimerFactory was disposed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String,System.TimeSpan)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String,System.TimeSpan)
  id: UpdateTimer(System.String,System.TimeSpan)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: UpdateTimer(String, TimeSpan)
  nameWithType: TimerFactory.UpdateTimer(String, TimeSpan)
  fullName: WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String, System.TimeSpan)
  type: Method
  source:
    id: UpdateTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 393
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nUpdates a timer.\n"
  example: []
  syntax:
    content: public void UpdateTimer(string name, TimeSpan interval)
    parameters:
    - id: name
      type: System.String
      description: The name of the timer to update.
    - id: interval
      type: System.TimeSpan
      description: The new interval between each timer firing.
    content.vb: Public Sub UpdateTimer(name As String, interval As TimeSpan)
  overload: WaveEngine.Framework.Services.TimerFactory.UpdateTimer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If name is null or empty.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String,System.TimeSpan,System.Action)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String,System.TimeSpan,System.Action)
  id: UpdateTimer(System.String,System.TimeSpan,System.Action)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: UpdateTimer(String, TimeSpan, Action)
  nameWithType: TimerFactory.UpdateTimer(String, TimeSpan, Action)
  fullName: WaveEngine.Framework.Services.TimerFactory.UpdateTimer(System.String, System.TimeSpan, System.Action)
  type: Method
  source:
    id: UpdateTimer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 420
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nUpdates a timer.\n"
  example: []
  syntax:
    content: public void UpdateTimer(string name, TimeSpan interval, Action action)
    parameters:
    - id: name
      type: System.String
      description: The name of the timer to update.
    - id: interval
      type: System.TimeSpan
      description: The new interval between each timer firing.
    - id: action
      type: System.Action
      description: The action to execute when the timer fires.
    content.vb: Public Sub UpdateTimer(name As String, interval As TimeSpan, action As Action)
  overload: WaveEngine.Framework.Services.TimerFactory.UpdateTimer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If name is null or empty.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If action is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Services.TimerFactory.Update(System.TimeSpan)
  commentId: M:WaveEngine.Framework.Services.TimerFactory.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: TimerFactory.Update(TimeSpan)
  fullName: WaveEngine.Framework.Services.TimerFactory.Update(System.TimeSpan)
  type: Method
  source:
    id: Update
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 449
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nUpdates this instance.\n"
  example: []
  syntax:
    content: public override void Update(TimeSpan gameTime)
    parameters:
    - id: gameTime
      type: System.TimeSpan
      description: The elapsed game time since the last update.
    content.vb: Public Overrides Sub Update(gameTime As TimeSpan)
  overridden: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  overload: WaveEngine.Framework.Services.TimerFactory.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Framework.Services.TimerFactory.Dispose
  commentId: M:WaveEngine.Framework.Services.TimerFactory.Dispose
  id: Dispose
  parent: WaveEngine.Framework.Services.TimerFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TimerFactory.Dispose()
  fullName: WaveEngine.Framework.Services.TimerFactory.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\TimerFactory.cs
    startLine: 519
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: WaveEngine.Framework.Services.TimerFactory.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Services.Timer
  commentId: T:WaveEngine.Framework.Services.Timer
  parent: WaveEngine.Framework.Services
  name: Timer
  nameWithType: Timer
  fullName: WaveEngine.Framework.Services.Timer
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.IO.SerializableObject
  commentId: T:WaveEngine.Common.IO.SerializableObject
  parent: WaveEngine.Common.IO
  name: SerializableObject
  nameWithType: SerializableObject
  fullName: WaveEngine.Common.IO.SerializableObject
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: WaveEngine.Common.UpdatableService
  commentId: T:WaveEngine.Common.UpdatableService
  parent: WaveEngine.Common
  name: UpdatableService
  nameWithType: UpdatableService
  fullName: WaveEngine.Common.UpdatableService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: WaveEngine.Common.Service.IsInitialized
  commentId: P:WaveEngine.Common.Service.IsInitialized
  parent: WaveEngine.Common.Service
  name: IsInitialized
  nameWithType: Service.IsInitialized
  fullName: WaveEngine.Common.Service.IsInitialized
- uid: WaveEngine.Common.Service.IsTerminated
  commentId: P:WaveEngine.Common.Service.IsTerminated
  parent: WaveEngine.Common.Service
  name: IsTerminated
  nameWithType: Service.IsTerminated
  fullName: WaveEngine.Common.Service.IsTerminated
- uid: WaveEngine.Common.Service.BaseInitialize
  commentId: M:WaveEngine.Common.Service.BaseInitialize
  parent: WaveEngine.Common.Service
  name: BaseInitialize()
  nameWithType: Service.BaseInitialize()
  fullName: WaveEngine.Common.Service.BaseInitialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseInitialize
    name: BaseInitialize
    nameWithType: Service.BaseInitialize
    fullName: WaveEngine.Common.Service.BaseInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.BaseTerminate
  commentId: M:WaveEngine.Common.Service.BaseTerminate
  parent: WaveEngine.Common.Service
  name: BaseTerminate()
  nameWithType: Service.BaseTerminate()
  fullName: WaveEngine.Common.Service.BaseTerminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.BaseTerminate
    name: BaseTerminate
    nameWithType: Service.BaseTerminate
    fullName: WaveEngine.Common.Service.BaseTerminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnActivated
  commentId: M:WaveEngine.Common.Service.OnActivated
  parent: WaveEngine.Common.Service
  name: OnActivated()
  nameWithType: Service.OnActivated()
  fullName: WaveEngine.Common.Service.OnActivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnActivated
    name: OnActivated
    nameWithType: Service.OnActivated
    fullName: WaveEngine.Common.Service.OnActivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Service.OnDeactivated
  commentId: M:WaveEngine.Common.Service.OnDeactivated
  parent: WaveEngine.Common.Service
  name: OnDeactivated()
  nameWithType: Service.OnDeactivated()
  fullName: WaveEngine.Common.Service.OnDeactivated()
  spec.csharp:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.OnDeactivated
    name: OnDeactivated
    nameWithType: Service.OnDeactivated
    fullName: WaveEngine.Common.Service.OnDeactivated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
  commentId: M:WaveEngine.Common.IO.SerializableObject.DefaultValues
  parent: WaveEngine.Common.IO.SerializableObject
  name: DefaultValues()
  nameWithType: SerializableObject.DefaultValues()
  fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues()
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.DefaultValues
    name: DefaultValues
    nameWithType: SerializableObject.DefaultValues
    fullName: WaveEngine.Common.IO.SerializableObject.DefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: WaveEngine.Common.IO.SerializableObject
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: SerializableObject.OnDeserializing(StreamingContext)
  fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.IO.SerializableObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: SerializableObject.OnDeserializing
    fullName: WaveEngine.Common.IO.SerializableObject.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.IO
  commentId: N:WaveEngine.Common.IO
  name: WaveEngine.Common.IO
  nameWithType: WaveEngine.Common.IO
  fullName: WaveEngine.Common.IO
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Services.TimerFactory
  commentId: T:WaveEngine.Framework.Services.TimerFactory
  parent: WaveEngine.Framework.Services
  name: TimerFactory
  nameWithType: TimerFactory
  fullName: WaveEngine.Framework.Services.TimerFactory
- uid: WaveEngine.Framework.Services.TimerFactory.Finalize*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.Finalize
  name: Finalize
  nameWithType: TimerFactory.Finalize
  fullName: WaveEngine.Framework.Services.TimerFactory.Finalize
- uid: WaveEngine.Common.Service.Initialize
  commentId: M:WaveEngine.Common.Service.Initialize
  parent: WaveEngine.Common.Service
  name: Initialize()
  nameWithType: Service.Initialize()
  fullName: WaveEngine.Common.Service.Initialize()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Initialize
    name: Initialize
    nameWithType: Service.Initialize
    fullName: WaveEngine.Common.Service.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.TimerFactory.Initialize*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.Initialize
  name: Initialize
  nameWithType: TimerFactory.Initialize
  fullName: WaveEngine.Framework.Services.TimerFactory.Initialize
- uid: WaveEngine.Common.Service.Terminate
  commentId: M:WaveEngine.Common.Service.Terminate
  parent: WaveEngine.Common.Service
  name: Terminate()
  nameWithType: Service.Terminate()
  fullName: WaveEngine.Common.Service.Terminate()
  spec.csharp:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Service.Terminate
    name: Terminate
    nameWithType: Service.Terminate
    fullName: WaveEngine.Common.Service.Terminate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.TimerFactory.Terminate*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.Terminate
  name: Terminate
  nameWithType: TimerFactory.Terminate
  fullName: WaveEngine.Framework.Services.TimerFactory.Terminate
- uid: WaveEngine.Framework.Services.TimerFactory.CreateTimer*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.CreateTimer
  name: CreateTimer
  nameWithType: TimerFactory.CreateTimer
  fullName: WaveEngine.Framework.Services.TimerFactory.CreateTimer
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.Scene
  commentId: T:WaveEngine.Framework.Scene
  parent: WaveEngine.Framework
  name: Scene
  nameWithType: Scene
  fullName: WaveEngine.Framework.Scene
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveTimer*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.RemoveTimer
  name: RemoveTimer
  nameWithType: TimerFactory.RemoveTimer
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveTimer
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers
  name: RemoveAllTimers
  nameWithType: TimerFactory.RemoveAllTimers
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveAllTimers
- uid: WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers
  name: PauseSceneTimers
  nameWithType: TimerFactory.PauseSceneTimers
  fullName: WaveEngine.Framework.Services.TimerFactory.PauseSceneTimers
- uid: WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers
  name: ResumeSceneTimers
  nameWithType: TimerFactory.ResumeSceneTimers
  fullName: WaveEngine.Framework.Services.TimerFactory.ResumeSceneTimers
- uid: WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers
  name: RemoveSceneTimers
  nameWithType: TimerFactory.RemoveSceneTimers
  fullName: WaveEngine.Framework.Services.TimerFactory.RemoveSceneTimers
- uid: WaveEngine.Framework.Services.TimerFactory.UpdateTimer*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.UpdateTimer
  name: UpdateTimer
  nameWithType: TimerFactory.UpdateTimer
  fullName: WaveEngine.Framework.Services.TimerFactory.UpdateTimer
- uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  commentId: M:WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  parent: WaveEngine.Common.UpdatableService
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: UpdatableService.Update(TimeSpan)
  fullName: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
  spec.csharp:
  - uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
    name: Update
    nameWithType: UpdatableService.Update
    fullName: WaveEngine.Common.UpdatableService.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.UpdatableService.Update(System.TimeSpan)
    name: Update
    nameWithType: UpdatableService.Update
    fullName: WaveEngine.Common.UpdatableService.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Services.TimerFactory.Update*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.Update
  name: Update
  nameWithType: TimerFactory.Update
  fullName: WaveEngine.Framework.Services.TimerFactory.Update
- uid: WaveEngine.Framework.Services.TimerFactory.Dispose*
  commentId: Overload:WaveEngine.Framework.Services.TimerFactory.Dispose
  name: Dispose
  nameWithType: TimerFactory.Dispose
  fullName: WaveEngine.Framework.Services.TimerFactory.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
