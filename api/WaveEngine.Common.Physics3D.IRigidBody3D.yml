### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics3D.IRigidBody3D
  commentId: T:WaveEngine.Common.Physics3D.IRigidBody3D
  id: IRigidBody3D
  parent: WaveEngine.Common.Physics3D
  children:
  - WaveEngine.Common.Physics3D.IRigidBody3D.Aabb
  - WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState
  - WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping
  - WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor
  - WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold
  - WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping(System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition
  - WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform
  - WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces
  - WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit(System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body(System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World(System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint(WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.Gravity
  - WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities(System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal
  - WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld
  - WaveEngine.Common.Physics3D.IRigidBody3D.InvMass
  - WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld
  - WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject
  - WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject
  - WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping
  - WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor
  - WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold
  - WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity
  - WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia
  - WaveEngine.Common.Physics3D.IRigidBody3D.Mass
  - WaveEngine.Common.Physics3D.IRigidBody3D.Orientation
  - WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty(System.Single,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping(System.Single,System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds(System.Single,System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce
  - WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque
  - WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation(System.Single)
  - WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor
  - WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp
  - WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping
  langs:
  - csharp
  - vb
  name: IRigidBody3D
  nameWithType: IRigidBody3D
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D
  type: Interface
  source:
    id: IRigidBody3D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 50
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nInterface for RigidBody of 3D physics.\n"
  example: []
  syntax:
    content: 'public interface IRigidBody3D : IPhysicBody3D'
    content.vb: >-
      Public Interface IRigidBody3D

          Inherits IPhysicBody3D
  inheritedMembers:
  - WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  - WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  - WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  - WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  - WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  - WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  - WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  - WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  - WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  - WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  - WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  - WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  - WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  - WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState
  id: ActivationState
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ActivationState
  nameWithType: IRigidBody3D.ActivationState
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState
  type: Property
  source:
    id: ActivationState
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 55
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the activation state\n"
  example: []
  syntax:
    content: ActivationState ActivationState { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics3D.ActivationState
    content.vb: Property ActivationState As ActivationState
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Mass
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.Mass
  id: Mass
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: IRigidBody3D.Mass
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Mass
  type: Property
  source:
    id: Mass
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 60
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the mass of the rigid body;\n"
  example: []
  syntax:
    content: float Mass { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Mass As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.Mass*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Gravity
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.Gravity
  id: Gravity
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: IRigidBody3D.Gravity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Gravity
  type: Property
  source:
    id: Gravity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 65
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the gravity applied to that rigid body\n"
  example: []
  syntax:
    content: Vector3 Gravity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property Gravity As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.Gravity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping
  id: LinearDamping
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: LinearDamping
  nameWithType: IRigidBody3D.LinearDamping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping
  type: Property
  source:
    id: LinearDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 71
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the Linear damping is use to reduce the linear velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: float LinearDamping { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property LinearDamping As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping
  id: AngularDamping
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: AngularDamping
  nameWithType: IRigidBody3D.AngularDamping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping
  type: Property
  source:
    id: AngularDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 77
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the Angular damping is use to reduce the angular velocity.\n<remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>\n"
  example: []
  syntax:
    content: float AngularDamping { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property AngularDamping As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold
  id: LinearSleepingThreshold
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: LinearSleepingThreshold
  nameWithType: IRigidBody3D.LinearSleepingThreshold
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold
  type: Property
  source:
    id: LinearSleepingThreshold
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 82
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the sleeping threshold for linear velocity\n"
  example: []
  syntax:
    content: float LinearSleepingThreshold { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property LinearSleepingThreshold As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold
  id: AngularSleepingThreshold
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: AngularSleepingThreshold
  nameWithType: IRigidBody3D.AngularSleepingThreshold
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold
  type: Property
  source:
    id: AngularSleepingThreshold
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 87
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the sleeping threshold for angular velocity\n"
  example: []
  syntax:
    content: float AngularSleepingThreshold { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property AngularSleepingThreshold As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity
  id: LinearVelocity
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: IRigidBody3D.LinearVelocity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity
  type: Property
  source:
    id: LinearVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 92
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the linear velocity\n"
  example: []
  syntax:
    content: Vector3 LinearVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property LinearVelocity As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity
  id: AngularVelocity
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: IRigidBody3D.AngularVelocity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity
  type: Property
  source:
    id: AngularVelocity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 97
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the angular velocity\n"
  example: []
  syntax:
    content: Vector3 AngularVelocity { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property AngularVelocity As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.InvMass
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.InvMass
  id: InvMass
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: InvMass
  nameWithType: IRigidBody3D.InvMass
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.InvMass
  type: Property
  source:
    id: InvMass
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 102
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the inverse of the mass\n"
  example: []
  syntax:
    content: float InvMass { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property InvMass As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.InvMass*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld
  id: InvInertiaTensorWorld
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: InvInertiaTensorWorld
  nameWithType: IRigidBody3D.InvInertiaTensorWorld
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld
  type: Property
  source:
    id: InvInertiaTensorWorld
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 107
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the Inverse vector of the inertia tensor of the world\n"
  example: []
  syntax:
    content: Matrix InvInertiaTensorWorld { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
    content.vb: ReadOnly Property InvInertiaTensorWorld As Matrix
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform
  id: CenterOfMassTransform
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: CenterOfMassTransform
  nameWithType: IRigidBody3D.CenterOfMassTransform
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform
  type: Property
  source:
    id: CenterOfMassTransform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 112
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the center of mass transformation\n"
  example: []
  syntax:
    content: Matrix CenterOfMassTransform { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Matrix
    content.vb: Property CenterOfMassTransform As Matrix
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition
  id: CenterOfMassPosition
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: CenterOfMassPosition
  nameWithType: IRigidBody3D.CenterOfMassPosition
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition
  type: Property
  source:
    id: CenterOfMassPosition
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 117
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the center of mass position\n"
  example: []
  syntax:
    content: Vector3 CenterOfMassPosition { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: ReadOnly Property CenterOfMassPosition As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce
  id: TotalForce
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: TotalForce
  nameWithType: IRigidBody3D.TotalForce
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce
  type: Property
  source:
    id: TotalForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 122
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the total force applied to the rigid body\n"
  example: []
  syntax:
    content: Vector3 TotalForce { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: ReadOnly Property TotalForce As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque
  id: TotalTorque
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: TotalTorque
  nameWithType: IRigidBody3D.TotalTorque
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque
  type: Property
  source:
    id: TotalTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 127
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the total torque applied to the rigid body\n"
  example: []
  syntax:
    content: Vector3 TotalTorque { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: ReadOnly Property TotalTorque As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal
  id: InvInertiaDiagLocal
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: InvInertiaDiagLocal
  nameWithType: IRigidBody3D.InvInertiaDiagLocal
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal
  type: Property
  source:
    id: InvInertiaDiagLocal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 132
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the InvInertiaDiagLocal vector of the rigid body\n"
  example: []
  syntax:
    content: Vector3 InvInertiaDiagLocal { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property InvInertiaDiagLocal As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Orientation
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.Orientation
  id: Orientation
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: IRigidBody3D.Orientation
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Orientation
  type: Property
  source:
    id: Orientation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 137
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the orientation\n"
  example: []
  syntax:
    content: Quaternion Orientation { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Quaternion
    content.vb: ReadOnly Property Orientation As Quaternion
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.Orientation*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Aabb
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.Aabb
  id: Aabb
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: Aabb
  nameWithType: IRigidBody3D.Aabb
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Aabb
  type: Property
  source:
    id: Aabb
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 142
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the bounding box\n"
  example: []
  syntax:
    content: BoundingBox Aabb { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.BoundingBox
    content.vb: ReadOnly Property Aabb As BoundingBox
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.Aabb*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor
  id: LinearFactor
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: LinearFactor
  nameWithType: IRigidBody3D.LinearFactor
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor
  type: Property
  source:
    id: LinearFactor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 147
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the linear factor\n"
  example: []
  syntax:
    content: Vector3 LinearFactor { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property LinearFactor As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor
  id: AngularFactor
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: AngularFactor
  nameWithType: IRigidBody3D.AngularFactor
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor
  type: Property
  source:
    id: AngularFactor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 152
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets or sets the angular factor\n"
  example: []
  syntax:
    content: Vector3 AngularFactor { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: Property AngularFactor As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia
  id: LocalInertia
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: LocalInertia
  nameWithType: IRigidBody3D.LocalInertia
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia
  type: Property
  source:
    id: LocalInertia
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 157
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the local inertia\n"
  example: []
  syntax:
    content: Vector3 LocalInertia { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector3
    content.vb: ReadOnly Property LocalInertia As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld
  id: IsInWorld
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: IsInWorld
  nameWithType: IRigidBody3D.IsInWorld
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld
  type: Property
  source:
    id: IsInWorld
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 162
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets a value indicating whether this body is in the world\n"
  example: []
  syntax:
    content: bool IsInWorld { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsInWorld As Boolean
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp
  id: WakeUp
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: WakeUp()
  nameWithType: IRigidBody3D.WakeUp()
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp()
  type: Method
  source:
    id: WakeUp
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 167
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nWake up the rigid body\n"
  example: []
  syntax:
    content: void WakeUp()
    content.vb: Sub WakeUp
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty(System.Single,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty(System.Single,WaveEngine.Common.Math.Vector3)
  id: ResetMassProperty(System.Single,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ResetMassProperty(Single, Vector3)
  nameWithType: IRigidBody3D.ResetMassProperty(Single, Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty(System.Single, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ResetMassProperty
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 174
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nReset the mass property\n"
  example: []
  syntax:
    content: void ResetMassProperty(float mass, Vector3 inertia)
    parameters:
    - id: mass
      type: System.Single
      description: The mass
    - id: inertia
      type: WaveEngine.Common.Math.Vector3
      description: The inertia
    content.vb: Sub ResetMassProperty(mass As Single, inertia As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity
  id: ApplyGravity
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyGravity()
  nameWithType: IRigidBody3D.ApplyGravity()
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity()
  type: Method
  source:
    id: ApplyGravity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 179
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply the gravity\n"
  example: []
  syntax:
    content: void ApplyGravity()
    content.vb: Sub ApplyGravity
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping(System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping(System.Single)
  id: ApplyDamping(System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyDamping(Single)
  nameWithType: IRigidBody3D.ApplyDamping(Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping(System.Single)
  type: Method
  source:
    id: ApplyDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 185
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply the damping\n"
  example: []
  syntax:
    content: void ApplyDamping(float step)
    parameters:
    - id: step
      type: System.Single
      description: Delta time.
    content.vb: Sub ApplyDamping(step As Single)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities(System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities(System.Single)
  id: IntegrateVelocities(System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: IntegrateVelocities(Single)
  nameWithType: IRigidBody3D.IntegrateVelocities(Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities(System.Single)
  type: Method
  source:
    id: IntegrateVelocities
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 191
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nIntegrate velocities\n"
  example: []
  syntax:
    content: void IntegrateVelocities(float step)
    parameters:
    - id: step
      type: System.Single
      description: Delta time.
    content.vb: Sub IntegrateVelocities(step As Single)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce(WaveEngine.Common.Math.Vector3)
  id: ApplyCentralForce(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyCentralForce(Vector3)
  nameWithType: IRigidBody3D.ApplyCentralForce(Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyCentralForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 197
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply a central force to the rigid body\n"
  example: []
  syntax:
    content: void ApplyCentralForce(Vector3 force)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector3
      description: The force
    content.vb: Sub ApplyCentralForce(force As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  id: ApplyTorque(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyTorque(Vector3)
  nameWithType: IRigidBody3D.ApplyTorque(Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyTorque
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 203
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply a torque force to the rigid body\n"
  example: []
  syntax:
    content: void ApplyTorque(Vector3 torque)
    parameters:
    - id: torque
      type: WaveEngine.Common.Math.Vector3
      description: The torque
    content.vb: Sub ApplyTorque(torque As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: ApplyForce(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyForce(Vector3, Vector3)
  nameWithType: IRigidBody3D.ApplyForce(Vector3, Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyForce
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 210
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply a force to the rigid body\n"
  example: []
  syntax:
    content: void ApplyForce(Vector3 force, Vector3 relativePosition)
    parameters:
    - id: force
      type: WaveEngine.Common.Math.Vector3
      description: The force vector
    - id: relativePosition
      type: WaveEngine.Common.Math.Vector3
      description: Relative poosition of the point where the force will be applied
    content.vb: Sub ApplyForce(force As Vector3, relativePosition As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse(WaveEngine.Common.Math.Vector3)
  id: ApplyCentralImpulse(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyCentralImpulse(Vector3)
  nameWithType: IRigidBody3D.ApplyCentralImpulse(Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyCentralImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 216
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply an impulse to the center of the rigid body\n"
  example: []
  syntax:
    content: void ApplyCentralImpulse(Vector3 impulse)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: The impulse
    content.vb: Sub ApplyCentralImpulse(impulse As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  id: ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyTorqueImpulse(Vector3)
  nameWithType: IRigidBody3D.ApplyTorqueImpulse(Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyTorqueImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 222
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply torque impulse to the rigid body\n"
  example: []
  syntax:
    content: void ApplyTorqueImpulse(Vector3 torque)
    parameters:
    - id: torque
      type: WaveEngine.Common.Math.Vector3
      description: The torque impulse
    content.vb: Sub ApplyTorqueImpulse(torque As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: ApplyImpulse(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ApplyImpulse(Vector3, Vector3)
  nameWithType: IRigidBody3D.ApplyImpulse(Vector3, Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ApplyImpulse
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 229
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nApply an impulse to the rigid body\n"
  example: []
  syntax:
    content: void ApplyImpulse(Vector3 impulse, Vector3 relativePosition)
    parameters:
    - id: impulse
      type: WaveEngine.Common.Math.Vector3
      description: The impulse
    - id: relativePosition
      type: WaveEngine.Common.Math.Vector3
      description: Relative poosition of the point where the force will be applied
    content.vb: Sub ApplyImpulse(impulse As Vector3, relativePosition As Vector3)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces
  id: ClearForces
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ClearForces()
  nameWithType: IRigidBody3D.ClearForces()
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces()
  type: Method
  source:
    id: ClearForces
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 234
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nClear all forces applied to the rigid body\n"
  example: []
  syntax:
    content: void ClearForces()
    content.vb: Sub ClearForces
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor
  id: UpdateInertiaTensor
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: UpdateInertiaTensor()
  nameWithType: IRigidBody3D.UpdateInertiaTensor()
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor()
  type: Method
  source:
    id: UpdateInertiaTensor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 239
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nUpdate the inertia tensor\n"
  example: []
  syntax:
    content: void UpdateInertiaTensor()
    content.vb: Sub UpdateInertiaTensor
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint(WaveEngine.Common.Math.Vector3)
  id: GetVelocityInLocalPoint(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: GetVelocityInLocalPoint(Vector3)
  nameWithType: IRigidBody3D.GetVelocityInLocalPoint(Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: GetVelocityInLocalPoint
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 246
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets the velocity in a local point of the rigid body\n"
  example: []
  syntax:
    content: Vector3 GetVelocityInLocalPoint(Vector3 relativePosition)
    parameters:
    - id: relativePosition
      type: WaveEngine.Common.Math.Vector3
      description: The relative position
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The velocity in the specified point
    content.vb: Function GetVelocityInLocalPoint(relativePosition As Vector3) As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  id: ComputeImpulseDenominator(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ComputeImpulseDenominator(Vector3, Vector3)
  nameWithType: IRigidBody3D.ComputeImpulseDenominator(Vector3, Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ComputeImpulseDenominator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 254
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nCompute impulse dominator\n"
  example: []
  syntax:
    content: float ComputeImpulseDenominator(Vector3 pos, Vector3 normal)
    parameters:
    - id: pos
      type: WaveEngine.Common.Math.Vector3
      description: The position
    - id: normal
      type: WaveEngine.Common.Math.Vector3
      description: The normal
    return:
      type: System.Single
      description: The impulse denominator
    content.vb: Function ComputeImpulseDenominator(pos As Vector3, normal As Vector3) As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator(WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator(WaveEngine.Common.Math.Vector3)
  id: ComputeAngularImpulseDenominator(WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ComputeAngularImpulseDenominator(Vector3)
  nameWithType: IRigidBody3D.ComputeAngularImpulseDenominator(Vector3)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator(WaveEngine.Common.Math.Vector3)
  type: Method
  source:
    id: ComputeAngularImpulseDenominator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 261
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nCompute the angular impulse denominator\n"
  example: []
  syntax:
    content: float ComputeAngularImpulseDenominator(Vector3 axis)
    parameters:
    - id: axis
      type: WaveEngine.Common.Math.Vector3
      description: The axis
    return:
      type: System.Single
      description: The angular impulse denominator
    content.vb: Function ComputeAngularImpulseDenominator(axis As Vector3) As Single
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation(System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation(System.Single)
  id: UpdateDeactivation(System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: UpdateDeactivation(Single)
  nameWithType: IRigidBody3D.UpdateDeactivation(Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation(System.Single)
  type: Method
  source:
    id: UpdateDeactivation
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 267
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nUpdate the deactivation\n"
  example: []
  syntax:
    content: void UpdateDeactivation(float step)
    parameters:
    - id: step
      type: System.Single
      description: The time step
    content.vb: Sub UpdateDeactivation(step As Single)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping
  id: WantsSleeping
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: WantsSleeping()
  nameWithType: IRigidBody3D.WantsSleeping()
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping()
  type: Method
  source:
    id: WantsSleeping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 273
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nReturn if the entity need to sleep\n"
  example: []
  syntax:
    content: bool WantsSleeping()
    return:
      type: System.Boolean
      description: The rigid body need to sleep
    content.vb: Function WantsSleeping As Boolean
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World(System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World(System.Single)
  id: ComputeGyroscopicImpulseImplicit_World(System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ComputeGyroscopicImpulseImplicit_World(Single)
  nameWithType: IRigidBody3D.ComputeGyroscopicImpulseImplicit_World(Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World(System.Single)
  type: Method
  source:
    id: ComputeGyroscopicImpulseImplicit_World
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 280
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nCompute the gyrocsopic impulse implicit by world\n"
  example: []
  syntax:
    content: Vector3 ComputeGyroscopicImpulseImplicit_World(float step)
    parameters:
    - id: step
      type: System.Single
      description: The step
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The Gyroscopic impulse
    content.vb: Function ComputeGyroscopicImpulseImplicit_World(step As Single) As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body(System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body(System.Single)
  id: ComputeGyroscopicImpulseImplicit_Body(System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ComputeGyroscopicImpulseImplicit_Body(Single)
  nameWithType: IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body(Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body(System.Single)
  type: Method
  source:
    id: ComputeGyroscopicImpulseImplicit_Body
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 287
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nCompute the gyrocsopic impulse implicit by Body\n"
  example: []
  syntax:
    content: Vector3 ComputeGyroscopicImpulseImplicit_Body(float step)
    parameters:
    - id: step
      type: System.Single
      description: The step
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The Gyroscopic impulse
    content.vb: Function ComputeGyroscopicImpulseImplicit_Body(step As Single) As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit(System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit(System.Single)
  id: ComputeGyroscopicForceExplicit(System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: ComputeGyroscopicForceExplicit(Single)
  nameWithType: IRigidBody3D.ComputeGyroscopicForceExplicit(Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit(System.Single)
  type: Method
  source:
    id: ComputeGyroscopicForceExplicit
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 294
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nCompute the gyrocsopic impulse implicit\n"
  example: []
  syntax:
    content: Vector3 ComputeGyroscopicForceExplicit(float step)
    parameters:
    - id: step
      type: System.Single
      description: The step
    return:
      type: WaveEngine.Common.Math.Vector3
      description: The Gyroscopic impulse
    content.vb: Function ComputeGyroscopicForceExplicit(step As Single) As Vector3
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping(System.Single,System.Single)
  id: SetDamping(System.Single,System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: SetDamping(Single, Single)
  nameWithType: IRigidBody3D.SetDamping(Single, Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping(System.Single, System.Single)
  type: Method
  source:
    id: SetDamping
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 301
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nSet Damping values\n"
  example: []
  syntax:
    content: void SetDamping(float linearDamping, float angularDamping)
    parameters:
    - id: linearDamping
      type: System.Single
      description: Linear damping value
    - id: angularDamping
      type: System.Single
      description: Angular damping value
    content.vb: Sub SetDamping(linearDamping As Single, angularDamping As Single)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds(System.Single,System.Single)
  id: SetSleepingThresholds(System.Single,System.Single)
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: SetSleepingThresholds(Single, Single)
  nameWithType: IRigidBody3D.SetSleepingThresholds(Single, Single)
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds(System.Single, System.Single)
  type: Method
  source:
    id: SetSleepingThresholds
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 308
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nSet sleeping threshold values\n"
  example: []
  syntax:
    content: void SetSleepingThresholds(float linear, float angular)
    parameters:
    - id: linear
      type: System.Single
      description: Linear threshold value
    - id: angular
      type: System.Single
      description: Angular threshold value
    content.vb: Sub SetSleepingThresholds(linear As Single, angular As Single)
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds*
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject
  id: IsKinematicObject
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: IsKinematicObject
  nameWithType: IRigidBody3D.IsKinematicObject
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject
  type: Property
  source:
    id: IsKinematicObject
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 313
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets a value indicating whether this body is kinematic\n"
  example: []
  syntax:
    content: bool IsKinematicObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsKinematicObject As Boolean
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject
  commentId: P:WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject
  id: IsStaticOrKinematicObject
  parent: WaveEngine.Common.Physics3D.IRigidBody3D
  langs:
  - csharp
  - vb
  name: IsStaticOrKinematicObject
  nameWithType: IRigidBody3D.IsStaticOrKinematicObject
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject
  type: Property
  source:
    id: IsStaticOrKinematicObject
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics3D\Body\IRigidBody3D.cs
    startLine: 318
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics3D
  summary: "\nGets a value indicating whether this body is kinematic or kinematic\n"
  example: []
  syntax:
    content: bool IsStaticOrKinematicObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsStaticOrKinematicObject As Boolean
  overload: WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: WaveEngine.Common.Physics3D
  commentId: N:WaveEngine.Common.Physics3D
  name: WaveEngine.Common.Physics3D
  nameWithType: WaveEngine.Common.Physics3D
  fullName: WaveEngine.Common.Physics3D
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: UserData
  nameWithType: IPhysicBody3D.UserData
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.UserData
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: InternalBody
  nameWithType: IPhysicBody3D.InternalBody
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InternalBody
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: IsSensor
  nameWithType: IPhysicBody3D.IsSensor
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsSensor
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: Friction
  nameWithType: IPhysicBody3D.Friction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Friction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: Restitution
  nameWithType: IPhysicBody3D.Restitution
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Restitution
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: Flags
  nameWithType: IPhysicBody3D.Flags
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Flags
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: CollisionCategories
  nameWithType: IPhysicBody3D.CollisionCategories
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CollisionCategories
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: MaskBits
  nameWithType: IPhysicBody3D.MaskBits
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.MaskBits
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: ColliderShapes
  nameWithType: IPhysicBody3D.ColliderShapes
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ColliderShapes
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: Transform
  nameWithType: IPhysicBody3D.Transform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.Transform
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: AddColliderShape(IColliderShape3D)
  nameWithType: IPhysicBody3D.AddColliderShape(IColliderShape3D)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  spec.csharp:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
    name: AddColliderShape
    nameWithType: IPhysicBody3D.AddColliderShape
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics3D.IColliderShape3D
    name: IColliderShape3D
    nameWithType: IColliderShape3D
    fullName: WaveEngine.Common.Physics3D.IColliderShape3D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
    name: AddColliderShape
    nameWithType: IPhysicBody3D.AddColliderShape
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AddColliderShape
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics3D.IColliderShape3D
    name: IColliderShape3D
    nameWithType: IColliderShape3D
    fullName: WaveEngine.Common.Physics3D.IColliderShape3D
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: RemoveColliderShape(IColliderShape3D)
  nameWithType: IPhysicBody3D.RemoveColliderShape(IColliderShape3D)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
  spec.csharp:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
    name: RemoveColliderShape
    nameWithType: IPhysicBody3D.RemoveColliderShape
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics3D.IColliderShape3D
    name: IColliderShape3D
    nameWithType: IColliderShape3D
    fullName: WaveEngine.Common.Physics3D.IColliderShape3D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)
    name: RemoveColliderShape
    nameWithType: IPhysicBody3D.RemoveColliderShape
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RemoveColliderShape
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Physics3D.IColliderShape3D
    name: IColliderShape3D
    nameWithType: IColliderShape3D
    fullName: WaveEngine.Common.Physics3D.IColliderShape3D
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  isExternal: true
  name: GetColliderShapeByIndex(Int32)
  nameWithType: IPhysicBody3D.GetColliderShapeByIndex(Int32)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
  spec.csharp:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
    name: GetColliderShapeByIndex
    nameWithType: IPhysicBody3D.GetColliderShapeByIndex
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex(System.Int32)
    name: GetColliderShapeByIndex
    nameWithType: IPhysicBody3D.GetColliderShapeByIndex
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.GetColliderShapeByIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  commentId: M:WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: SetTransform(Vector3, Quaternion, Vector3)
  nameWithType: IPhysicBody3D.SetTransform(Vector3, Quaternion, Vector3)
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3, WaveEngine.Common.Math.Quaternion, WaveEngine.Common.Math.Vector3)
  spec.csharp:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
    name: SetTransform
    nameWithType: IPhysicBody3D.SetTransform
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: WaveEngine.Common.Math.Quaternion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)
    name: SetTransform
    nameWithType: IPhysicBody3D.SetTransform
    fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SetTransform
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: WaveEngine.Common.Math.Quaternion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: WaveEngine.Common.Math.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: WaveEngine.Common.Math.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: AnisotropicFriction
  nameWithType: IPhysicBody3D.AnisotropicFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.AnisotropicFriction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: CcdMotionThreshold
  nameWithType: IPhysicBody3D.CcdMotionThreshold
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdMotionThreshold
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: CcdSweptSphereRadius
  nameWithType: IPhysicBody3D.CcdSweptSphereRadius
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CcdSweptSphereRadius
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: CompanionId
  nameWithType: IPhysicBody3D.CompanionId
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.CompanionId
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: ContactDamping
  nameWithType: IPhysicBody3D.ContactDamping
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactDamping
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: ContactProcessingThreshold
  nameWithType: IPhysicBody3D.ContactProcessingThreshold
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactProcessingThreshold
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: ContactStiffness
  nameWithType: IPhysicBody3D.ContactStiffness
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.ContactStiffness
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: DeactivationTime
  nameWithType: IPhysicBody3D.DeactivationTime
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.DeactivationTime
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: HasContactResponse
  nameWithType: IPhysicBody3D.HasContactResponse
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.HasContactResponse
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: HitFraction
  nameWithType: IPhysicBody3D.HitFraction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.HitFraction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: InterpolationAngularVelocity
  nameWithType: IPhysicBody3D.InterpolationAngularVelocity
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationAngularVelocity
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: InterpolationLinearVelocity
  nameWithType: IPhysicBody3D.InterpolationLinearVelocity
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationLinearVelocity
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: InterpolationWorldTransform
  nameWithType: IPhysicBody3D.InterpolationWorldTransform
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.InterpolationWorldTransform
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: IsActive
  nameWithType: IPhysicBody3D.IsActive
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsActive
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: IslandTag
  nameWithType: IPhysicBody3D.IslandTag
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IslandTag
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: IsStaticObject
  nameWithType: IPhysicBody3D.IsStaticObject
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.IsStaticObject
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: RollingFriction
  nameWithType: IPhysicBody3D.RollingFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.RollingFriction
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  commentId: P:WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
  parent: WaveEngine.Common.Physics3D.IPhysicBody3D
  name: SpinningFriction
  nameWithType: IPhysicBody3D.SpinningFriction
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D.SpinningFriction
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Physics3D.IPhysicBody3D
  commentId: T:WaveEngine.Common.Physics3D.IPhysicBody3D
  parent: WaveEngine.Common.Physics3D
  name: IPhysicBody3D
  nameWithType: IPhysicBody3D
  fullName: WaveEngine.Common.Physics3D.IPhysicBody3D
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState
  name: ActivationState
  nameWithType: IRigidBody3D.ActivationState
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ActivationState
- uid: WaveEngine.Common.Physics3D.ActivationState
  commentId: T:WaveEngine.Common.Physics3D.ActivationState
  parent: WaveEngine.Common.Physics3D
  name: ActivationState
  nameWithType: ActivationState
  fullName: WaveEngine.Common.Physics3D.ActivationState
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Mass*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.Mass
  name: Mass
  nameWithType: IRigidBody3D.Mass
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Mass
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Gravity*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.Gravity
  name: Gravity
  nameWithType: IRigidBody3D.Gravity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Gravity
- uid: WaveEngine.Common.Math.Vector3
  commentId: T:WaveEngine.Common.Math.Vector3
  parent: WaveEngine.Common.Math
  name: Vector3
  nameWithType: Vector3
  fullName: WaveEngine.Common.Math.Vector3
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping
  name: LinearDamping
  nameWithType: IRigidBody3D.LinearDamping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearDamping
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping
  name: AngularDamping
  nameWithType: IRigidBody3D.AngularDamping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularDamping
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold
  name: LinearSleepingThreshold
  nameWithType: IRigidBody3D.LinearSleepingThreshold
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearSleepingThreshold
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold
  name: AngularSleepingThreshold
  nameWithType: IRigidBody3D.AngularSleepingThreshold
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularSleepingThreshold
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity
  name: LinearVelocity
  nameWithType: IRigidBody3D.LinearVelocity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearVelocity
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity
  name: AngularVelocity
  nameWithType: IRigidBody3D.AngularVelocity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularVelocity
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.InvMass*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.InvMass
  name: InvMass
  nameWithType: IRigidBody3D.InvMass
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.InvMass
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld
  name: InvInertiaTensorWorld
  nameWithType: IRigidBody3D.InvInertiaTensorWorld
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaTensorWorld
- uid: WaveEngine.Common.Math.Matrix
  commentId: T:WaveEngine.Common.Math.Matrix
  parent: WaveEngine.Common.Math
  name: Matrix
  nameWithType: Matrix
  fullName: WaveEngine.Common.Math.Matrix
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform
  name: CenterOfMassTransform
  nameWithType: IRigidBody3D.CenterOfMassTransform
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassTransform
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition
  name: CenterOfMassPosition
  nameWithType: IRigidBody3D.CenterOfMassPosition
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.CenterOfMassPosition
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce
  name: TotalForce
  nameWithType: IRigidBody3D.TotalForce
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.TotalForce
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque
  name: TotalTorque
  nameWithType: IRigidBody3D.TotalTorque
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.TotalTorque
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal
  name: InvInertiaDiagLocal
  nameWithType: IRigidBody3D.InvInertiaDiagLocal
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.InvInertiaDiagLocal
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Orientation*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.Orientation
  name: Orientation
  nameWithType: IRigidBody3D.Orientation
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Orientation
- uid: WaveEngine.Common.Math.Quaternion
  commentId: T:WaveEngine.Common.Math.Quaternion
  parent: WaveEngine.Common.Math
  name: Quaternion
  nameWithType: Quaternion
  fullName: WaveEngine.Common.Math.Quaternion
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.Aabb*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.Aabb
  name: Aabb
  nameWithType: IRigidBody3D.Aabb
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.Aabb
- uid: WaveEngine.Common.Math.BoundingBox
  commentId: T:WaveEngine.Common.Math.BoundingBox
  parent: WaveEngine.Common.Math
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: WaveEngine.Common.Math.BoundingBox
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor
  name: LinearFactor
  nameWithType: IRigidBody3D.LinearFactor
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LinearFactor
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor
  name: AngularFactor
  nameWithType: IRigidBody3D.AngularFactor
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.AngularFactor
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia
  name: LocalInertia
  nameWithType: IRigidBody3D.LocalInertia
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.LocalInertia
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld
  name: IsInWorld
  nameWithType: IRigidBody3D.IsInWorld
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IsInWorld
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp
  name: WakeUp
  nameWithType: IRigidBody3D.WakeUp
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.WakeUp
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty
  name: ResetMassProperty
  nameWithType: IRigidBody3D.ResetMassProperty
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ResetMassProperty
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity
  name: ApplyGravity
  nameWithType: IRigidBody3D.ApplyGravity
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyGravity
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping
  name: ApplyDamping
  nameWithType: IRigidBody3D.ApplyDamping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyDamping
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities
  name: IntegrateVelocities
  nameWithType: IRigidBody3D.IntegrateVelocities
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IntegrateVelocities
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce
  name: ApplyCentralForce
  nameWithType: IRigidBody3D.ApplyCentralForce
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralForce
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque
  name: ApplyTorque
  nameWithType: IRigidBody3D.ApplyTorque
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorque
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce
  name: ApplyForce
  nameWithType: IRigidBody3D.ApplyForce
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyForce
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse
  name: ApplyCentralImpulse
  nameWithType: IRigidBody3D.ApplyCentralImpulse
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyCentralImpulse
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse
  name: ApplyTorqueImpulse
  nameWithType: IRigidBody3D.ApplyTorqueImpulse
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyTorqueImpulse
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse
  name: ApplyImpulse
  nameWithType: IRigidBody3D.ApplyImpulse
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ApplyImpulse
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces
  name: ClearForces
  nameWithType: IRigidBody3D.ClearForces
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ClearForces
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor
  name: UpdateInertiaTensor
  nameWithType: IRigidBody3D.UpdateInertiaTensor
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateInertiaTensor
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint
  name: GetVelocityInLocalPoint
  nameWithType: IRigidBody3D.GetVelocityInLocalPoint
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.GetVelocityInLocalPoint
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator
  name: ComputeImpulseDenominator
  nameWithType: IRigidBody3D.ComputeImpulseDenominator
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeImpulseDenominator
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator
  name: ComputeAngularImpulseDenominator
  nameWithType: IRigidBody3D.ComputeAngularImpulseDenominator
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeAngularImpulseDenominator
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation
  name: UpdateDeactivation
  nameWithType: IRigidBody3D.UpdateDeactivation
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.UpdateDeactivation
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping
  name: WantsSleeping
  nameWithType: IRigidBody3D.WantsSleeping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.WantsSleeping
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World
  name: ComputeGyroscopicImpulseImplicit_World
  nameWithType: IRigidBody3D.ComputeGyroscopicImpulseImplicit_World
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_World
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body
  name: ComputeGyroscopicImpulseImplicit_Body
  nameWithType: IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicImpulseImplicit_Body
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit
  name: ComputeGyroscopicForceExplicit
  nameWithType: IRigidBody3D.ComputeGyroscopicForceExplicit
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.ComputeGyroscopicForceExplicit
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping
  name: SetDamping
  nameWithType: IRigidBody3D.SetDamping
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.SetDamping
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds
  name: SetSleepingThresholds
  nameWithType: IRigidBody3D.SetSleepingThresholds
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.SetSleepingThresholds
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject
  name: IsKinematicObject
  nameWithType: IRigidBody3D.IsKinematicObject
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IsKinematicObject
- uid: WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject*
  commentId: Overload:WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject
  name: IsStaticOrKinematicObject
  nameWithType: IRigidBody3D.IsStaticOrKinematicObject
  fullName: WaveEngine.Common.Physics3D.IRigidBody3D.IsStaticOrKinematicObject
