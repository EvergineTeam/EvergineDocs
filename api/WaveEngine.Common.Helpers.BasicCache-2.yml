### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Helpers.BasicCache`2
  commentId: T:WaveEngine.Common.Helpers.BasicCache`2
  id: BasicCache`2
  parent: WaveEngine.Common.Helpers
  children:
  - WaveEngine.Common.Helpers.BasicCache`2.#ctor
  - WaveEngine.Common.Helpers.BasicCache`2.AddItem(`0,`1)
  - WaveEngine.Common.Helpers.BasicCache`2.Check
  - WaveEngine.Common.Helpers.BasicCache`2.ExpirationTime
  - WaveEngine.Common.Helpers.BasicCache`2.GetItem(`0)
  - WaveEngine.Common.Helpers.BasicCache`2.NewInstanceHandle
  langs:
  - csharp
  - vb
  name: BasicCache<T, K>
  nameWithType: BasicCache<T, K>
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>
  type: Class
  source:
    id: BasicCache
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 16
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nA simple cache implementation.\n"
  example: []
  syntax:
    content: public class BasicCache<T, K>
    typeParameters:
    - id: T
      description: The item key type of the cache
    - id: K
      description: The item value type of the cache
    content.vb: Public Class BasicCache(Of T, K)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  nameWithType.vb: BasicCache(Of T, K)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K)
  name.vb: BasicCache(Of T, K)
- uid: WaveEngine.Common.Helpers.BasicCache`2.ExpirationTime
  commentId: P:WaveEngine.Common.Helpers.BasicCache`2.ExpirationTime
  id: ExpirationTime
  parent: WaveEngine.Common.Helpers.BasicCache`2
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: BasicCache<T, K>.ExpirationTime
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.ExpirationTime
  type: Property
  source:
    id: ExpirationTime
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 55
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nGets or sets the expiration time\n"
  example: []
  syntax:
    content: public TimeSpan ExpirationTime { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ExpirationTime As TimeSpan
  overload: WaveEngine.Common.Helpers.BasicCache`2.ExpirationTime*
  nameWithType.vb: BasicCache(Of T, K).ExpirationTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).ExpirationTime
- uid: WaveEngine.Common.Helpers.BasicCache`2.NewInstanceHandle
  commentId: F:WaveEngine.Common.Helpers.BasicCache`2.NewInstanceHandle
  id: NewInstanceHandle
  parent: WaveEngine.Common.Helpers.BasicCache`2
  langs:
  - csharp
  - vb
  name: NewInstanceHandle
  nameWithType: BasicCache<T, K>.NewInstanceHandle
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.NewInstanceHandle
  type: Field
  source:
    id: NewInstanceHandle
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 60
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nA handle to build a new instance\n"
  example: []
  syntax:
    content: public BasicCache<T, K>.NewItemInstanceDelegate NewInstanceHandle
    return:
      type: WaveEngine.Common.Helpers.BasicCache`2.NewItemInstanceDelegate
    content.vb: Public NewInstanceHandle As BasicCache(Of T, K).NewItemInstanceDelegate
  nameWithType.vb: BasicCache(Of T, K).NewInstanceHandle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).NewInstanceHandle
- uid: WaveEngine.Common.Helpers.BasicCache`2.#ctor
  commentId: M:WaveEngine.Common.Helpers.BasicCache`2.#ctor
  id: '#ctor'
  parent: WaveEngine.Common.Helpers.BasicCache`2
  langs:
  - csharp
  - vb
  name: BasicCache()
  nameWithType: BasicCache<T, K>.BasicCache()
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.BasicCache()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 65
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Helpers.BasicCache%602\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BasicCache()
    content.vb: Public Sub New
  overload: WaveEngine.Common.Helpers.BasicCache`2.#ctor*
  nameWithType.vb: BasicCache(Of T, K).BasicCache()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).BasicCache()
- uid: WaveEngine.Common.Helpers.BasicCache`2.GetItem(`0)
  commentId: M:WaveEngine.Common.Helpers.BasicCache`2.GetItem(`0)
  id: GetItem(`0)
  parent: WaveEngine.Common.Helpers.BasicCache`2
  langs:
  - csharp
  - vb
  name: GetItem(T)
  nameWithType: BasicCache<T, K>.GetItem(T)
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.GetItem(T)
  type: Method
  source:
    id: GetItem
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 77
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nGets an item\n"
  example: []
  syntax:
    content: public K GetItem(T key)
    parameters:
    - id: key
      type: '{T}'
      description: The item key
    return:
      type: '{K}'
      description: The item
    content.vb: Public Function GetItem(key As T) As K
  overload: WaveEngine.Common.Helpers.BasicCache`2.GetItem*
  nameWithType.vb: BasicCache(Of T, K).GetItem(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).GetItem(T)
- uid: WaveEngine.Common.Helpers.BasicCache`2.AddItem(`0,`1)
  commentId: M:WaveEngine.Common.Helpers.BasicCache`2.AddItem(`0,`1)
  id: AddItem(`0,`1)
  parent: WaveEngine.Common.Helpers.BasicCache`2
  langs:
  - csharp
  - vb
  name: AddItem(T, K)
  nameWithType: BasicCache<T, K>.AddItem(T, K)
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.AddItem(T, K)
  type: Method
  source:
    id: AddItem
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 109
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nAdd an item to the cache\n"
  example: []
  syntax:
    content: public void AddItem(T key, K item)
    parameters:
    - id: key
      type: '{T}'
      description: The key
    - id: item
      type: '{K}'
      description: The item
    content.vb: Public Sub AddItem(key As T, item As K)
  overload: WaveEngine.Common.Helpers.BasicCache`2.AddItem*
  nameWithType.vb: BasicCache(Of T, K).AddItem(T, K)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).AddItem(T, K)
- uid: WaveEngine.Common.Helpers.BasicCache`2.Check
  commentId: M:WaveEngine.Common.Helpers.BasicCache`2.Check
  id: Check
  parent: WaveEngine.Common.Helpers.BasicCache`2
  langs:
  - csharp
  - vb
  name: Check()
  nameWithType: BasicCache<T, K>.Check()
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.Check()
  type: Method
  source:
    id: Check
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Helpers\BasicCache`2.cs
    startLine: 127
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Helpers
  summary: "\nCheck if the cache items has expired\n"
  example: []
  syntax:
    content: public void Check()
    content.vb: Public Sub Check
  overload: WaveEngine.Common.Helpers.BasicCache`2.Check*
  nameWithType.vb: BasicCache(Of T, K).Check()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).Check()
references:
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.BasicCache`2.ExpirationTime*
  commentId: Overload:WaveEngine.Common.Helpers.BasicCache`2.ExpirationTime
  name: ExpirationTime
  nameWithType: BasicCache<T, K>.ExpirationTime
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.ExpirationTime
  nameWithType.vb: BasicCache(Of T, K).ExpirationTime
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).ExpirationTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: WaveEngine.Common.Helpers.BasicCache`2.NewItemInstanceDelegate
  commentId: T:WaveEngine.Common.Helpers.BasicCache`2.NewItemInstanceDelegate
  parent: WaveEngine.Common.Helpers
  name: BasicCache.NewItemInstanceDelegate<>
  nameWithType: BasicCache.NewItemInstanceDelegate<>
  fullName: WaveEngine.Common.Helpers.BasicCache.NewItemInstanceDelegate<>
  nameWithType.vb: BasicCache.NewItemInstanceDelegate(Of )
  fullName.vb: WaveEngine.Common.Helpers.BasicCache.NewItemInstanceDelegate(Of )
  name.vb: BasicCache.NewItemInstanceDelegate(Of )
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.BasicCache`2.NewItemInstanceDelegate
    name: BasicCache.NewItemInstanceDelegate
    nameWithType: BasicCache.NewItemInstanceDelegate
    fullName: WaveEngine.Common.Helpers.BasicCache.NewItemInstanceDelegate
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Common.Helpers.BasicCache`2.NewItemInstanceDelegate
    name: BasicCache.NewItemInstanceDelegate
    nameWithType: BasicCache.NewItemInstanceDelegate
    fullName: WaveEngine.Common.Helpers.BasicCache.NewItemInstanceDelegate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.BasicCache`2
  commentId: T:WaveEngine.Common.Helpers.BasicCache`2
  name: BasicCache<T, K>
  nameWithType: BasicCache<T, K>
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>
  nameWithType.vb: BasicCache(Of T, K)
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K)
  name.vb: BasicCache(Of T, K)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.BasicCache`2
    name: BasicCache
    nameWithType: BasicCache
    fullName: WaveEngine.Common.Helpers.BasicCache
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.Common.Helpers.BasicCache`2
    name: BasicCache
    nameWithType: BasicCache
    fullName: WaveEngine.Common.Helpers.BasicCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.BasicCache`2.#ctor*
  commentId: Overload:WaveEngine.Common.Helpers.BasicCache`2.#ctor
  name: BasicCache
  nameWithType: BasicCache<T, K>.BasicCache
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.BasicCache
  nameWithType.vb: BasicCache(Of T, K).BasicCache
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).BasicCache
- uid: WaveEngine.Common.Helpers.BasicCache`2.GetItem*
  commentId: Overload:WaveEngine.Common.Helpers.BasicCache`2.GetItem
  name: GetItem
  nameWithType: BasicCache<T, K>.GetItem
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.GetItem
  nameWithType.vb: BasicCache(Of T, K).GetItem
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).GetItem
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: WaveEngine.Common.Helpers.BasicCache`2.AddItem*
  commentId: Overload:WaveEngine.Common.Helpers.BasicCache`2.AddItem
  name: AddItem
  nameWithType: BasicCache<T, K>.AddItem
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.AddItem
  nameWithType.vb: BasicCache(Of T, K).AddItem
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).AddItem
- uid: WaveEngine.Common.Helpers.BasicCache`2.Check*
  commentId: Overload:WaveEngine.Common.Helpers.BasicCache`2.Check
  name: Check
  nameWithType: BasicCache<T, K>.Check
  fullName: WaveEngine.Common.Helpers.BasicCache<T, K>.Check
  nameWithType.vb: BasicCache(Of T, K).Check
  fullName.vb: WaveEngine.Common.Helpers.BasicCache(Of T, K).Check
