### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D
  commentId: T:WaveEngine.Common.Physics2D.ICollisionInfo2D
  id: ICollisionInfo2D
  parent: WaveEngine.Common.Physics2D
  children:
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.Points
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution
  - WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed
  langs:
  - csharp
  - vb
  name: ICollisionInfo2D
  nameWithType: ICollisionInfo2D
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D
  type: Interface
  source:
    id: ICollisionInfo2D
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 14
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nInterface for a Collider Shape of 2D physics.\n"
  example: []
  syntax:
    content: public interface ICollisionInfo2D
    content.vb: Public Interface ICollisionInfo2D
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled
  id: IsEnabled
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: ICollisionInfo2D.IsEnabled
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled
  type: Property
  source:
    id: IsEnabled
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 21
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets a value indicating whether this contact is enabled. You can disable the contact in contact listener methods\n"
  example: []
  syntax:
    content: bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsEnabled As Boolean
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching
  id: IsTouching
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: IsTouching
  nameWithType: ICollisionInfo2D.IsTouching
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching
  type: Property
  source:
    id: IsTouching
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 26
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets a value indicating whether the two colliders is touching\n"
  example: []
  syntax:
    content: bool IsTouching { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsTouching As Boolean
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction
  id: Friction
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: Friction
  nameWithType: ICollisionInfo2D.Friction
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction
  type: Property
  source:
    id: Friction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 31
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the friction coefficient, usually in the range [0,1].\n"
  example: []
  syntax:
    content: float Friction { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Friction As Single
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution
  id: Restitution
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: Restitution
  nameWithType: ICollisionInfo2D.Restitution
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution
  type: Property
  source:
    id: Restitution
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 36
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the restitution (elasticity) usually in the range [0,1].\n"
  example: []
  syntax:
    content: float Restitution { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Restitution As Single
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed
  id: TangentSpeed
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: TangentSpeed
  nameWithType: ICollisionInfo2D.TangentSpeed
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed
  type: Property
  source:
    id: TangentSpeed
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 41
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets or sets the tangent speed\n"
  example: []
  syntax:
    content: float TangentSpeed { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property TangentSpeed As Single
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed*
  modifiers.csharp:
  - get
  - set
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA
  id: ColliderA
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: ColliderA
  nameWithType: ICollisionInfo2D.ColliderA
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA
  type: Property
  source:
    id: ColliderA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets collider A in this contact.\n"
  example: []
  syntax:
    content: ICollider2D ColliderA { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.ICollider2D
    content.vb: ReadOnly Property ColliderA As ICollider2D
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB
  id: ColliderB
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: ColliderB
  nameWithType: ICollisionInfo2D.ColliderB
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB
  type: Property
  source:
    id: ColliderB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 51
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets collider B in this contact.\n"
  example: []
  syntax:
    content: ICollider2D ColliderB { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Physics2D.ICollider2D
    content.vb: ReadOnly Property ColliderB As ICollider2D
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Points
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.Points
  id: Points
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: ICollisionInfo2D.Points
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Points
  type: Property
  source:
    id: Points
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 56
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the collision points\n"
  example: []
  syntax:
    content: Vector2[] Points { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2[]
    content.vb: ReadOnly Property Points As Vector2()
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.Points*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal
  commentId: P:WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal
  id: Normal
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: ICollisionInfo2D.Normal
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal
  type: Property
  source:
    id: Normal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 61
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nGets the collision normals\n"
  example: []
  syntax:
    content: Vector2 Normal { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: ReadOnly Property Normal As Vector2
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering
  commentId: M:WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering
  id: FlagForFiltering
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: FlagForFiltering()
  nameWithType: ICollisionInfo2D.FlagForFiltering()
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering()
  type: Method
  source:
    id: FlagForFiltering
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 69
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nFlag this contact for filtering. Filtering will occur the next time step.\n"
  example: []
  syntax:
    content: void FlagForFiltering()
    content.vb: Sub FlagForFiltering
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering*
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction
  commentId: M:WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction
  id: ResetFriction
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: ResetFriction()
  nameWithType: ICollisionInfo2D.ResetFriction()
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction()
  type: Method
  source:
    id: ResetFriction
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 77
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nReset the friction mixture to the default value.\n"
  remarks: "\nYou can modify contact properties in PreSolve/PostSolve methods in ContactListener\n"
  example: []
  syntax:
    content: void ResetFriction()
    content.vb: Sub ResetFriction
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction*
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution
  commentId: M:WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution
  id: ResetRestitution
  parent: WaveEngine.Common.Physics2D.ICollisionInfo2D
  langs:
  - csharp
  - vb
  name: ResetRestitution()
  nameWithType: ICollisionInfo2D.ResetRestitution()
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution()
  type: Method
  source:
    id: ResetRestitution
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Physics2D\ICollisionInfo2D.cs
    startLine: 85
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Physics2D
  summary: "\nReset the restitution to the default contact value.\n"
  remarks: "\nYou can modify contact properties in PreSolve/PostSolve methods in ContactListener\n"
  example: []
  syntax:
    content: void ResetRestitution()
    content.vb: Sub ResetRestitution
  overload: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution*
references:
- uid: WaveEngine.Common.Physics2D
  commentId: N:WaveEngine.Common.Physics2D
  name: WaveEngine.Common.Physics2D
  nameWithType: WaveEngine.Common.Physics2D
  fullName: WaveEngine.Common.Physics2D
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled
  name: IsEnabled
  nameWithType: ICollisionInfo2D.IsEnabled
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching
  name: IsTouching
  nameWithType: ICollisionInfo2D.IsTouching
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.IsTouching
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction
  name: Friction
  nameWithType: ICollisionInfo2D.Friction
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Friction
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution
  name: Restitution
  nameWithType: ICollisionInfo2D.Restitution
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Restitution
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed
  name: TangentSpeed
  nameWithType: ICollisionInfo2D.TangentSpeed
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.TangentSpeed
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA
  name: ColliderA
  nameWithType: ICollisionInfo2D.ColliderA
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderA
- uid: WaveEngine.Common.Physics2D.ICollider2D
  commentId: T:WaveEngine.Common.Physics2D.ICollider2D
  parent: WaveEngine.Common.Physics2D
  name: ICollider2D
  nameWithType: ICollider2D
  fullName: WaveEngine.Common.Physics2D.ICollider2D
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB
  name: ColliderB
  nameWithType: ICollisionInfo2D.ColliderB
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ColliderB
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Points*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.Points
  name: Points
  nameWithType: ICollisionInfo2D.Points
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Points
- uid: WaveEngine.Common.Math.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: WaveEngine.Common.Math.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: WaveEngine.Common.Math.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal
  name: Normal
  nameWithType: ICollisionInfo2D.Normal
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.Normal
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering
  name: FlagForFiltering
  nameWithType: ICollisionInfo2D.FlagForFiltering
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.FlagForFiltering
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction
  name: ResetFriction
  nameWithType: ICollisionInfo2D.ResetFriction
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetFriction
- uid: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution*
  commentId: Overload:WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution
  name: ResetRestitution
  nameWithType: ICollisionInfo2D.ResetRestitution
  fullName: WaveEngine.Common.Physics2D.ICollisionInfo2D.ResetRestitution
