### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.BaseDecorator
  commentId: T:WaveEngine.Framework.BaseDecorator
  id: BaseDecorator
  parent: WaveEngine.Framework
  children:
  - WaveEngine.Framework.BaseDecorator.#ctor
  - WaveEngine.Framework.BaseDecorator.Dispose
  - WaveEngine.Framework.BaseDecorator.entity
  - WaveEngine.Framework.BaseDecorator.Entity
  - WaveEngine.Framework.BaseDecorator.IsVisible
  - WaveEngine.Framework.BaseDecorator.Name
  - WaveEngine.Framework.BaseDecorator.Tag
  langs:
  - csharp
  - vb
  name: BaseDecorator
  nameWithType: BaseDecorator
  fullName: WaveEngine.Framework.BaseDecorator
  type: Class
  source:
    id: BaseDecorator
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 17
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nProvides an extension point within the engine through inheritance.\nIt acts as an <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> wrapper.\nIMPORTANT NOTE: It is recommended, as a general guideline within Wave Engine,\nnot to overload a <xref href=\"WaveEngine.Framework.BaseDecorator\" data-throw-if-not-resolved=\"false\"></xref> with logic. For such purpose,\nit is provided <xref href=\"WaveEngine.Framework.Component\" data-throw-if-not-resolved=\"false\"></xref>-based classes like <xref href=\"WaveEngine.Framework.Behavior\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"WaveEngine.Framework.Drawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "WaveEngine.Framework")]

      public abstract class BaseDecorator : IDisposable
    content.vb: >-
      <DataContract(Namespace:="WaveEngine.Framework")>

      Public MustInherit Class BaseDecorator

          Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - WaveEngine.Components.Cameras.FixedCamera2D
  - WaveEngine.Components.Cameras.FixedCamera3D
  - WaveEngine.Components.UI.UIBase
  - WaveEngine.Framework.Graphics.DirectionalLight
  - WaveEngine.Framework.Graphics.PointLight
  - WaveEngine.Framework.Graphics.SpotLight
  - WaveEngine.OculusRift.OculusVRCamera3D
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: WaveEngine.Framework
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: WaveEngine.Framework.BaseDecorator.entity
  commentId: F:WaveEngine.Framework.BaseDecorator.entity
  id: entity
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: entity
  nameWithType: BaseDecorator.entity
  fullName: WaveEngine.Framework.BaseDecorator.entity
  type: Field
  source:
    id: entity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 23
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nThe wrapped <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected Entity entity
    return:
      type: WaveEngine.Framework.Entity
    content.vb: Protected entity As Entity
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.BaseDecorator.Entity
  commentId: P:WaveEngine.Framework.BaseDecorator.Entity
  id: Entity
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: BaseDecorator.Entity
  fullName: WaveEngine.Framework.BaseDecorator.Entity
  type: Property
  source:
    id: Entity
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 33
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets the wrapped <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Entity Entity { get; protected set; }
    parameters: []
    return:
      type: WaveEngine.Framework.Entity
      description: "\nThe <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref> it-self.\n"
    content.vb: >-
      <DataMember>

      Public Property Entity As Entity
  overload: WaveEngine.Framework.BaseDecorator.Entity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: WaveEngine.Framework.BaseDecorator.Name
  commentId: P:WaveEngine.Framework.BaseDecorator.Name
  id: Name
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BaseDecorator.Name
  fullName: WaveEngine.Framework.BaseDecorator.Name
  type: Property
  source:
    id: Name
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 53
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets the underlying <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>&apos;s name.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe underlying <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>&apos;s name.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: WaveEngine.Framework.BaseDecorator.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Framework.BaseDecorator.Tag
  commentId: P:WaveEngine.Framework.BaseDecorator.Tag
  id: Tag
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: BaseDecorator.Tag
  fullName: WaveEngine.Framework.BaseDecorator.Tag
  type: Property
  source:
    id: Tag
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 67
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets the underlying <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>&apos;s tag.\n"
  example: []
  syntax:
    content: public string Tag { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe underlying <xref href=\"WaveEngine.Framework.Entity\" data-throw-if-not-resolved=\"false\"></xref>&apos;s tag.\n"
    content.vb: Public Property Tag As String
  overload: WaveEngine.Framework.BaseDecorator.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.BaseDecorator.IsVisible
  commentId: P:WaveEngine.Framework.BaseDecorator.IsVisible
  id: IsVisible
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: BaseDecorator.IsVisible
  fullName: WaveEngine.Framework.BaseDecorator.IsVisible
  type: Property
  source:
    id: IsVisible
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 86
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nGets or sets a value indicating whether this instance is visible.\n"
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is visible; otherwise, <code>false</code>.\n"
    content.vb: Public Property IsVisible As Boolean
  overload: WaveEngine.Framework.BaseDecorator.IsVisible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.BaseDecorator.#ctor
  commentId: M:WaveEngine.Framework.BaseDecorator.#ctor
  id: '#ctor'
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: BaseDecorator()
  nameWithType: BaseDecorator.BaseDecorator()
  fullName: WaveEngine.Framework.BaseDecorator.BaseDecorator()
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 105
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Framework.BaseDecorator\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected BaseDecorator()
    content.vb: Protected Sub New
  overload: WaveEngine.Framework.BaseDecorator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: WaveEngine.Framework.BaseDecorator.Dispose
  commentId: M:WaveEngine.Framework.BaseDecorator.Dispose
  id: Dispose
  parent: WaveEngine.Framework.BaseDecorator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseDecorator.Dispose()
  fullName: WaveEngine.Framework.BaseDecorator.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\BaseDecorator.cs
    startLine: 112
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: WaveEngine.Framework.BaseDecorator.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: WaveEngine.Framework.Entity
  commentId: T:WaveEngine.Framework.Entity
  parent: WaveEngine.Framework
  name: Entity
  nameWithType: Entity
  fullName: WaveEngine.Framework.Entity
- uid: WaveEngine.Framework.BaseDecorator
  commentId: T:WaveEngine.Framework.BaseDecorator
  parent: WaveEngine.Framework
  name: BaseDecorator
  nameWithType: BaseDecorator
  fullName: WaveEngine.Framework.BaseDecorator
- uid: WaveEngine.Framework.Component
  commentId: T:WaveEngine.Framework.Component
  parent: WaveEngine.Framework
  name: Component
  nameWithType: Component
  fullName: WaveEngine.Framework.Component
- uid: WaveEngine.Framework.Behavior
  commentId: T:WaveEngine.Framework.Behavior
  parent: WaveEngine.Framework
  name: Behavior
  nameWithType: Behavior
  fullName: WaveEngine.Framework.Behavior
- uid: WaveEngine.Framework.Drawable
  commentId: T:WaveEngine.Framework.Drawable
  parent: WaveEngine.Framework
  name: Drawable
  nameWithType: Drawable
  fullName: WaveEngine.Framework.Drawable
- uid: WaveEngine.Framework
  commentId: N:WaveEngine.Framework
  name: WaveEngine.Framework
  nameWithType: WaveEngine.Framework
  fullName: WaveEngine.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.BaseDecorator.Entity*
  commentId: Overload:WaveEngine.Framework.BaseDecorator.Entity
  name: Entity
  nameWithType: BaseDecorator.Entity
  fullName: WaveEngine.Framework.BaseDecorator.Entity
- uid: WaveEngine.Framework.BaseDecorator.Name*
  commentId: Overload:WaveEngine.Framework.BaseDecorator.Name
  name: Name
  nameWithType: BaseDecorator.Name
  fullName: WaveEngine.Framework.BaseDecorator.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WaveEngine.Framework.BaseDecorator.Tag*
  commentId: Overload:WaveEngine.Framework.BaseDecorator.Tag
  name: Tag
  nameWithType: BaseDecorator.Tag
  fullName: WaveEngine.Framework.BaseDecorator.Tag
- uid: WaveEngine.Framework.BaseDecorator.IsVisible*
  commentId: Overload:WaveEngine.Framework.BaseDecorator.IsVisible
  name: IsVisible
  nameWithType: BaseDecorator.IsVisible
  fullName: WaveEngine.Framework.BaseDecorator.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Framework.BaseDecorator.#ctor*
  commentId: Overload:WaveEngine.Framework.BaseDecorator.#ctor
  name: BaseDecorator
  nameWithType: BaseDecorator.BaseDecorator
  fullName: WaveEngine.Framework.BaseDecorator.BaseDecorator
- uid: WaveEngine.Framework.BaseDecorator.Dispose*
  commentId: Overload:WaveEngine.Framework.BaseDecorator.Dispose
  name: Dispose
  nameWithType: BaseDecorator.Dispose
  fullName: WaveEngine.Framework.BaseDecorator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
