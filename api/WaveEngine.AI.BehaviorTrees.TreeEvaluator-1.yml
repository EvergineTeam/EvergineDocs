### YamlMime:ManagedReference
items:
- uid: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1
  commentId: T:WaveEngine.AI.BehaviorTrees.TreeEvaluator`1
  id: TreeEvaluator`1
  parent: WaveEngine.AI.BehaviorTrees
  children:
  - WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.CurrentNode
  - WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.Evaluate(`0,WaveEngine.AI.BehaviorTrees.Node{`0})
  langs:
  - csharp
  - vb
  name: TreeEvaluator<T>
  nameWithType: TreeEvaluator<T>
  fullName: WaveEngine.AI.BehaviorTrees.TreeEvaluator<T>
  type: Class
  source:
    id: TreeEvaluator
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\TreeEvaluator`1.cs
    startLine: 13
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nRepresents a class that evaluates a behavior tree\n"
  example: []
  syntax:
    content: >-
      public class TreeEvaluator<T>

          where T : NodeInfo
    typeParameters:
    - id: T
      description: The type of elements a behavior tree will contain
    content.vb: Public Class TreeEvaluator(Of T As NodeInfo)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  nameWithType.vb: TreeEvaluator(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: WaveEngine.AI.BehaviorTrees.TreeEvaluator(Of T)
  name.vb: TreeEvaluator(Of T)
- uid: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.CurrentNode
  commentId: F:WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.CurrentNode
  id: CurrentNode
  parent: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1
  langs:
  - csharp
  - vb
  name: CurrentNode
  nameWithType: TreeEvaluator<T>.CurrentNode
  fullName: WaveEngine.AI.BehaviorTrees.TreeEvaluator<T>.CurrentNode
  type: Field
  source:
    id: CurrentNode
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\TreeEvaluator`1.cs
    startLine: 19
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nThe current node\n"
  example: []
  syntax:
    content: public Node<T> CurrentNode
    return:
      type: WaveEngine.AI.BehaviorTrees.Node{{T}}
    content.vb: Public CurrentNode As Node(Of T)
  nameWithType.vb: TreeEvaluator(Of T).CurrentNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.BehaviorTrees.TreeEvaluator(Of T).CurrentNode
- uid: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.Evaluate(`0,WaveEngine.AI.BehaviorTrees.Node{`0})
  commentId: M:WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.Evaluate(`0,WaveEngine.AI.BehaviorTrees.Node{`0})
  id: Evaluate(`0,WaveEngine.AI.BehaviorTrees.Node{`0})
  parent: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1
  langs:
  - csharp
  - vb
  name: Evaluate(T, Node<T>)
  nameWithType: TreeEvaluator<T>.Evaluate(T, Node<T>)
  fullName: WaveEngine.AI.BehaviorTrees.TreeEvaluator<T>.Evaluate(T, WaveEngine.AI.BehaviorTrees.Node<T>)
  type: Method
  source:
    id: Evaluate
    path: D:\Source\Repos\TestDoc\src25\Extensions\WaveEngine.AI\Shared\BehaviorTrees\TreeEvaluator`1.cs
    startLine: 26
  assemblies:
  - WaveEngine.AI
  namespace: WaveEngine.AI.BehaviorTrees
  summary: "\nEvaluates the given tree and find the current node.\n"
  example: []
  syntax:
    content: public void Evaluate(T nodeInfo, Node<T> tree)
    parameters:
    - id: nodeInfo
      type: '{T}'
      description: The node information.
    - id: tree
      type: WaveEngine.AI.BehaviorTrees.Node{{T}}
      description: The tree behavior.
    content.vb: Public Sub Evaluate(nodeInfo As T, tree As Node(Of T))
  overload: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.Evaluate*
  nameWithType.vb: TreeEvaluator(Of T).Evaluate(T, Node(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.AI.BehaviorTrees.TreeEvaluator(Of T).Evaluate(T, WaveEngine.AI.BehaviorTrees.Node(Of T))
  name.vb: Evaluate(T, Node(Of T))
references:
- uid: WaveEngine.AI.BehaviorTrees
  commentId: N:WaveEngine.AI.BehaviorTrees
  name: WaveEngine.AI.BehaviorTrees
  nameWithType: WaveEngine.AI.BehaviorTrees
  fullName: WaveEngine.AI.BehaviorTrees
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.AI.BehaviorTrees.Node{{T}}
  commentId: T:WaveEngine.AI.BehaviorTrees.Node{`0}
  parent: WaveEngine.AI.BehaviorTrees
  definition: WaveEngine.AI.BehaviorTrees.Node`1
  name: Node<T>
  nameWithType: Node<T>
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>
  nameWithType.vb: Node(Of T)
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T)
  name.vb: Node(Of T)
  spec.csharp:
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.AI.BehaviorTrees.Node`1
  commentId: T:WaveEngine.AI.BehaviorTrees.Node`1
  parent: WaveEngine.AI.BehaviorTrees
  name: Node<T>
  nameWithType: Node<T>
  fullName: WaveEngine.AI.BehaviorTrees.Node<T>
  nameWithType.vb: Node(Of T)
  fullName.vb: WaveEngine.AI.BehaviorTrees.Node(Of T)
  name.vb: Node(Of T)
  spec.csharp:
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: WaveEngine.AI.BehaviorTrees.Node`1
    name: Node
    nameWithType: Node
    fullName: WaveEngine.AI.BehaviorTrees.Node
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.Evaluate*
  commentId: Overload:WaveEngine.AI.BehaviorTrees.TreeEvaluator`1.Evaluate
  name: Evaluate
  nameWithType: TreeEvaluator<T>.Evaluate
  fullName: WaveEngine.AI.BehaviorTrees.TreeEvaluator<T>.Evaluate
  nameWithType.vb: TreeEvaluator(Of T).Evaluate
  fullName.vb: WaveEngine.AI.BehaviorTrees.TreeEvaluator(Of T).Evaluate
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
