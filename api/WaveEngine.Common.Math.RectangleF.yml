### YamlMime:ManagedReference
items:
- uid: WaveEngine.Common.Math.RectangleF
  commentId: T:WaveEngine.Common.Math.RectangleF
  id: RectangleF
  parent: WaveEngine.Common.Math
  children:
  - WaveEngine.Common.Math.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - WaveEngine.Common.Math.RectangleF.Bottom
  - WaveEngine.Common.Math.RectangleF.Center
  - WaveEngine.Common.Math.RectangleF.Contains(System.Single,System.Single)
  - WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  - WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2@,System.Boolean@)
  - WaveEngine.Common.Math.RectangleF.Empty
  - WaveEngine.Common.Math.RectangleF.Equals(System.Object)
  - WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF@)
  - WaveEngine.Common.Math.RectangleF.GetHashCode
  - WaveEngine.Common.Math.RectangleF.GetPoints
  - WaveEngine.Common.Math.RectangleF.Height
  - WaveEngine.Common.Math.RectangleF.Inflate(System.Single,System.Single)
  - WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  - WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  - WaveEngine.Common.Math.RectangleF.IsEmpty
  - WaveEngine.Common.Math.RectangleF.Left
  - WaveEngine.Common.Math.RectangleF.Location
  - WaveEngine.Common.Math.RectangleF.Offset(System.Single,System.Single)
  - WaveEngine.Common.Math.RectangleF.Offset(WaveEngine.Common.Math.Vector2)
  - WaveEngine.Common.Math.RectangleF.op_Equality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.op_Implicit(WaveEngine.Common.Math.Rectangle)~WaveEngine.Common.Math.RectangleF
  - WaveEngine.Common.Math.RectangleF.op_Inequality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.Right
  - WaveEngine.Common.Math.RectangleF.Top
  - WaveEngine.Common.Math.RectangleF.ToString
  - WaveEngine.Common.Math.RectangleF.ToVector4
  - WaveEngine.Common.Math.RectangleF.ToVector4(WaveEngine.Common.Math.Vector4@)
  - WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  - WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  - WaveEngine.Common.Math.RectangleF.Width
  - WaveEngine.Common.Math.RectangleF.X
  - WaveEngine.Common.Math.RectangleF.Y
  langs:
  - csharp
  - vb
  name: RectangleF
  nameWithType: RectangleF
  fullName: WaveEngine.Common.Math.RectangleF
  type: Struct
  source:
    id: RectangleF
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 13
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nStores a set of four floating-point numbers that represent the location and size of a rectangle.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct RectangleF : IEquatable<RectangleF>
    content.vb: >-
      <DataContract>

      Public Structure RectangleF

          Implements IEquatable(Of RectangleF)
  implements:
  - System.IEquatable{WaveEngine.Common.Math.RectangleF}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: WaveEngine.Common.Math.RectangleF.X
  commentId: F:WaveEngine.Common.Math.RectangleF.X
  id: X
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: X
  nameWithType: RectangleF.X
  fullName: WaveEngine.Common.Math.RectangleF.X
  type: Field
  source:
    id: X
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 28
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the x-coordinate of the upper-left corner of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. The default is 0.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float X
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public X As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Y
  commentId: F:WaveEngine.Common.Math.RectangleF.Y
  id: Y
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: RectangleF.Y
  fullName: WaveEngine.Common.Math.RectangleF.Y
  type: Field
  source:
    id: Y
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 34
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the y-coordinate of the upper-left corner of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. The default is 0.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Y
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Y As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Width
  commentId: F:WaveEngine.Common.Math.RectangleF.Width
  id: Width
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: RectangleF.Width
  fullName: WaveEngine.Common.Math.RectangleF.Width
  type: Field
  source:
    id: Width
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 40
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the width of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. The default is 0.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Width
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Width As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Height
  commentId: F:WaveEngine.Common.Math.RectangleF.Height
  id: Height
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: RectangleF.Height
  fullName: WaveEngine.Common.Math.RectangleF.Height
  type: Field
  source:
    id: Height
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 46
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the height of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. The default is 0.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Height
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Height As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Left
  commentId: P:WaveEngine.Common.Math.RectangleF.Left
  id: Left
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: RectangleF.Left
  fullName: WaveEngine.Common.Math.RectangleF.Left
  type: Property
  source:
    id: Left
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 53
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the x-coordinate of the left edge of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public float Left { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Left As Single
  overload: WaveEngine.Common.Math.RectangleF.Left*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.Right
  commentId: P:WaveEngine.Common.Math.RectangleF.Right
  id: Right
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: RectangleF.Right
  fullName: WaveEngine.Common.Math.RectangleF.Right
  type: Property
  source:
    id: Right
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 64
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the x-coordinate that is the sum of <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public float Right { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Right As Single
  overload: WaveEngine.Common.Math.RectangleF.Right*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.Top
  commentId: P:WaveEngine.Common.Math.RectangleF.Top
  id: Top
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: RectangleF.Top
  fullName: WaveEngine.Common.Math.RectangleF.Top
  type: Property
  source:
    id: Top
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 75
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the y-coordinate of the top edge of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public float Top { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Top As Single
  overload: WaveEngine.Common.Math.RectangleF.Top*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.Bottom
  commentId: P:WaveEngine.Common.Math.RectangleF.Bottom
  id: Bottom
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: WaveEngine.Common.Math.RectangleF.Bottom
  type: Property
  source:
    id: Bottom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 86
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the y-coordinate that is the sum of <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public float Bottom { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Bottom As Single
  overload: WaveEngine.Common.Math.RectangleF.Bottom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.Location
  commentId: P:WaveEngine.Common.Math.RectangleF.Location
  id: Location
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: RectangleF.Location
  fullName: WaveEngine.Common.Math.RectangleF.Location
  type: Property
  source:
    id: Location
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 100
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets or sets the coordinates of the upper-left corner of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public Vector2 Location { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nA <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> that represents the upper-left corner of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Property Location As Vector2
  overload: WaveEngine.Common.Math.RectangleF.Location*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Center
  commentId: P:WaveEngine.Common.Math.RectangleF.Center
  id: Center
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: RectangleF.Center
  fullName: WaveEngine.Common.Math.RectangleF.Center
  type: Property
  source:
    id: Center
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 120
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the coordinates of the center of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public Vector2 Center { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
      description: "\nA <xref href=\"WaveEngine.Common.Math.Vector2\" data-throw-if-not-resolved=\"false\"></xref> that represents the center of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public ReadOnly Property Center As Vector2
  overload: WaveEngine.Common.Math.RectangleF.Center*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.Empty
  commentId: P:WaveEngine.Common.Math.RectangleF.Empty
  id: Empty
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: WaveEngine.Common.Math.RectangleF.Empty
  type: Property
  source:
    id: Empty
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 134
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets an instance of the <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> class with its members uninitialized.\n"
  remarks: "\nThe members of the new <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> are left uninitialized.\n"
  example: []
  syntax:
    content: public static RectangleF Empty { get; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.RectangleF
    content.vb: Public Shared ReadOnly Property Empty As RectangleF
  overload: WaveEngine.Common.Math.RectangleF.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.IsEmpty
  commentId: P:WaveEngine.Common.Math.RectangleF.IsEmpty
  id: IsEmpty
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: WaveEngine.Common.Math.RectangleF.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 149
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets a value indicating whether the <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> property of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> has a value of zero.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
      description: >
        .
          This property returns <code>true</code> if the <xref href="WaveEngine.Common.Math.RectangleF.Width" data-throw-if-not-resolved="false"></xref> or <xref href="WaveEngine.Common.Math.RectangleF.Height" data-throw-if-not-resolved="false"></xref> property of this
        <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> has a value of zero; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: WaveEngine.Common.Math.RectangleF.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: WaveEngine.Common.Math.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: RectangleF(Single, Single, Single, Single)
  nameWithType: RectangleF.RectangleF(Single, Single, Single, Single)
  fullName: WaveEngine.Common.Math.RectangleF.RectangleF(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 175
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nInitializes a new instance of the <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> struct with the specified location and size.\n"
  example: []
  syntax:
    content: public RectangleF(float x, float y, float width, float height)
    parameters:
    - id: x
      type: System.Single
      description: The x-coordinate of the upper-left corner of the rectangle.
    - id: y
      type: System.Single
      description: The y-coordinate of the upper-left corner of the rectangle.
    - id: width
      type: System.Single
      description: The width of the rectangle.
    - id: height
      type: System.Single
      description: The height of the rectangle.
    content.vb: Public Sub New(x As Single, y As Single, width As Single, height As Single)
  overload: WaveEngine.Common.Math.RectangleF.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Offset(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.RectangleF.Offset(WaveEngine.Common.Math.Vector2)
  id: Offset(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Offset(Vector2)
  nameWithType: RectangleF.Offset(Vector2)
  fullName: WaveEngine.Common.Math.RectangleF.Offset(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Offset
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 191
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdjusts the location of this rectangle by the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">amount</code>.\n"
  example: []
  syntax:
    content: public void Offset(Vector2 amount)
    parameters:
    - id: amount
      type: WaveEngine.Common.Math.Vector2
      description: The amount to offset the location.
    content.vb: Public Sub Offset(amount As Vector2)
  overload: WaveEngine.Common.Math.RectangleF.Offset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Offset(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Offset(Single, Single)
  nameWithType: RectangleF.Offset(Single, Single)
  fullName: WaveEngine.Common.Math.RectangleF.Offset(System.Single, System.Single)
  type: Method
  source:
    id: Offset
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 202
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nAdjusts the location of this rectangle by the specified amount.\n"
  example: []
  syntax:
    content: public void Offset(float offsetX, float offsetY)
    parameters:
    - id: offsetX
      type: System.Single
      description: The amount to offset the location horizontally.
    - id: offsetY
      type: System.Single
      description: The amount to offset the location vertically.
    content.vb: Public Sub Offset(offsetX As Single, offsetY As Single)
  overload: WaveEngine.Common.Math.RectangleF.Offset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Inflate(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Inflate(Single, Single)
  nameWithType: RectangleF.Inflate(Single, Single)
  fullName: WaveEngine.Common.Math.RectangleF.Inflate(System.Single, System.Single)
  type: Method
  source:
    id: Inflate
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 219
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nEnlarges this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure by the specified amount.\n"
  remarks: "\nThis method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis.\nFor example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long\n(the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle&apos;s geometric center.\nIf either x or y is negative, the <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> is deflated in the corresponding direction.\n"
  example: []
  syntax:
    content: public void Inflate(float horizontalAmount, float verticalAmount)
    parameters:
    - id: horizontalAmount
      type: System.Single
      description: The amount to inflate this <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure horizontally.
    - id: verticalAmount
      type: System.Single
      description: The amount to inflate this <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure vertically.
    content.vb: Public Sub Inflate(horizontalAmount As Single, verticalAmount As Single)
  overload: WaveEngine.Common.Math.RectangleF.Inflate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Contains(System.Single,System.Single)
  commentId: M:WaveEngine.Common.Math.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(Single, Single)
  nameWithType: RectangleF.Contains(Single, Single)
  fullName: WaveEngine.Common.Math.RectangleF.Contains(System.Single, System.Single)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 236
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if the specified point is contained within this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public bool Contains(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The x-coordinate of the point to test.
    - id: y
      type: System.Single
      description: The y-coordinate of the point to test.
    return:
      type: System.Boolean
      description: "\nThis method returns <code>true</code> if the point defined by <code data-dev-comment-type=\"paramref\" class=\"paramref\">x</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">y</code>\nis contained within this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure; otherwise <code>false</code>.\n"
    content.vb: Public Function Contains(x As Single, y As Single) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2)
  commentId: M:WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2)
  id: Contains(WaveEngine.Common.Math.Vector2)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(Vector2)
  nameWithType: RectangleF.Contains(Vector2)
  fullName: WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 249
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if the specified point is contained within this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public bool Contains(Vector2 pt)
    parameters:
    - id: pt
      type: WaveEngine.Common.Math.Vector2
      description: The <xref href="WaveEngine.Common.Math.Vector2" data-throw-if-not-resolved="false"></xref> to test.
    return:
      type: System.Boolean
      description: "\nThis method returns <code>true</code> if the point represented by the <code data-dev-comment-type=\"paramref\" class=\"paramref\">pt</code> parameter is contained\nwithin this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure; otherwise <code>false</code>.\n"
    content.vb: Public Function Contains(pt As Vector2) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2@,System.Boolean@)
  commentId: M:WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.Vector2@,System.Boolean@)
  id: Contains(WaveEngine.Common.Math.Vector2@,System.Boolean@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(ref Vector2, out Boolean)
  nameWithType: RectangleF.Contains(ref Vector2, out Boolean)
  fullName: WaveEngine.Common.Math.RectangleF.Contains(ref WaveEngine.Common.Math.Vector2, out System.Boolean)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 259
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if the specified point is contained within this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public void Contains(ref Vector2 pt, out bool result)
    parameters:
    - id: pt
      type: WaveEngine.Common.Math.Vector2
      description: The <xref href="WaveEngine.Common.Math.Vector2" data-throw-if-not-resolved="false"></xref> to test.
    - id: result
      type: System.Boolean
      description: if set to <code>true</code> the point represented by the <code data-dev-comment-type="paramref" class="paramref">pt</code> parameter is contained within this <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure; otherwise <code>false</code>.
    content.vb: Public Sub Contains(ByRef pt As Vector2, ByRef result As Boolean)
  overload: WaveEngine.Common.Math.RectangleF.Contains*
  nameWithType.vb: RectangleF.Contains(ByRef Vector2, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.RectangleF.Contains(ByRef WaveEngine.Common.Math.Vector2, ByRef System.Boolean)
  name.vb: Contains(ByRef Vector2, ByRef Boolean)
- uid: WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF)
  id: Contains(WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 273
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if the rectangular region represented by <code data-dev-comment-type=\"paramref\" class=\"paramref\">rect</code> is entirely contained\nwithin this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public bool Contains(RectangleF rect)
    parameters:
    - id: rect
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> to test.
    return:
      type: System.Boolean
      description: "\nThis method returns  <code>true</code> if the rectangular region represented by <code data-dev-comment-type=\"paramref\" class=\"paramref\">rect</code> is\nentirely contained within the rectangular region represented by this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>; otherwise <code>false</code>.\n"
    content.vb: Public Function Contains(rect As RectangleF) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  commentId: M:WaveEngine.Common.Math.RectangleF.Contains(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  id: Contains(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(ref RectangleF, out Boolean)
  nameWithType: RectangleF.Contains(ref RectangleF, out Boolean)
  fullName: WaveEngine.Common.Math.RectangleF.Contains(ref WaveEngine.Common.Math.RectangleF, out System.Boolean)
  type: Method
  source:
    id: Contains
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 284
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if the rectangular region represented by <code data-dev-comment-type=\"paramref\" class=\"paramref\">rect</code> is entirely contained\nwithin this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public void Contains(ref RectangleF rect, out bool result)
    parameters:
    - id: rect
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> to test.
    - id: result
      type: System.Boolean
      description: if set to <code>true</code> the rectangular region represented by <code data-dev-comment-type="paramref" class="paramref">rect</code> is entirely contained within this <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure.
    content.vb: Public Sub Contains(ByRef rect As RectangleF, ByRef result As Boolean)
  overload: WaveEngine.Common.Math.RectangleF.Contains*
  nameWithType.vb: RectangleF.Contains(ByRef RectangleF, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.RectangleF.Contains(ByRef WaveEngine.Common.Math.RectangleF, ByRef System.Boolean)
  name.vb: Contains(ByRef RectangleF, ByRef Boolean)
- uid: WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF)
  id: Intersects(WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Intersects(RectangleF)
  nameWithType: RectangleF.Intersects(RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 294
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if this rectangle intersects with <code data-dev-comment-type=\"paramref\" class=\"paramref\">rect</code>.\n"
  example: []
  syntax:
    content: public bool Intersects(RectangleF rect)
    parameters:
    - id: rect
      type: WaveEngine.Common.Math.RectangleF
      description: The rectangle to test.
    return:
      type: System.Boolean
      description: This method returns <code>true</code> if there is any intersection.
    content.vb: Public Function Intersects(rect As RectangleF) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  commentId: M:WaveEngine.Common.Math.RectangleF.Intersects(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  id: Intersects(WaveEngine.Common.Math.RectangleF@,System.Boolean@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Intersects(ref RectangleF, out Boolean)
  nameWithType: RectangleF.Intersects(ref RectangleF, out Boolean)
  fullName: WaveEngine.Common.Math.RectangleF.Intersects(ref WaveEngine.Common.Math.RectangleF, out System.Boolean)
  type: Method
  source:
    id: Intersects
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 304
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nDetermines if this rectangle intersects with <code data-dev-comment-type=\"paramref\" class=\"paramref\">rect</code>.\n"
  example: []
  syntax:
    content: public void Intersects(ref RectangleF rect, out bool result)
    parameters:
    - id: rect
      type: WaveEngine.Common.Math.RectangleF
      description: The rectangle to test.
    - id: result
      type: System.Boolean
      description: if set to <code>true</code> there is any intersection.
    content.vb: Public Sub Intersects(ByRef rect As RectangleF, ByRef result As Boolean)
  overload: WaveEngine.Common.Math.RectangleF.Intersects*
  nameWithType.vb: RectangleF.Intersects(ByRef RectangleF, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.RectangleF.Intersects(ByRef WaveEngine.Common.Math.RectangleF, ByRef System.Boolean)
  name.vb: Intersects(ByRef RectangleF, ByRef Boolean)
- uid: WaveEngine.Common.Math.RectangleF.GetPoints
  commentId: M:WaveEngine.Common.Math.RectangleF.GetPoints
  id: GetPoints
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: GetPoints()
  nameWithType: RectangleF.GetPoints()
  fullName: WaveEngine.Common.Math.RectangleF.GetPoints()
  type: Method
  source:
    id: GetPoints
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 315
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the corner points of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public Vector2[] GetPoints()
    return:
      type: WaveEngine.Common.Math.Vector2[]
      description: "\nA <xref href=\"Vector2%5b%5d\" data-throw-if-not-resolved=\"false\"></xref> that represents the corner points of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Function GetPoints As Vector2()
  overload: WaveEngine.Common.Math.RectangleF.GetPoints*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.ToVector4
  commentId: M:WaveEngine.Common.Math.RectangleF.ToVector4
  id: ToVector4
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: ToVector4()
  nameWithType: RectangleF.ToVector4()
  fullName: WaveEngine.Common.Math.RectangleF.ToVector4()
  type: Method
  source:
    id: ToVector4
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 333
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts the <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> of this\n<xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public Vector4 ToVector4()
    return:
      type: WaveEngine.Common.Math.Vector4
      description: "\nA <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains the <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref>,\nof this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Function ToVector4 As Vector4
  overload: WaveEngine.Common.Math.RectangleF.ToVector4*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.ToVector4(WaveEngine.Common.Math.Vector4@)
  commentId: M:WaveEngine.Common.Math.RectangleF.ToVector4(WaveEngine.Common.Math.Vector4@)
  id: ToVector4(WaveEngine.Common.Math.Vector4@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: ToVector4(ref Vector4)
  nameWithType: RectangleF.ToVector4(ref Vector4)
  fullName: WaveEngine.Common.Math.RectangleF.ToVector4(ref WaveEngine.Common.Math.Vector4)
  type: Method
  source:
    id: ToVector4
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 343
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts the <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> of this\n<xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"WaveEngine.Common.Math.Vector4\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public void ToVector4(ref Vector4 vector)
    parameters:
    - id: vector
      type: WaveEngine.Common.Math.Vector4
      description: <xref href="WaveEngine.Common.Math.Vector4" data-throw-if-not-resolved="false"></xref> reference to pass <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> values
    content.vb: Public Sub ToVector4(ByRef vector As Vector4)
  overload: WaveEngine.Common.Math.RectangleF.ToVector4*
  nameWithType.vb: RectangleF.ToVector4(ByRef Vector4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.RectangleF.ToVector4(ByRef WaveEngine.Common.Math.Vector4)
  name.vb: ToVector4(ByRef Vector4)
- uid: WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  id: Intersect(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Intersect(RectangleF, RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF, RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF, WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Intersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 359
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nReturns a <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the intersection of two rectangles. If there is no\nintersection, and empty <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> is returned.\n"
  example: []
  syntax:
    content: public static RectangleF Intersect(RectangleF a, RectangleF b)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.RectangleF
      description: A rectangle to intersect.
    - id: b
      type: WaveEngine.Common.Math.RectangleF
      description: A second rectangle to intersect.
    return:
      type: WaveEngine.Common.Math.RectangleF
      description: >-
        A third <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure the size of which represents the overlapped area of the two

        specified rectangles.
    content.vb: Public Shared Function Intersect(a As RectangleF, b As RectangleF) As RectangleF
  overload: WaveEngine.Common.Math.RectangleF.Intersect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  commentId: M:WaveEngine.Common.Math.RectangleF.Intersect(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  id: Intersect(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Intersect(ref RectangleF, ref RectangleF, out RectangleF)
  nameWithType: RectangleF.Intersect(ref RectangleF, ref RectangleF, out RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Intersect(ref WaveEngine.Common.Math.RectangleF, ref WaveEngine.Common.Math.RectangleF, out WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Intersect
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 395
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCalculates a <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the intersection of two rectangles. If there is no intersection, and empty <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> is returned.\n"
  example: []
  syntax:
    content: public static void Intersect(ref RectangleF a, ref RectangleF b, out RectangleF result)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.RectangleF
      description: A rectangle to intersect.
    - id: b
      type: WaveEngine.Common.Math.RectangleF
      description: A second rectangle to intersect.
    - id: result
      type: WaveEngine.Common.Math.RectangleF
      description: A rectangle that represents the intersection of two rectangles.
    content.vb: Public Shared Sub Intersect(ByRef a As RectangleF, ByRef b As RectangleF, ByRef result As RectangleF)
  overload: WaveEngine.Common.Math.RectangleF.Intersect*
  nameWithType.vb: RectangleF.Intersect(ByRef RectangleF, ByRef RectangleF, ByRef RectangleF)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.RectangleF.Intersect(ByRef WaveEngine.Common.Math.RectangleF, ByRef WaveEngine.Common.Math.RectangleF, ByRef WaveEngine.Common.Math.RectangleF)
  name.vb: Intersect(ByRef RectangleF, ByRef RectangleF, ByRef RectangleF)
- uid: WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  id: Union(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Union(RectangleF, RectangleF)
  nameWithType: RectangleF.Union(RectangleF, RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF, WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Union
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 428
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCreates the smallest possible third rectangle that can contain both of two rectangles that form a union.\n"
  example: []
  syntax:
    content: public static RectangleF Union(RectangleF a, RectangleF b)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.RectangleF
      description: A rectangle to union.
    - id: b
      type: WaveEngine.Common.Math.RectangleF
      description: A second rectangle to union.
    return:
      type: WaveEngine.Common.Math.RectangleF
      description: A third <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure that contains both of the two rectangles that form the union.
    content.vb: Public Shared Function Union(a As RectangleF, b As RectangleF) As RectangleF
  overload: WaveEngine.Common.Math.RectangleF.Union*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  commentId: M:WaveEngine.Common.Math.RectangleF.Union(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  id: Union(WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@,WaveEngine.Common.Math.RectangleF@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Union(ref RectangleF, ref RectangleF, out RectangleF)
  nameWithType: RectangleF.Union(ref RectangleF, ref RectangleF, out RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Union(ref WaveEngine.Common.Math.RectangleF, ref WaveEngine.Common.Math.RectangleF, out WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Union
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 455
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nCalculates the smallest possible third rectangle that can contain both of two rectangles that form a union.\n"
  example: []
  syntax:
    content: public static void Union(ref RectangleF a, ref RectangleF b, out RectangleF result)
    parameters:
    - id: a
      type: WaveEngine.Common.Math.RectangleF
      description: A rectangle to union.
    - id: b
      type: WaveEngine.Common.Math.RectangleF
      description: A second rectangle to union.
    - id: result
      type: WaveEngine.Common.Math.RectangleF
      description: The smallest possible third rectangle that can contain both of two rectangles that form a union.
    content.vb: Public Shared Sub Union(ByRef a As RectangleF, ByRef b As RectangleF, ByRef result As RectangleF)
  overload: WaveEngine.Common.Math.RectangleF.Union*
  nameWithType.vb: RectangleF.Union(ByRef RectangleF, ByRef RectangleF, ByRef RectangleF)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.RectangleF.Union(ByRef WaveEngine.Common.Math.RectangleF, ByRef WaveEngine.Common.Math.RectangleF, ByRef WaveEngine.Common.Math.RectangleF)
  name.vb: Union(ByRef RectangleF, ByRef RectangleF, ByRef RectangleF)
- uid: WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF)
  id: Equals(WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Equals(RectangleF)
  nameWithType: RectangleF.Equals(RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 481
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTests whether <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> has the same location and size of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Equals(RectangleF other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> to test.
    return:
      type: System.Boolean
      description: "\nThis method returns <code>true</code> if <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> has its <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> properties equal to the corresponding properties of this\n<xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <code>false</code>.\n"
    content.vb: Public Function Equals(other As RectangleF) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.Equals*
  implements:
  - System.IEquatable{WaveEngine.Common.Math.RectangleF}.Equals(WaveEngine.Common.Math.RectangleF)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF@)
  commentId: M:WaveEngine.Common.Math.RectangleF.Equals(WaveEngine.Common.Math.RectangleF@)
  id: Equals(WaveEngine.Common.Math.RectangleF@)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Equals(ref RectangleF)
  nameWithType: RectangleF.Equals(ref RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Equals(ref WaveEngine.Common.Math.RectangleF)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 495
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTests whether <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> has the same location and size of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Equals(ref RectangleF other)
    parameters:
    - id: other
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> to test.
    return:
      type: System.Boolean
      description: "\nThis method returns <code>true</code> if <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> has its <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> properties equal to the corresponding properties of this\n<xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <code>false</code>.\n"
    content.vb: Public Function Equals(ByRef other As RectangleF) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.Equals*
  nameWithType.vb: RectangleF.Equals(ByRef RectangleF)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: WaveEngine.Common.Math.RectangleF.Equals(ByRef WaveEngine.Common.Math.RectangleF)
  name.vb: Equals(ByRef RectangleF)
- uid: WaveEngine.Common.Math.RectangleF.Equals(System.Object)
  commentId: M:WaveEngine.Common.Math.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: WaveEngine.Common.Math.RectangleF.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 509
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTests whether <code data-dev-comment-type=\"paramref\" class=\"paramref\">obj</code> is a <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> with the same location and size of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to test.
    return:
      type: System.Boolean
      description: "\nThis method returns <code>true</code> if <code data-dev-comment-type=\"paramref\" class=\"paramref\">obj</code> is a <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> and its <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> properties are equal to the corresponding properties\nof this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: WaveEngine.Common.Math.RectangleF.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.RectangleF.ToString
  commentId: M:WaveEngine.Common.Math.RectangleF.ToString
  id: ToString
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: WaveEngine.Common.Math.RectangleF.ToString()
  type: Method
  source:
    id: ToString
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 527
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts the <xref href=\"WaveEngine.Common.Math.RectangleF.Location\" data-throw-if-not-resolved=\"false\"></xref> and Size of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a human-readable string.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that contains the position, width, and height of this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. For example, &quot;{X:20, Y:20, Width:100, Height:50}&quot;.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: WaveEngine.Common.Math.RectangleF.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.RectangleF.GetHashCode
  commentId: M:WaveEngine.Common.Math.RectangleF.GetHashCode
  id: GetHashCode
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: WaveEngine.Common.Math.RectangleF.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 543
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nGets the hash code for this <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. For information about the use of hash codes, see <xref href=\"System.Object.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: WaveEngine.Common.Math.RectangleF.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: WaveEngine.Common.Math.RectangleF.op_Equality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.op_Equality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  id: op_Equality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Equality(RectangleF, RectangleF)
  nameWithType: RectangleF.Equality(RectangleF, RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Equality(WaveEngine.Common.Math.RectangleF, WaveEngine.Common.Math.RectangleF)
  type: Operator
  source:
    id: op_Equality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 564
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTests whether two <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structures have equal location and size.\n"
  example: []
  syntax:
    content: public static bool operator ==(RectangleF left, RectangleF right)
    parameters:
    - id: left
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure that is to the left of the inequality operator.
    - id: right
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure that is to the right of the inequality operator.
    return:
      type: System.Boolean
      description: "\nThis operator returns <code>true</code> the two specified <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structures have equal\n<xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> properties; otherwise <code>false</code>.\n"
    content.vb: Public Shared Operator =(left As RectangleF, right As RectangleF) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.RectangleF.op_Inequality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  commentId: M:WaveEngine.Common.Math.RectangleF.op_Inequality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  id: op_Inequality(WaveEngine.Common.Math.RectangleF,WaveEngine.Common.Math.RectangleF)
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Inequality(RectangleF, RectangleF)
  nameWithType: RectangleF.Inequality(RectangleF, RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Inequality(WaveEngine.Common.Math.RectangleF, WaveEngine.Common.Math.RectangleF)
  type: Operator
  source:
    id: op_Inequality
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 578
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nTests whether two <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structures differ in location or size.\n"
  example: []
  syntax:
    content: public static bool operator !=(RectangleF left, RectangleF right)
    parameters:
    - id: left
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure that is to the left of the inequality operator.
    - id: right
      type: WaveEngine.Common.Math.RectangleF
      description: The <xref href="WaveEngine.Common.Math.RectangleF" data-throw-if-not-resolved="false"></xref> structure that is to the right of the inequality operator.
    return:
      type: System.Boolean
      description: "\nThis operator returns <code>true</code> if any of the <xref href=\"WaveEngine.Common.Math.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref> , <xref href=\"WaveEngine.Common.Math.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"WaveEngine.Common.Math.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"WaveEngine.Common.Math.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref>\nproperties of the two <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structures are unequal; otherwise <code>false</code>.\n"
    content.vb: Public Shared Operator <>(left As RectangleF, right As RectangleF) As Boolean
  overload: WaveEngine.Common.Math.RectangleF.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Common.Math.RectangleF.op_Implicit(WaveEngine.Common.Math.Rectangle)~WaveEngine.Common.Math.RectangleF
  commentId: M:WaveEngine.Common.Math.RectangleF.op_Implicit(WaveEngine.Common.Math.Rectangle)~WaveEngine.Common.Math.RectangleF
  id: op_Implicit(WaveEngine.Common.Math.Rectangle)~WaveEngine.Common.Math.RectangleF
  parent: WaveEngine.Common.Math.RectangleF
  langs:
  - csharp
  - vb
  name: Implicit(Rectangle to RectangleF)
  nameWithType: RectangleF.Implicit(Rectangle to RectangleF)
  fullName: WaveEngine.Common.Math.RectangleF.Implicit(WaveEngine.Common.Math.Rectangle to WaveEngine.Common.Math.RectangleF)
  type: Operator
  source:
    id: op_Implicit
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Common\Shared\Math\RectangleF.cs
    startLine: 590
  assemblies:
  - WaveEngine.Common
  namespace: WaveEngine.Common.Math
  summary: "\nConverts the specified <xref href=\"WaveEngine.Common.Math.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public static implicit operator RectangleF(Rectangle r)
    parameters:
    - id: r
      type: WaveEngine.Common.Math.Rectangle
      description: The rectangle.
    return:
      type: WaveEngine.Common.Math.RectangleF
      description: "\nThe <xref href=\"WaveEngine.Common.Math.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure that is converted from the specified <xref href=\"WaveEngine.Common.Math.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Shared Widening Operator CType(r As Rectangle) As RectangleF
  overload: WaveEngine.Common.Math.RectangleF.op_Implicit*
  nameWithType.vb: RectangleF.Widening(Rectangle to RectangleF)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Common.Math.RectangleF.Widening(WaveEngine.Common.Math.Rectangle to WaveEngine.Common.Math.RectangleF)
  name.vb: Widening(Rectangle to RectangleF)
references:
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: System.IEquatable{WaveEngine.Common.Math.RectangleF}
  commentId: T:System.IEquatable{WaveEngine.Common.Math.RectangleF}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<RectangleF>
  nameWithType: IEquatable<RectangleF>
  fullName: System.IEquatable<WaveEngine.Common.Math.RectangleF>
  nameWithType.vb: IEquatable(Of RectangleF)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.RectangleF)
  name.vb: IEquatable(Of RectangleF)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: WaveEngine.Common.Math.RectangleF
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: WaveEngine.Common.Math.RectangleF
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Common.Math.RectangleF
  commentId: T:WaveEngine.Common.Math.RectangleF
  parent: WaveEngine.Common.Math
  name: RectangleF
  nameWithType: RectangleF
  fullName: WaveEngine.Common.Math.RectangleF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: WaveEngine.Common.Math.RectangleF.Left*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Left
  name: Left
  nameWithType: RectangleF.Left
  fullName: WaveEngine.Common.Math.RectangleF.Left
- uid: WaveEngine.Common.Math.RectangleF.X
  commentId: F:WaveEngine.Common.Math.RectangleF.X
  isExternal: true
- uid: WaveEngine.Common.Math.RectangleF.Width
  commentId: F:WaveEngine.Common.Math.RectangleF.Width
  isExternal: true
- uid: WaveEngine.Common.Math.RectangleF.Right*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Right
  name: Right
  nameWithType: RectangleF.Right
  fullName: WaveEngine.Common.Math.RectangleF.Right
- uid: WaveEngine.Common.Math.RectangleF.Top*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Top
  name: Top
  nameWithType: RectangleF.Top
  fullName: WaveEngine.Common.Math.RectangleF.Top
- uid: WaveEngine.Common.Math.RectangleF.Y
  commentId: F:WaveEngine.Common.Math.RectangleF.Y
  isExternal: true
- uid: WaveEngine.Common.Math.RectangleF.Height
  commentId: F:WaveEngine.Common.Math.RectangleF.Height
  isExternal: true
- uid: WaveEngine.Common.Math.RectangleF.Bottom*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Bottom
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: WaveEngine.Common.Math.RectangleF.Bottom
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math.RectangleF.Location*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Location
  name: Location
  nameWithType: RectangleF.Location
  fullName: WaveEngine.Common.Math.RectangleF.Location
- uid: WaveEngine.Common.Math.RectangleF.Center*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Center
  name: Center
  nameWithType: RectangleF.Center
  fullName: WaveEngine.Common.Math.RectangleF.Center
- uid: WaveEngine.Common.Math.RectangleF.Empty*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Empty
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: WaveEngine.Common.Math.RectangleF.Empty
- uid: WaveEngine.Common.Math.RectangleF.IsEmpty*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.IsEmpty
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: WaveEngine.Common.Math.RectangleF.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WaveEngine.Common.Math.RectangleF.#ctor*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.#ctor
  name: RectangleF
  nameWithType: RectangleF.RectangleF
  fullName: WaveEngine.Common.Math.RectangleF.RectangleF
- uid: WaveEngine.Common.Math.RectangleF.Offset*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Offset
  name: Offset
  nameWithType: RectangleF.Offset
  fullName: WaveEngine.Common.Math.RectangleF.Offset
- uid: WaveEngine.Common.Math.RectangleF.Inflate*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Inflate
  name: Inflate
  nameWithType: RectangleF.Inflate
  fullName: WaveEngine.Common.Math.RectangleF.Inflate
- uid: WaveEngine.Common.Math.RectangleF.Contains*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Contains
  name: Contains
  nameWithType: RectangleF.Contains
  fullName: WaveEngine.Common.Math.RectangleF.Contains
- uid: WaveEngine.Common.Math.RectangleF.Intersects*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Intersects
  name: Intersects
  nameWithType: RectangleF.Intersects
  fullName: WaveEngine.Common.Math.RectangleF.Intersects
- uid: Vector2[]
  commentId: T:Vector2[]
  isExternal: true
- uid: WaveEngine.Common.Math.RectangleF.GetPoints*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.GetPoints
  name: GetPoints
  nameWithType: RectangleF.GetPoints
  fullName: WaveEngine.Common.Math.RectangleF.GetPoints
- uid: WaveEngine.Common.Math.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: WaveEngine.Common.Math.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: WaveEngine.Common.Math.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: WaveEngine.Common.Math.Vector4
  commentId: T:WaveEngine.Common.Math.Vector4
  parent: WaveEngine.Common.Math
  name: Vector4
  nameWithType: Vector4
  fullName: WaveEngine.Common.Math.Vector4
- uid: WaveEngine.Common.Math.RectangleF.ToVector4*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.ToVector4
  name: ToVector4
  nameWithType: RectangleF.ToVector4
  fullName: WaveEngine.Common.Math.RectangleF.ToVector4
- uid: WaveEngine.Common.Math.RectangleF.Intersect*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Intersect
  name: Intersect
  nameWithType: RectangleF.Intersect
  fullName: WaveEngine.Common.Math.RectangleF.Intersect
- uid: WaveEngine.Common.Math.RectangleF.Union*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Union
  name: Union
  nameWithType: RectangleF.Union
  fullName: WaveEngine.Common.Math.RectangleF.Union
- uid: WaveEngine.Common.Math.RectangleF.Equals*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.Equals
  name: Equals
  nameWithType: RectangleF.Equals
  fullName: WaveEngine.Common.Math.RectangleF.Equals
- uid: System.IEquatable{WaveEngine.Common.Math.RectangleF}.Equals(WaveEngine.Common.Math.RectangleF)
  commentId: M:System.IEquatable{WaveEngine.Common.Math.RectangleF}.Equals(WaveEngine.Common.Math.RectangleF)
  parent: System.IEquatable{WaveEngine.Common.Math.RectangleF}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(RectangleF)
  nameWithType: IEquatable<RectangleF>.Equals(RectangleF)
  fullName: System.IEquatable<WaveEngine.Common.Math.RectangleF>.Equals(WaveEngine.Common.Math.RectangleF)
  nameWithType.vb: IEquatable(Of RectangleF).Equals(RectangleF)
  fullName.vb: System.IEquatable(Of WaveEngine.Common.Math.RectangleF).Equals(WaveEngine.Common.Math.RectangleF)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<RectangleF>.Equals
    fullName: System.IEquatable<WaveEngine.Common.Math.RectangleF>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: WaveEngine.Common.Math.RectangleF
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of RectangleF).Equals
    fullName: System.IEquatable(Of WaveEngine.Common.Math.RectangleF).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: WaveEngine.Common.Math.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: WaveEngine.Common.Math.RectangleF
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: WaveEngine.Common.Math.RectangleF.Location
  commentId: P:WaveEngine.Common.Math.RectangleF.Location
  isExternal: true
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.RectangleF.ToString*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.ToString
  name: ToString
  nameWithType: RectangleF.ToString
  fullName: WaveEngine.Common.Math.RectangleF.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Math.RectangleF.GetHashCode*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.GetHashCode
  name: GetHashCode
  nameWithType: RectangleF.GetHashCode
  fullName: WaveEngine.Common.Math.RectangleF.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WaveEngine.Common.Math.RectangleF.op_Equality*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.op_Equality
  name: Equality
  nameWithType: RectangleF.Equality
  fullName: WaveEngine.Common.Math.RectangleF.Equality
- uid: WaveEngine.Common.Math.RectangleF.op_Inequality*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.op_Inequality
  name: Inequality
  nameWithType: RectangleF.Inequality
  fullName: WaveEngine.Common.Math.RectangleF.Inequality
- uid: WaveEngine.Common.Math.Rectangle
  commentId: T:WaveEngine.Common.Math.Rectangle
  parent: WaveEngine.Common.Math
  name: Rectangle
  nameWithType: Rectangle
  fullName: WaveEngine.Common.Math.Rectangle
- uid: WaveEngine.Common.Math.RectangleF.op_Implicit*
  commentId: Overload:WaveEngine.Common.Math.RectangleF.op_Implicit
  name: Implicit
  nameWithType: RectangleF.Implicit
  fullName: WaveEngine.Common.Math.RectangleF.Implicit
  nameWithType.vb: RectangleF.Widening
  fullName.vb: WaveEngine.Common.Math.RectangleF.Widening
  name.vb: Widening
