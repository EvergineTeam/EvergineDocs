### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  commentId: T:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  id: Physic2DCollisionEventArgs
  parent: WaveEngine.Framework.Physics2D
  children:
  - WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA
  - WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB
  - WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal
  - WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA
  - WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB
  langs:
  - csharp
  - vb
  name: Physic2DCollisionEventArgs
  nameWithType: Physic2DCollisionEventArgs
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  type: Class
  source:
    id: Physic2DCollisionEventArgs
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Physic2DCollisionEventArgs.cs
    startLine: 12
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nPhysics 2D Collision Event Args\n"
  example: []
  syntax:
    content: 'public class Physic2DCollisionEventArgs : EventArgs'
    content.vb: >-
      Public Class Physic2DCollisionEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal
  commentId: P:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal
  id: Normal
  parent: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: Physic2DCollisionEventArgs.Normal
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal
  type: Property
  source:
    id: Normal
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Physic2DCollisionEventArgs.cs
    startLine: 17
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets Normal Vector\n"
  example: []
  syntax:
    content: public Vector2 Normal { get; set; }
    parameters: []
    return:
      type: WaveEngine.Common.Math.Vector2
    content.vb: Public Property Normal As Vector2
  overload: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA
  commentId: P:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA
  id: PointA
  parent: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  langs:
  - csharp
  - vb
  name: PointA
  nameWithType: Physic2DCollisionEventArgs.PointA
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA
  type: Property
  source:
    id: PointA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Physic2DCollisionEventArgs.cs
    startLine: 26
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets First Collision Point\n"
  example: []
  syntax:
    content: public Vector2? PointA { get; set; }
    parameters: []
    return:
      type: System.Nullable{WaveEngine.Common.Math.Vector2}
    content.vb: Public Property PointA As Vector2?
  overload: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB
  commentId: P:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB
  id: PointB
  parent: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  langs:
  - csharp
  - vb
  name: PointB
  nameWithType: Physic2DCollisionEventArgs.PointB
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB
  type: Property
  source:
    id: PointB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Physic2DCollisionEventArgs.cs
    startLine: 35
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets Second Collision Point. Not used on Circles collision\n"
  example: []
  syntax:
    content: public Vector2? PointB { get; set; }
    parameters: []
    return:
      type: System.Nullable{WaveEngine.Common.Math.Vector2}
    content.vb: Public Property PointB As Vector2?
  overload: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA
  commentId: P:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA
  id: Body2DA
  parent: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  langs:
  - csharp
  - vb
  name: Body2DA
  nameWithType: Physic2DCollisionEventArgs.Body2DA
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA
  type: Property
  source:
    id: Body2DA
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Physic2DCollisionEventArgs.cs
    startLine: 47
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets the first RigidBody2D of the collision.\n"
  example: []
  syntax:
    content: public RigidBody2D Body2DA { get; set; }
    parameters: []
    return:
      type: WaveEngine.Framework.Physics2D.RigidBody2D
      description: "\nThe first RigidBody2D.\n"
    content.vb: Public Property Body2DA As RigidBody2D
  overload: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB
  commentId: P:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB
  id: Body2DB
  parent: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs
  langs:
  - csharp
  - vb
  name: Body2DB
  nameWithType: Physic2DCollisionEventArgs.Body2DB
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB
  type: Property
  source:
    id: Body2DB
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Physics2D\Physic2DCollisionEventArgs.cs
    startLine: 59
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Physics2D
  summary: "\nGets or sets second RigidBody2D of the collision.\n"
  example: []
  syntax:
    content: public RigidBody2D Body2DB { get; set; }
    parameters: []
    return:
      type: WaveEngine.Framework.Physics2D.RigidBody2D
      description: "\nThe second RigidBody2D.\n"
    content.vb: Public Property Body2DB As RigidBody2D
  overload: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: WaveEngine.Framework.Physics2D
  commentId: N:WaveEngine.Framework.Physics2D
  name: WaveEngine.Framework.Physics2D
  nameWithType: WaveEngine.Framework.Physics2D
  fullName: WaveEngine.Framework.Physics2D
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  name: GetMemberAssembly()
  nameWithType: ReflectionHelper.GetMemberAssembly()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  parent: WaveEngine.Common.Helpers.ReflectionHelper
  definition: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  name: GetTypeName()
  nameWithType: ReflectionHelper.GetTypeName()
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName()
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  isExternal: true
  name: GetMemberAssembly(Object)
  nameWithType: ReflectionHelper.GetMemberAssembly(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly(System.Object)
    name: GetMemberAssembly
    nameWithType: ReflectionHelper.GetMemberAssembly
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetMemberAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers.ReflectionHelper
  commentId: T:WaveEngine.Common.Helpers.ReflectionHelper
  parent: WaveEngine.Common.Helpers
  name: ReflectionHelper
  nameWithType: ReflectionHelper
  fullName: WaveEngine.Common.Helpers.ReflectionHelper
- uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  commentId: M:WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  isExternal: true
  name: GetTypeName(Object)
  nameWithType: ReflectionHelper.GetTypeName(Object)
  fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
  spec.csharp:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName(System.Object)
    name: GetTypeName
    nameWithType: ReflectionHelper.GetTypeName
    fullName: WaveEngine.Common.Helpers.ReflectionHelper.GetTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common.Helpers
  commentId: N:WaveEngine.Common.Helpers
  name: WaveEngine.Common.Helpers
  nameWithType: WaveEngine.Common.Helpers
  fullName: WaveEngine.Common.Helpers
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal*
  commentId: Overload:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal
  name: Normal
  nameWithType: Physic2DCollisionEventArgs.Normal
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Normal
- uid: WaveEngine.Common.Math.Vector2
  commentId: T:WaveEngine.Common.Math.Vector2
  parent: WaveEngine.Common.Math
  name: Vector2
  nameWithType: Vector2
  fullName: WaveEngine.Common.Math.Vector2
- uid: WaveEngine.Common.Math
  commentId: N:WaveEngine.Common.Math
  name: WaveEngine.Common.Math
  nameWithType: WaveEngine.Common.Math
  fullName: WaveEngine.Common.Math
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA*
  commentId: Overload:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA
  name: PointA
  nameWithType: Physic2DCollisionEventArgs.PointA
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointA
- uid: System.Nullable{WaveEngine.Common.Math.Vector2}
  commentId: T:System.Nullable{WaveEngine.Common.Math.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Vector2>
  nameWithType: Nullable<Vector2>
  fullName: System.Nullable<WaveEngine.Common.Math.Vector2>
  nameWithType.vb: Nullable(Of Vector2)
  fullName.vb: System.Nullable(Of WaveEngine.Common.Math.Vector2)
  name.vb: Nullable(Of Vector2)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Math.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: WaveEngine.Common.Math.Vector2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB*
  commentId: Overload:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB
  name: PointB
  nameWithType: Physic2DCollisionEventArgs.PointB
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.PointB
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA*
  commentId: Overload:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA
  name: Body2DA
  nameWithType: Physic2DCollisionEventArgs.Body2DA
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DA
- uid: WaveEngine.Framework.Physics2D.RigidBody2D
  commentId: T:WaveEngine.Framework.Physics2D.RigidBody2D
  parent: WaveEngine.Framework.Physics2D
  name: RigidBody2D
  nameWithType: RigidBody2D
  fullName: WaveEngine.Framework.Physics2D.RigidBody2D
- uid: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB*
  commentId: Overload:WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB
  name: Body2DB
  nameWithType: Physic2DCollisionEventArgs.Body2DB
  fullName: WaveEngine.Framework.Physics2D.Physic2DCollisionEventArgs.Body2DB
