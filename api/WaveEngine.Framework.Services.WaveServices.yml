### YamlMime:ManagedReference
items:
- uid: WaveEngine.Framework.Services.WaveServices
  commentId: T:WaveEngine.Framework.Services.WaveServices
  id: WaveServices
  parent: WaveEngine.Framework.Services
  children:
  - WaveEngine.Framework.Services.WaveServices.Assets
  - WaveEngine.Framework.Services.WaveServices.CameraCapture
  - WaveEngine.Framework.Services.WaveServices.Clock
  - WaveEngine.Framework.Services.WaveServices.ErrorHandler
  - WaveEngine.Framework.Services.WaveServices.FastRandom
  - WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  - WaveEngine.Framework.Services.WaveServices.GetService(System.Type,System.Boolean)
  - WaveEngine.Framework.Services.WaveServices.GetService``1(System.Boolean)
  - WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  - WaveEngine.Framework.Services.WaveServices.InAppPurchase
  - WaveEngine.Framework.Services.WaveServices.InitializeServices
  - WaveEngine.Framework.Services.WaveServices.Input
  - WaveEngine.Framework.Services.WaveServices.Layout
  - WaveEngine.Framework.Services.WaveServices.Microphone
  - WaveEngine.Framework.Services.WaveServices.MusicPlayer
  - WaveEngine.Framework.Services.WaveServices.Platform
  - WaveEngine.Framework.Services.WaveServices.Random
  - WaveEngine.Framework.Services.WaveServices.RegisteredServices
  - WaveEngine.Framework.Services.WaveServices.RegisterService(WaveEngine.Common.Service)
  - WaveEngine.Framework.Services.WaveServices.RegisterService``1(``0)
  - WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  - WaveEngine.Framework.Services.WaveServices.SoundPlayer
  - WaveEngine.Framework.Services.WaveServices.Storage
  - WaveEngine.Framework.Services.WaveServices.TimerFactory
  - WaveEngine.Framework.Services.WaveServices.TouchPanel
  - WaveEngine.Framework.Services.WaveServices.UnregisterService(WaveEngine.Common.Service)
  - WaveEngine.Framework.Services.WaveServices.UnregisterService``1
  - WaveEngine.Framework.Services.WaveServices.VideoPlayer
  langs:
  - csharp
  - vb
  name: WaveServices
  nameWithType: WaveServices
  fullName: WaveEngine.Framework.Services.WaveServices
  type: Class
  source:
    id: WaveServices
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 21
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nManages <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instances and allows the user to access them.\n"
  remarks: "\nRegistered <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instances that inherit from <xref href=\"WaveEngine.Common.UpdatableService\" data-throw-if-not-resolved=\"false\"></xref>\nwill be updated automatically by this instance. This update order depends on the order in which\n<xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instances where registered (first registered, first to be updated and so on).\n"
  example: []
  syntax:
    content: public static class WaveServices
    content.vb: Public Module WaveServices
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: WaveEngine.Framework.Services.WaveServices.RegisteredServices
  commentId: P:WaveEngine.Framework.Services.WaveServices.RegisteredServices
  id: RegisteredServices
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: RegisteredServices
  nameWithType: WaveServices.RegisteredServices
  fullName: WaveEngine.Framework.Services.WaveServices.RegisteredServices
  type: Property
  source:
    id: RegisteredServices
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 43
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets the services of the registered services\n"
  example: []
  syntax:
    content: public static IEnumerable<Service> RegisteredServices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{WaveEngine.Common.Service}
    content.vb: Public Shared ReadOnly Property RegisteredServices As IEnumerable(Of Service)
  overload: WaveEngine.Framework.Services.WaveServices.RegisteredServices*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Clock
  commentId: P:WaveEngine.Framework.Services.WaveServices.Clock
  id: Clock
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: WaveServices.Clock
  fullName: WaveEngine.Framework.Services.WaveServices.Clock
  type: Property
  source:
    id: Clock
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 54
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Clock\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static Clock Clock { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Clock
    content.vb: Public Shared ReadOnly Property Clock As Clock
  overload: WaveEngine.Framework.Services.WaveServices.Clock*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Assets
  commentId: P:WaveEngine.Framework.Services.WaveServices.Assets
  id: Assets
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Assets
  nameWithType: WaveServices.Assets
  fullName: WaveEngine.Framework.Services.WaveServices.Assets
  type: Property
  source:
    id: Assets
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 62
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the global <xref href=\"WaveEngine.Framework.Services.Assets\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static Assets Assets { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Assets
    content.vb: Public Shared ReadOnly Property Assets As Assets
  overload: WaveEngine.Framework.Services.WaveServices.Assets*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Input
  commentId: P:WaveEngine.Framework.Services.WaveServices.Input
  id: Input
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: WaveServices.Input
  fullName: WaveEngine.Framework.Services.WaveServices.Input
  type: Property
  source:
    id: Input
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 70
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Input\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static Input Input { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Input
    content.vb: Public Shared ReadOnly Property Input As Input
  overload: WaveEngine.Framework.Services.WaveServices.Input*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Layout
  commentId: P:WaveEngine.Framework.Services.WaveServices.Layout
  id: Layout
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: WaveServices.Layout
  fullName: WaveEngine.Framework.Services.WaveServices.Layout
  type: Property
  source:
    id: Layout
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 78
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Layout\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static Layout Layout { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Layout
    content.vb: Public Shared ReadOnly Property Layout As Layout
  overload: WaveEngine.Framework.Services.WaveServices.Layout*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.MusicPlayer
  commentId: P:WaveEngine.Framework.Services.WaveServices.MusicPlayer
  id: MusicPlayer
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: MusicPlayer
  nameWithType: WaveServices.MusicPlayer
  fullName: WaveEngine.Framework.Services.WaveServices.MusicPlayer
  type: Property
  source:
    id: MusicPlayer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 86
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.MusicPlayer\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static MusicPlayer MusicPlayer { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.MusicPlayer
    content.vb: Public Shared ReadOnly Property MusicPlayer As MusicPlayer
  overload: WaveEngine.Framework.Services.WaveServices.MusicPlayer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.VideoPlayer
  commentId: P:WaveEngine.Framework.Services.WaveServices.VideoPlayer
  id: VideoPlayer
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: VideoPlayer
  nameWithType: WaveServices.VideoPlayer
  fullName: WaveEngine.Framework.Services.WaveServices.VideoPlayer
  type: Property
  source:
    id: VideoPlayer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 94
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.VideoPlayer\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static VideoPlayer VideoPlayer { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.VideoPlayer
    content.vb: Public Shared ReadOnly Property VideoPlayer As VideoPlayer
  overload: WaveEngine.Framework.Services.WaveServices.VideoPlayer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Microphone
  commentId: P:WaveEngine.Framework.Services.WaveServices.Microphone
  id: Microphone
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Microphone
  nameWithType: WaveServices.Microphone
  fullName: WaveEngine.Framework.Services.WaveServices.Microphone
  type: Property
  source:
    id: Microphone
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 102
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Microphone\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static Microphone Microphone { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Microphone
    content.vb: Public Shared ReadOnly Property Microphone As Microphone
  overload: WaveEngine.Framework.Services.WaveServices.Microphone*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Platform
  commentId: P:WaveEngine.Framework.Services.WaveServices.Platform
  id: Platform
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: WaveServices.Platform
  fullName: WaveEngine.Framework.Services.WaveServices.Platform
  type: Property
  source:
    id: Platform
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 110
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Platform\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static Platform Platform { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Platform
    content.vb: Public Shared ReadOnly Property Platform As Platform
  overload: WaveEngine.Framework.Services.WaveServices.Platform*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Random
  commentId: P:WaveEngine.Framework.Services.WaveServices.Random
  id: Random
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: WaveServices.Random
  fullName: WaveEngine.Framework.Services.WaveServices.Random
  type: Property
  source:
    id: Random
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 118
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Random\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static Random Random { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Random
    content.vb: Public Shared ReadOnly Property Random As Random
  overload: WaveEngine.Framework.Services.WaveServices.Random*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.FastRandom
  commentId: P:WaveEngine.Framework.Services.WaveServices.FastRandom
  id: FastRandom
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: FastRandom
  nameWithType: WaveServices.FastRandom
  fullName: WaveEngine.Framework.Services.WaveServices.FastRandom
  type: Property
  source:
    id: FastRandom
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 126
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.FastRandom\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static FastRandom FastRandom { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.FastRandom
    content.vb: Public Shared ReadOnly Property FastRandom As FastRandom
  overload: WaveEngine.Framework.Services.WaveServices.FastRandom*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  commentId: P:WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  id: ScreenContextManager
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: ScreenContextManager
  nameWithType: WaveServices.ScreenContextManager
  fullName: WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  type: Property
  source:
    id: ScreenContextManager
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 134
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.ScreenContextManager\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static ScreenContextManager ScreenContextManager { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.ScreenContextManager
    content.vb: Public Shared ReadOnly Property ScreenContextManager As ScreenContextManager
  overload: WaveEngine.Framework.Services.WaveServices.ScreenContextManager*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.SoundPlayer
  commentId: P:WaveEngine.Framework.Services.WaveServices.SoundPlayer
  id: SoundPlayer
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: SoundPlayer
  nameWithType: WaveServices.SoundPlayer
  fullName: WaveEngine.Framework.Services.WaveServices.SoundPlayer
  type: Property
  source:
    id: SoundPlayer
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 142
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.SoundPlayer\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static SoundPlayer SoundPlayer { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.SoundPlayer
    content.vb: Public Shared ReadOnly Property SoundPlayer As SoundPlayer
  overload: WaveEngine.Framework.Services.WaveServices.SoundPlayer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.Storage
  commentId: P:WaveEngine.Framework.Services.WaveServices.Storage
  id: Storage
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: Storage
  nameWithType: WaveServices.Storage
  fullName: WaveEngine.Framework.Services.WaveServices.Storage
  type: Property
  source:
    id: Storage
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 150
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.Storage\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static Storage Storage { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.Storage
    content.vb: Public Shared ReadOnly Property Storage As Storage
  overload: WaveEngine.Framework.Services.WaveServices.Storage*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.TimerFactory
  commentId: P:WaveEngine.Framework.Services.WaveServices.TimerFactory
  id: TimerFactory
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: TimerFactory
  nameWithType: WaveServices.TimerFactory
  fullName: WaveEngine.Framework.Services.WaveServices.TimerFactory
  type: Property
  source:
    id: TimerFactory
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 158
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.TimerFactory\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static TimerFactory TimerFactory { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.TimerFactory
    content.vb: Public Shared ReadOnly Property TimerFactory As TimerFactory
  overload: WaveEngine.Framework.Services.WaveServices.TimerFactory*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.TouchPanel
  commentId: P:WaveEngine.Framework.Services.WaveServices.TouchPanel
  id: TouchPanel
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: TouchPanel
  nameWithType: WaveServices.TouchPanel
  fullName: WaveEngine.Framework.Services.WaveServices.TouchPanel
  type: Property
  source:
    id: TouchPanel
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 166
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.TouchPanel\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static TouchPanel TouchPanel { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.TouchPanel
    content.vb: Public Shared ReadOnly Property TouchPanel As TouchPanel
  overload: WaveEngine.Framework.Services.WaveServices.TouchPanel*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  commentId: P:WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  id: GraphicsDevice
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: GraphicsDevice
  nameWithType: WaveServices.GraphicsDevice
  fullName: WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  type: Property
  source:
    id: GraphicsDevice
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 174
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.GraphicsDevice\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static GraphicsDevice GraphicsDevice { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.GraphicsDevice
    content.vb: Public Shared ReadOnly Property GraphicsDevice As GraphicsDevice
  overload: WaveEngine.Framework.Services.WaveServices.GraphicsDevice*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.InAppPurchase
  commentId: P:WaveEngine.Framework.Services.WaveServices.InAppPurchase
  id: InAppPurchase
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: InAppPurchase
  nameWithType: WaveServices.InAppPurchase
  fullName: WaveEngine.Framework.Services.WaveServices.InAppPurchase
  type: Property
  source:
    id: InAppPurchase
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 182
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.InAppPurchase\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static InAppPurchase InAppPurchase { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.InAppPurchase
    content.vb: Public Shared ReadOnly Property InAppPurchase As InAppPurchase
  overload: WaveEngine.Framework.Services.WaveServices.InAppPurchase*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.CameraCapture
  commentId: P:WaveEngine.Framework.Services.WaveServices.CameraCapture
  id: CameraCapture
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: CameraCapture
  nameWithType: WaveServices.CameraCapture
  fullName: WaveEngine.Framework.Services.WaveServices.CameraCapture
  type: Property
  source:
    id: CameraCapture
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 190
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.CameraCapture\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static CameraCapture CameraCapture { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.CameraCapture
    content.vb: Public Shared ReadOnly Property CameraCapture As CameraCapture
  overload: WaveEngine.Framework.Services.WaveServices.CameraCapture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  commentId: P:WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  id: GameActionScheduler
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: GameActionScheduler
  nameWithType: WaveServices.GameActionScheduler
  fullName: WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  type: Property
  source:
    id: GameActionScheduler
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 198
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.GameActionScheduler\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static GameActionScheduler GameActionScheduler { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.GameActionScheduler
    content.vb: Public Shared ReadOnly Property GameActionScheduler As GameActionScheduler
  overload: WaveEngine.Framework.Services.WaveServices.GameActionScheduler*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.ErrorHandler
  commentId: P:WaveEngine.Framework.Services.WaveServices.ErrorHandler
  id: ErrorHandler
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: ErrorHandler
  nameWithType: WaveServices.ErrorHandler
  fullName: WaveEngine.Framework.Services.WaveServices.ErrorHandler
  type: Property
  source:
    id: ErrorHandler
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 206
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets access to the <xref href=\"WaveEngine.Framework.Services.WaveServices.ErrorHandler\" data-throw-if-not-resolved=\"false\"></xref> service instance.\n"
  example: []
  syntax:
    content: public static ErrorHandler ErrorHandler { get; }
    parameters: []
    return:
      type: WaveEngine.Framework.Services.ErrorHandler
    content.vb: Public Shared ReadOnly Property ErrorHandler As ErrorHandler
  overload: WaveEngine.Framework.Services.WaveServices.ErrorHandler*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: WaveEngine.Framework.Services.WaveServices.InitializeServices
  commentId: M:WaveEngine.Framework.Services.WaveServices.InitializeServices
  id: InitializeServices
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: InitializeServices()
  nameWithType: WaveServices.InitializeServices()
  fullName: WaveEngine.Framework.Services.WaveServices.InitializeServices()
  type: Method
  source:
    id: InitializeServices
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 217
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nInitializes the registered services.\n"
  remarks: "\nThis method initilize only new services, not initialized yet.\n"
  example: []
  syntax:
    content: public static void InitializeServices()
    content.vb: Public Shared Sub InitializeServices
  overload: WaveEngine.Framework.Services.WaveServices.InitializeServices*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Services.WaveServices.RegisterService``1(``0)
  commentId: M:WaveEngine.Framework.Services.WaveServices.RegisterService``1(``0)
  id: RegisterService``1(``0)
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: RegisterService<T>(T)
  nameWithType: WaveServices.RegisterService<T>(T)
  fullName: WaveEngine.Framework.Services.WaveServices.RegisterService<T>(T)
  type: Method
  source:
    id: RegisterService
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 250
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRegisters a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nIf the instance to register inherits from <xref href=\"WaveEngine.Common.UpdatableService\" data-throw-if-not-resolved=\"false\"></xref> this class\nwill handle the update automatically.\n"
  example: []
  syntax:
    content: >-
      public static void RegisterService<T>(T service)

          where T : Service
    parameters:
    - id: service
      type: '{T}'
      description: The instance to register.
    typeParameters:
    - id: T
      description: Type of the <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Sub RegisterService(Of T As Service)(service As T)
  overload: WaveEngine.Framework.Services.WaveServices.RegisterService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If service is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If a <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref> with the same type was already registered.
  nameWithType.vb: WaveServices.RegisterService(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Services.WaveServices.RegisterService(Of T)(T)
  name.vb: RegisterService(Of T)(T)
- uid: WaveEngine.Framework.Services.WaveServices.RegisterService(WaveEngine.Common.Service)
  commentId: M:WaveEngine.Framework.Services.WaveServices.RegisterService(WaveEngine.Common.Service)
  id: RegisterService(WaveEngine.Common.Service)
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: RegisterService(Service)
  nameWithType: WaveServices.RegisterService(Service)
  fullName: WaveEngine.Framework.Services.WaveServices.RegisterService(WaveEngine.Common.Service)
  type: Method
  source:
    id: RegisterService
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 266
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nRegisters a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nIf the instance to register inherits from <xref href=\"WaveEngine.Common.UpdatableService\" data-throw-if-not-resolved=\"false\"></xref> this class\nwill handle the update automatically.\n"
  example: []
  syntax:
    content: public static void RegisterService(Service service)
    parameters:
    - id: service
      type: WaveEngine.Common.Service
      description: The instance to register.
    content.vb: Public Shared Sub RegisterService(service As Service)
  overload: WaveEngine.Framework.Services.WaveServices.RegisterService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If service is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If a <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref> with the same type was already registered.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Services.WaveServices.GetService``1(System.Boolean)
  commentId: M:WaveEngine.Framework.Services.WaveServices.GetService``1(System.Boolean)
  id: GetService``1(System.Boolean)
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: GetService<T>(Boolean)
  nameWithType: WaveServices.GetService<T>(Boolean)
  fullName: WaveEngine.Framework.Services.WaveServices.GetService<T>(System.Boolean)
  type: Method
  source:
    id: GetService
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 311
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: >-
      public static T GetService<T>(bool isExactType = true)

          where T : Service
    parameters:
    - id: isExactType
      type: System.Boolean
      description: Whether to match the exact type.
    typeParameters:
    - id: T
      description: Type of the <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref> to get.
    return:
      type: '{T}'
      description: "\nThe <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instance searched, or null if there was not a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref>\nwith the selected type registered.\n"
    content.vb: Public Shared Function GetService(Of T As Service)(isExactType As Boolean = True) As T
  overload: WaveEngine.Framework.Services.WaveServices.GetService*
  nameWithType.vb: WaveServices.GetService(Of T)(Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Services.WaveServices.GetService(Of T)(System.Boolean)
  name.vb: GetService(Of T)(Boolean)
- uid: WaveEngine.Framework.Services.WaveServices.GetService(System.Type,System.Boolean)
  commentId: M:WaveEngine.Framework.Services.WaveServices.GetService(System.Type,System.Boolean)
  id: GetService(System.Type,System.Boolean)
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: GetService(Type, Boolean)
  nameWithType: WaveServices.GetService(Type, Boolean)
  fullName: WaveEngine.Framework.Services.WaveServices.GetService(System.Type, System.Boolean)
  type: Method
  source:
    id: GetService
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 326
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nGets a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static Service GetService(Type serviceType, bool isExactType = true)
    parameters:
    - id: serviceType
      type: System.Type
      description: Type of the service to get.
    - id: isExactType
      type: System.Boolean
      description: Whether to match the exact type.
    return:
      type: WaveEngine.Common.Service
      description: "\nThe <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref> instance found, or null if there was not a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref>\nwith the selected type registered.\n"
    content.vb: Public Shared Function GetService(serviceType As Type, isExactType As Boolean = True) As Service
  overload: WaveEngine.Framework.Services.WaveServices.GetService*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: WaveEngine.Framework.Services.WaveServices.UnregisterService``1
  commentId: M:WaveEngine.Framework.Services.WaveServices.UnregisterService``1
  id: UnregisterService``1
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: UnregisterService<T>()
  nameWithType: WaveServices.UnregisterService<T>()
  fullName: WaveEngine.Framework.Services.WaveServices.UnregisterService<T>()
  type: Method
  source:
    id: UnregisterService
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 359
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nUnregisters a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The unregistered <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref> will be disposed.
  example: []
  syntax:
    content: >-
      public static void UnregisterService<T>()

          where T : Service
    typeParameters:
    - id: T
      description: Type of the <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref> to unregister.
    content.vb: Public Shared Sub UnregisterService(Of T As Service)
  overload: WaveEngine.Framework.Services.WaveServices.UnregisterService*
  nameWithType.vb: WaveServices.UnregisterService(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: WaveEngine.Framework.Services.WaveServices.UnregisterService(Of T)()
  name.vb: UnregisterService(Of T)()
- uid: WaveEngine.Framework.Services.WaveServices.UnregisterService(WaveEngine.Common.Service)
  commentId: M:WaveEngine.Framework.Services.WaveServices.UnregisterService(WaveEngine.Common.Service)
  id: UnregisterService(WaveEngine.Common.Service)
  parent: WaveEngine.Framework.Services.WaveServices
  langs:
  - csharp
  - vb
  name: UnregisterService(Service)
  nameWithType: WaveServices.UnregisterService(Service)
  fullName: WaveEngine.Framework.Services.WaveServices.UnregisterService(WaveEngine.Common.Service)
  type: Method
  source:
    id: UnregisterService
    path: D:\Source\Repos\TestDoc\src25\Common\WaveEngine.Framework\Shared\Services\WaveServices.cs
    startLine: 376
  assemblies:
  - WaveEngine.Framework
  namespace: WaveEngine.Framework.Services
  summary: "\nUnregisters a <xref href=\"WaveEngine.Common.Service\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The unregistered <xref href="WaveEngine.Common.Service" data-throw-if-not-resolved="false"></xref> will be disposed.
  example: []
  syntax:
    content: public static void UnregisterService(Service service)
    parameters:
    - id: service
      type: WaveEngine.Common.Service
      description: The service to unregister
    content.vb: Public Shared Sub UnregisterService(service As Service)
  overload: WaveEngine.Framework.Services.WaveServices.UnregisterService*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: WaveEngine.Common.Service
  commentId: T:WaveEngine.Common.Service
  parent: WaveEngine.Common
  name: Service
  nameWithType: Service
  fullName: WaveEngine.Common.Service
- uid: WaveEngine.Common.UpdatableService
  commentId: T:WaveEngine.Common.UpdatableService
  parent: WaveEngine.Common
  name: UpdatableService
  nameWithType: UpdatableService
  fullName: WaveEngine.Common.UpdatableService
- uid: WaveEngine.Framework.Services
  commentId: N:WaveEngine.Framework.Services
  name: WaveEngine.Framework.Services
  nameWithType: WaveEngine.Framework.Services
  fullName: WaveEngine.Framework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: WaveEngine.Common
  commentId: N:WaveEngine.Common
  name: WaveEngine.Common
  nameWithType: WaveEngine.Common
  fullName: WaveEngine.Common
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WaveEngine.Framework.Services.WaveServices.RegisteredServices*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.RegisteredServices
  name: RegisteredServices
  nameWithType: WaveServices.RegisteredServices
  fullName: WaveEngine.Framework.Services.WaveServices.RegisteredServices
- uid: System.Collections.Generic.IEnumerable{WaveEngine.Common.Service}
  commentId: T:System.Collections.Generic.IEnumerable{WaveEngine.Common.Service}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Service>
  nameWithType: IEnumerable<Service>
  fullName: System.Collections.Generic.IEnumerable<WaveEngine.Common.Service>
  nameWithType.vb: IEnumerable(Of Service)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveEngine.Common.Service)
  name.vb: IEnumerable(Of Service)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WaveEngine.Common.Service
    name: Service
    nameWithType: Service
    fullName: WaveEngine.Common.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WaveEngine.Common.Service
    name: Service
    nameWithType: Service
    fullName: WaveEngine.Common.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WaveEngine.Framework.Services.WaveServices.Clock
  commentId: P:WaveEngine.Framework.Services.WaveServices.Clock
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Clock*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Clock
  name: Clock
  nameWithType: WaveServices.Clock
  fullName: WaveEngine.Framework.Services.WaveServices.Clock
- uid: WaveEngine.Framework.Services.Clock
  commentId: T:WaveEngine.Framework.Services.Clock
  parent: WaveEngine.Framework.Services
  name: Clock
  nameWithType: Clock
  fullName: WaveEngine.Framework.Services.Clock
- uid: WaveEngine.Framework.Services.Assets
  commentId: T:WaveEngine.Framework.Services.Assets
  parent: WaveEngine.Framework.Services
  name: Assets
  nameWithType: Assets
  fullName: WaveEngine.Framework.Services.Assets
- uid: WaveEngine.Framework.Services.WaveServices.Assets*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Assets
  name: Assets
  nameWithType: WaveServices.Assets
  fullName: WaveEngine.Framework.Services.WaveServices.Assets
- uid: WaveEngine.Framework.Services.WaveServices.Input
  commentId: P:WaveEngine.Framework.Services.WaveServices.Input
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Input*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Input
  name: Input
  nameWithType: WaveServices.Input
  fullName: WaveEngine.Framework.Services.WaveServices.Input
- uid: WaveEngine.Framework.Services.Input
  commentId: T:WaveEngine.Framework.Services.Input
  parent: WaveEngine.Framework.Services
  name: Input
  nameWithType: Input
  fullName: WaveEngine.Framework.Services.Input
- uid: WaveEngine.Framework.Services.WaveServices.Layout
  commentId: P:WaveEngine.Framework.Services.WaveServices.Layout
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Layout*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Layout
  name: Layout
  nameWithType: WaveServices.Layout
  fullName: WaveEngine.Framework.Services.WaveServices.Layout
- uid: WaveEngine.Framework.Services.Layout
  commentId: T:WaveEngine.Framework.Services.Layout
  parent: WaveEngine.Framework.Services
  name: Layout
  nameWithType: Layout
  fullName: WaveEngine.Framework.Services.Layout
- uid: WaveEngine.Framework.Services.WaveServices.MusicPlayer
  commentId: P:WaveEngine.Framework.Services.WaveServices.MusicPlayer
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.MusicPlayer*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.MusicPlayer
  name: MusicPlayer
  nameWithType: WaveServices.MusicPlayer
  fullName: WaveEngine.Framework.Services.WaveServices.MusicPlayer
- uid: WaveEngine.Framework.Services.MusicPlayer
  commentId: T:WaveEngine.Framework.Services.MusicPlayer
  parent: WaveEngine.Framework.Services
  name: MusicPlayer
  nameWithType: MusicPlayer
  fullName: WaveEngine.Framework.Services.MusicPlayer
- uid: WaveEngine.Framework.Services.WaveServices.VideoPlayer
  commentId: P:WaveEngine.Framework.Services.WaveServices.VideoPlayer
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.VideoPlayer*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.VideoPlayer
  name: VideoPlayer
  nameWithType: WaveServices.VideoPlayer
  fullName: WaveEngine.Framework.Services.WaveServices.VideoPlayer
- uid: WaveEngine.Framework.Services.VideoPlayer
  commentId: T:WaveEngine.Framework.Services.VideoPlayer
  parent: WaveEngine.Framework.Services
  name: VideoPlayer
  nameWithType: VideoPlayer
  fullName: WaveEngine.Framework.Services.VideoPlayer
- uid: WaveEngine.Framework.Services.WaveServices.Microphone
  commentId: P:WaveEngine.Framework.Services.WaveServices.Microphone
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Microphone*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Microphone
  name: Microphone
  nameWithType: WaveServices.Microphone
  fullName: WaveEngine.Framework.Services.WaveServices.Microphone
- uid: WaveEngine.Framework.Services.Microphone
  commentId: T:WaveEngine.Framework.Services.Microphone
  parent: WaveEngine.Framework.Services
  name: Microphone
  nameWithType: Microphone
  fullName: WaveEngine.Framework.Services.Microphone
- uid: WaveEngine.Framework.Services.WaveServices.Platform
  commentId: P:WaveEngine.Framework.Services.WaveServices.Platform
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Platform*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Platform
  name: Platform
  nameWithType: WaveServices.Platform
  fullName: WaveEngine.Framework.Services.WaveServices.Platform
- uid: WaveEngine.Framework.Services.Platform
  commentId: T:WaveEngine.Framework.Services.Platform
  parent: WaveEngine.Framework.Services
  name: Platform
  nameWithType: Platform
  fullName: WaveEngine.Framework.Services.Platform
- uid: WaveEngine.Framework.Services.WaveServices.Random
  commentId: P:WaveEngine.Framework.Services.WaveServices.Random
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Random*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Random
  name: Random
  nameWithType: WaveServices.Random
  fullName: WaveEngine.Framework.Services.WaveServices.Random
- uid: WaveEngine.Framework.Services.Random
  commentId: T:WaveEngine.Framework.Services.Random
  parent: WaveEngine.Framework.Services
  name: Random
  nameWithType: Random
  fullName: WaveEngine.Framework.Services.Random
- uid: WaveEngine.Framework.Services.WaveServices.FastRandom
  commentId: P:WaveEngine.Framework.Services.WaveServices.FastRandom
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.FastRandom*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.FastRandom
  name: FastRandom
  nameWithType: WaveServices.FastRandom
  fullName: WaveEngine.Framework.Services.WaveServices.FastRandom
- uid: WaveEngine.Framework.Services.FastRandom
  commentId: T:WaveEngine.Framework.Services.FastRandom
  parent: WaveEngine.Framework.Services
  name: FastRandom
  nameWithType: FastRandom
  fullName: WaveEngine.Framework.Services.FastRandom
- uid: WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  commentId: P:WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.ScreenContextManager*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.ScreenContextManager
  name: ScreenContextManager
  nameWithType: WaveServices.ScreenContextManager
  fullName: WaveEngine.Framework.Services.WaveServices.ScreenContextManager
- uid: WaveEngine.Framework.Services.ScreenContextManager
  commentId: T:WaveEngine.Framework.Services.ScreenContextManager
  parent: WaveEngine.Framework.Services
  name: ScreenContextManager
  nameWithType: ScreenContextManager
  fullName: WaveEngine.Framework.Services.ScreenContextManager
- uid: WaveEngine.Framework.Services.WaveServices.SoundPlayer
  commentId: P:WaveEngine.Framework.Services.WaveServices.SoundPlayer
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.SoundPlayer*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.SoundPlayer
  name: SoundPlayer
  nameWithType: WaveServices.SoundPlayer
  fullName: WaveEngine.Framework.Services.WaveServices.SoundPlayer
- uid: WaveEngine.Framework.Services.SoundPlayer
  commentId: T:WaveEngine.Framework.Services.SoundPlayer
  parent: WaveEngine.Framework.Services
  name: SoundPlayer
  nameWithType: SoundPlayer
  fullName: WaveEngine.Framework.Services.SoundPlayer
- uid: WaveEngine.Framework.Services.WaveServices.Storage
  commentId: P:WaveEngine.Framework.Services.WaveServices.Storage
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.Storage*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.Storage
  name: Storage
  nameWithType: WaveServices.Storage
  fullName: WaveEngine.Framework.Services.WaveServices.Storage
- uid: WaveEngine.Framework.Services.Storage
  commentId: T:WaveEngine.Framework.Services.Storage
  parent: WaveEngine.Framework.Services
  name: Storage
  nameWithType: Storage
  fullName: WaveEngine.Framework.Services.Storage
- uid: WaveEngine.Framework.Services.WaveServices.TimerFactory
  commentId: P:WaveEngine.Framework.Services.WaveServices.TimerFactory
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.TimerFactory*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.TimerFactory
  name: TimerFactory
  nameWithType: WaveServices.TimerFactory
  fullName: WaveEngine.Framework.Services.WaveServices.TimerFactory
- uid: WaveEngine.Framework.Services.TimerFactory
  commentId: T:WaveEngine.Framework.Services.TimerFactory
  parent: WaveEngine.Framework.Services
  name: TimerFactory
  nameWithType: TimerFactory
  fullName: WaveEngine.Framework.Services.TimerFactory
- uid: WaveEngine.Framework.Services.WaveServices.TouchPanel
  commentId: P:WaveEngine.Framework.Services.WaveServices.TouchPanel
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.TouchPanel*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.TouchPanel
  name: TouchPanel
  nameWithType: WaveServices.TouchPanel
  fullName: WaveEngine.Framework.Services.WaveServices.TouchPanel
- uid: WaveEngine.Framework.Services.TouchPanel
  commentId: T:WaveEngine.Framework.Services.TouchPanel
  parent: WaveEngine.Framework.Services
  name: TouchPanel
  nameWithType: TouchPanel
  fullName: WaveEngine.Framework.Services.TouchPanel
- uid: WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  commentId: P:WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.GraphicsDevice*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.GraphicsDevice
  name: GraphicsDevice
  nameWithType: WaveServices.GraphicsDevice
  fullName: WaveEngine.Framework.Services.WaveServices.GraphicsDevice
- uid: WaveEngine.Framework.Services.GraphicsDevice
  commentId: T:WaveEngine.Framework.Services.GraphicsDevice
  parent: WaveEngine.Framework.Services
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: WaveEngine.Framework.Services.GraphicsDevice
- uid: WaveEngine.Framework.Services.WaveServices.InAppPurchase
  commentId: P:WaveEngine.Framework.Services.WaveServices.InAppPurchase
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.InAppPurchase*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.InAppPurchase
  name: InAppPurchase
  nameWithType: WaveServices.InAppPurchase
  fullName: WaveEngine.Framework.Services.WaveServices.InAppPurchase
- uid: WaveEngine.Framework.Services.InAppPurchase
  commentId: T:WaveEngine.Framework.Services.InAppPurchase
  parent: WaveEngine.Framework.Services
  name: InAppPurchase
  nameWithType: InAppPurchase
  fullName: WaveEngine.Framework.Services.InAppPurchase
- uid: WaveEngine.Framework.Services.WaveServices.CameraCapture
  commentId: P:WaveEngine.Framework.Services.WaveServices.CameraCapture
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.CameraCapture*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.CameraCapture
  name: CameraCapture
  nameWithType: WaveServices.CameraCapture
  fullName: WaveEngine.Framework.Services.WaveServices.CameraCapture
- uid: WaveEngine.Framework.Services.CameraCapture
  commentId: T:WaveEngine.Framework.Services.CameraCapture
  parent: WaveEngine.Framework.Services
  name: CameraCapture
  nameWithType: CameraCapture
  fullName: WaveEngine.Framework.Services.CameraCapture
- uid: WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  commentId: P:WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.GameActionScheduler*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.GameActionScheduler
  name: GameActionScheduler
  nameWithType: WaveServices.GameActionScheduler
  fullName: WaveEngine.Framework.Services.WaveServices.GameActionScheduler
- uid: WaveEngine.Framework.Services.GameActionScheduler
  commentId: T:WaveEngine.Framework.Services.GameActionScheduler
  parent: WaveEngine.Framework.Services
  name: GameActionScheduler
  nameWithType: GameActionScheduler
  fullName: WaveEngine.Framework.Services.GameActionScheduler
- uid: WaveEngine.Framework.Services.WaveServices.ErrorHandler
  commentId: P:WaveEngine.Framework.Services.WaveServices.ErrorHandler
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.ErrorHandler*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.ErrorHandler
  name: ErrorHandler
  nameWithType: WaveServices.ErrorHandler
  fullName: WaveEngine.Framework.Services.WaveServices.ErrorHandler
- uid: WaveEngine.Framework.Services.ErrorHandler
  commentId: T:WaveEngine.Framework.Services.ErrorHandler
  parent: WaveEngine.Framework.Services
  name: ErrorHandler
  nameWithType: ErrorHandler
  fullName: WaveEngine.Framework.Services.ErrorHandler
- uid: WaveEngine.Framework.Services.WaveServices.InitializeServices*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.InitializeServices
  name: InitializeServices
  nameWithType: WaveServices.InitializeServices
  fullName: WaveEngine.Framework.Services.WaveServices.InitializeServices
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: WaveEngine.Framework.Services.WaveServices.RegisterService*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.RegisterService
  name: RegisterService
  nameWithType: WaveServices.RegisterService
  fullName: WaveEngine.Framework.Services.WaveServices.RegisterService
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: WaveEngine.Framework.Services.WaveServices.GetService*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.GetService
  name: GetService
  nameWithType: WaveServices.GetService
  fullName: WaveEngine.Framework.Services.WaveServices.GetService
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: WaveEngine.Framework.Services.WaveServices.UnregisterService*
  commentId: Overload:WaveEngine.Framework.Services.WaveServices.UnregisterService
  name: UnregisterService
  nameWithType: WaveServices.UnregisterService
  fullName: WaveEngine.Framework.Services.WaveServices.UnregisterService
